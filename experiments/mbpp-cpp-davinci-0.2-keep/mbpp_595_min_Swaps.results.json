{
  "name": "mbpp_595_min_Swaps",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpte_5nni9.cpp:2:\n/tmp/tmpte_5nni9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpte_5nni9.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpte_5nni9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpte_5nni9.cpp:2:\n/tmp/tmpte_5nni9.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if(n != m)\n        return -1;\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptnv6iu10.cpp:2:\n/tmp/tmptnv6iu10.cpp: In function \u2018int main()\u2019:\n/tmp/tmptnv6iu10.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptnv6iu10.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptnv6iu10.cpp:2:\n/tmp/tmptnv6iu10.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd70s313m.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd70s313m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj2ijsdwr.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgeiqg65i.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf8r8aivz.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvlotj58o.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf8r8aivz.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp154s99ky.cpp:2:\n/tmp/tmp154s99ky.cpp: In function \u2018int main()\u2019:\n/tmp/tmp154s99ky.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp154s99ky.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp154s99ky.cpp:2:\n/tmp/tmp154s99ky.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    if (n != str2.length()) {\n        return -1;\n    }\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8qjcpx2.cpp:2:\n/tmp/tmps8qjcpx2.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8qjcpx2.cpp:19:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   19 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmps8qjcpx2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8qjcpx2.cpp:2:\n/tmp/tmps8qjcpx2.cpp:19:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i])\n            count++;\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrmfnaq5.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len = str1.length();\n    int count = 0;\n    for (int i = 0; i < len; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvfongbyl.cpp:2:\n/tmp/tmpvfongbyl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvfongbyl.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvfongbyl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvfongbyl.cpp:2:\n/tmp/tmpvfongbyl.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvlotj58o.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    // Write your code here\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp58mb8l_o.cpp:2:\n/tmp/tmp58mb8l_o.cpp: In function \u2018int main()\u2019:\n/tmp/tmp58mb8l_o.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp58mb8l_o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp58mb8l_o.cpp:2:\n/tmp/tmp58mb8l_o.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n  int n = str1.length();\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (str1[i] != str2[i]) {\n      count++;\n    }\n  }\n  return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd939mh13.cpp:2:\n/tmp/tmpd939mh13.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd939mh13.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd939mh13.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd939mh13.cpp:2:\n/tmp/tmpd939mh13.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp29o9l10e.cpp:2:\n/tmp/tmp29o9l10e.cpp: In function \u2018int main()\u2019:\n/tmp/tmp29o9l10e.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp29o9l10e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp29o9l10e.cpp:2:\n/tmp/tmp29o9l10e.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return (count / 2);\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjueihrk9.cpp:2:\n/tmp/tmpjueihrk9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjueihrk9.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpjueihrk9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjueihrk9.cpp:2:\n/tmp/tmpjueihrk9.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int len = str1.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5jr2of80.cpp:2:\n/tmp/tmp5jr2of80.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5jr2of80.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp5jr2of80.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5jr2of80.cpp:2:\n/tmp/tmp5jr2of80.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19jksuz8.cpp:2:\n/tmp/tmp19jksuz8.cpp: In function \u2018int main()\u2019:\n/tmp/tmp19jksuz8.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp19jksuz8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19jksuz8.cpp:2:\n/tmp/tmp19jksuz8.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgeiqg65i.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int i = 0;\n    int j = 0;\n    while(i < str1.length() && j < str2.length()) {\n        if(str1[i] != str2[j]) {\n            count++;\n        }\n        i++;\n        j++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf7yyrmy4.cpp:2:\n/tmp/tmpf7yyrmy4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf7yyrmy4.cpp:19:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   19 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf7yyrmy4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf7yyrmy4.cpp:2:\n/tmp/tmpf7yyrmy4.cpp:19:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd70s313m.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd70s313m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgeiqg65i.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if(n != m) {\n        return -1;\n    }\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9kr4wlwt.cpp:2:\n/tmp/tmp9kr4wlwt.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9kr4wlwt.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9kr4wlwt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9kr4wlwt.cpp:2:\n/tmp/tmp9kr4wlwt.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb4loh8ir.cpp:2:\n/tmp/tmpb4loh8ir.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb4loh8ir.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpb4loh8ir.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb4loh8ir.cpp:2:\n/tmp/tmpb4loh8ir.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj2ijsdwr.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9e2yva2n.cpp:2:\n/tmp/tmp9e2yva2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9e2yva2n.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9e2yva2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9e2yva2n.cpp:2:\n/tmp/tmp9e2yva2n.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m) {\n        return -1;\n    }\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp: In function \u2018int main()\u2019:\n/tmp/tmpi5ie6467.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n\tif (str1.length() != str2.length()) {\n\t\treturn -1;\n\t}\n\tint count = 0;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] != str2[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptkqau8tj.cpp:2:\n/tmp/tmptkqau8tj.cpp: In function \u2018int main()\u2019:\n/tmp/tmptkqau8tj.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptkqau8tj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptkqau8tj.cpp:2:\n/tmp/tmptkqau8tj.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.size() != str2.size()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplfyewp4p.cpp:2:\n/tmp/tmplfyewp4p.cpp: In function \u2018int main()\u2019:\n/tmp/tmplfyewp4p.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmplfyewp4p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplfyewp4p.cpp:2:\n/tmp/tmplfyewp4p.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj2ijsdwr.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd70s313m.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd70s313m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int m = str2.length();\n    if(n != m) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptcwgq1g6.cpp:2:\n/tmp/tmptcwgq1g6.cpp: In function \u2018int main()\u2019:\n/tmp/tmptcwgq1g6.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptcwgq1g6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptcwgq1g6.cpp:2:\n/tmp/tmptcwgq1g6.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd70s313m.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd70s313m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9e2yva2n.cpp:2:\n/tmp/tmp9e2yva2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9e2yva2n.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9e2yva2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9e2yva2n.cpp:2:\n/tmp/tmp9e2yva2n.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m) {\n        return -1;\n    }\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp: In function \u2018int main()\u2019:\n/tmp/tmpi5ie6467.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb4loh8ir.cpp:2:\n/tmp/tmpb4loh8ir.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb4loh8ir.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpb4loh8ir.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb4loh8ir.cpp:2:\n/tmp/tmpb4loh8ir.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n\tint count = 0;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] != str2[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp40rd04x9.cpp:2:\n/tmp/tmp40rd04x9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp40rd04x9.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp40rd04x9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp40rd04x9.cpp:2:\n/tmp/tmp40rd04x9.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgeiqg65i.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i])\n            count++;\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrmfnaq5.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp154s99ky.cpp:2:\n/tmp/tmp154s99ky.cpp: In function \u2018int main()\u2019:\n/tmp/tmp154s99ky.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp154s99ky.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp154s99ky.cpp:2:\n/tmp/tmp154s99ky.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) return -1;\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) count++;\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpztdotvod.cpp:2:\n/tmp/tmpztdotvod.cpp: In function \u2018int main()\u2019:\n/tmp/tmpztdotvod.cpp:14:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   14 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpztdotvod.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpztdotvod.cpp:2:\n/tmp/tmpztdotvod.cpp:14:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   14 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len = str1.length();\n    int count = 0;\n    for (int i = 0; i < len; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvfongbyl.cpp:2:\n/tmp/tmpvfongbyl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvfongbyl.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvfongbyl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvfongbyl.cpp:2:\n/tmp/tmpvfongbyl.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if(str1.length() != str2.length())\n        return -1;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpub6nbogx.cpp:2:\n/tmp/tmpub6nbogx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpub6nbogx.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpub6nbogx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpub6nbogx.cpp:2:\n/tmp/tmpub6nbogx.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m)\n        return -1;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i])\n            count++;\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8ncsfqhw.cpp:2:\n/tmp/tmp8ncsfqhw.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8ncsfqhw.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8ncsfqhw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8ncsfqhw.cpp:2:\n/tmp/tmp8ncsfqhw.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n\tint n = str1.length();\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (str1[i] != str2[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwhsmcza6.cpp:2:\n/tmp/tmpwhsmcza6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwhsmcza6.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwhsmcza6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwhsmcza6.cpp:2:\n/tmp/tmpwhsmcza6.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for(int i=0;i<n;i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5g5i9v83.cpp:2:\n/tmp/tmp5g5i9v83.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5g5i9v83.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp5g5i9v83.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5g5i9v83.cpp:2:\n/tmp/tmp5g5i9v83.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    // Write your code here\n    int n1 = str1.length();\n    int n2 = str2.length();\n    if(n1 != n2)\n        return -1;\n    int count = 0;\n    for(int i = 0; i < n1; i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzn2ktctf.cpp:2:\n/tmp/tmpzn2ktctf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzn2ktctf.cpp:19:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   19 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpzn2ktctf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzn2ktctf.cpp:2:\n/tmp/tmpzn2ktctf.cpp:19:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj2ijsdwr.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj2ijsdwr.cpp:2:\n/tmp/tmpj2ijsdwr.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i])\n            count++;\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrmfnaq5.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd70s313m.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd70s313m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m) {\n        return -1;\n    }\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp: In function \u2018int main()\u2019:\n/tmp/tmpi5ie6467.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if(len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < len1; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy6zcomt1.cpp:2:\n/tmp/tmpy6zcomt1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy6zcomt1.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpy6zcomt1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy6zcomt1.cpp:2:\n/tmp/tmpy6zcomt1.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    // Write your code here\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy4qqr1de.cpp:2:\n/tmp/tmpy4qqr1de.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy4qqr1de.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpy4qqr1de.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy4qqr1de.cpp:2:\n/tmp/tmpy4qqr1de.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if(n != m) {\n        return -1;\n    }\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9xc0s568.cpp:2:\n/tmp/tmp9xc0s568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9xc0s568.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9xc0s568.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9xc0s568.cpp:2:\n/tmp/tmp9xc0s568.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return \"Invalid input\";\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx7zecv14.cpp:2:\n/tmp/tmpx7zecv14.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx7zecv14.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpx7zecv14.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx7zecv14.cpp:2:\n/tmp/tmpx7zecv14.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvlotj58o.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf8r8aivz.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf8r8aivz.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf8r8aivz.cpp:2:\n/tmp/tmpf8r8aivz.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprl3eri30.cpp:2:\n/tmp/tmprl3eri30.cpp: In function \u2018int main()\u2019:\n/tmp/tmprl3eri30.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmprl3eri30.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprl3eri30.cpp:2:\n/tmp/tmprl3eri30.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m) {\n        return -1;\n    }\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp: In function \u2018int main()\u2019:\n/tmp/tmpi5ie6467.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if (n != m) {\n        return -1;\n    }\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp: In function \u2018int main()\u2019:\n/tmp/tmpi5ie6467.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi5ie6467.cpp:2:\n/tmp/tmpi5ie6467.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length())\n        return -1;\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i])\n            count++;\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrmfnaq5.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrmfnaq5.cpp:2:\n/tmp/tmpvrmfnaq5.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19jksuz8.cpp:2:\n/tmp/tmp19jksuz8.cpp: In function \u2018int main()\u2019:\n/tmp/tmp19jksuz8.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp19jksuz8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19jksuz8.cpp:2:\n/tmp/tmp19jksuz8.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    int len = str1.length();\n    for (int i = 0; i < len; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe69bkeax.cpp:2:\n/tmp/tmpe69bkeax.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe69bkeax.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpe69bkeax.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe69bkeax.cpp:2:\n/tmp/tmpe69bkeax.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvlotj58o.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvlotj58o.cpp:2:\n/tmp/tmpvlotj58o.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgeiqg65i.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    assert(str1.length() == str2.length());\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn49e7gjm.cpp:2:\n/tmp/tmpn49e7gjm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn49e7gjm.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpn49e7gjm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn49e7gjm.cpp:2:\n/tmp/tmpn49e7gjm.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciobk7jy.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciobk7jy.cpp:2:\n/tmp/tmpciobk7jy.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd70s313m.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd70s313m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgeiqg65i.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeiqg65i.cpp:2:\n/tmp/tmpgeiqg65i.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd70s313m.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd70s313m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd70s313m.cpp:2:\n/tmp/tmpd70s313m.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.size();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps7r0osdw.cpp:2:\n/tmp/tmps7r0osdw.cpp: In function \u2018int main()\u2019:\n/tmp/tmps7r0osdw.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmps7r0osdw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps7r0osdw.cpp:2:\n/tmp/tmps7r0osdw.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n\tint count = 0;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] != str2[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp40rd04x9.cpp:2:\n/tmp/tmp40rd04x9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp40rd04x9.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp40rd04x9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp40rd04x9.cpp:2:\n/tmp/tmp40rd04x9.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf0arlo0a.cpp:2:\n/tmp/tmpf0arlo0a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf0arlo0a.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf0arlo0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf0arlo0a.cpp:2:\n/tmp/tmpf0arlo0a.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9uqjvage.cpp:15:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9uqjvage.cpp:2:\n/tmp/tmp9uqjvage.cpp:15:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if (str1.length() != str2.length()) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8h2h6qg0.cpp:18:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8h2h6qg0.cpp:2:\n/tmp/tmp8h2h6qg0.cpp:18:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   18 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    if(str1.length() != str2.length())\n        return \"Invalid\";\n    int count = 0;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] != str2[i])\n            count++;\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuoopovf6.cpp:2:\n/tmp/tmpuoopovf6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuoopovf6.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpuoopovf6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuoopovf6.cpp:2:\n/tmp/tmpuoopovf6.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int len1 = str1.length();\n    int len2 = str2.length();\n    if (len1 != len2) {\n        return -1;\n    }\n    int count = 0;\n    for (int i = 0; i < len1; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qk3rdru.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qk3rdru.cpp:2:\n/tmp/tmp4qk3rdru.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    int n = str1.length();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp13solu_4.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp13solu_4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp13solu_4.cpp:2:\n/tmp/tmp13solu_4.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n    // Write your code here\n    int count = 0;\n    int n = str1.length();\n    int m = str2.length();\n    if(n!=m){\n        return -1;\n    }\n    for(int i=0;i<n;i++){\n        if(str1[i]!=str2[i]){\n            count++;\n        }\n    }\n    return count/2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwce5w61n.cpp:2:\n/tmp/tmpwce5w61n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwce5w61n.cpp:21:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   21 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwce5w61n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwce5w61n.cpp:2:\n/tmp/tmpwce5w61n.cpp:21:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n  int n = str1.length();\n  int m = str2.length();\n  if (n != m) {\n    return -1;\n  }\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (str1[i] != str2[i]) {\n      count++;\n    }\n  }\n  return count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfk3gmx78.cpp:2:\n/tmp/tmpfk3gmx78.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfk3gmx78.cpp:20:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfk3gmx78.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfk3gmx78.cpp:2:\n/tmp/tmpfk3gmx78.cpp:20:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nstd::any min_Swaps(std::string str1, std::string str2) {\n\tint n = str1.length();\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (str1[i] != str2[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / 2;\n}\nint main() {\n    auto candidate = min_Swaps;\n    assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n    assert(candidate((\"111\"), (\"000\")) == (std::any(\"Not Possible\")));\n    assert(candidate((\"111\"), (\"110\")) == (std::any(\"Not Possible\")));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwhsmcza6.cpp:2:\n/tmp/tmpwhsmcza6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwhsmcza6.cpp:16:42: error: no match for \u2018operator==\u2019 (operand types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                             |\n      |                     std::any                      std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwhsmcza6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwhsmcza6.cpp:2:\n/tmp/tmpwhsmcza6.cpp:16:57: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((\"1101\"), (\"1110\")) == (std::any(1)));\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_6",
      "exit_code": -1,
      "status": "SyntaxError"
    }
  ]
}
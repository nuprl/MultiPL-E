{
  "name": "mbpp_605_prime_num",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_605_prime_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 == 0 || num % 3 == 0) return false;\n    for (int i = 5; i * i <= num; i = i + 6) {\n        if (num % i == 0 || num % (i + 2) == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 == 0 || num % 3 == 0) return false;\n    for (long i = 5; i*i <= num; i += 6) {\n        if (num % i == 0 || num % (i+2) == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; ++i) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num <= 1) {\n    return false;\n  }\n  for (int i = 2; i <= sqrt(num); i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(int i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmplo61j8u7: /tmp/tmplo61j8u7.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(long i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "tmpviremlf3: /tmp/tmpviremlf3.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmpdu7i2c73: /tmp/tmpdu7i2c73.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    if (num == 2) {\n        return true;\n    }\n    if (num % 2 == 0) {\n        return false;\n    }\n    for (long i = 3; i <= sqrt(num); i += 2) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    if (num == 2) {\n        return true;\n    }\n    if (num % 2 == 0) {\n        return false;\n    }\n    for (long i = 3; i <= sqrt(num); i += 2) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num<=1) return false;\n    if(num<=3) return true;\n    if(num%2==0 || num%3==0) return false;\n    for(int i=5;i*i<=num;i+=6) {\n        if(num%i==0 || num%(i+2)==0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 == 0 || num % 3 == 0) return false;\n    for (int i = 5; i * i <= num; i = i + 6)\n        if (num % i == 0 || num % (i + 2) == 0)\n            return false;\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num < 2) {\n        return false;\n    }\n    for(long i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num <= 1) {\n    return false;\n  }\n  for (long i = 2; i < num; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmpdu7i2c73: /tmp/tmpdu7i2c73.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1)\n        return false;\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmphkqvuyg3: /tmp/tmphkqvuyg3.cpp:17: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num <= 1) return false;\n    if(num <= 3) return true;\n    if(num % 2 == 0 || num % 3 == 0) return false;\n    for(long i = 5; i * i <= num; i += 6) {\n        if(num % i == 0 || num % (i + 2) == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(int i = 2; i <= num/2; i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122582,
      "stdout": "",
      "stderr": "tmp4qmzaofh: /tmp/tmp4qmzaofh.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num/2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpqcl3kf6t: /tmp/tmpqcl3kf6t.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 2) {\n        return true;\n    }\n    if (num % 2 == 0) {\n        return false;\n    }\n    for (long i = 3; i <= sqrt(num); i += 2) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num <= 1) {\n    return false;\n  }\n  for (int i = 2; i < num; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i*i <= num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpxo6r07wd: /tmp/tmpxo6r07wd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1)\n        return false;\n    else if (num == 2)\n        return true;\n    else {\n        for (int i = 2; i <= num / 2; i++) {\n            if (num % i == 0)\n                return false;\n        }\n        return true;\n    }\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmp7nel74vy: /tmp/tmp7nel74vy.cpp:21: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 == 0 || num % 3 == 0) return false;\n    for (int i = 5; i * i <= num; i = i + 6)\n        if (num % i == 0 || num % (i + 2) == 0)\n            return false;\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num <= 1) {\n    return false;\n  }\n  for (long i = 2; i < num; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) return false;\n    if(num == 2) return true;\n    if(num % 2 == 0) return false;\n    for(int i = 3; i <= sqrt(num); i += 2) {\n        if(num % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(int i = 2; i <= num/2; i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122582,
      "stdout": "",
      "stderr": "tmp4qmzaofh: /tmp/tmp4qmzaofh.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num <= 1) {\n    return false;\n  }\n  for (int i = 2; i <= sqrt(num); i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    if(num == 2) {\n        return true;\n    }\n    if(num % 2 == 0) {\n        return false;\n    }\n    for(long i = 3; i <= sqrt(num); i += 2) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpki8aeiov: /tmp/tmpki8aeiov.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num == 1) {\n    return false;\n  }\n  for (long i = 2; i <= num / 2; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpj4qm9i_5: /tmp/tmpj4qm9i_5.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(long i = 2; i <= num / 2; i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpnu5hudkk: /tmp/tmpnu5hudkk.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1)\n        return false;\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmphkqvuyg3: /tmp/tmphkqvuyg3.cpp:17: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num == 1) {\n    return false;\n  }\n  for (int i = 2; i < num; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmp0p7e0jiu: /tmp/tmp0p7e0jiu.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num == 1) {\n    return false;\n  }\n  for (long i = 2; i < num; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpvrt53ugt: /tmp/tmpvrt53ugt.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num<=1) {\n        return false;\n    }\n    for(int i=2;i<=sqrt(num);i++) {\n        if(num%i==0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num <= 1) return false;\n    if(num <= 3) return true;\n    if(num % 2 == 0 || num % 3 == 0) return false;\n    for(int i = 5; i * i <= num; i += 6) {\n        if(num % i == 0 || num % (i + 2) == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(long i = 2; i <= num/2; i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "tmp0g421r32: /tmp/tmp0g421r32.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    if (num == 2) {\n        return true;\n    }\n    if (num % 2 == 0) {\n        return false;\n    }\n    for (int i = 3; i <= sqrt(num); i += 2) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 2)\n        return true;\n    if(num % 2 == 0)\n        return false;\n    for(int i = 3; i <= sqrt(num); i += 2) {\n        if(num % i == 0)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122582,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    if (num == 2) {\n        return true;\n    }\n    if (num % 2 == 0) {\n        return false;\n    }\n    for (int i = 3; i <= sqrt(num); i += 2) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(int i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmplo61j8u7: /tmp/tmplo61j8u7.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(int i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmplo61j8u7: /tmp/tmplo61j8u7.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1)\n        return false;\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmphzlru9cn: /tmp/tmphzlru9cn.cpp:17: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmpdu7i2c73: /tmp/tmpdu7i2c73.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 == 0 || num % 3 == 0) return false;\n    for (int i = 5; i * i <= num; i = i + 6)\n        if (num % i == 0 || num % (i + 2) == 0)\n            return false;\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    if (num <= 3) {\n        return true;\n    }\n    if (num % 2 == 0 || num % 3 == 0) {\n        return false;\n    }\n    for (int i = 5; i * i <= num; i = i + 6) {\n        if (num % i == 0 || num % (i + 2) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num<=1)\n        return false;\n    if(num==2)\n        return true;\n    if(num%2==0)\n        return false;\n    for(long i=3;i<=sqrt(num);i+=2) {\n        if(num%i==0)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmpdu7i2c73: /tmp/tmpdu7i2c73.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510116,
      "stdout": "",
      "stderr": "tmpl4hf9oxb: /tmp/tmpl4hf9oxb.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num == 1) {\n    return false;\n  }\n  for (int i = 2; i <= sqrt(num); i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpwd3abn7o: /tmp/tmpwd3abn7o.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 2)\n        return true;\n    if (num % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(num); i += 2) {\n        if (num % i == 0)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 == 0 || num % 3 == 0) return false;\n    for (int i = 5; i * i <= num; i += 6) {\n        if (num % i == 0 || num % (i + 2) == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(long i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "tmpviremlf3: /tmp/tmpviremlf3.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmptk9nolkc: /tmp/tmptk9nolkc.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    if (num <= 3) {\n        return true;\n    }\n    if (num % 2 == 0 || num % 3 == 0) {\n        return false;\n    }\n    for (int i = 5; i * i <= num; i += 6) {\n        if (num % i == 0 || num % (i + 2) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num <= 1) {\n    return false;\n  }\n  for (long i = 2; i < num; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(long i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "tmpviremlf3: /tmp/tmpviremlf3.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num < 2) {\n        return false;\n    }\n    for (long i = 2; i <= num / 2; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 == 0 || num % 3 == 0) return false;\n    for (int i = 5; i * i <= num; i = i + 6)\n        if (num % i == 0 || num % (i + 2) == 0)\n            return false;\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n\tif (num <= 1) {\n\t\treturn false;\n\t}\n\tfor (int i = 2; i <= num / 2; i++) {\n\t\tif (num % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(int i = 2; i <= sqrt(num); i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "tmplo61j8u7: /tmp/tmplo61j8u7.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (int i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "tmpki8aeiov: /tmp/tmpki8aeiov.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n  if (num <= 1) {\n    return false;\n  }\n  for (int i = 2; i <= sqrt(num); i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122577,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if(num == 1) {\n        return false;\n    }\n    for(int i = 2; i <= num/2; i++) {\n        if(num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1666122582,
      "stdout": "",
      "stderr": "tmp4qmzaofh: /tmp/tmp4qmzaofh.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (long i = 2; i < num; i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num <= 1) {\n        return false;\n    }\n    for (int i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given integer is a prime number.\nbool prime_num(long num) {\n    if (num == 1) {\n        return false;\n    }\n    for (long i = 2; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = prime_num;\n    assert(candidate((13)) == (true));\n    assert(candidate((7)) == (true));\n    assert(candidate((-1010)) == (false));\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "tmpx45k7hjd: /tmp/tmpx45k7hjd.cpp:19: int main(): Assertion `candidate((-1010)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    }
  ]
}
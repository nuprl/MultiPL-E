{
  "name": "mbpp_630_get_coordinates",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    for (long i = 0; i < test_tup; i++) {\n        temp.push_back(x);\n        temp.push_back(y);\n        temp.push_back(z);\n        coordinates.push_back(temp);\n        temp.clear();\n        x--;\n        y--;\n        z--;\n    }\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coord;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp_coord.push_back(x);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;",
    "    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    if (x > 0) {\n        temp.push_back(x - 1);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    if (x < 9) {\n        temp.push_back(x + 1);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    if (y > 0) {\n        temp.push_back(x);\n        temp.push_back(y - 1);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    if (y < 9) {\n        temp.push_back(x);\n        temp.push_back(y + 1);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coordinate;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp_coordinate;\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    tup.push_back(test_tup);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    temp.push_back(test_tup);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 8);\n    coordinates.push_back(temp);",
    "    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    std::vector<long> temp1;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long> temp8;\n    temp.push_back(test_tup);\n    temp.push_back(test_tup);\n    temp1.push_back(test_tup);\n    temp1.push_back(test_tup+1);\n    temp2.push_back(test_tup);\n    temp2.push_back(test_tup-1);\n    temp3.push_back(test_tup+1);\n    temp3.push_back(test_tup);\n    temp4.push_back(test_tup-1);\n    temp4.push_back(test_tup);\n    temp5.push_back(test_tup+1);\n    temp5.push_back(test_tup+1);\n    temp6.push_back(test_tup+1);\n    temp6.push_back(test_tup-1);\n    temp7.push_back(test_tup-1);\n    temp7.push_back(test_tup+1);\n    temp8.push_back(test_tup-1);\n    temp8.push_back(test_tup-1);\n    coordinates.push_back(temp);\n    coordinates.push_back(temp1);\n    coordinates.push_back(temp2);\n    coordinates.push_back(temp3);\n    coordinates.push_back(temp4);\n    coordinates.push_back(temp5);\n    coordinates.push_back(temp6);\n    coordinates.push_back(temp7);\n    coordinates.push_back(temp8);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    while (x > 0) {\n        tup.push_back(x % 10);\n        x /= 10;\n    }\n    std::reverse(tup.begin(), tup.end());\n    for (long i = 0; i < tup.size(); i++) {\n        for (long j = 0; j < tup.size(); j++) {\n            if (i != j) {\n                std::vector<long> temp = tup;\n                temp[i] = tup[j];\n                temp[j] = tup[i];\n                coordinates.push_back(temp);\n            }\n        }\n    }\n    return coordinates;",
    "    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    return result;",
    "    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    temp.push_back(test_tup);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 8);\n    coordinates.push_back(temp);",
    "    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup/10;\n    long y = test_tup%10;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    result.push_back(temp);\n    return result;"
  ]
}
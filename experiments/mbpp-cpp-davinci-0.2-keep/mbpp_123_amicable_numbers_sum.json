{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to sum all amicable numbers from 1 to a specified number.\nlong amicable_numbers_sum(long limit) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = amicable_numbers_sum;\n    assert(candidate((999)) == (504));\n    assert(candidate((9999)) == (31626));\n    assert(candidate((99)) == (0));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors / 2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum1 = 0;\n        long sum2 = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum1 += j;\n            }\n        }\n        for (long j = 1; j <= sum1 / 2; j++) {\n            if (sum1 % j == 0) {\n                sum2 += j;\n            }\n        }\n        if (sum2 == i && sum1 != sum2) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors / 2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j < sum_of_divisors; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors_of_i = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors_of_i += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors_of_i = 0;\n        for (long j = 1; j < sum_of_divisors_of_i; j++) {\n            if (sum_of_divisors_of_i % j == 0) {\n                sum_of_divisors_of_sum_of_divisors_of_i += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors_of_i == i && i != sum_of_divisors_of_i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i/2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors/2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && i != sum_of_divisors) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j < sum_of_divisors; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors_i = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors_i += j;\n            }\n        }\n        long sum_of_divisors_j = 0;\n        for (long j = 1; j < sum_of_divisors_i; j++) {\n            if (sum_of_divisors_i % j == 0) {\n                sum_of_divisors_j += j;\n            }\n        }\n        if (sum_of_divisors_j == i && sum_of_divisors_i != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j < sum_of_divisors; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i < limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j < sum_of_divisors; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && i != sum_of_divisors) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 2; i < limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j < sum_of_divisors; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors > i) {\n            long sum_of_divisors_of_sum_of_divisors = 0;\n            for (long j = 1; j <= sum_of_divisors / 2; j++) {\n                if (sum_of_divisors % j == 0) {\n                    sum_of_divisors_of_sum_of_divisors += j;\n                }\n            }\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i < limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors / 2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j < sum_of_divisors; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i < limit; i++) {\n        long sum1 = 0;\n        long sum2 = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum1 += j;\n            }\n        }\n        for (long k = 1; k < sum1; k++) {\n            if (sum1 % k == 0) {\n                sum2 += k;\n            }\n        }\n        if (sum2 == i && sum1 != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors / 2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && i != sum_of_divisors) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i < limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j < sum_of_divisors; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors / 2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors / 2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= limit; i++) {\n        long sum_of_divisors = 0;\n        for (long j = 1; j <= i / 2; j++) {\n            if (i % j == 0) {\n                sum_of_divisors += j;\n            }\n        }\n        long sum_of_divisors_of_sum_of_divisors = 0;\n        for (long j = 1; j <= sum_of_divisors / 2; j++) {\n            if (sum_of_divisors % j == 0) {\n                sum_of_divisors_of_sum_of_divisors += j;\n            }\n        }\n        if (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i) {\n            sum += i;\n        }\n    }\n    return sum;"
  ]
}
{
  "name": "mbpp_9_find_Rotations",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.\nlong find_Rotations(std::string str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_9_find_Rotations.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find_Rotations;\n    assert(candidate((\"aaaa\")) == (1));\n    assert(candidate((\"ab\")) == (2));\n    assert(candidate((\"abc\")) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Write your code here\n    long count = 0;\n    std::string temp = str;\n    while(count < str.length()){\n        temp = temp.substr(1,str.length()-1) + temp[0];\n        if(temp == str){\n            return count;\n        }\n        count++;\n    }\n    return -1;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(j == i+1) {\n                j++;\n            }\n            else {\n                i = 0;\n                j = 1;\n                count++;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    int n = str.length();\n    std::string temp = str+str;\n    int i=1,j=0;\n    while(i<n && j<n)\n    {\n        int k=0;\n        while(k<n && str[k]==temp[i+k])\n            k++;\n        if(k==n)\n            return i;\n        if(str[k]>temp[i+k])\n            i+=k+1;\n        else\n            j+=k+1;\n        if(i==j)\n            j++;\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    long len = str.length();\n    long i, j;\n    for (i = len - 1; i > 0; i--) {\n        if (str[i] > str[i - 1]) {\n            break;\n        }\n    }\n    if (i == 0) {\n        return 0;\n    }\n    long x = str[i - 1], min = i;\n    for (j = i + 1; j < len; j++) {\n        if (str[j] > x && str[j] < str[min]) {\n            min = j;\n        }\n    }\n    std::swap(str[i - 1], str[min]);\n    std::sort(str.begin() + i, str.end());\n    return i;",
    "    // Write your code here\n    long count = 0;\n    long n = str.length();\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    if(count == 0) {\n        return 0;\n    }\n    long max_count = 0;\n    long curr_count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            curr_count++;\n        }\n        else {\n            curr_count = 0;\n        }\n        max_count = std::max(max_count, curr_count);\n    }\n    return n - max_count;",
    "    // Write your code here\n    long count = 0;\n    std::string temp = str;\n    while(1){\n        char c = temp[0];\n        temp.erase(temp.begin());\n        temp += c;\n        count++;\n        if(temp == str){\n            break;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(j == i + 1) {\n                j++;\n            }\n            else {\n                i = 0;\n                j = 1;\n                count++;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    int n = str.length();\n    if(n == 0)\n        return 0;\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if(k == n)\n            break;\n        if(str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if(i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0;\n    long j = 1;\n    long k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if(str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        }\n        else if(str[i + k] < str[j + k]) {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return (i < j) ? i : j;",
    "    // Write your code here\n    int n = str.length();\n    int i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        int t = str[(i + k) % n] - str[(j + k) % n];\n        if (t == 0)\n            k++;\n        else {\n            if (t > 0)\n                i = i + k + 1;\n            else\n                j = j + k + 1;\n            if (i == j)\n                j++;\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    int n = str.length();\n    str = str + str;\n    int i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        int t = str[i + k] - str[j + k];\n        if (t == 0) {\n            k++;\n        } else {\n            if (t > 0) {\n                i = i + k + 1;\n            } else {\n                j = j + k + 1;\n            }\n            if (i == j) {\n                j++;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i+k] == str[j+k]) {\n            k++;\n        }\n        if(str[i+k] <= str[j+k]) {\n            j += k + 1;\n        }\n        else {\n            i += k + 1;\n        }\n        if(i == j) {\n            j++;\n        }\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            count++;\n            i = 0;\n            j = count + 1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long i, j;\n    for (i = len - 1; i > 0; i--) {\n        if (str[i] > str[i - 1]) {\n            break;\n        }\n    }\n    if (i == 0) {\n        return 0;\n    }\n    long x = str[i - 1], min = i;\n    for (j = i + 1; j < len; j++) {\n        if (str[j] > x && str[j] < str[min]) {\n            min = j;\n        }\n    }\n    char temp = str[i - 1];\n    str[i - 1] = str[min];\n    str[min] = temp;\n    std::sort(str.begin() + i, str.end());\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    str = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        if (str[i + k] == str[j + k]) {\n            k++;\n        } else if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        } else {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            max_count++;\n        }\n        if(str[i] == '0') {\n            count--;\n        }\n        if(count == 0) {\n            break;\n        }\n    }\n    return n - max_count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0;\n    long j = 1;\n    while(i < n && j < n) {\n        long k = 0;\n        while(k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if(str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        }\n        else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    int n = str.length();\n    str = str + str;\n    int i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        int t = str[i + k] - str[j + k];\n        if (t == 0) {\n            k++;\n        } else {\n            if (t > 0) {\n                i = i + k + 1;\n            } else {\n                j = j + k + 1;\n            }\n            if (i == j) {\n                j++;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    int n = str.length();\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if(str[i + k] <= str[j + k]) {\n            j += k + 1;\n            if(j == i) {\n                j++;\n            }\n        } else {\n            i += k + 1;\n            if(i == j) {\n                i++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    int n = str.size();\n    std::string temp = str;\n    for(int i = 0; i < n; i++){\n        temp = temp.substr(1,n-1) + temp[0];\n        if(temp == str)\n            return i+1;\n    }\n    return 0;",
    "    // Write your code here\n    long len = str.length();\n    long i = 0;\n    long j = 1;\n    long k = 0;\n    while(i < len && j < len && k < len) {\n        if(str[(i+k)%len] == str[(j+k)%len]) {\n            k++;\n        }\n        else if(str[(i+k)%len] > str[(j+k)%len]) {\n            i = i + k + 1;\n            if(i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        }\n        else {\n            j = j + k + 1;\n            if(j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    long n = str.size();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (str[i + k] <= str[j + k]) {\n            j = j + k + 1;\n        }\n        else {\n            i = max(i + k + 1, j);\n        }\n        j = max(i, j);\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(j == i + 1) {\n                j++;\n            }\n            else {\n                i = 0;\n                count++;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if(str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        }\n        else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long count=0;\n    long n=str.length();\n    for(long i=0;i<n;i++)\n    {\n        if(str[i]=='1')\n        {\n            count++;\n        }\n    }\n    if(count==n)\n    {\n        return n;\n    }\n    long max_count=0;\n    long max_index=0;\n    for(long i=0;i<n;i++)\n    {\n        if(str[i]=='1')\n        {\n            count=0;\n            for(long j=i;j<n;j++)\n            {\n                if(str[j]=='1')\n                {\n                    count++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            for(long j=0;j<i;j++)\n            {\n                if(str[j]=='1')\n                {\n                    count++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            if(count>max_count)\n            {\n                max_count=count;\n                max_index=i;\n            }\n        }\n    }\n    return n-max_index;",
    "    long len = str.length();\n    long i = 0;\n    long j = 1;\n    long k = 0;\n    while(i < len && j < len && k < len) {\n        if(str[(i + k) % len] == str[(j + k) % len]) {\n            k++;\n        } else {\n            if(str[(i + k) % len] > str[(j + k) % len]) {\n                i = i + k + 1;\n            } else {\n                j = j + k + 1;\n            }\n            if(i == j) {\n                j++;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long len = str.length();\n    long i = 0;\n    long j = 1;\n    long k = 0;\n    while(i < len && j < len && k < len) {\n        if(str[(i + k) % len] == str[(j + k) % len]) {\n            k++;\n        }\n        else if(str[(i + k) % len] > str[(j + k) % len]) {\n            i = i + k + 1;\n            if(i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        }\n        else {\n            j = j + k + 1;\n            if(j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(count < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n            count++;\n        }\n        else {\n            i = 0;\n            j++;\n            count = 0;\n        }\n    }\n    return j - i;",
    "    // Write your code here\n    int n = str.length();\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (str[i + k] <= str[j + k]) {\n            j += k + 1;\n            if (j == i) {\n                j++;\n            }\n        } else {\n            i = std::max(i + k + 1, j);\n            j = i + 1;\n        }\n    }\n    return i;",
    "    // Write your code here\n    long len = str.length();\n    std::string temp = str + str;\n    long i = 0;\n    long j = 1;\n    long k = 0;\n    while(i < len && j < len) {\n        k = 0;\n        while(k < len && str[i+k] == str[j+k]) {\n            k++;\n        }\n        if(k == len) {\n            return i;\n        }\n        if(str[i+k] > str[j+k]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return i;",
    "    // Write your code here\n    long count = 0;\n    std::string s = str;\n    for(int i = 0; i < str.length(); i++){\n        s = s.substr(1, str.length() - 1) + s[0];\n        if(s == str){\n            count = i + 1;\n            break;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            if(j == i + 1) {\n                j++;\n            } else {\n                i = 0;\n                j = 1;\n                count++;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    long count=0;\n    for(long i=0;i<str.length();i++){\n        if(str[i]=='1'){\n            count++;\n        }\n    }\n    return count;",
    "    long n = str.length();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_ones = 0;\n    long max_zeros = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            max_ones++;\n        }\n        else {\n            max_zeros++;\n        }\n        if(max_ones == count) {\n            return max_zeros;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long count=0;\n    std::string temp=str;\n    while(count<str.length())\n    {\n        temp=temp.substr(1,str.length()-1)+temp[0];\n        if(temp==str)\n        {\n            return count;\n        }\n        count++;\n    }\n    return -1;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            if(count == 0) {\n                i = j;\n                j++;\n            } else {\n                count = 0;\n                i = 0;\n                j = 1;\n            }\n        }\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    std::string temp = str + str;\n    long n = str.size();\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        int t = temp[i + k] - temp[j + k];\n        if (t == 0) {\n            k++;\n        } else {\n            if (t > 0) {\n                i = i + k + 1;\n            } else {\n                j = j + k + 1;\n            }\n            if (i == j) {\n                j++;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if(str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i=0;\n    long j=1;\n    long count=0;\n    while(i<n && j<n)\n    {\n        if(str[i]==str[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            count++;\n            i=0;\n            j=count+1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_ones = 0;\n    long max_zeros = 0;\n    long curr_ones = 0;\n    long curr_zeros = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            curr_ones++;\n        }\n        else {\n            curr_zeros++;\n        }\n        if(curr_ones > max_ones) {\n            max_ones = curr_ones;\n        }\n        if(curr_zeros > max_zeros) {\n            max_zeros = curr_zeros;\n        }\n    }\n    if(count == n) {\n        return n - max_ones;\n    }\n    else if(count == 0) {\n        return n - max_zeros;\n    }\n    else {\n        return std::min(n - max_ones, n - max_zeros);\n    }",
    "    // Write your code here\n    long n = str.length();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    if(count == 0) {\n        return 0;\n    }\n    long max_count = 0;\n    long curr_count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            curr_count++;\n        }\n        if(str[i] == '0') {\n            max_count = std::max(max_count, curr_count);\n            curr_count = 0;\n        }\n    }\n    max_count = std::max(max_count, curr_count);\n    return n - max_count;",
    "    // Write your code here\n    long count = 0;\n    std::string temp = str;\n    while(count < str.length()){\n        temp = temp.substr(1) + temp[0];\n        if(temp == str){\n            break;\n        }\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    std::string temp = str + str;\n    long min_rotation = 0;\n    for (long i = 1; i < len; i++) {\n        if (temp.substr(i, len) < temp.substr(min_rotation, len)) {\n            min_rotation = i;\n        }\n    }\n    return min_rotation;",
    "    // Write your code here\n    long len = str.length();\n    std::string temp = str + str;\n    long min_rotations = INT_MAX;\n    for(long i = 0; i < len; i++) {\n        long count = 0;\n        for(long j = i; j < i + len; j++) {\n            if(temp[j] != str[count]) {\n                break;\n            }\n            count++;\n        }\n        if(count == len) {\n            min_rotations = std::min(min_rotations, i);\n        }\n    }\n    return min_rotations;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_ones = count;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            count--;\n        }\n        if(str[i] == '0') {\n            count++;\n        }\n        max_ones = std::max(max_ones, count);\n    }\n    return len - max_ones;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            count++;\n            i = 0;\n            j = count + 1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long i = 0;\n    for(i = 0; i < len; i++) {\n        if(str[i] == str[0]) {\n            break;\n        }\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if (str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n            if (i == j) {\n                i++;\n            }\n        }\n        else {\n            j = j + k + 1;\n            if (i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return (i < j) ? i : j;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[i + k] == str[j + k])\n            k++;\n        if (k == n)\n            break;\n        if (str[i + k] > str[j + k])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n=str.length();\n    long i=0,j=1,k=0;\n    while(i<n && j<n && k<n)\n    {\n        if(str[(i+k)%n]==str[(j+k)%n])\n        {\n            k++;\n        }\n        else if(str[(i+k)%n]>str[(j+k)%n])\n        {\n            if(i+k>j)\n            {\n                i=j;\n            }\n            j=j+k+1;\n            k=0;\n        }\n        else\n        {\n            if(j+k>i)\n            {\n                j=i;\n            }\n            i=i+k+1;\n            k=0;\n        }\n    }\n    return std::min(i,j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            if(j < i) {\n                j = i + 1;\n            }\n            else {\n                count++;\n                i = 0;\n                j = count + 1;\n            }\n        }\n    }\n    return count;",
    "\t// Write your code here\n\tstd::string temp = str;\n\tlong count = 0;\n\twhile(true) {\n\t\ttemp = temp.substr(1, temp.length() - 1) + temp[0];\n\t\tcount++;\n\t\tif(temp == str) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn count;",
    "    // Write your code here\n    int n = str.length();\n    str += str;\n    int i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        int t = str[i + k] - str[j + k];\n        if (t == 0) {\n            k++;\n            continue;\n        }\n        else if (t > 0) {\n            i += k + 1;\n            if (i <= j)\n                i = j + 1;\n            k = 0;\n        }\n        else if (t < 0) {\n            j += k + 1;\n            if (j <= i)\n                j = i + 1;\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long count = 0;\n    for(int i = 0; i < str.length(); i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long count = 0;\n    for(int i=0;i<str.length();i++){\n        if(str[i] == 'a'){\n            count++;\n        }\n    }\n    long count1 = 0;\n    for(int i=0;i<str.length();i++){\n        if(str[i] == 'a'){\n            count1++;\n        }\n        if(count1 == count){\n            return i+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long count=0;\n    long n=str.length();\n    for(long i=0;i<n;i++){\n        if(str[i]=='1'){\n            count++;\n        }\n    }\n    long max_count=0;\n    long temp=0;\n    for(long i=0;i<n;i++){\n        if(str[i]=='1'){\n            temp++;\n        }\n        if(str[i]=='0'){\n            max_count=max(max_count,temp);\n            temp=0;\n        }\n    }\n    max_count=max(max_count,temp);\n    return count+max_count;",
    "    // Write your code here\n    long count=0;\n    for(long i=0;i<str.length();i++){\n        if(str[i]=='1'){\n            count++;\n        }\n    }\n    if(count==str.length()){\n        return 0;\n    }\n    long max_count=0;\n    long curr_count=0;\n    for(long i=0;i<str.length();i++){\n        if(str[i]=='1'){\n            curr_count++;\n        }\n        else{\n            curr_count=0;\n        }\n        if(curr_count>max_count){\n            max_count=curr_count;\n        }\n    }\n    return str.length()-max_count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return (i < j) ? i : j;",
    "    // Write your code here\n    long n = str.length();\n    long i;\n    for(i=0;i<n;i++){\n        if(str[i] == '1'){\n            break;\n        }\n    }\n    if(i == n){\n        return 0;\n    }\n    long j = i;\n    long count = 0;\n    while(j<n){\n        if(str[j] == '1'){\n            count++;\n        }\n        j++;\n    }\n    return n-count;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    if(count == 0) {\n        return 0;\n    }\n    long max_count = 0;\n    long curr_count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            curr_count++;\n        }\n        if(str[i] == '0') {\n            max_count = std::max(max_count, curr_count);\n            curr_count = 0;\n        }\n    }\n    max_count = std::max(max_count, curr_count);\n    return len - max_count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if(str[i + k] <= str[j + k]) {\n            j += k + 1;\n            if(j == i) {\n                j++;\n            }\n        }\n        else {\n            i = std::max(i + k + 1, j);\n            j = i + 1;\n        }\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            j++;\n            count++;\n            if(j == n) {\n                i++;\n                j = i + 1;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    std::string temp = str;\n    int n = str.length();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        temp = temp.substr(1, n - 1) + temp[0];\n        if(temp == str) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            i = 0;\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        } else {\n            if(count == 0) {\n                count = 1;\n                j++;\n            } else {\n                break;\n            }\n        }\n    }\n    return j;",
    "    // Write your code here\n    long n = str.length();\n    long count = 0;\n    for(long i = 0; i < n; i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    long max_ones = 0;\n    long max_zeros = 0;\n    long curr_ones = 0;\n    long curr_zeros = 0;\n    for(long i = 0; i < n; i++){\n        if(str[i] == '1'){\n            curr_ones++;\n        }\n        else{\n            curr_zeros++;\n        }\n        if(curr_ones > max_ones){\n            max_ones = curr_ones;\n        }\n        if(curr_zeros > max_zeros){\n            max_zeros = curr_zeros;\n        }\n        if(str[i] == '1'){\n            curr_zeros = 0;\n        }\n        else{\n            curr_ones = 0;\n        }\n    }\n    if(count == n){\n        return 0;\n    }\n    return std::max(max_ones, max_zeros);",
    "    // Write your code here\n    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < len && j < len) {\n        k = 0;\n        while(k < len && str[(i + k) % len] == temp[j + k]) {\n            k++;\n        }\n        if(k == len) {\n            return j;\n        }\n        if(str[(i + k) % len] > temp[j + k]) {\n            i = i + k + 1;\n            if(i <= j) {\n                i = j + 1;\n            }\n        } else {\n            j = j + k + 1;\n            if(j <= i) {\n                j = i + 1;\n            }\n        }\n    }\n    return -1;",
    "    long n = str.length();\n    long count = 0;\n    for (long i = 0; i < n; i++) {\n        if (str[i] == '1') {\n            count++;\n        }\n    }\n    long max_count = 0;\n    long max_index = 0;\n    for (long i = 0; i < n; i++) {\n        if (str[i] == '1') {\n            max_count++;\n        }\n        if (str[i] == '0') {\n            max_count = 0;\n        }\n        if (max_count > max_index) {\n            max_index = max_count;\n        }\n    }\n    if (count == 0) {\n        return 0;\n    }\n    return (n - max_index);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            count++;\n            if(count == n) {\n                return -1;\n            }\n            i = 0;\n            j = count + 1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_ones = 0;\n    long max_zeros = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            max_ones++;\n        }\n        else {\n            max_zeros++;\n        }\n        if(max_ones == count) {\n            break;\n        }\n    }\n    long min_rotations = std::min(max_ones, max_zeros);\n    return min_rotations;",
    "    // Write your code here\n    int n = str.length();\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i+k] == str[j+k]) {\n            k++;\n        }\n        if(k == n) {\n            return i;\n        }\n        if(str[i+k] > str[j+k]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return i;",
    "    // Write your code here\n    long count = 0;\n    for(long i = 0; i < str.size(); i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long min = count;\n    for(long i = 0; i < str.size(); i++) {\n        if(str[i] == '1') {\n            count--;\n        }\n        else {\n            count++;\n        }\n        if(count < min) {\n            min = count;\n        }\n    }\n    return min;",
    "    // Write your code here\n    int n = str.length();\n    str = str + str;\n    int len = 0;\n    int i = 1;\n    while(i < n) {\n        if(str[i] < str[len]) {\n            len = 0;\n        }\n        else if(str[i] > str[len]) {\n            i += len + 1;\n            len = 0;\n        }\n        else {\n            len++;\n            i++;\n        }\n    }\n    return len;",
    "    // Write your code here\n    long count=0;\n    std::string temp=str;\n    for(long i=0;i<str.length();i++){\n        std::rotate(temp.begin(),temp.begin()+1,temp.end());\n        if(temp==str){\n            return count;\n        }\n        count++;\n    }\n    return -1;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if (i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    long n = str.length();\n    long i = 0, j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        } else {\n            count++;\n            if(count == n) {\n                return -1;\n            }\n            i = 0;\n            j = count + 1;\n        }\n    }\n    return count;",
    "    /*\n    :param str: given string\n    :return: minimum number of rotations required to get the same string\n    TODO: complete this function\n    */\n    std::string temp = str;\n    long count = 0;\n    while(true) {\n        if(temp == str) {\n            break;\n        }\n        temp = temp.substr(1, temp.length() - 1) + temp[0];\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    str = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        if (str[i + k] == str[j + k]) {\n            k++;\n        } else if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        } else {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i, j;\n    for (i = 0; i < n; i++) {\n        if (str[i] == '1') {\n            break;\n        }\n    }\n    for (j = i + 1; j < n; j++) {\n        if (str[j] == '0') {\n            break;\n        }\n    }\n    return j - i;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if (str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n            if (i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if (i == j) {\n                j++;\n            }\n        }\n    }\n    return (i < j) ? i : j;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            if(count == 0) {\n                j++;\n            } else {\n                i = j - count;\n                count = 0;\n            }\n        }\n        count++;\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(i != 0) {\n                i = 0;\n                j = 1;\n            }\n            else {\n                j++;\n            }\n        }\n        count++;\n        if(count > n) {\n            return -1;\n        }\n    }\n    return j;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(count < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n            count++;\n        }\n        else {\n            i = 0;\n            j = count + 1;\n            count++;\n        }\n    }\n    return i;",
    "    // Write your code here\n    int n = str.size();\n    str = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < n && j < n && k < n) {\n        int t = str[i + k] - str[j + k];\n        if(t == 0) {\n            k++;\n        }\n        else {\n            if(t > 0) {\n                i = i + k + 1;\n                if(i <= j) {\n                    i = j + 1;\n                }\n            }\n            else {\n                j = j + k + 1;\n                if(j <= i) {\n                    j = i + 1;\n                }\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 1, j = 0;\n    while(i < n && j < n) {\n        if(temp[i] == temp[j]) {\n            i++;\n            j++;\n        } else if(j == 0) {\n            i++;\n        } else {\n            j = 0;\n        }\n    }\n    return i - j;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            if(count == 0) {\n                i = j;\n                j++;\n            } else {\n                count = 0;\n                i++;\n                j = i + 1;\n            }\n        }\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long count = 0;\n    for(long i=0;i<str.length();i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    if(count == str.length()){\n        return 0;\n    }\n    long max_count = 0;\n    long curr_count = 0;\n    for(long i=0;i<str.length();i++){\n        if(str[i] == '1'){\n            curr_count++;\n        }\n        else{\n            max_count = std::max(max_count,curr_count);\n            curr_count = 0;\n        }\n    }\n    max_count = std::max(max_count,curr_count);\n    return str.length() - max_count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[(i+k)%n] == str[(j+k)%n]) {\n            k++;\n        }\n        if(str[(i+k)%n] > str[(j+k)%n]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    int n = str.length();\n    str = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < n && j < n && k < n) {\n        int t = str[i + k] - str[j + k];\n        if(t == 0) {\n            k++;\n            continue;\n        }\n        else if(t > 0) {\n            i = i + k + 1;\n            if(i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        }\n        else if(t < 0) {\n            j = j + k + 1;\n            if(j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if(str[i + k] <= str[j + k]) {\n            j = j + k + 1;\n        }\n        else {\n            i = i + k + 1;\n        }\n        if(i == j) {\n            j++;\n        }\n    }\n    return i;",
    "    long len = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < len && j < len) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        } else {\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < len && j < len) {\n        k = 0;\n        while (k < len && str[i + k] == str[j + k])\n            k++;\n        if (k == len)\n            break;\n        if (str[i + k] > str[j + k])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return (i < j) ? i : j;",
    "    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1;\n    while (i < len && j < len) {\n        if (temp[i + j] == temp[i]) {\n            j++;\n        } else if (temp[i + j] > temp[i]) {\n            i = i + j;\n            j = 1;\n        } else {\n            i = 0;\n            j = 1;\n        }\n    }\n    return i;",
    "    // Write your code here\n    long count = 0;\n    for(long i = 0; i < str.length(); i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    long max_ones = count;\n    long max_index = 0;\n    for(long i = 0; i < len; i++){\n        if(str[i] == '1'){\n            count--;\n        }\n        else{\n            count++;\n        }\n        if(count > max_ones){\n            max_ones = count;\n            max_index = i;\n        }\n    }\n    return max_index + 1;",
    "    // Write your code here\n    long len=str.length();\n    long i,j;\n    for(i=0;i<len;i++)\n    {\n        std::string temp=str.substr(i,len-i)+str.substr(0,i);\n        if(temp==str)\n        {\n            return i;\n        }\n    }",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    long count = 0;\n    long length = str.length();\n    for (long i = 0; i < length; i++) {\n        if (str[i] == '1') {\n            count++;\n        }\n    }\n    long max_count = 0;\n    long temp_count = 0;\n    for (long i = 0; i < length; i++) {\n        if (str[i] == '1') {\n            temp_count++;\n        }\n        if (str[i] == '0') {\n            max_count = std::max(max_count, temp_count);\n            temp_count = 0;\n        }\n    }\n    max_count = std::max(max_count, temp_count);\n    if (count == length) {\n        return length - 1;\n    }\n    return length - max_count;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            max_count++;\n        }\n        if(str[i] == '0') {\n            count--;\n        }\n        if(count == 0) {\n            break;\n        }\n    }\n    return len - max_count;",
    "    // Write your code here\n    long n = str.length();\n    long i;\n    for(i=0;i<n;i++){\n        if(str[i]=='1'){\n            break;\n        }\n    }\n    if(i==n){\n        return 0;\n    }\n    else{\n        return n-i;\n    }",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0;\n    long j = 1;\n    while(i < n && j < n){\n        long k = 0;\n        while(k < n && str[(i+k)%n] == str[(j+k)%n]){\n            k++;\n        }\n        if(k == n){\n            return i;\n        }\n        if(str[(i+k)%n] > str[(j+k)%n]){\n            i = i + k + 1;\n        }\n        else{\n            j = j + k + 1;\n        }\n        if(i == j){\n            j++;\n        }\n    }\n    return i;",
    "    // Write your code here\n    int n = str.length();\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if(k == n) {\n            break;\n        }\n        if(str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n        }\n        else {\n            j = j + k + 1;\n        }\n        if(i == j) {\n            j++;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(count == 0) {\n                i = j;\n                j++;\n            }\n            else {\n                break;\n            }\n        }\n        count++;\n    }\n    return count;",
    "    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < len && j < len) {\n        k = 0;\n        while (k < len && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i == j) {\n                i++;\n            }\n        }\n        else if (str[i + k] < str[j + k]) {\n            j = j + k + 1;\n            if (i == j) {\n                j++;\n            }\n        }\n    }\n    return (i < j) ? i : j;",
    "    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < len && j < len) {\n        k = 0;\n        while (k < len && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if (i == j) {\n                j++;\n            }\n        }\n    }\n    return (i < j) ? i : j;",
    "    // Write your code here\n    long n=str.length();\n    long i=0;\n    long j=1;\n    long k=0;\n    while(i<n && j<n && k<n){\n        if(str[(i+k)%n]==str[(j+k)%n]){\n            k++;\n        }\n        else if(str[(i+k)%n]>str[(j+k)%n]){\n            if(i+k>j){\n                i=j;\n            }\n            else{\n                i=i+k+1;\n            }\n            j=i+1;\n            k=0;\n        }\n        else{\n            if(j+k>i){\n                j=i;\n            }\n            else{\n                j=j+k+1;\n            }\n            i=j+1;\n            k=0;\n        }\n    }\n    return std::min(i,j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(count == 0) {\n                i = j;\n                j++;\n            }\n            else {\n                count = 0;\n                i = 0;\n                j = 1;\n            }\n        }\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i=0;i<len;i++){\n        if(str[i] == 'a'){\n            count++;\n        }\n    }\n    long ans = len - count;\n    if(ans > count){\n        return count;\n    }\n    else{\n        return ans;\n    }",
    "    // Write your code here\n    long n = str.length();\n    str = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        if (str[i + k] == str[j + k]) {\n            k++;\n        }\n        else if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        }\n        else if (str[i + k] < str[j + k]) {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long count = 0;\n    long len = str.length();\n    for(long i = 0; i < len; i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    long max = 0;\n    long zeros = 0;\n    long ones = 0;\n    for(long i = 0; i < len; i++){\n        if(str[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == count){\n            max = std::max(max, ones);\n        }\n    }\n    return max;",
    "    // Write your code here\n    long n = str.length();\n    long i;\n    for(i=0;i<n;i++)\n    {\n        if(str[i]=='1')\n            break;\n    }\n    if(i==n)\n        return 0;\n    long count = 0;\n    for(long j=i;j<n;j++)\n    {\n        if(str[j]=='0')\n            count++;\n    }\n    return count;",
    "    long len = str.length();\n    long i = 0, j = 1, k = 0;\n    while (i < len && j < len && k < len) {\n        if (str[(i + k) % len] == str[(j + k) % len]) {\n            k++;\n        } else if (str[(i + k) % len] > str[(j + k) % len]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        } else if (str[(i + k) % len] < str[(j + k) % len]) {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long len = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < len && j < len) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            i = 0;\n            j++;\n            count++;\n        }\n        if(str[i] == str[j]) {\n            i++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            count++;\n            j++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < len && j < len) {\n        k = 0;\n        while (k < len && str[(i + k) % len] == str[(j + k) % len])\n            k++;\n        if (k == len)\n            break;\n        if (str[(i + k) % len] > str[(j + k) % len])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    int len = str.length();\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < len && j < len) {\n        k = 0;\n        while(k < len && str[(i + k) % len] == str[(j + k) % len]) {\n            k++;\n        }\n        if(k == len) {\n            break;\n        }\n        if(str[(i + k) % len] > str[(j + k) % len]) {\n            i = i + k + 1;\n        } else {\n            j = j + k + 1;\n        }\n        if(i == j) {\n            j++;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    int n = str.length();\n    if(n==0)\n        return 0;\n    std::string temp = str + str;\n    int i=1,j=0;\n    while(i<n && j<n)\n    {\n        if(temp[i] == temp[j])\n        {\n            i++;\n            j++;\n        }\n        else if(j==0)\n            i++;\n        else\n            j = lps[j-1];\n    }\n    return i-j;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            count++;\n            i = j;\n            j++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long count = 0;\n    for(int i = 0; i < str.size(); i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.size();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i+k] == str[j+k]) {\n            k++;\n        }\n        if(str[i+k] <= str[j+k]) {\n            j += k + 1;\n            if(j == i) {\n                j++;\n            }\n        } else {\n            i += k + 1;\n            if(i == j) {\n                i++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == 'a') {\n            count++;\n        }\n    }\n    long count1 = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == 'a') {\n            count1++;\n        }\n        if(count1 == count) {\n            return i+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if (str[(i + k) % n] <= str[(j + k) % n]) {\n            j = j + k + 1;\n        } else {\n            i = i + k + 1;\n        }\n        if (i == j) {\n            j++;\n        }\n    }\n    return i;",
    "    // Write your code here\n    int n = str.length();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    int max_count = 0;\n    int max_index = 0;\n    for(int i = 0; i < n; i++) {\n        int curr_count = 0;\n        for(int j = i; j < n + i; j++) {\n            if(str[j % n] == '1') {\n                curr_count++;\n            }\n        }\n        if(curr_count > max_count) {\n            max_count = curr_count;\n            max_index = i;\n        }\n    }\n    if(max_count == count) {\n        return 0;\n    }\n    return n - max_index;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == temp[j + k])\n            k++;\n        if (k == n)\n            return j;\n        if (str[(i + k) % n] > temp[j + k])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return -1;",
    "    long len = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < len && j < len) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            count++;\n            if(count == len) {\n                return -1;\n            }\n            i = 0;\n            j = count + 1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    int n = str.length();\n    str = str + str;\n    int i = 0, j = 1;\n    while(i < n && j < n) {\n        int k = 0;\n        while(k < n && str[i+k] == str[j+k]) {\n            k++;\n        }\n        if(k == n) {\n            return i;\n        }\n        if(str[i+k] > str[j+k]) {\n            i = i + k + 1;\n            if(i <= j) {\n                i = j + 1;\n            }\n        }\n        else {\n            j = j + k + 1;\n            if(j <= i) {\n                j = i + 1;\n            }\n        }\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return (i < j) ? i : j;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_ones = count;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            count--;\n        }\n        if(str[i] == '0') {\n            count++;\n        }\n        max_ones = std::max(max_ones, count);\n    }\n    return len - max_ones;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(j == i + 1) {\n                j++;\n            }\n            else {\n                i = 0;\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1;\n    long k = 0;\n    while(i < len && j < len) {\n        k = 0;\n        while(k < len && str[(i + k) % len] == str[(j + k) % len]) {\n            k++;\n        }\n        if(str[(i + k) % len] > str[(j + k) % len]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long count=0;\n    std::string temp = str;\n    std::string temp2 = str;\n    std::rotate(temp.begin(), temp.begin()+1, temp.end());\n    while(temp!=temp2)\n    {\n        count++;\n        std::rotate(temp.begin(), temp.begin()+1, temp.end());\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        } else {\n            count++;\n            i = 0;\n            j = count + 1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i, j;\n    for (i = 0; i < n; i++) {\n        if (str[i] == '1')\n            break;\n    }\n    if (i == n)\n        return 0;\n    for (j = i + 1; j < n; j++) {\n        if (str[j] == '0')\n            break;\n    }\n    if (j == n)\n        return 0;\n    return j - i;",
    "    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    long n = str.length();\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        if (str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        } else if (str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n            k = 0;\n        } else if (str[(i + k) % n] < str[(j + k) % n]) {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "\t// Write your code here\n\tlong n = str.length();\n\tlong i = 0;\n\tlong j = 1;\n\tlong count = 0;\n\twhile(i < n && j < n) {\n\t\tif(str[i] == str[j]) {\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\telse {\n\t\t\tif(j < i) {\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount++;\n\t\t\t\ti = 0;\n\t\t\t\tj = count + 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            count++;\n            if(count > n) {\n                return -1;\n            }\n            i = 0;\n            j = count;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len=str.length();\n    long count=0;\n    for(long i=0;i<len;i++){\n        if(str[i]=='1'){\n            count++;\n        }\n    }\n    long max_count=0;\n    for(long i=0;i<len;i++){\n        if(str[i]=='1'){\n            max_count++;\n        }\n        else{\n            max_count=0;\n        }\n        if(max_count==count){\n            return i+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n=str.length();\n    std::string temp=str+str;\n    long i=0,j=1,k=0;\n    while(i<n && j<n)\n    {\n        k=0;\n        while(k<n && temp[i+k]==temp[j+k])\n        {\n            k++;\n        }\n        if(k==n)\n        {\n            break;\n        }\n        if(temp[i+k]>temp[j+k])\n        {\n            i=i+k+1;\n            if(i==j)\n            {\n                i++;\n            }\n        }\n        else\n        {\n            j=j+k+1;\n            if(i==j)\n            {\n                j++;\n            }\n        }\n    }\n    return std::min(i,j);",
    "    // Write your code here\n    int n = str.length();\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if(str[i + k] <= str[j + k]) {\n            j += k + 1;\n            if(j == i) {\n                j++;\n            }\n        } else {\n            i = std::max(i + k + 1, j);\n            j = i + 1;\n        }\n    }\n    return i;",
    "    //write your code here\n    int n = str.length();\n    str = str + str;\n    int i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        int t = str[i + k] - str[j + k];\n        if (t == 0) {\n            k++;\n        }\n        else {\n            if (t > 0) {\n                i = i + k + 1;\n            }\n            else {\n                j = j + k + 1;\n            }\n            if (i == j) {\n                j++;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            if(j == i + 1) {\n                j++;\n            }\n            else {\n                i = 0;\n                j = 1;\n                count++;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long i = 0;\n    while(i < len) {\n        if(str[i] == str[0]) {\n            break;\n        }\n        i++;\n    }\n    return i;",
    "    // Write your code here\n    int n = str.length();\n    if(n==0)\n        return 0;\n    std::string temp = str + str;\n    int i = 0, j = 1, k = 0;\n    while(i<n && j<n){\n        k = 0;\n        while(k<n && str[(i+k)%n] == str[(j+k)%n])\n            k++;\n        if(k==n)\n            return j;\n        if(str[(i+k)%n] > str[(j+k)%n])\n            i = i+k+1;\n        else\n            j = j+k+1;\n        if(i==j)\n            j++;\n    }\n    return i;",
    "    // Write your code here\n    long len=str.length();\n    long count=0;\n    for(long i=0;i<len;i++)\n    {\n        if(str[i]=='1')\n        {\n            count++;\n        }\n    }\n    if(count==len)\n    {\n        return -1;\n    }\n    else\n    {\n        return count;\n    }",
    "    // Write your code here\n    long n = str.size();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            if(count == 0) {\n                i = j;\n                j++;\n            } else {\n                count = 0;\n                i = 0;\n                j = 1;\n            }\n        }\n        count++;\n    }\n    return count;",
    "    int n = str.length();\n    std::string temp = str + str;\n    int i = 0;\n    int j = 1;\n    int k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (k == n) {\n            return i;\n        }\n        if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n        } else {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n        }\n    }\n    return i;",
    "    // Write your code here\n    int n = str.length();\n    std::string temp = str + str;\n    int i = 0, j = 1;\n    while(i < n && j < n) {\n        int k = 0;\n        while(k < n && str[i+k] == str[j+k]) {\n            k++;\n        }\n        if(k == n) {\n            return j;\n        }\n        if(str[i+k] > str[j+k]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        }\n        else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return i;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            if(count == 0) {\n                i = j;\n                j++;\n            } else {\n                i = 0;\n                j = 1;\n                count = 0;\n            }\n        }\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n)\n    {\n        if(str[i] == str[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            i = 0;\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    long len = str.length();\n    std::string temp = str + str;\n    long min_index = 0;\n    for (long i = 1; i < len; i++) {\n        if (temp.substr(i, len) < temp.substr(min_index, len)) {\n            min_index = i;\n        }\n    }\n    return min_index;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        if (str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        } else {\n            if (str[(i + k) % n] > str[(j + k) % n]) {\n                i = i + k + 1;\n            } else {\n                j = j + k + 1;\n            }\n            if (i == j) {\n                j++;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long count = 0;\n    std::string temp = str;\n    for(long i = 0; i < str.length(); i++){\n        std::rotate(temp.begin(), temp.begin()+1, temp.end());\n        if(temp == str){\n            return count;\n        }\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1;\n    while(i < n && j < n) {\n        long k = 0;\n        while(k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if(k == n) {\n            break;\n        }\n        if(str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n        }\n        else {\n            j = j + k + 1;\n        }\n        if(i == j) {\n            j++;\n        }\n    }\n    return std::min(i, j);",
    "    long len = str.length();\n    std::string temp = str + str;\n    long i = 0;\n    long j = 1;\n    long k = 0;\n    while (i < len && j < len) {\n        k = 0;\n        while (k < len && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (k == len) {\n            return i;\n        }\n        if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n        }\n        else {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n        }\n    }\n    return i;",
    "    // Write your code here\n    long count = 0;\n    for(long i = 0; i < str.length(); i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    long max = 0;\n    long curr_count = 0;\n    for(long i = 0; i < str.length(); i++){\n        if(str[i] == '1'){\n            curr_count++;\n        }\n        if(str[i] == '0'){\n            curr_count = 0;\n        }\n        if(curr_count > max){\n            max = curr_count;\n        }\n    }\n    if(max == count){\n        return 0;\n    }\n    return count - max;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            i = 0;\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        if (str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        else if (str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n            if (i <= j)\n                i = j + 1;\n            k = 0;\n        } else if (str[(i + k) % n] < str[(j + k) % n]) {\n            j = j + k + 1;\n            if (j <= i)\n                j = i + 1;\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(count < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n            count++;\n        }\n        else {\n            i = 0;\n            j++;\n            count = 0;\n        }\n    }\n    return i;",
    "    // Write your code here\n    int n = str.length();\n    str = str + str;\n    int i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        int t = str[i + k] - str[j + k];\n        if (t == 0) {\n            k++;\n        } else {\n            if (t > 0) {\n                i = i + k + 1;\n            } else {\n                j = j + k + 1;\n            }\n            if (i == j) {\n                j++;\n            }\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            if(i == 0) {\n                j++;\n            }\n            else {\n                i = 0;\n            }\n        }\n        if(i == n-1) {\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            if(count == 0) {\n                i = j;\n                j++;\n            } else {\n                count = 0;\n                i = 0;\n                j = 1;\n            }\n        }\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while (i < n && j < n) {\n        if (str[i] == str[j]) {\n            i++;\n            j++;\n        } else {\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_ones = 0;\n    long curr_ones = 0;\n    for(long i = 0; i < len; i++) {\n        if(str[i] == '1') {\n            curr_ones++;\n        }\n        if(str[i] == '0') {\n            max_ones = std::max(max_ones, curr_ones);\n            curr_ones = 0;\n        }\n    }\n    max_ones = std::max(max_ones, curr_ones);\n    return len - max_ones;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n && k < n) {\n        if (str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        else if (str[(i + k) % n] > str[(j + k) % n]) {\n            i = i + k + 1;\n            if (i <= j)\n                i = j + 1;\n            k = 0;\n        } else if (str[(i + k) % n] < str[(j + k) % n]) {\n            j = j + k + 1;\n            if (j <= i)\n                j = i + 1;\n            k = 0;\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long count=0;\n    for(int i=0;i<str.length();i++){\n        if(str[i]=='A'){\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    long n = str.length();\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_count = 0;\n    long zeros = 0;\n    long ones = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '0') {\n            zeros++;\n        }\n        else {\n            ones++;\n        }\n        max_count = std::max(max_count, zeros - ones);\n    }\n    return (count - max_count);",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if (k == n) {\n            break;\n        }\n        if (str[i + k] > str[j + k]) {\n            i = i + k + 1;\n            if (i <= j) {\n                i = j + 1;\n            }\n        } else {\n            j = j + k + 1;\n            if (j <= i) {\n                j = i + 1;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long n=str.length();\n    long count=0;\n    for(long i=0;i<n;i++)\n    {\n        if(str[i]=='1')\n        {\n            count++;\n        }\n    }\n    if(count==n)\n    {\n        return 0;\n    }\n    long max_count=0;\n    long curr_count=0;\n    for(long i=0;i<n;i++)\n    {\n        if(str[i]=='1')\n        {\n            curr_count++;\n        }\n        else\n        {\n            curr_count=0;\n        }\n        if(curr_count>max_count)\n        {\n            max_count=curr_count;\n        }\n    }\n    return n-max_count;",
    "    // Write your code here\n    long len = str.length();\n    long i, j;\n    for (i = len - 1; i > 0; i--) {\n        if (str[i] > str[i - 1]) {\n            break;\n        }\n    }\n    if (i == 0) {\n        return 0;\n    }\n    char min = str[i];\n    long min_index = i;\n    for (j = i + 1; j < len; j++) {\n        if (str[j] < min && str[j] > str[i - 1]) {\n            min = str[j];\n            min_index = j;\n        }\n    }\n    std::swap(str[i - 1], str[min_index]);\n    std::sort(str.begin() + i, str.end());\n    return len - i;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            j++;\n        } else {\n            i = 0;\n            count++;\n            if(str[i] == str[j]) {\n                j++;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    long count=0;\n    std::string s=str;\n    while(s.compare(str)!=0){\n        s=s.substr(1,s.length())+s[0];\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < n && j < n) {\n        k = 0;\n        while(k < n && str[i + k] == str[j + k]) {\n            k++;\n        }\n        if(str[i + k] <= str[j + k]) {\n            j = j + k + 1;\n        } else {\n            i = i + k + 1;\n        }\n        if(i == j) {\n            j++;\n        }\n    }\n    return i;",
    "    // Write your code here\n    std::string temp = str;\n    std::string temp1 = str;\n    int n = str.length();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        temp = temp.substr(1,n-1) + temp[0];\n        if(temp == temp1){\n            return count;\n        }\n        count++;\n    }\n    return -1;",
    "    // Write your code here\n    long len = str.length();\n    long count = 0;\n    for(long i = 0; i < len; i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    long max_count = 0;\n    for(long i = 0; i < len; i++){\n        if(str[i] == '1'){\n            max_count++;\n        }\n        else{\n            max_count = 0;\n        }\n        if(max_count == count){\n            return i+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            j++;\n            count++;\n            if(j == n) {\n                i++;\n                j = i + 1;\n            }\n        }\n    }\n    return count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n])\n            k++;\n        if (k == n)\n            break;\n        if (str[(i + k) % n] > str[(j + k) % n])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return (i < j) ? i : j;",
    "    long n = str.length();\n    long count = 0;\n    for (long i = 0; i < n; i++) {\n        if (str[i] == '1') {\n            count++;\n        }\n    }\n    long max_count = 0;\n    for (long i = 0; i < n; i++) {\n        if (str[i] == '1') {\n            max_count++;\n        }\n        if (str[i] == '0') {\n            count--;\n        }\n        max_count = std::max(max_count, count);\n    }\n    return n - max_count;",
    "    // Write your code here\n    long n = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while (i < n && j < n) {\n        k = 0;\n        while (k < n && str[i + k] == str[j + k])\n            k++;\n        if (k == n)\n            break;\n        if (str[i + k] > str[j + k])\n            i = i + k + 1;\n        else\n            j = j + k + 1;\n        if (i == j)\n            j++;\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long len = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < len && j < len) {\n        if(str[i] == str[j]) {\n            j++;\n        }\n        else {\n            i = 0;\n            j++;\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    std::string temp = str + str;\n    long i = 0, j = 1, k = 0;\n    while(i < len && j < len) {\n        k = 0;\n        while(k < len && str[(i + k) % len] == str[(j + k) % len]) {\n            k++;\n        }\n        if(str[(i + k) % len] > str[(j + k) % len]) {\n            i = i + k + 1;\n            if(i == j) {\n                i++;\n            }\n        } else {\n            j = j + k + 1;\n            if(i == j) {\n                j++;\n            }\n        }\n    }\n    return std::min(i, j);",
    "    // Write your code here\n    long count=0;\n    long n=str.length();\n    for(long i=0;i<n;i++){\n        if(str[i]=='1'){\n            count++;\n        }\n    }\n    long max_ones=0;\n    long max_zeros=0;\n    long curr_ones=0;\n    long curr_zeros=0;\n    for(long i=0;i<n;i++){\n        if(str[i]=='1'){\n            curr_ones++;\n        }\n        else{\n            curr_zeros++;\n        }\n        if(curr_ones>max_ones){\n            max_ones=curr_ones;\n        }\n        if(curr_zeros>max_zeros){\n            max_zeros=curr_zeros;\n        }\n        if(curr_ones==curr_zeros){\n            curr_ones=0;\n            curr_zeros=0;\n        }\n    }\n    long ans=std::max(max_ones,max_zeros);\n    if(ans==count){\n        return 0;\n    }\n    return ans;",
    "    long n = str.size();\n    std::string temp = str + str;\n    long i = 0, j = 1;\n    while (i < n && j < n) {\n        long k = 0;\n        while (k < n && str[(i + k) % n] == str[(j + k) % n]) {\n            k++;\n        }\n        if (str[(i + k) % n] <= str[(j + k) % n]) {\n            j = j + k + 1;\n        }\n        else {\n            i = i + k + 1;\n        }\n        if (i == j) {\n            j++;\n        }\n    }\n    return i;",
    "    // Write your code here\n    long n = str.size();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            count++;\n        }\n    }\n    long max_ones = 0;\n    long max_zeros = 0;\n    for(long i = 0; i < n; i++) {\n        if(str[i] == '1') {\n            max_ones++;\n        }\n        else {\n            max_zeros++;\n        }\n        if(max_ones == count) {\n            break;\n        }\n    }\n    long min_rotations = std::min(max_ones, max_zeros);\n    return min_rotations;",
    "    // Write your code here\n    long count = 0;\n    for(long i = 0; i < str.length(); i++) {\n        if(str[i] == '1') {\n            count += 1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    std::string temp = str + str;\n    long min = len;\n    for(long i = 1; i < len; i++){\n        if(temp.substr(i, len) < temp.substr(min, len)){\n            min = i;\n        }\n    }\n    return min;",
    "    // Write your code here\n    long n = str.length();\n    long i = 0;\n    long j = 1;\n    long count = 0;\n    while(i < n && j < n) {\n        if(str[i] == str[j]) {\n            i++;\n            j++;\n        }\n        else {\n            count++;\n            i = 0;\n            j = count + 1;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long len = str.length();\n    long i, j;\n    for (i = len - 1; i > 0; i--) {\n        if (str[i] > str[i - 1]) {\n            break;\n        }\n    }\n    return i;",
    "    // Write your code here\n    long count=0;\n    for(long i=0;i<str.length();i++){\n        if(str[i]=='1'){\n            count++;\n        }\n    }\n    if(count==0){\n        return 0;\n    }\n    else{\n        return str.length()-count;\n    }",
    "    // Write your code here\n    long n = str.length();\n    long count = 0;\n    for(long i = 0; i < n; i++){\n        if(str[i] == '1'){\n            count++;\n        }\n    }\n    long max_count = 0;\n    for(long i = 0; i < n; i++){\n        if(str[i] == '1'){\n            max_count++;\n        }\n        if(str[i] == '0'){\n            count--;\n        }\n        max_count = std::max(max_count, count);\n    }\n    return n - max_count;"
  ]
}
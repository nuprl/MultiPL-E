{
  "name": "mbpp_279_is_num_decagonal",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the nth decagonal number.\nlong is_num_decagonal(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_num_decagonal;\n    assert(candidate((3)) == (27));\n    assert(candidate((7)) == (175));\n    assert(candidate((10)) == (370));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0)\n        return 1;\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    double x = (sqrt(40*n + 9) + 3)/10;\n    if (x == (long)x) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return x;\n    }\n    return 0;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4*2*n) - 1)/2;\n    if(x*(3*x - 1)/2 == n)\n        return 1;\n    return 0;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i * 3;\n        i++;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    long a = (3*n*n-n)/2;\n    long b = (3*n*n+n)/2;\n    long c = (3*n*n+n)/2;\n    long d = (3*n*n-n)/2;\n    long e = (3*n*n+n)/2;\n    long f = (3*n*n-n)/2;\n    long g = (3*n*n+n)/2;\n    long h = (3*n*n-n)/2;\n    long i = (3*n*n+n)/2;\n    long j = (3*n*n-n)/2;\n    long k = (3*n*n+n)/2;\n    long l = (3*n*n-n)/2;\n    long m = (3*n*n+n)/2;\n    long o = (3*n*n-n)/2;\n    long p = (3*n*n+n)/2;\n    long q = (3*n*n-n)/2;\n    long r = (3*n*n+n)/2;\n    long s = (3*n*n-n)/2;\n    long t = (3*n*n+n)/2;\n    long u = (3*n*n-n)/2;\n    long v = (3*n*n+n)/2;\n    long w = (3*n*n-n)/2;\n    long x = (3*n*n+n)/2;\n    long y = (3*n*n-n)/2;\n    long z = (3*n*n+n)/2;\n    long aa = (3*n*n-n)/2;\n    long bb = (3*n*n+n)/2;\n    long cc = (3*n*n-n)/2;\n    long dd = (3*n*n+n)/2;\n    long ee = (3*n*n-n)/2;\n    long ff = (3*n*n+n)/2;\n    long gg = (3*n*n-",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long) x;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long x = (sqrt(1 + 4*2*n) - 1) / 2;\n    if (x * (3*x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long a = (3*n*n - n)/2;\n    return a;",
    "  long num = n;\n  long i = 1;\n  while(num > 0) {\n    num -= i;\n    i += 4;\n  }\n  if(num == 0) return 1;\n  return 0;",
    "    float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (int) x;",
    "    long a = (3*n*n - n)/2;\n    return a;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0)\n        return 1;\n    return 0;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long x = (3 * n * n - n) / 2;\n    return x;",
    "    long i = 1;\n    long num = 0;\n    while(num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if(num == n) {\n        return 1;\n    }\n    return 0;",
    "    long num = n*(3*n-2);\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long) x;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long num = n;\n    long num_decagonal = 0;\n    long i = 1;\n    while(num_decagonal < num) {\n        num_decagonal = i*(3*i - 1)/2;\n        i++;\n    }\n    if(num_decagonal == num) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "  long num = (3*n*n - n)/2;\n  return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (int) x;",
    "    long r = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return r * (3 * r - 1) / 2 == n;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long a = 3*n*n - n;\n    if (a % 2 == 0) {\n        return a/2;\n    }\n    return 0;",
    "    long a = (3 * n * n - n) / 2;\n    return a;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long nth_decagonal_number = 0;\n    nth_decagonal_number = n * (3 * n - 2);\n    return nth_decagonal_number;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long num = n*(3*n-2);\n    return num;",
    "    long nth_decagonal_number = 0;\n    nth_decagonal_number = (n * (3 * n - 2)) / 2;\n    return nth_decagonal_number;",
    "    long num = n;\n    long root = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n    if (root * (3 * root - 1) / 2 == num) {\n        return 1;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long) x;",
    "    long nth_decagonal = 0;\n    nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;",
    "    float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (int) x;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long a = (3*n*n - n)/2;\n    return a;",
    "    long x = (3*n*n-n)/2;\n    return x;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long num = n;\n    long root = (sqrt(1+4*2*num) - 1) / 2;\n    if(root*(3*root-1)/2 == num)\n        return 1;\n    return 0;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x == (int) x)\n        return 1;\n    return 0;",
    "    long num = n;\n    long num_decagonal = 0;\n    long i = 1;\n    while (num_decagonal < num) {\n        num_decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num_decagonal == num) {\n        return 1;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long)x;",
    "    long r = sqrt(n);\n    return (r*r == n && (r+1)%4 == 0);",
    "    long num = n;\n    long x = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == num) {\n        return 1;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long)x;",
    "    long i = 1;\n    while(i * (3 * i - 1) / 2 < n) {\n        i++;\n    }\n    if(i * (3 * i - 1) / 2 == n) {\n        return i;\n    }\n    return 0;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long num = n;\n    long root = (sqrt(1 + 4*2*num) - 1)/2;\n    if (root*(3*root - 1)/2 == num)\n        return 1;\n    else\n        return 0;",
    "    long num = n;\n    long nth_term = (3 * num * num - num) / 2;\n    return nth_term;",
    "    long num = n * (3 * n - 2);\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long a = (3 + sqrt(9 + 40*n))/10;\n    if(a*(3*a - 1)/2 == n)\n        return 1;\n    return 0;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "  long num = n;\n  long i = 1;\n  long decagonal_num = 0;\n  while (decagonal_num < num) {\n    decagonal_num = i * (3 * i - 1) / 2;\n    i++;\n  }\n  if (decagonal_num == num)\n    return 1;\n  else\n    return 0;",
    "    long num = n;\n    long nth_term = (3 * num * num - num) / 2;\n    return nth_term;",
    "    long num = n;\n    long num_decagonal = 0;\n    long i = 1;\n    while(num_decagonal < num) {\n        num_decagonal = i * (3*i - 1) / 2;\n        if(num_decagonal == num) {\n            return 1;\n        }\n        i++;\n    }\n    return 0;",
    "  float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n  if (x == (int) x)\n    return 1;\n  else\n    return 0;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long a = (3*n*n - n)/2;\n    return a;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long num = n;\n    long x = 1;\n    while(num > 0) {\n        num -= x;\n        x += 4;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    double nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long a = (3 * n * n - n) / 2;\n    return a;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "  long num = n * (3 * n - 2);\n  return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (int)x;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long)x;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0)\n        return 1;\n    return 0;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long x = (sqrt(1 + 4*2*n) - 1)/2;\n    if(x*(3*x - 1)/2 == n)\n        return 1;\n    return 0;",
    "    long x = (3 * n * n - n) / 2;\n    return x;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long)x;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long nth_decagonal = 0;\n    long i = 1;\n    while(nth_decagonal < num) {\n        nth_decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if(nth_decagonal == num) {\n        return 1;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) + 1) / 2;\n    return x == (long) x;",
    "    long x = (3 * n * n - n) / 2;\n    return x;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i*3;\n        i++;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * (3 * n - 2)) / 2;\n    return nth_decagonal;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * (3 * n - 1)) / 2;\n    return nth_decagonal;",
    "    long a = (3*n*n - n)/2;\n    return a;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long) x;",
    "    float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x == (int) x)\n        return 1;\n    else\n        return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x == (long) x)\n        return 1;\n    else\n        return 0;",
    "    long num = n;\n    long nth_term = (3 * num * num - num) / 2;\n    return nth_term;",
    "    double a = (3 + sqrt(9 + 40*n))/10;\n    if (a == (long)a)\n        return 1;\n    return 0;",
    "    long a = (3 + sqrt(9 + 40 * n)) / 10;\n    if (a * (3 * a - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    float x = (sqrt(1+4*2*n)+1)/2;\n    if(x == (int)x)\n        return 1;\n    else\n        return 0;",
    "    long num = n * (3 * n - 2);\n    return num;",
    "    long a = (3 + sqrt(9 + 40 * n)) / 10;\n    return a;",
    "    long a = (3*n*n - n)/2;\n    return a;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long num = n;\n    long num_decagonal = 0;\n    long i = 1;\n    while(num_decagonal < num) {\n        num_decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if(num_decagonal == num) {\n        return 1;\n    }\n    return 0;",
    "    long nth_decagonal = 0;\n    nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;",
    "  long nth_decagonal_num = 0;\n  nth_decagonal_num = (n * (3 * n - 1)) / 2;\n  return nth_decagonal_num;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long) x;",
    "    long x = (sqrt(1 + 4*2*n) - 1)/2;\n    if(x*(3*x-1)/2 == n)\n        return 1;\n    else\n        return 0;",
    "    float a = (3 + sqrt(9 + 40 * n)) / 10;\n    if (a - (int)a == 0) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long) x;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= (3 * i * i - i) / 2;\n        i++;\n    }\n    if(num == 0)\n        return 1;\n    return 0;",
    "    long x = (3 * n * n - n) / 2;\n    long y = sqrt(x);\n    if (y * y == x) {\n        return y;\n    }\n    return 0;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * (3 * n - 2)) / 2;\n    return nth_decagonal;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * (3 * n - 2)) / 2;\n    return nth_decagonal;",
    "    long num = n;\n    long x = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == num) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long root = (1 + sqrt(1 + 4 * 2 * num)) / 2;\n    if (root * (3 * root - 1) / 2 == num) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    return num == 0;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * ((3 * n) - 1)) / 2;\n    return nth_decagonal;",
    "    double x = (sqrt(1 + 4 * 2 * n) + 1) / 2;\n    return x == (long) x;",
    "    double x = (sqrt(1 + 4 * 2 * n) + 1) / 2;\n    return x == (long)x;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "  long nth_decagonal = 0;\n  nth_decagonal = n*(3*n-2);\n  return nth_decagonal;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long x = (3 * n * n - n) / 2;\n    return x;",
    "    long num = n;\n    long x = 1 + 4 * 10 * num + 4 * num * num;\n    long sqrt_x = sqrt(x);\n    if (sqrt_x * sqrt_x == x) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long nth_num = 0;\n    while(num > 0) {\n        nth_num += num % 10;\n        num /= 10;\n    }\n    return nth_num;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0)\n        return 1;\n    return 0;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long nth_num = (3 * num * num - num) / 2;\n    return nth_num;",
    "    long num = n;\n    long nth_term = (3*num*num - num)/2;\n    return nth_term;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * ((3 * n) - 1)) / 2;\n    return nth_decagonal;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    else\n        return 0;",
    "    long a = (3 + sqrt(9 + 40 * n)) / 10;\n    return a;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * (3 * n - 1)) / 2;\n    return nth_decagonal;",
    "    long num = n;\n    long x = 1;\n    while(num > 0) {\n        num -= x;\n        x += 4;\n    }\n    return num == 0;",
    "    long nth_decagonal = 0;\n    nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long num = n;\n    long nth_decagonal_num = 0;\n    long i = 1;\n    while(nth_decagonal_num < num) {\n        nth_decagonal_num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if(nth_decagonal_num == num) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 3;\n    }\n    if(num == 0)\n        return 1;\n    return 0;",
    "    long a = (3 * n * n - n) / 2;\n    return a;",
    "    float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (int)x;",
    "    float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (int)x;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long a = (3 + sqrt(9 + 40*n))/10;\n    if (a*(3*a - 1)/2 == n)\n        return 1;\n    return 0;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long num = n;\n    long nth_num = 0;\n    long i = 1;\n    while(nth_num < num) {\n        nth_num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if(nth_num == num) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return x;\n    return 0;",
    "    long a = (3*n*n - n)/2;\n    long b = (3*n*n + n)/2;\n    if(a%10 == 0) {\n        return a;\n    }\n    if(b%10 == 0) {\n        return b;\n    }\n    return 0;",
    "    long x = (3*n*n - n)/2;\n    return x;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    double r = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (r == (long) r)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (3*n*n - n)/2;\n    return a;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long a = (3*n*n - n)/2;\n    long b = (3*n*n + n)/2;\n    long c = (3*n*n - n)/2;\n    long d = (3*n*n + n)/2;\n    long e = (3*n*n - n)/2;\n    long f = (3*n*n + n)/2;\n    long g = (3*n*n - n)/2;\n    long h = (3*n*n + n)/2;\n    long i = (3*n*n - n)/2;\n    long j = (3*n*n + n)/2;\n    long k = (3*n*n - n)/2;\n    long l = (3*n*n + n)/2;\n    long m = (3*n*n - n)/2;\n    long o = (3*n*n + n)/2;\n    long p = (3*n*n - n)/2;\n    long q = (3*n*n + n)/2;\n    long r = (3*n*n - n)/2;\n    long s = (3*n*n + n)/2;\n    long t = (3*n*n - n)/2;\n    long u = (3*n*n + n)/2;\n    long v = (3*n*n - n)/2;\n    long w = (3*n*n + n)/2;\n    long x = (3*n*n - n)/2;\n    long y = (3*n*n + n)/2;\n    long z = (3*n*n - n)/2;\n    long aa = (3*n*n + n)/2;\n    long bb = (3*n*n - n)/2;\n    long cc = (3*n*n + n)/2;\n    long dd = (3*n*n - n)/2;\n    long ee = (3*n*n + n)/2;\n    long ff = (3*n*n - n)/2;\n    long gg = (3*n*n +",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long a = (3 + sqrt(9 + 40 * n)) / 10;\n    return a;",
    "    long a = (3 + sqrt(9 + 40 * n)) / 10;\n    return a;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x == (int)x) {\n        return 1;\n    }\n    return 0;",
    "    long num = n;\n    long x = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == num) {\n        return 1;\n    }\n    return 0;",
    "    long a = (3 + sqrt(9 + 40*n))/10;\n    return a;",
    "    long i,j;\n    for(i=1;i<=n;i++) {\n        j = i*(3*i-1)/2;\n        if(j == n)\n            return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n)\n        return 1;\n    return 0;",
    "    long num = n;\n    long x = 1 + 4 * 10 * num;\n    long sq = sqrt(x);\n    if (sq * sq == x) {\n        long y = (sq - 1) / 2;\n        if (y % 10 == 0) {\n            return 1;\n        }\n    }\n    return 0;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    float x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x == (int) x)\n        return 1;\n    return 0;",
    "    long num = (3 * n * n - n) / 2;\n    return num;",
    "    long num = n;\n    long x = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == num)\n        return 1;\n    else\n        return 0;",
    "    long nth_decagonal_number = 0;\n    nth_decagonal_number = n * (3 * n - 2);\n    return nth_decagonal_number;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0)\n        return 1;\n    return 0;",
    "  long i = 1;\n  while (n > 0) {\n    n -= 3 * i - 2;\n    i++;\n  }\n  return n == 0;"
  ]
}
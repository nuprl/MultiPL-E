{
  "name": "mbpp_127_multiply_int",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;",
    "    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return sum;",
    "    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    long result = 0;\n    if (x < 0 && y < 0) {\n        result = multiply_int(abs(x), abs(y));\n    } else if (x < 0) {\n        result = multiply_int(abs(x), y);\n        result = -result;\n    } else if (y < 0) {\n        result = multiply_int(x, abs(y));\n        result = -result;\n    } else {\n        result = multiply_int(x, y - 1);\n        result += x;\n    }\n    return result;",
    "    if (x == 0 || y == 0) return 0;\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) result += x;\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    // TODO: Write your code here\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long result = 0;\n    if (x < 0 && y < 0) {\n        x = abs(x);\n        y = abs(y);\n        for (int i = 0; i < y; i++) {\n            result += x;\n        }\n        return result;\n    }\n    if (x < 0) {\n        x = abs(x);\n        for (int i = 0; i < y; i++) {\n            result -= x;\n        }\n        return result;\n    }\n    if (y < 0) {\n        y = abs(y);\n        for (int i = 0; i < y; i++) {\n            result -= x;\n        }\n        return result;\n    }\n    for (int i = 0; i < y; i++) {\n        result += x;\n    }\n    return result;",
    "    if (x == 0 || y == 0) return 0;\n    if (x == 1) return y;\n    if (y == 1) return x;\n    if (x == -1) return -y;\n    if (y == -1) return -x;\n    if (x == 2) return y << 1;\n    if (y == 2) return x << 1;\n    if (x == -2) return -(y << 1);\n    if (y == -2) return -(x << 1);\n    if (x == 3) return y + y + y;\n    if (y == 3) return x + x + x;\n    if (x == -3) return -(y + y + y);\n    if (y == -3) return -(x + x + x);\n    if (x == 4) return y << 2;\n    if (y == 4) return x << 2;\n    if (x == -4) return -(y << 2);\n    if (y == -4) return -(x << 2);\n    if (x == 5) return y + y + y + y + y;\n    if (y == 5) return x + x + x + x + x;\n    if (x == -5) return -(y + y + y + y + y);\n    if (y == -5) return -(x + x + x + x + x);\n    if (x == 6) return y + y + y + y + y + y;\n    if (y == 6) return x + x + x + x + x + x;\n    if (x == -6) return -(y + y + y + y + y + y);\n    if (y == -6) return -(x + x + x + x + x + x);\n    if (x == 7) return y + y + y + y + y + y + y;\n    if (y == 7) return x + x + x + x + x + x + x;\n    if (x == -7) return -(y + y + y + y + y + y + y);\n    if (y == -7) return -(x + x + x + x + x + x",
    "    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "\tlong result = 0;\n\twhile (y) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;",
    "    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    long result = 0;\n    if (x < 0 && y < 0) {\n        result = multiply_int(-x, -y);\n    } else if (x < 0) {\n        result = -multiply_int(-x, y);\n    } else if (y < 0) {\n        result = -multiply_int(x, -y);\n    } else {\n        result = x + multiply_int(x, y - 1);\n    }\n    return result;",
    "    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "  long result = 0;\n  while (y > 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;",
    "    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;",
    "    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    if (x < 0 && y < 0) {\n        return multiply_int(-x, -y);\n    }\n    if (x < 0) {\n        return -multiply_int(-x, y);\n    }\n    if (y < 0) {\n        return -multiply_int(x, -y);\n    }\n    if (x > y) {\n        return multiply_int(y, x);\n    }\n    return x + multiply_int(x, y - 1);",
    "    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;"
  ]
}
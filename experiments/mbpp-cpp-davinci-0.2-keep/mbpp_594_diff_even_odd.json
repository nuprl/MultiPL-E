{
  "name": "mbpp_594_diff_even_odd",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the difference of the first even and first odd number of a given list.\nlong diff_even_odd(std::vector<long> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = diff_even_odd;\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)7, (long)4, (long)1, (long)6, (long)8}))) == (3));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10}))) == (1));\n    assert(candidate((std::vector<long>({(long)1, (long)5, (long)7, (long)9, (long)10}))) == (9));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  long even_num = 0;\n  long odd_num = 0;\n  for(int i = 0; i < list1.size(); i++) {\n    if(list1[i] % 2 == 0) {\n      even_num = list1[i];\n      break;\n    }\n  }\n  for(int i = 0; i < list1.size(); i++) {\n    if(list1[i] % 2 != 0) {\n      odd_num = list1[i];\n      break;\n    }\n  }\n  return even_num - odd_num;",
    "    long even,odd;\n    for(int i=0;i<list1.size();i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(int i=0;i<list1.size();i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even-odd;",
    "    long even = 0;\n    long odd = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;",
    "    long even_num = 0;\n    long odd_num = 0;\n    for (auto i : list1) {\n        if (i % 2 == 0) {\n            even_num = i;\n            break;\n        }\n    }\n    for (auto i : list1) {\n        if (i % 2 != 0) {\n            odd_num = i;\n            break;\n        }\n    }\n    return even_num - odd_num;",
    "    long even = 0, odd = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;",
    "    long even = 0, odd = 0;\n    for(long i = 0; i < list1.size(); i++) {\n        if(list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for(long i = 0; i < list1.size(); i++) {\n        if(list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;",
    "    long even_num = 0;\n    long odd_num = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i] % 2 == 0) {\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num - odd_num;",
    "    long even,odd;\n    for(int i=0;i<list1.size();i++)\n    {\n        if(list1[i]%2==0)\n        {\n            even=list1[i];\n            break;\n        }\n    }\n    for(int i=0;i<list1.size();i++)\n    {\n        if(list1[i]%2!=0)\n        {\n            odd=list1[i];\n            break;\n        }\n    }\n    return even-odd;",
    "    long even = 0, odd = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;",
    "  long even = 0, odd = 0;\n  for (auto i : list1) {\n    if (i % 2 == 0) {\n      even = i;\n      break;\n    }\n  }\n  for (auto i : list1) {\n    if (i % 2 != 0) {\n      odd = i;\n      break;\n    }\n  }\n  return abs(even - odd);",
    "  long even = 0;\n  long odd = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (int i = 0; i < list1.size(); i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;",
    "    long even_num = 0;\n    long odd_num = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            break;\n        }\n    }\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num - odd_num;",
    "    long even,odd;\n    for(int i=0;i<list1.size();i++)\n    {\n        if(list1[i]%2==0)\n        {\n            even=list1[i];\n            break;\n        }\n    }\n    for(int i=0;i<list1.size();i++)\n    {\n        if(list1[i]%2!=0)\n        {\n            odd=list1[i];\n            break;\n        }\n    }\n    return even-odd;",
    "\tlong even = 0, odd = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i] % 2 == 0) {\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i] % 2 != 0) {\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even - odd;",
    "  long even=0,odd=0;\n  for(int i=0;i<list1.size();i++)\n  {\n    if(list1[i]%2==0)\n    {\n      even=list1[i];\n      break;\n    }\n  }\n  for(int i=0;i<list1.size();i++)\n  {\n    if(list1[i]%2!=0)\n    {\n      odd=list1[i];\n      break;\n    }\n  }\n  return even-odd;",
    "    long even,odd;\n    for(int i=0;i<list1.size();i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(int i=0;i<list1.size();i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even-odd;",
    "  long even = 0, odd = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (int i = 0; i < list1.size(); i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even - odd;",
    "    // Write your code here\n    long even = 0, odd = 0;\n    for(long i = 0; i < list1.size(); i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(long i = 0; i < list1.size(); i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;",
    "    long even = 0;\n    long odd = 0;\n    for(long i = 0; i < list1.size(); i++) {\n        if(list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for(long i = 0; i < list1.size(); i++) {\n        if(list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;",
    "    long even = 0, odd = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 == 0) {\n            even = list1[i];\n            break;\n        }\n    }\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] % 2 != 0) {\n            odd = list1[i];\n            break;\n        }\n    }\n    return even - odd;"
  ]
}
language: cpp
name: HumanEval_155_even_odd_count
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbs516m1e: /tmp/tmpbs516m1e.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp2pb1yaul: /tmp/tmp2pb1yaul.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long long temp = num;\n    while (temp != 0)\
    \ {\n        int digit = temp % 10;\n        if (digit % 2 == 0) {\n         \
    \   even++;\n        } else {\n            odd++;\n        }\n        temp /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpx6yno45a: /tmp/tmpx6yno45a.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1e3q5arg: /tmp/tmp1e3q5arg.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcfmt2j07: /tmp/tmpcfmt2j07.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1e3q5arg: /tmp/tmp1e3q5arg.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       if (temp & 1) {\n            odd++;\n        } else {\n            even++;\n\
    \        }\n        temp >>= 1;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0tim8_sg: /tmp/tmp0tim8_sg.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        temp = temp / 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpewowk1oi: /tmp/tmpewowk1oi.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        int digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmprzgxg0h4: /tmp/tmprzgxg0h4.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp = num %\
    \ 10;\n        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpiu5cchbw: /tmp/tmpiu5cchbw.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpj4vgi8bv: /tmp/tmpj4vgi8bv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpj4vgi8bv: /tmp/tmpj4vgi8bv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0mphrdwm: /tmp/tmp0mphrdwm.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpj4vgi8bv: /tmp/tmpj4vgi8bv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplv_nw4jf: /tmp/tmplv_nw4jf.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpa7ucksbd: /tmp/tmpa7ucksbd.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long long temp = num;\n    while (temp != 0)\
    \ {\n        long long mod = temp % 10;\n        if (mod % 2 == 0) {\n       \
    \     even++;\n        } else {\n            odd++;\n        }\n        temp /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpmagjnqqq: /tmp/tmpmagjnqqq.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        even = even + temp / 2;\n        odd = odd + temp % 2;\n      \
    \  num = num / 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp40a2k2j6: /tmp/tmp40a2k2j6.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        even = even + rem / 2;\n        odd = odd + rem % 2;\n        num\
    \ = num / 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp0r8yqulu: /tmp/tmp0r8yqulu.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        num = num / 10;\n        if (rem % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpm4m8z9zv: /tmp/tmpm4m8z9zv.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcfmt2j07: /tmp/tmpcfmt2j07.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmptt_damq_: /tmp/tmptt_damq_.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcfmt2j07: /tmp/tmpcfmt2j07.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        if (rem % 2 == 0) {\n            even++;\n        } else {\n  \
    \          odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpj9w7u_tb: /tmp/tmpj9w7u_tb.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num = num / 10;\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplmq102gw: /tmp/tmplmq102gw.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpjcgj_i7e: /tmp/tmpjcgj_i7e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplv_nw4jf: /tmp/tmplv_nw4jf.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbs516m1e: /tmp/tmpbs516m1e.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpipnddxod: /tmp/tmpipnddxod.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcfmt2j07: /tmp/tmpcfmt2j07.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpbejebg2w: /tmp/tmpbejebg2w.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpjcgj_i7e: /tmp/tmpjcgj_i7e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1e3q5arg: /tmp/tmp1e3q5arg.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpxcfoxp49: /tmp/tmpxcfoxp49.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        num = num / 10;\n        if (rem % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpm4m8z9zv: /tmp/tmpm4m8z9zv.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp2pb1yaul: /tmp/tmp2pb1yaul.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0ybg3y3p: /tmp/tmp0ybg3y3p.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        num /= 10;\n        if (tmp % 2 == 0) {\n            even++;\n      \
    \  } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpwq0kdq1v: /tmp/tmpwq0kdq1v.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        temp /= 10;\n        if (digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpc8871rwb: /tmp/tmpc8871rwb.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long long temp = num;\n    while (temp != 0)\
    \ {\n        long long remainder = temp % 10;\n        if (remainder % 2 == 0)\
    \ {\n            even++;\n        }\n        else {\n            odd++;\n    \
    \    }\n        temp = temp / 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpl4ngcxyk: /tmp/tmpl4ngcxyk.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1e3q5arg: /tmp/tmp1e3q5arg.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp62hi4r7r: /tmp/tmp62hi4r7r.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmptt_damq_: /tmp/tmptt_damq_.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1drdzbre: /tmp/tmp1drdzbre.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        if (rem % 2 == 0) {\n            even++;\n        } else {\n  \
    \          odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpj9w7u_tb: /tmp/tmpj9w7u_tb.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplv_nw4jf: /tmp/tmplv_nw4jf.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1e3q5arg: /tmp/tmp1e3q5arg.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpjcgj_i7e: /tmp/tmpjcgj_i7e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpo6h76xqu: /tmp/tmpo6h76xqu.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long rem = temp % 10;\n        even = even * 10 + rem;\n        temp =\
    \ temp / 10;\n    }\n    temp = num;\n    while (temp > 0) {\n        long rem\
    \ = temp % 10;\n        odd = odd * 10 + rem;\n        temp = temp / 10;\n   \
    \ }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxupvirf6: /tmp/tmpxupvirf6.cpp:27: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        even = even + (rem % 2 == 0);\n        odd = odd + (rem % 2 !=\
    \ 0);\n        num = num / 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp3z0g7yxj: /tmp/tmp3z0g7yxj.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        even = even + temp;\n        odd = odd + temp * 2;\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2qe0kq7_: /tmp/tmp2qe0kq7_.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpj4vgi8bv: /tmp/tmpj4vgi8bv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcfmt2j07: /tmp/tmpcfmt2j07.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num = num / 10;\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmplmq102gw: /tmp/tmplmq102gw.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpj4vgi8bv: /tmp/tmpj4vgi8bv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzcitv61x: /tmp/tmpzcitv61x.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnnrdrb40: /tmp/tmpnnrdrb40.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpa7ucksbd: /tmp/tmpa7ucksbd.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq_gmsj3f: /tmp/tmpq_gmsj3f.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpj4vgi8bv: /tmp/tmpj4vgi8bv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph3hj37sz: /tmp/tmph3hj37sz.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp2pb1yaul: /tmp/tmp2pb1yaul.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660061956

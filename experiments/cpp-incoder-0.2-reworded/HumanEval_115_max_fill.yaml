name: HumanEval_115_max_fill
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
  \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
  \ a single unit of water.\n// Each well has a corresponding bucket that can be used\
  \ to extract water from it, \n// and all buckets have the same capacity.\n// Your\
  \ task is to use the buckets to empty the wells.\n// Output the number of times\
  \ you need to lower the buckets.\n// Example 1:\n// >>> max_fill((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)1,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1})})), (1))\n// (6)\n// Example 2:\n// >>> max_fill((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)1, (long)1, (long)1})})),\
  \ (2))\n// (5)\n// Example 3:\n// >>> max_fill((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)0, (long)0})})),\
  \ (5))\n// (0)\n// Constraints:\n// * all wells have the same length\n// * 1 <=\
  \ grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n// * grid[i][j] -> 0\
  \ | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>> grid,\
  \ long capacity) {\n"
tests: "}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)1,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1})})), (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)1, (long)1, (long)1})})),\
  \ (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)0, (long)0})})),\
  \ (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)1, (long)1,\
  \ (long)1, (long)1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)1, (long)1,\
  \ (long)1, (long)1})})), (9)) == (2));\n}\n"
completions: ["    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = n;\n    long bn = m;\n    long cn = capacity;\n    long cn1 = cn;\n\
    \    long cn2 = cn;\n    long cn3 = cn;\n    long cn4 = cn;\n    long cn5 = cn;\n\
    \    long cn6 = cn;\n    long cn7 = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n\
    \    long cn10 = cn;\n    long cn11 = cn;\n    long cn12 = cn;\n    long cn13\
    \ = cn;\n    long cn14 = cn;\n    long cn15 = cn;\n    long cn16 = cn;\n    long\
    \ cn17 = cn;\n    long cn18 = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n\
    \    long cn21 = cn;\n    long cn22 = cn;\n    long cn23 = cn;\n    long cn24\
    \ = cn;\n    long cn25 = cn;\n    long cn26 = cn;\n    long cn27 = cn;\n    long\
    \ cn28 = cn;\n    long cn29 = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n\
    \    long cn32 = cn;\n    long cn33 = cn;\n    long cn34 = cn;\n    long cn35\
    \ = cn;\n    long cn36 = cn;\n    long cn37 = cn;\n    long cn38 = cn;\n    long\
    \ cn39 = cn;\n    long cn40 = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n\
    \    long cn43 = cn;\n    long cn44 = cn;\n    long cn45 = cn;\n    long cn46\
    \ = cn;\n    long cn47 = cn;\n    long cn48 = cn;\n    long cn49 = cn;\n    long\
    \ cn50 = cn;\n    long cn51 = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n\
    \    long cn54 = cn;\n    long cn55 = cn;\n    long cn56 = cn;\n    long cn57\
    \ = cn;\n    long cn58 = cn;\n    long cn59 = cn;\n    long cn60 = cn;\n    long\
    \ cn61 = ", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long\
    \ cnt = 1;\n    long dnt = 1;\n    long cntt = 1;\n    long dntt = 1;\n    long\
    \ cntnt = 1;\n    long dnnt = 1;\n    long cntntt = 1;\n    long dnntt = 1;\n\
    \    long cntntnt = 1;\n    long dnntnt = 1;\n    long cntntntt = 1;\n    long\
    \ dnntntt = 1;\n    long cntntntnt = 1;\n    long dnntntnt = 1;\n    long cntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntt = 1;\n    long dnntntntntt = 1;\n    long cntntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntnt = 1;\n    long cntntntntt = 1;\n    long dnntntt = 1;\n\
    \    long cntntntnt = 1;\n    long dnntnt = 1;\n    long cntntnt = 1;\n    long\
    \ dnnt = 1;\n    long cntnt = 1;\n    long dnt = 1;\n    long cnt = 1;\n    long\
    \ dn = 1;\n    long cn = 1;\n    long dn = 1;\n    long cnt = 1;\n    long dn\
    \ = 1;\n    long cn = 1;\n    long dn = 1;\n    long cn = 1;\n    long dn = 1;\n\
    \    long cn = 1;\n    long dn = 1;\n    long cn = 1;\n    long dn = 1;\n    long\
    \ cn = 1;\n    long dn = 1;\n    long cn = 1;\n    long dn = 1;\n    long cn =\
    \ 1;\n    long dn = 1;\n    long ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long\
    \ e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n\
    \    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long\
    \ F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n\
    \    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long\
    \ O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n\
    \    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long\
    \ X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long BB = 0;\n\
    \    long CC = 0;\n    long DD = 0;\n    long EE = 0;\n    long FF = 0;\n    long\
    \ GG = 0;\n    long HH = 0;\n    long II = 0;\n    long JJ = 0;\n    long KK =\
    \ 0;\n    long LL = 0;\n    long MM = 0;\n    long NN = 0;\n    long OO = 0;\n\
    \    long PP = 0;\n    long QQ = 0;\n    long RR = 0;\n    long SS = 0;\n    long\
    \ TT = 0;\n    long UU = 0;\n    long VV = 0;\n    long WW = 0;\n    long XX =\
    \ 0;\n    long YY = 0;\n    long ZZ = 0;\n    long AAA = 0;\n    long BBB = 0;\n\
    \    long CCC = 0;\n    long DDD = 0;\n    long EEE = 0;\n    long FFF = 0;\n\
    \    long GGG = 0;\n    long HHH = 0;\n    long III = 0;\n    long JJJ = 0;\n\
    \    long KKK = 0;\n    long LLL = 0;\n    long MMM = 0;\n    long NNN = 0;\n\
    \    long OOO = 0;\n    long PPP = 0;\n    long QQQ = 0;", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long an = n;\n \
    \   long bn = m;\n    long cn = n;\n    long dn = n;\n    long en = m;\n    long\
    \ fm = m;\n    long gm = m;\n    long hm = m;\n    long ib = n;\n    long jb =\
    \ m;\n    long kb = n;\n    long lb = m;\n    long mb = n;\n    long nb = m;\n\
    \    long ob = n;\n    long pb = n;\n    long qb = m;\n    long rb = n;\n    long\
    \ sb = m;\n    long tb = n;\n    long ub = n;\n    long vb = m;\n    long wb =\
    \ n;\n    long xb = n;\n    long yb = m;\n    long zb = n;\n    long ab = n;\n\
    \    long bb = m;\n    long cb = n;\n    long db = n;\n    long eb = m;\n    long\
    \ fb = m;\n    long gb = m;\n    long hb = m;\n    long ia = n;\n    long ja =\
    \ m;\n    long ka = n;\n    long la = m;\n    long ma = n;\n    long na = m;\n\
    \    long oa = n;\n    long pa = n;\n    long qa = m;\n    long ra = n;\n    long\
    \ sa = m;\n    long ta = n;\n    long ua = n;\n    long va = m;\n    long wa =\
    \ n;\n    long xa = n;\n    long ya = m;\n    long za = n;\n    long aa = n;\n\
    \    long ba = m;\n    long ca = n;\n    long da = n;\n    long ea = m;\n    long\
    \ fa = m;\n    long ga = m;\n    long ha = m;\n    long ib = n;\n    long jb =\
    \ m;\n    long kb = n;\n    long lb = m;\n    long mb = n;\n    long nb = m;\n\
    \    long ob = n;\n    long pb = n;\n    long qb = m;\n    long rb = n;\n    long\
    \ sb = m;\n    long tb = n;\n    long ub = n;\n    long vb = m;\n    long wb =\
    \ n;\n    long xb = n;\n    long yb = m;\n    long zb = n;\n    long ab = n;\n\
    \    long bb = m;\n    long cb = n;\n    long db = n;\n    long ", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n\
    \    long cnt83 = 0;", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n;\n    long bm = m;\n    long ans = n;\n\
    \    long bn = m;\n    long bm = m;\n    long bn = m;\n    long an = n;\n    long\
    \ bm = m;\n    long bn = m;\n    long ans = n;\n    long bm = m;\n    long bn\
    \ = m;\n    long an = n;\n    long bm = m;\n    long bn = m;\n    long ans = n;\n\
    \    long bm = m;\n    long bn = m;\n    long an = n;\n    long bm = m;\n    long\
    \ bn = m;\n    long ans = n;\n    long bm = m;\n    long bn = m;\n    long an\
    \ = n;\n    long bm = m;\n    long bn = m;\n    long ans = n;\n    long bm = m;\n\
    \    long bn = m;\n    long an = n;\n    long bm = m;\n    long bn = m;\n    long\
    \ ans = n;\n    long bm = m;\n    long bn = m;\n    long an = n;\n    long bm\
    \ = m;\n    long bn = m;\n    long ans = n;\n    long bm = m;\n    long bn = m;\n\
    \    long an = n;\n    long bm = m;\n    long bn = m;\n    long ans = n;\n   \
    \ long bm = m;\n    long bn = m;\n    long an = n;\n    long bm = m;\n    long\
    \ bn = m;\n    long ans = n;\n    long bm = m;\n    long bn = m;\n    long an\
    \ = n;\n    long bm = m;\n    long bn = m;\n    long ans = n;\n    long bm = m;\n\
    \    long bn = m;\n    long an = n;\n    long bm = m;\n    long bn = m;\n    long\
    \ ans = n;\n    long bm = m;\n    long bn = m;\n    long an = n;\n    long bm\
    \ = m;\n    long bn = m;\n    long ans = n;\n    long bm = m;\n    long bn = m;\n\
    \    long an = n;\n    long bm = m;\n    long bn = m;\n    long ans = n;\n   \
    \ long bm = m;\n    long bn = m;\n    long an = n;\n    long bm = m;\n    long\
    \ bn = m;\n    long ans = n;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long l = grid[0][0];\n    long r = grid[0][0];\n\
    \    long c = 1;\n    long d = 1;\n    long k = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = ", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn = n;\n\
    \    long dn = m;\n    long cnt = 1;\n    long dnt = 1;\n    long cntt = 1;\n\
    \    long dntt = 1;\n    long cntnt = 1;\n    long dnnt = 1;\n    long cntnn =\
    \ 1;\n    long dnnn = 1;\n    long cntnnt = 1;\n    long dnnnt = 1;\n    long\
    \ cntnnnt = 1;\n    long dnnnnt = 1;\n    long cntnnnnt = 1;\n    long dnnnnnt\
    \ = 1;\n    long cntnnnnnt = 1;\n    long dnnnnnnt = 1;\n    long cntnnnnnnt =\
    \ 1;\n    long dnnnnnnnt = 1;\n    long cntnnnnnnnt = 1;\n    long dnnnnnnnnt\
    \ = 1;\n    long cntnnnnnnnnt = 1;\n    long dnnnnnnnnnt = 1;\n    long cntnnnnnnnnnt\
    \ = 1;\n    long dnnnnnnnnnnt = 1;\n    long cntnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnt\
    \ = 1;\n    long cntnnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnnt = 1;\n    long\
    \ cntnnnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnnnt = 1;\n    long cntnnnnnnnnnnnnnt\
    \ = 1;\n    long dnnnnnnnnnnnnnnt = 1;\n    long cntnnnnnnnnnnnnnnt = 1;\n   \
    \ long dnnnnnnnnnnnnnnnt = 1;\n    long cntnnnnnnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnnnnnnnt\
    \ = 1;\n    long cntnnnnnnnnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnnnnnnnnt = 1;\n\
    \    long cntnnnnnnnnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnnnnnnnnt = 1;\n   \
    \ long cntnnnnnnnnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnnnnnnnnt = 1;\n    long\
    \ cntnnnnnnnnnnnnnnnnnnnt = 1;\n    long dnnnnnnnnnnnnnnnnnnnnt = 1;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ an = n * m;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n   \
    \ long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n\
    \    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 =\
    \ 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long\
    \ cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n\
    \    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22\
    \ = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long\
    \ cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n\
    \    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33\
    \ = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long\
    \ cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n\
    \    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44\
    \ = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long\
    \ cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n\
    \    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55\
    \ = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long\
    \ cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n\
    \    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66\
    \ = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long\
    \ cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n\
    \    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77\
    \ = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long\
    \ cnt81 = 0;\n    long cnt82", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_ans = 0;\n    long cur_n = 0;\n    long cur_m\
    \ = 1;\n    long cur_n1 = n;\n    long cur_m1 = m;\n    long cur_n2 = n;\n   \
    \ long cur_m2 = m;\n    long cur_n3 = n;\n    long cur_m3 = m;\n    long cur_n4\
    \ = n;\n    long cur_m4 = m;\n    long cur_n5 = n;\n    long cur_m5 = m;\n   \
    \ long cur_n6 = n;\n    long cur_m6 = m;\n    long cur_n7 = n;\n    long cur_m7\
    \ = m;\n    long cur_n8 = n;\n    long cur_m8 = m;\n    long cur_n9 = n;\n   \
    \ long cur_m9 = m;\n    long cur_n10 = n;\n    long cur_m10 = m;\n    long cur_n11\
    \ = n;\n    long cur_m11 = m;\n    long cur_n12 = n;\n    long cur_m12 = m;\n\
    \    long cur_n13 = n;\n    long cur_m13 = m;\n    long cur_n14 = n;\n    long\
    \ cur_m14 = m;\n    long cur_n15 = n;\n    long cur_m15 = m;\n    long cur_n16\
    \ = n;\n    long cur_m16 = m;\n    long cur_n17 = n;\n    long cur_m17 = m;\n\
    \    long cur_n18 = n;\n    long cur_m18 = m;\n    long cur_n19 = n;\n    long\
    \ cur_m19 = m;\n    long cur_n20 = n;\n    long cur_m20 = m;\n    long cur_n21\
    \ = n;\n    long cur_m21 = m;\n    long cur_n22 = n;\n    long cur_m22 = m;\n\
    \    long cur_n23 = n;\n    long cur_m23 = m;\n    long cur_n24 = n;\n    long\
    \ cur_m24 = m;\n    long cur_n25 = n;\n    long cur_m25 = m;\n    long cur_n26\
    \ = n;\n    long cur_m26 = m;\n    long cur_n27 = n;\n    long cur_m27 = m;\n\
    \    long cur_n28 = n;\n    long cur_m28 = m;\n    long cur_n29 = n;\n    long\
    \ cur_m29 = m;\n    long cur_n30 = n;\n    long cur_m30 = m;\n    ", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long ans = INT_MAX;\n    long cur = INT_MAX;\n    long cur_cap\
    \ = INT_MAX;\n    long cur_ans = INT_MAX;\n    long cur_cur = INT_MAX;\n    long\
    \ cur_cur_cap = INT_MAX;\n    long cur_cur_ans = INT_MAX;\n    long cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_ans =\
    \ INT_MAX;\n    long cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur =\
    \ INT_MAX;\n    long cur_cur_cap = INT_MAX;\n    long cur_ans = INT_MAX;\n", " \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long\
    \ cn2 = n;\n    long dn2 = m;\n    long cn3 = n;\n    long dn3 = m;\n    long\
    \ cn4 = n;\n    long dn4 = m;\n    long cn5 = n;\n    long dn5 = m;\n    long\
    \ cn6 = n;\n    long dn6 = m;\n    long cn7 = n;\n    long dn7 = m;\n    long\
    \ cn8 = n;\n    long dn8 = m;\n    long cn9 = n;\n    long dn9 = m;\n    long\
    \ cn10 = n;\n    long dn10 = m;\n    long cn11 = n;\n    long dn11 = m;\n    long\
    \ cn12 = n;\n    long dn12 = m;\n    long cn13 = n;\n    long dn13 = m;\n    long\
    \ cn14 = n;\n    long dn14 = m;\n    long cn15 = n;\n    long dn15 = m;\n    long\
    \ cn16 = n;\n    long dn16 = m;\n    long cn17 = n;\n    long dn17 = m;\n    long\
    \ cn18 = n;\n    long dn18 = m;\n    long cn19 = n;\n    long dn19 = m;\n    long\
    \ cn20 = n;\n    long dn20 = m;\n    long cn21 = n;\n    long dn21 = m;\n    long\
    \ cn22 = n;\n    long dn22 = m;\n    long cn23 = n;\n    long dn23 = m;\n    long\
    \ cn24 = n;\n    long dn24 = m;\n    long cn25 = n;\n    long dn25 = m;\n    long\
    \ cn26 = n;\n    long dn26 = m;\n    long cn27 = n;\n    long dn27 = m;\n    long\
    \ cn28 = n;\n    long dn28 = m;\n    long cn29 = n;\n    long dn29 = m;\n    long\
    \ cn30 = n;\n    long dn30 = m;\n    long cn31 = n;\n    long dn31 = m;\n    long\
    \ cn32 = n;\n    long dn32 = m;\n    long cn33 = n;\n    long dn33 = m;\n    long\
    \ cn34 = n;\n    long dn34 = m;\n    long cn35 = n;\n    long dn35 = m;\n    long\
    \ cn36 = n;\n    long dn36 = m;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    std::vector<long> buckets(n,\
    \ capacity);\n    for (long i = 0; i < n; i++) {\n        for (long j = 0; j <\
    \ m; j++) {\n            if (grid[i][j] == 1) {\n                buckets[i][j]\
    \ = 0;\n                cnt++;\n            }\n        }\n    }\n    for (long\
    \ i = 0; i < n; i++) {\n        for (long j = 0; j < m; j++) {\n            if\
    \ (buckets[i][j] == 0) {\n                buckets[i][j] = 1;\n               \
    \ cnt--;\n            }\n        }\n    }\n    for (long i = 0; i < n; i++) {\n\
    \        for (long j = 0; j < m; j++) {\n            if (buckets[i][j] == 1) {\n\
    \                ans += cnt;\n            }\n        }\n    }\n    return ans;",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long max_bucket = std::max(m, n);\n    long bucket_size = capacity / max_bucket;\n\
    \    long bucket_cap = capacity % max_bucket;\n    long bucket_idx = 0;\n    long\
    \ bucket_cnt = 0;\n    long bucket_sum = 0;\n    long bucket_sum2 = 0;\n    long\
    \ bucket_sum3 = 0;\n    long bucket_sum4 = 0;\n    long bucket_sum5 = 0;\n   \
    \ long bucket_sum6 = 0;\n    long bucket_sum7 = 0;\n    long bucket_sum8 = 0;\n\
    \    long bucket_sum9 = 0;\n    long bucket_sum10 = 0;\n    long bucket_sum11\
    \ = 0;\n    long bucket_sum12 = 0;\n    long bucket_sum13 = 0;\n    long bucket_sum14\
    \ = 0;\n    long bucket_sum15 = 0;\n    long bucket_sum16 = 0;\n    long bucket_sum17\
    \ = 0;\n    long bucket_sum18 = 0;\n    long bucket_sum19 = 0;\n    long bucket_sum20\
    \ = 0;\n    long bucket_sum21 = 0;\n    long bucket_sum22 = 0;\n    long bucket_sum23\
    \ = 0;\n    long bucket_sum24 = 0;\n    long bucket_sum25 = 0;\n    long bucket_sum26\
    \ = 0;\n    long bucket_sum27 = 0;\n    long bucket_sum28 = 0;\n    long bucket_sum29\
    \ = 0;\n    long bucket_sum30 = 0;\n    long bucket_sum31 = 0;\n    long bucket_sum32\
    \ = 0;\n    long bucket_sum33 = 0;\n    long bucket_sum34 = 0;\n    long bucket_sum35\
    \ = 0;\n    long bucket_sum36 = 0;\n    long bucket_sum37 = 0;\n    long bucket_sum38\
    \ = 0;\n    long bucket_sum39 = 0;\n    long bucket_sum40 = 0;\n    long bucket_sum41\
    \ = 0;\n    long bucket_sum42 = 0;\n    long bucket_sum43 = 0;\n    long bucket_sum44\
    \ = 0;\n    long bucket_sum45 = 0;\n    long bucket_sum46 = 0;\n    long bucket_sum47\
    \ = 0;\n    long bucket_sum48 = 0;\n    long bucket_sum49 = 0;\n    long bucket_sum50\
    \ = 0;\n    long bucket_sum51 = 0;\n    long bucket_sum52 = 0;\n    long bucket_sum53\
    \ = 0;\n    long bucket_sum54 = 0;\n    long bucket_sum55 = 0;\n    long bucket_sum56\
    \ = 0;\n    long bucket_sum57 = 0;\n    long bucket_sum58 = 0;\n    long bucket_sum59\
    \ = 0;\n    long bucket_sum60 = 0;\n    long bucket_sum61 = 0;\n    long bucket_sum62\
    \ = 0;\n    long bucket_sum63 = 0;\n    long bucket_sum64 = 0;\n    long bucket_sum65\
    \ = 0;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cur = 0;\n    long cur_cap = capacity;\n    long\
    \ cur_n = n;\n    long cur_m = m;\n    long cur_ans = 0;\n    long cur_cur = 0;\n\
    \    long cur_cur_cap = cur_cap;\n    long cur_cur_n = cur_n;\n    long cur_cur_m\
    \ = cur_m;\n    long cur_cur_ans = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap\
    \ = cur_cur_cap;\n    long cur_cur_cur_n = cur_cur_n;\n    long cur_cur_cur_m\
    \ = cur_cur_m;\n    long cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long cur_cur_cur_cur_n =\
    \ cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n    long cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap =\
    \ cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long\
    \ cnt82 = 0;\n    long cnt83 = 0;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cnt2 = 0;\n    long\
    \ cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long\
    \ cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n   \
    \ long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 =\
    \ 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long\
    \ cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n\
    \    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25\
    \ = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long\
    \ cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n\
    \    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36\
    \ = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long\
    \ cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n\
    \    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47\
    \ = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long\
    \ cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n\
    \    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58\
    \ = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long\
    \ cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n\
    \    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69\
    \ = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long\
    \ cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n\
    \    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80\
    \ = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n    long cnt83 = 0;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long\
    \ cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long\
    \ cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n \
    \   long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16\
    \ = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long\
    \ cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n\
    \    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27\
    \ = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long\
    \ cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n\
    \    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38\
    \ = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long\
    \ cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n\
    \    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49\
    \ = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long\
    \ cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n\
    \    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60\
    \ = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long\
    \ cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n\
    \    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71\
    \ = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long\
    \ cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n\
    \    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82\
    \ = 0;\n    long cnt83 = 0;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ cnt2 = 0;\n    long cur2 = 0;\n    long cnt3 = 0;\n    long cur3 = 0;\n    long\
    \ cnt4 = 0;\n    long cur4 = 0;\n    long cnt5 = 0;\n    long cur5 = 0;\n    long\
    \ cnt6 = 0;\n    long cur6 = 0;\n    long cnt7 = 0;\n    long cur7 = 0;\n    long\
    \ cnt8 = 0;\n    long cur8 = 0;\n    long cnt9 = 0;\n    long cur9 = 0;\n    long\
    \ cnt10 = 0;\n    long cur10 = 0;\n    long cnt11 = 0;\n    long cur11 = 0;\n\
    \    long cnt12 = 0;\n    long cur12 = 0;\n    long cnt13 = 0;\n    long cur13\
    \ = 0;\n    long cnt14 = 0;\n    long cur14 = 0;\n    long cnt15 = 0;\n    long\
    \ cur15 = 0;\n    long cnt16 = 0;\n    long cur16 = 0;\n    long cnt17 = 0;\n\
    \    long cur17 = 0;\n    long cnt18 = 0;\n    long cur18 = 0;\n    long cnt19\
    \ = 0;\n    long cur19 = 0;\n    long cnt20 = 0;\n    long cur20 = 0;\n    long\
    \ cnt21 = 0;\n    long cur21 = 0;\n    long cnt22 = 0;\n    long cur22 = 0;\n\
    \    long cnt23 = 0;\n    long cur23 = 0;\n    long cnt24 = 0;\n    long cur24\
    \ = 0;\n    long cnt25 = 0;\n    long cur25 = 0;\n    long cnt26 = 0;\n    long\
    \ cur26 = 0;\n    long cnt27 = 0;\n    long cur27 = 0;\n    long cnt28 = 0;\n\
    \    long cur28 = 0;\n    long cnt29 = 0;\n    long cur29 = 0;\n    long cnt30\
    \ = 0;\n    long cur30 = 0;\n    long cnt31 = 0;\n    long cur31 = 0;\n    long\
    \ cnt32 = 0;\n    long cur32 = 0;\n    long cnt33 = 0;\n    long cur33 = 0;\n\
    \    long cnt34 = 0;\n    long cur34 = 0;\n    long cnt35 = 0;\n    long cur35\
    \ = 0;\n    long cnt36 = 0;\n    long cur36 = 0;\n    long cnt37 = 0;\n    long\
    \ cur37 = 0;\n    long cnt38 = 0;\n    long cur38 = 0;\n    long cnt39 = 0;\n\
    \    long cur39 = 0;\n    long cnt40 = 0;\n    long cur40 = 0;\n    long cnt41\
    \ = 0;\n    long cur41 = 0;\n    long cnt42 = 0;\n    long cur42"]
stop_tokens:
- "\n}"

name: HumanEval_121_solution
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
  \ of integers, return the sum of all of the odd elements that are in even positions.\n\
  // Examples\n// >>> solution((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\n\
  // (12)\n// >>> solution((std::vector<long>({(long)3, (long)3, (long)3, (long)3,\
  \ (long)3})))\n// (9)\n// >>> solution((std::vector<long>({(long)30, (long)13, (long)24,\
  \ (long)321})))\n// (0)\nlong solution(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
  \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
  \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
  \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
  \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
  \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
completions: ["    long sum = 0;\n    long even = 0;\n    long odd = 0;\n    long\
    \ size = lst.size();\n    long i = 0;\n    while (i < size) {\n        if (lst[i]\
    \ % 2 == 0) {\n            even = even + lst[i];\n        } else {\n         \
    \   odd = odd + lst[i];\n        }\n        i++;\n    }\n    sum = even + odd;\n\
    \    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    long even = 0;\n    long odd = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long sumEven = 0;\n  \
    \  long sumOdd = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenSumOdd\
    \ = 0;\n    long evenSumEven = 0;\n    long oddSumEven = 0;\n    long oddSumOdd\
    \ = 0;\n    long evenSumOddEven = 0;\n    long evenSumEvenOdd = 0;\n    long oddSumEvenEven\
    \ = 0;\n    long oddSumOddOdd = 0;\n    long evenSumOddEvenOdd = 0;\n    long\
    \ evenSumEvenOddOdd = 0;\n    long oddSumEvenEvenOdd = 0;\n    long oddSumOddOddOdd\
    \ = 0;\n    long evenSumOddEvenOddOdd = 0;\n    long evenSumEvenOddOddOdd = 0;\n\
    \    long oddSumEvenEvenOddOdd = 0;\n    long oddSumOddOddOddOdd = 0;\n    long\
    \ evenSumOddEvenOddOddOdd = 0;\n    long evenSumEvenOddOddOddOdd = 0;\n    long\
    \ oddSumEvenEvenOddOddOdd = 0;\n    long oddSumOddOddOddOddOdd = 0;\n    long\
    \ evenSumOddEvenOddOddOddOdd = 0;\n    long evenSumEvenOddOddOddOddOdd = 0;\n\
    \    long oddSumEvenEvenOddOddOddOdd = 0;\n    long oddSumOddOddOddOddOddOdd =\
    \ 0;\n    long evenSumOddEvenOddOddOddOddOdd = 0;\n    long evenSumEvenOddOddOddOddOddOdd\
    \ = 0;\n    long oddSumEvenEvenOddOddOddOddOdd = 0;\n    long oddSumOddOddOddOddOddOddOdd\
    \ = 0;\n    long evenSumOddEvenOddOddOddOddOddOdd = 0;\n    long evenSumEvenOddOddOddOddOddOddOdd\
    \ = 0;\n    long oddSumEvenEvenOddOddOddOddOddOdd = 0;\n    long oddSumOddOddOddOddOddOddOddOdd\
    \ = 0;\n    long evenSumOddEvenO", "    long sum = 0;\n    long even = 0;\n  \
    \  long odd = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long\
    \ u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n\
    \    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long\
    \ D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n\
    \    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long\
    \ M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n\
    \    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long\
    \ V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n\
    \    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii =\
    \ 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n\
    \    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long Aa = 0;\n    long Bb = 0;\n    long Cc = 0;\n    long Dd = 0;\n    long\
    \ Ee = 0;\n    long Ff = 0;\n    long Gg = 0;\n    long Hh = 0;\n    long Ii =\
    \ 0;\n    long Jj = 0;\n    long Kk = 0;\n    long Ll = 0;\n    long Mm = 0;\n\
    \    long Nn = 0;\n    long Oo = 0;\n    long Pp = 0;\n    long Qq = 0;\n    long\
    \ Rr = 0;\n    long Ss = 0;\n    long Tt = 0;\n    long Uu = 0;\n    long Vv =\
    \ 0;\n    long Ww = 0;\n    long Xx = 0;\n    long Yy = 0;\n    long Z", "   \
    \ long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        if (i % 2 == 0) {\n            even += lst[i];\n\
    \        } else {\n            odd += lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;", "    long sum = 0;\n    long even = 0;\n    long odd\
    \ = 0;\n    for (long i : lst) {\n        if (i % 2 == 0) {\n            even\
    \ += i;\n        } else {\n            odd += i;\n        }\n    }\n    sum =\
    \ even + odd;\n    return sum;", "    long sum = 0;\n    long evenSum = 0;\n \
    \   long oddSum = 0;\n    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long\
    \ evenSum3 = 0;\n    long oddSum3 = 0;\n    long evenSum4 = 0;\n    long oddSum4\
    \ = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenSum6 = 0;\n\
    \    long oddSum6 = 0;\n    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long\
    \ evenSum8 = 0;\n    long oddSum8 = 0;\n    long evenSum9 = 0;\n    long oddSum9\
    \ = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long evenSum11 =\
    \ 0;\n    long oddSum11 = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n\
    \    long evenSum13 = 0;\n    long oddSum13 = 0;\n    long evenSum14 = 0;\n  \
    \  long oddSum14 = 0;\n    long evenSum15 = 0;\n    long oddSum15 = 0;\n    long\
    \ evenSum16 = 0;\n    long oddSum16 = 0;\n    long evenSum17 = 0;\n    long oddSum17\
    \ = 0;\n    long evenSum18 = 0;\n    long oddSum18 = 0;\n    long evenSum19 =\
    \ 0;\n    long oddSum19 = 0;\n    long evenSum20 = 0;\n    long oddSum20 = 0;\n\
    \    long evenSum21 = 0;\n    long oddSum21 = 0;\n    long evenSum22 = 0;\n  \
    \  long oddSum22 = 0;\n    long evenSum23 = 0;\n    long oddSum23 = 0;\n    long\
    \ evenSum24 = 0;\n    long oddSum24 = 0;\n    long evenSum25 = 0;\n    long oddSum25\
    \ = 0;\n    long evenSum26 = 0;\n    long oddSum26 = 0;\n    long evenSum27 =\
    \ 0;\n    long oddSum27 = 0;\n    long evenSum28 = 0;\n    long oddSum28 = 0;\n\
    \    long evenSum29 = 0;\n    long oddSum29 = 0;\n    long evenSum30 = 0;\n  \
    \  long oddSum30 = 0;\n    long evenSum31 = 0;\n    long oddSum31 = 0;\n    long\
    \ evenSum32 = 0;\n    long oddSum32 = 0;\n    long evenSum33 = 0;\n    long oddSum33\
    \ = 0;\n    long evenSum34 = 0;\n    long oddSum34 = 0;\n    long evenSum35 =\
    \ 0;\n    long oddSum35 = 0;\n    long evenSum36 = 0;\n    long oddSum36 = 0;\n\
    \    long evenSum37 = 0;\n    long oddSum37 = 0;", "    long sum = 0;\n    long\
    \ even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i % 2 ==\
    \ 0) {\n            even += i;\n        } else {\n            odd += i;\n    \
    \    }\n    }\n    sum = even + odd;\n    return sum;", "    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    long evenSum = 0;\n    long oddSum = 0;\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenCount2\
    \ = 0;\n    long oddCount2 = 0;\n    long evenSum3 = 0;\n    long oddSum3 = 0;\n\
    \    long evenCount3 = 0;\n    long oddCount3 = 0;\n    long evenSum4 = 0;\n \
    \   long oddSum4 = 0;\n    long evenCount4 = 0;\n    long oddCount4 = 0;\n   \
    \ long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenCount5 = 0;\n    long\
    \ oddCount5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenCount6\
    \ = 0;\n    long oddCount6 = 0;\n    long evenSum7 = 0;\n    long oddSum7 = 0;\n\
    \    long evenCount7 = 0;\n    long oddCount7 = 0;\n    long evenSum8 = 0;\n \
    \   long oddSum8 = 0;\n    long evenCount8 = 0;\n    long oddCount8 = 0;\n   \
    \ long evenSum9 = 0;\n    long oddSum9 = 0;\n    long evenCount9 = 0;\n    long\
    \ oddCount9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long evenCount10\
    \ = 0;\n    long oddCount10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 =\
    \ 0;\n    long evenCount11 = 0;\n    long oddCount11 = 0;\n    long evenSum12\
    \ = 0;\n    long oddSum12 = 0;\n    long evenCount12 = 0;\n    long oddCount12\
    \ = 0;\n    long evenSum13 = 0;\n    long oddSum13 = 0;\n    long evenCount13\
    \ = 0;\n    long oddCount13 = 0;\n    long evenSum14 = 0;\n    long oddSum14 =\
    \ 0;\n    long evenCount14 = 0;\n    long oddCount14 = 0;\n    long evenSum15\
    \ = 0;\n    long oddSum15 = 0;\n    long evenCount15 = 0;\n    long oddCount15\
    \ = 0;\n    long evenSum16 = 0;\n    long oddSum16 = 0;\n    long evenCount16\
    \ = 0;\n    long oddCount16 = 0;\n    long evenSum17 = 0;\n    long oddSum17 =\
    \ 0;\n    long evenCount17 = 0;\n    long oddCount17 = 0;\n    long evenSum18\
    \ = 0;\n    long oddSum18 = 0;\n    long evenCount18 = 0;\n    long oddCount18\
    \ = 0;\n    long evenSum19 = 0;\n    long oddSum19 = 0;\n    long evenCount19\
    \ = 0;\n    long ", "    long sum = 0;\n    long even = 0;\n    long odd = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long\
    \ E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n\
    \    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long\
    \ N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n\
    \    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long\
    \ W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA = 0;\n\
    \    long AB = 0;\n    long AC = 0;\n    long AD = 0;\n    long AE = 0;\n    long\
    \ AF = 0;\n    long AG = 0;\n    long AH = 0;\n    long AI = 0;\n    long AJ =\
    \ 0;\n    long AK = 0;\n    long AL = 0;\n    long AM = 0;\n    long AN = 0;\n\
    \    long AO = 0;\n    long AP = 0;\n    long AQ = 0;\n    long AR = 0;\n    long\
    \ AS = 0;\n    long AT = 0;\n    long AU = 0;\n    long AV = 0;\n    long AW =\
    \ 0;\n    long AX = 0;\n    long AY = 0;\n    long AZ = 0;\n    long BA = 0;\n\
    \    long BB = 0;\n    long BC = 0;\n    long BD = 0;\n    long BE = 0;\n    long\
    \ BF = 0;\n    long BG = 0;\n    long BH = 0;\n    long BI = 0;\n    long BJ =\
    \ 0;\n    long BK = 0;\n    long BL = 0;\n    long BM = 0;\n    long BN = 0;\n\
    \    long BO = 0;\n    long BP = 0;\n    long BQ = 0;\n    long BR = 0;\n    long\
    \ BS = 0;\n    long BT = 0;\n    long BU = 0;\n    long BV = 0;\n    long BW =\
    \ 0;\n    long BX = 0;\n    long BY = 0;\n    long BZ = 0;\n    long CA = 0;\n\
    \    long CB = 0;\n    ", "    long sum = 0;\n    long evenSum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n            evenSum\
    \ += lst[i];\n        }\n    }\n    sum = evenSum;\n    return sum;", "    long\
    \ sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 ==\
    \ 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 ==\
    \ 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long even = 0;\n    long odd = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (i % 2 == 0) {\n            even += lst[i];\n        } else\
    \ {\n            odd += lst[i];\n        }\n    }\n    sum = even + odd;\n   \
    \ return sum;", "    long sum = 0;\n    long n = lst.size();\n    long i = 0;\n\
    \    while (i < n) {\n        if (lst[i] % 2 == 0) {\n            sum += lst[i];\n\
    \            i += 2;\n        }\n        else {\n            i += 1;\n       \
    \ }\n    }\n    return sum;", "    // code here\n    long sum = 0;\n    long even\
    \ = 0;\n    long odd = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD =\
    \ 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n\
    \    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long\
    \ AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ =\
    \ 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n\
    \    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long\
    \ AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD =\
    \ 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n\
    \    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long\
    \ BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ =\
    \ 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n\
    \    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long BY = 0;\n    long\
    \ BZ = 0;\n    long CA = 0;\n    long ", "    long sum = 0;\n    long evenPos\
    \ = 0;\n    long oddPos = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenCount = 0;\n    long oddCount = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n            evenSum += lst[i];\n\
    \            evenCount++;\n            if (lst[i] > evenMax) {\n             \
    \   evenMax = lst[i];\n            }\n            if (lst[i] < evenMin) {\n  \
    \              evenMin = lst[i];\n            }\n        } else {\n          \
    \  oddSum += lst[i];\n            oddCount++;\n            if (lst[i] > oddMax)\
    \ {\n                oddMax = lst[i];\n            }\n            if (lst[i] <\
    \ oddMin) {\n                oddMin = lst[i];\n            }\n        }\n    }\n\
    \    evenSum -= evenCount;\n    oddSum -= oddCount;\n    evenSum = evenSum / evenCount;\n\
    \    oddSum = oddSum / oddCount;\n    evenPos = std::find(lst.begin(), lst.end(),\
    \ evenMin);\n    oddPos = std::find(lst.begin(), lst.end(), oddMin);\n    if (evenPos\
    \ != lst.end() && oddPos != lst.end()) {\n        sum = evenSum + oddSum;\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n \
    \   }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n \
    \   }\n    return sum;"]
stop_tokens:
- "\n}"

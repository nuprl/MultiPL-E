name: HumanEval_110_exchange
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this problem, you will\
  \ implement a function that takes two vectors of numbers,\n// and determines whether\
  \ it is possible to perform an exchange of elements\n// between them to make lst1\
  \ a vector of only even numbers.\n// There is no limit on the number of exchanged\
  \ elements between lst1 and lst2.\n// If it is possible to exchange elements between\
  \ the lst1 and lst2 to make\n// all the elements of lst1 to be even, return \"YES\"\
  .\n// Otherwise, return \"NO\".\n// For example:\n// >>> exchange((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4})), (std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\n\
  // (\"YES\")\n// >>> exchange((std::vector<long>({(long)1, (long)2, (long)3, (long)4})),\
  \ (std::vector<long>({(long)1, (long)5, (long)3, (long)4})))\n// (\"NO\")\n// It\
  \ is assumed that the input vectors will be non-empty.\nstd::string exchange(std::vector<long>\
  \ lst1, std::vector<long> lst2) {\n"
tests: "}\nint main() {\n    auto candidate = exchange;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4})), (std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
  \ == (\"YES\"));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
  \ (long)4})), (std::vector<long>({(long)1, (long)5, (long)3, (long)4}))) == (\"\
  NO\"));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})),\
  \ (std::vector<long>({(long)2, (long)1, (long)4, (long)3}))) == (\"YES\"));\n  \
  \  assert(candidate((std::vector<long>({(long)5, (long)7, (long)3})), (std::vector<long>({(long)2,\
  \ (long)6, (long)4}))) == (\"YES\"));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)7, (long)3})), (std::vector<long>({(long)2, (long)6, (long)3}))) == (\"\
  NO\"));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)6, (long)1,\
  \ (long)8, (long)9})), (std::vector<long>({(long)3, (long)5, (long)5, (long)1, (long)1,\
  \ (long)1}))) == (\"NO\"));\n    assert(candidate((std::vector<long>({(long)100,\
  \ (long)200})), (std::vector<long>({(long)200, (long)200}))) == (\"YES\"));\n}\n"
completions: ["    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 =\
    \ 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5\
    \ = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long\
    \ odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n  \
    \  long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11\
    \ = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long\
    \ even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n\
    \    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16\
    \ = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long\
    \ odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n\
    \    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22\
    \ = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long\
    \ even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n\
    \    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27\
    \ = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long\
    \ odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n\
    \    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33\
    \ = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long\
    \ even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n\
    \    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38\
    \ = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long\
    \ odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n\
    \    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ", "    //\
    \ Write your code here\n    long even = 0;\n    long odd = 0;\n    long eveneven\
    \ = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n\
    \    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n\
    \    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddeveneven = 0;\n  \
    \  long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven", "    long even = 0;\n    long odd = 0;\n   \
    \ long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n\
    \    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 =\
    \ 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7\
    \ = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long\
    \ odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n\
    \    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13\
    \ = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long\
    \ even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n\
    \    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18\
    \ = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long\
    \ odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n\
    \    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24\
    \ = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long\
    \ even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n\
    \    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29\
    \ = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long\
    \ odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n\
    \    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35\
    \ = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long\
    \ even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n\
    \    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40\
    \ = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long\
    \ odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    long even44 = 0;\n",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long eveneven\
    \ = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n\
    \    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n\
    \    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddeveneven = 0;\n  \
    \  long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long ", "    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    for (long i = 0; i <\
    \ lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even = even\
    \ + lst1[i];\n            evenCount++;\n            evenSum = evenSum + lst1[i];\n\
    \            if (lst1[i] > evenMax) {\n                evenMax = lst1[i];\n  \
    \          }\n            if (lst1[i] < evenMin) {\n                evenMin =\
    \ lst1[i];\n            }\n        } else {\n            odd = odd + lst1[i];\n\
    \            oddCount++;\n            oddSum = oddSum + lst1[i];\n           \
    \ if (lst1[i] > oddMax) {\n                oddMax = lst1[i];\n            }\n\
    \            if (lst1[i] < oddMin) {\n                oddMin = lst1[i];\n    \
    \        }\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n \
    \       if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n        \
    \    evenCount++;\n            evenSum = evenSum + lst2[i];\n            if (lst2[i]\
    \ > evenMax) {\n                evenMax = lst2[i];\n            }\n          \
    \  if (lst2[i] < evenMin) {\n                evenMin = lst2[i];\n            }\n\
    \        } else {\n            odd = odd + lst2[i];\n            oddCount++;\n\
    \            oddSum = oddSum + lst2[i];\n            if (lst2[i] > oddMax) {\n\
    \                oddMax = lst2[i];\n            }\n            if (lst2[i] < oddMin)\
    \ {\n                oddMin = lst2[i];\n            }\n        }\n    }\n    if\
    \ (evenCount == 0) {\n        return \"NO\";\n    }\n    if (evenCount == evenSum)\
    \ {\n        return \"YES\";\n    }\n    if (evenCount > evenSum) {\n        return\
    \ \"NO\";\n    }\n    if (oddCount == 0) {\n        return \"NO\";\n    }\n  \
    \  if (oddCount == oddSum) {\n        return \"YES\";\n    }\n    if (oddCount\
    \ > oddSum) {\n        return \"NO\";\n    }\n    if (even > odd) {\n        return\
    \ \"NO\";\n    }\n    if (even < odd) {\n        return \"YES\";\n    }\n    return\
    \ \"YES\";", "    // Write your code here\n    ", "    long even = 0;\n    long\
    \ odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMinSum = std::numeric_limits<long>::min();\n\
    \    long oddMinSum = std::numeric_limits<long>::min();\n    long evenMaxSum =\
    \ std::numeric_limits<long>::max();\n    long oddMaxSum = std::numeric_limits<long>::max();\n\
    \    long evenMinMax = std::numeric_limits<long>::min();\n    long oddMinMax =\
    \ std::numeric_limits<long>::min();\n    long evenMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMinMaxSum = std::numeric_limits<long>::min();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long oddMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long evenMinMaxSum = std::numeric_limits<long>::min();\n    long oddMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long evenMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMinMaxSum = std::numeric_limits<long>::min();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long oddMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long evenMinMaxSum = std::numeric_limits<long>::min();\n    long oddMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long evenMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMinMaxSum = std::numeric_limits<long>::min();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long oddMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long evenMinMaxSum = std::numeric_limits<long>::min();\n    long oddMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long evenMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMinMaxSum = std::numeric_limits<long>::min();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long", "    // Write your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++){\n        if(lst1[i] % 2 ==\
    \ 0){\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++){\n        if(lst2[i] % 2 == 0){\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    if(even.size() == lst1.size()){\n        return \"YES\"\
    ;\n    }\n    return \"NO\";", "    // Write your code here\n    std::vector<long>\
    \ even;\n    even.reserve(lst1.size());\n    for(long i : lst1){\n        if(i%2==0){\n\
    \            even.push_back(i);\n        }\n    }\n    for(long i : lst2){\n \
    \       if(i%2==0){\n            even.push_back(i);\n        }\n    }\n    if(even.size()\
    \ == lst1.size()){\n        return \"YES\";\n    }\n    return \"NO\";", "   \
    \ // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::max();\n    long oddMax = std::numeric_limits<long>::max();\n\
    \    long evenMin = std::numeric_limits<long>::min();\n    long oddMin = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long\
    \ oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n\
    \    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4\
    \ = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long\
    \ oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6\
    \ = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long\
    \ oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n\
    \    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9\
    \ = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n  \
    \  long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 =\
    \ 0;\n", "    // Write your code here\n    std::vector<long> even;\n    for(auto\
    \ it1 = lst1.begin(); it1 != lst1.end(); ++it1) {\n        for(auto it2 = lst2.begin();\
    \ it2 != lst2.end(); ++it2) {\n            if(*it1 == *it2) {\n              \
    \  even.push_back(*it1);\n                lst1.erase(it1);\n                lst2.erase(it2);\n\
    \            }\n        }\n    }\n    if(even.size() == lst1.size()) {\n     \
    \   return \"YES\";\n    }\n    return \"NO\";", "    // Your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long sum = 0;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        sum += lst1[i];\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        sum += lst2[i];\n    }\n    if (sum % 2 == 0) {\n        even\
    \ = sum / 2;\n    } else {\n        odd = sum / 2;\n    }\n    if (even > odd)\
    \ {\n        return \"NO\";\n    } else {\n        return \"YES\";\n    }", " \
    \   // Write your code here\n    long even = 0;\n    long odd = 0;\n    for (long\
    \ i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n          \
    \  even = even + lst1[i];\n        } else {\n            odd = odd + lst1[i];\n\
    \        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            even = even + lst2[i];\n        } else {\n        \
    \    odd = odd + lst2[i];\n        }\n    }\n    if (even > odd) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }", "    // Write your code\
    \ here\n    long sum = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n    \
    \    sum += lst1[i];\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n  \
    \      sum += lst2[i];\n    }\n    if (sum % 2 == 0) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }", "    // Write your code here\n\
    \    long sum = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        sum\
    \ += lst1[i];\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        sum\
    \ += lst2[i];\n    }\n    if (sum % 2 == 0) {\n        return \"YES\";\n    }\
    \ else {\n        return \"NO\";\n    }", "    long even = 0;\n    long odd =\
    \ 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3\
    \ = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long\
    \ odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n  \
    \  long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n\
    \    long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11\
    \ = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long\
    \ even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n\
    \    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16\
    \ = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long\
    \ odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n\
    \    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22\
    \ = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long\
    \ even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n\
    \    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27\
    \ = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long\
    \ odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n\
    \    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33\
    \ = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long\
    \ even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n\
    \    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38\
    \ = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long\
    \ odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n\
    \    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    long even44\
    \ = 0;\n", "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            evenCount++;\n        }\
    \ else {\n            oddCount++;\n        }\n    }\n    for (long i = 0; i <\
    \ lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    if (evenCount\
    \ == oddCount) {\n        return \"NO\";\n    }\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    if (even > odd) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";", "    long even = 0;\n    long odd = 0;\n\
    \    long eveneven = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long\
    \ eveneveneven = 0;\n    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long\
    \ oddoddodd = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n\
    \    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneveneven = 0;\n  \
    \  long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n  \
    \  long eveneveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneveneven\
    \ = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n\
    \    long evenoddoddoddeven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n\
    \    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneven", "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long sum = 0;\n    long count = 0;\n    long\
    \ sum2 = 0;\n    long count2 = 0;\n    long sum3 = 0;\n    long count3 = 0;\n\
    \    long sum4 = 0;\n    long count4 = 0;\n    long sum5 = 0;\n    long count5\
    \ = 0;\n    long sum6 = 0;\n    long count6 = 0;\n    long sum7 = 0;\n    long\
    \ count7 = 0;\n    long sum8 = 0;\n    long count8 = 0;\n    long sum9 = 0;\n\
    \    long count9 = 0;\n    long sum10 = 0;\n    long count10 = 0;\n    long sum11\
    \ = 0;\n    long count11 = 0;\n    long sum12 = 0;\n    long count12 = 0;\n  \
    \  long sum13 = 0;\n    long count13 = 0;\n    long sum14 = 0;\n    long count14\
    \ = 0;\n    long sum15 = 0;\n    long count15 = 0;\n    long sum16 = 0;\n    long\
    \ count16 = 0;\n    long sum17 = 0;\n    long count17 = 0;\n    long sum18 = 0;\n\
    \    long count18 = 0;\n    long sum19 = 0;\n    long count19 = 0;\n    long sum20\
    \ = 0;\n    long count20 = 0;\n    long sum21 = 0;\n    long count21 = 0;\n  \
    \  long sum22 = 0;\n    long count22 = 0;\n    long sum23 = 0;\n    long count23\
    \ = 0;\n    long sum24 = 0;\n    long count24 = 0;\n    long sum25 = 0;\n    long\
    \ count25 = 0;\n    long sum26 = 0;\n    long count26 = 0;\n    long sum27 = 0;\n\
    \    long count27 = 0;\n    long sum28 = 0;\n    long count28 = 0;\n    long sum29\
    \ = 0;\n    long count29 = 0;\n    long sum30 = 0;\n    long count30 = 0;\n  \
    \  long sum31 = 0;\n    long count31 = 0;\n    long sum32 = 0;\n    long count32\
    \ = 0;\n    long sum33 = 0;\n    long count33 = 0;\n    long sum34 = 0;\n    long\
    \ count34 = 0;\n    long sum35 = 0;\n    long count35 = 0;\n    long sum36 = 0;\n\
    \    long count36 = 0;\n    long sum37 = 0;\n    long count37 = 0;\n    long sum38\
    \ = 0;\n    long count38 = 0;\n    long sum39 = 0;\n    long count39 = 0;\n  \
    \  long sum40 = 0;\n    long count40 = 0;\n    long sum41 = 0;\n    long count41\
    \ = 0;\n    long sum42 = 0;\n    long count42 = 0;\n    long sum43", "    long\
    \ even = 0;\n    long odd = 0;\n    long sum = 0;\n    long count = 0;\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n    }\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n    \
    \        even += lst1[i];\n        } else {\n            odd += lst1[i];\n   \
    \     }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            even += lst2[i];\n        } else {\n            odd\
    \ += lst2[i];\n        }\n    }\n    if (sum == even) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMaxSum = 0;\n    long oddMaxSum = 0;\n    long evenMinSum = 0;\n\
    \    long oddMinSum = 0;\n    long evenMaxCount = 0;\n    long oddMaxCount = 0;\n\
    \    long evenMinCount = 0;\n    long oddMinCount = 0;\n    long evenMaxSumCount\
    \ = 0;\n    long oddMaxSumCount = 0;\n    long evenMinSumCount = 0;\n    long\
    \ oddMinSumCount = 0;\n    long evenMaxCountCount = 0;\n    long oddMaxCountCount\
    \ = 0;\n    long evenMinCountCount = 0;\n    long oddMinCountCount = 0;\n    long\
    \ evenMaxSumSumCount = 0;\n    long oddMaxSumSumCount = 0;\n    long evenMinSumSumCount\
    \ = 0;\n    long oddMinSumSumCount = 0;\n    long evenMaxCountCount = 0;\n   \
    \ long oddMaxCountCount = 0;\n    long evenMinCountCount = 0;\n    long oddMinCountCount\
    \ = 0;\n    long evenMaxSumSumCount = 0;\n    long oddMaxSumSumCount = 0;\n  \
    \  long evenMinSumSumCount = 0;\n    long oddMinSumSumCount = 0;\n    long evenMaxCountCount\
    \ = 0;\n    long oddMaxCountCount = 0;\n    long evenMinCountCount = 0;\n    long\
    \ oddMinCountCount = 0;\n    long evenMaxSumSumCount = 0;\n    long oddMaxSumSumCount\
    \ = 0;\n    long evenMinSumSumCount = 0;\n    long oddMinSumSumCount = 0;\n  \
    \  long evenMaxCountCount = 0;\n    long oddMaxCountCount = 0;\n    long evenMinCountCount\
    \ = 0;\n    long oddMinCountCount = 0;\n    long evenMaxSumSumCount = 0;\n   \
    \ long oddMaxSumSumCount = 0;\n    long evenMinSumSumCount = 0;\n    long oddMinSumSumCount\
    \ = 0;\n    long evenMaxCountCount = 0;\n    long oddMaxCountCount = 0;\n    long\
    \ evenMinCountCount = 0;\n    long oddMinCountCount = 0;\n    long evenMaxSumSumCount\
    \ = 0;\n    long oddMaxSumSumCount = 0;\n    long evenMinSumSumCount = 0;\n  \
    \  long oddMinSumSumCount = 0;\n    long evenMaxCountCount = 0;\n    ", "    //\
    \ Write your code here\n    std::vector<long> even;\n    even.resize(lst1.size());\n\
    \    for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 == 0) {\n\
    \            even[i] = lst1[i];\n        }\n    }\n    for(long i = 0; i < lst2.size();\
    \ i++) {\n        if(lst2[i] % 2 == 0) {\n            even[lst2.size() - 1 - i]\
    \ = lst2[i];\n        }\n    }\n    for(long i = 0; i < even.size(); i++) {\n\
    \        if(even[i] % 2 == 0) {\n            return \"YES\";\n        }\n    }\n\
    \    return \"NO\";", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long sum = 0;\n    long count = 0;\n    long temp = 0;\n    long\
    \ temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n\
    \    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9\
    \ = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n   \
    \ long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16\
    \ = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n   \
    \ long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23\
    \ = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n   \
    \ long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30\
    \ = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n   \
    \ long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37\
    \ = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n   \
    \ long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44\
    \ = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n   \
    \ long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51\
    \ = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n   \
    \ long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58\
    \ = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n   \
    \ long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65\
    \ = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n   \
    \ long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72\
    \ = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n   \
    \ long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79\
    \ = 0;\n    long temp80 = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n    ",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::max();\n    long oddMax = std::numeric_limits<long>::max();\n\
    \    long evenMin = std::numeric_limits<long>::min();\n    long oddMin = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long\
    \ oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n\
    \    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4\
    \ = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long\
    \ oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6\
    \ = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long\
    \ oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n\
    \    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9\
    \ = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n  \
    \  long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 =\
    \ 0;\n", "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 =\
    \ 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5\
    \ = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long\
    \ odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n  \
    \  long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11\
    \ = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long\
    \ even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n\
    \    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16\
    \ = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long\
    \ odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n\
    \    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22\
    \ = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long\
    \ even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n\
    \    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27\
    \ = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long\
    \ odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n\
    \    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33\
    \ = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long\
    \ even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n\
    \    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38\
    \ = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long\
    \ odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n\
    \    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ", "    //\
    \ Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = 0;\n    long oddMax = 0;\n    long evenMin = 0;\n    long\
    \ oddMin = 0;\n    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2\
    \ = 0;\n    long oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n\
    \    long evenSum3 = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long\
    \ oddMax3 = 0;\n    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4\
    \ = 0;\n    long oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n\
    \    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long\
    \ oddSum5 = 0;\n    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5\
    \ = 0;\n    long oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n\
    \    long evenMax6 = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long\
    \ oddMin6 = 0;\n    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7\
    \ = 0;\n    long oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n\
    \    long evenSum8 = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long\
    \ oddMax8 = 0;\n    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9\
    \ = 0;\n    long oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n\
    \    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long\
    \ oddSum10 = 0;\n    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10\
    \ = 0;\n    long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n\
    \    long evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n  \
    \  long oddMin11 = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long\
    \ evenMax12 = 0;\n    long oddMax12 = 0;\n    long evenMin12 = 0;\n    long oddMin12\
    \ = 0;\n    long evenSum13 = 0;\n    long oddSum", "    long even = 0;\n    long\
    \ odd = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum2 = 0;\n    long oddSum2 = 0;\n\
    \    long evenCount2 = 0;\n    long oddCount2 = 0;\n    long evenSum3 = 0;\n \
    \   long oddSum3 = 0;\n    long evenCount3 = 0;\n    long oddCount3 = 0;\n   \
    \ long evenSum4 = 0;\n    long oddSum4 = 0;\n    long evenCount4 = 0;\n    long\
    \ oddCount4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenCount5\
    \ = 0;\n    long oddCount5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n\
    \    long evenCount6 = 0;\n    long oddCount6 = 0;\n    long evenSum7 = 0;\n \
    \   long oddSum7 = 0;\n    long evenCount7 = 0;\n    long oddCount7 = 0;\n   \
    \ long evenSum8 = 0;\n    long oddSum8 = 0;\n    long evenCount8 = 0;\n    long\
    \ oddCount8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long evenCount9\
    \ = 0;\n    long oddCount9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 =\
    \ 0;\n    long evenCount10 = 0;\n    long oddCount10 = 0;\n    long evenSum11\
    \ = 0;\n    long oddSum11 = 0;\n    long evenCount11 = 0;\n    long oddCount11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenCount12\
    \ = 0;\n    long oddCount12 = 0;\n    long evenSum13 = 0;\n    long oddSum13 =\
    \ 0;\n    long evenCount13 = 0;\n    long oddCount13 = 0;\n    long evenSum14\
    \ = 0;\n    long oddSum14 = 0;\n    long evenCount14 = 0;\n    long oddCount14\
    \ = 0;\n    long evenSum15 = 0;\n    long oddSum15 = 0;\n    long evenCount15\
    \ = 0;\n    long oddCount15 = 0;\n    long evenSum16 = 0;\n    long oddSum16 =\
    \ 0;\n    long evenCount16 = 0;\n    long oddCount16 = 0;\n    long evenSum17\
    \ = 0;\n    long oddSum17 = 0;\n    long evenCount17 = 0;\n    long oddCount17\
    \ = 0;\n    long evenSum18 = 0;\n    long oddSum18 = 0;\n    long evenCount18\
    \ = 0;\n    long oddCount18 = 0;\n    long evenSum19 = 0;\n    long oddSum19 =\
    \ 0;\n    long evenCount", '    // Your code here', "    // Your code here\n \
    \   long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst2[0];\n    long evenMin = lst1[0];\n    long oddMin = lst2[0];\n\
    \    long evenMax2 = lst1[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst1[0];\n    long oddMin2 = lst2[0];\n    long evenMax3 = lst1[0];\n    long\
    \ oddMax3 = lst2[0];\n    long evenMin3 = lst1[0];\n    long oddMin3 = lst2[0];\n\
    \    long evenMax4 = lst1[0];\n    long oddMax4 = lst2[0];\n    long evenMin4\
    \ = lst1[0];\n    long oddMin4 = lst2[0];\n    long evenMax5 = lst1[0];\n    long\
    \ oddMax5 = lst2[0];\n    long evenMin5 = lst1[0];\n    long oddMin5 = lst2[0];\n\
    \    long evenMax6 = lst1[0];\n    long oddMax6 = lst2[0];\n    long evenMin6\
    \ = lst1[0];\n    long oddMin6 = lst2[0];\n    long evenMax7 = lst1[0];\n    long\
    \ oddMax7 = lst2[0];\n    long evenMin7 = lst1[0];\n    long oddMin7 = lst2[0];\n\
    \    long evenMax8 = lst1[0];\n    long oddMax8 = lst2[0];\n    long evenMin8\
    \ = lst1[0];\n    long oddMin8 = lst2[0];\n    long evenMax9 = lst1[0];\n    long\
    \ oddMax9 = lst2[0];\n    long evenMin9 = lst1[0];\n    long oddMin9 = lst2[0];\n\
    \    long evenMax10 = lst1[0];\n    long oddMax10 = lst2[0];\n    long evenMin10\
    \ = lst1[0];\n    long oddMin10 = lst2[0];\n    long evenMax11 = lst1[0];\n  \
    \  long oddMax11 = lst2[0];\n    long evenMin11 = lst1[0];\n    long oddMin11\
    \ = lst2[0];\n    long evenMax12 = lst1[0];\n    long oddMax12 = lst2[0];\n  \
    \  long evenMin12 = lst1[0];\n    long oddMin12 = lst2[0];\n    long evenMax13\
    \ = lst1[0];\n    long oddMax13 = lst2[0];\n    long evenMin13 = lst1[0];\n  \
    \  long oddMin13 = lst2[0];\n    ", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin2 = std::numeric_limits<long>::max();\n\
    \    long oddMin2 = std::numeric_limits<long>::max();\n    long evenMax2 = std::numeric_limits<long>::min();\n\
    \    long oddMax2 = std::numeric_limits<long>::min();\n    long evenMin3 = std::numeric_limits<long>::max();\n\
    \    long oddMin3 = std::numeric_limits<long>::max();\n    long evenMax3 = std::numeric_limits<long>::min();\n\
    \    long oddMax3 = std::numeric_limits<long>::min();\n    long evenMin4 = std::numeric_limits<long>::max();\n\
    \    long oddMin4 = std::numeric_limits<long>::max();\n    long evenMax4 = std::numeric_limits<long>::min();\n\
    \    long oddMax4 = std::numeric_limits<long>::min();\n    long evenMin5 = std::numeric_limits<long>::max();\n\
    \    long oddMin5 = std::numeric_limits<long>::max();\n    long evenMax5 = std::numeric_limits<long>::min();\n\
    \    long oddMax5 = std::numeric_limits<long>::min();\n    long evenMin6 = std::numeric_limits<long>::max();\n\
    \    long oddMin6 = std::numeric_limits<long>::max();\n    long evenMax6 = std::numeric_limits<long>::min();\n\
    \    long oddMax6 = std::numeric_limits<long>::min();\n    long evenMin7 = std::numeric_limits<long>::max();\n\
    \    long oddMin7 = std::numeric_limits<long>::max();\n    long evenMax7 = std::numeric_limits<long>::min();\n\
    \    long oddMax7 = std::numeric_limits<long>::min();\n    long evenMin8 = std::numeric_limits<long>::max();\n\
    \    long oddMin8 = std::numeric_limits<long>::max();\n    long evenMax8 = std::numeric_limits<long>::min();\n\
    \    long oddMax8 = std::numeric_limits<long>::min();\n    long evenMin9 = std::numeric_limits<long>::max();\n\
    \    long oddMin9 = std::numeric_limits<long>::", "    // Your code here\n   \
    \ std::vector<long> even;\n    even.clear();\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            even.push_back(lst2[i]);\n        }\n    }\n    if\
    \ (even.size() == lst1.size()) {\n        return \"YES\";\n    }\n    return \"\
    NO\";", '    // Your code here', "    // Write your code here\n    long even =\
    \ 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3\
    \ = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long\
    \ even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n  \
    \  long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n\
    \    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10\
    \ = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long\
    \ odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n\
    \    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16\
    \ = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long\
    \ even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n\
    \    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21\
    \ = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long\
    \ odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n\
    \    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27\
    \ = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long\
    \ even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n\
    \    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32\
    \ = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long\
    \ odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n\
    \    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38\
    \ = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long\
    \ even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n\
    \    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43\
    \ = 0;\n    ", "    // Write your code here\n    std::vector<long> even;\n   \
    \ for(long i = 0; i < lst1.size(); i++){\n        if(lst1[i] % 2 == 0){\n    \
    \        even.push_back(lst1[i]);\n        }\n    }\n    for(long i = 0; i < lst2.size();\
    \ i++){\n        if(lst2[i] % 2 == 0){\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    for(long i = 0; i < even.size(); i++){\n        if(even[i]\
    \ != even[even.size() - 1]){\n            even.erase(even.begin() + i);\n    \
    \    }\n    }\n    if(even.size() == 0){\n        return \"NO\";\n    }\n    return\
    \ \"YES\";", '    // Your code here', "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long temp = 0;\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax\
    \ = 0;\n    long oddMax = 0;\n    long evenMin = 0;\n    long oddMin = 0;\n  \
    \  long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long\
    \ oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n\
    \    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4\
    \ = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long\
    \ oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6\
    \ = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long\
    \ oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n\
    \    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9\
    \ = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n  \
    \  long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 =\
    \ 0;\n    long oddMax12 = 0;\n    long evenMin12 = 0;\n    long oddMin12 = 0;\n\
    \    long evenSum13 = 0;", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMin = lst1[0];\n    long oddMin\
    \ = lst1[0];\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long\
    \ evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax2 = lst2[0];\n\
    \    long oddMax2 = lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 =\
    \ lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long\
    \ evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax4 = lst2[0];\n\
    \    long oddMax4 = lst2[0];\n    long evenMin5 = lst2[0];\n    long oddMin5 =\
    \ lst2[0];\n    long evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long\
    \ evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long evenMax6 = lst2[0];\n\
    \    long oddMax6 = lst2[0];\n    long evenMin7 = lst2[0];\n    long oddMin7 =\
    \ lst2[0];\n    long evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long\
    \ evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax8 = lst2[0];\n\
    \    long oddMax8 = lst2[0];\n    long evenMin9 = lst2[0];\n    long oddMin9 =\
    \ lst2[0];\n    long evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long\
    \ evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n    long evenMax10 = lst2[0];\n\
    \    long oddMax10 = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11\
    \ = lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n  \
    \  long evenMin12 = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax12\
    \ = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin13 = lst2[0];\n  \
    \  long oddMin13 = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13\
    \ = lst2[0];\n    ", '    // Your code here', "    // Write your code here\n \
    \   std::vector<long> even;\n    for(auto it = lst1.begin(); it != lst1.end();\
    \ ++it) {\n        if(*it % 2 == 0) {\n            even.push_back(*it);\n    \
    \    }\n    }\n    for(auto it = lst2.begin(); it != lst2.end(); ++it) {\n   \
    \     if(*it % 2 == 0) {\n            even.push_back(*it);\n        }\n    }\n\
    \    for(auto it = even.begin(); it != even.end(); ++it) {\n        if(*it ==\
    \ 0) {\n            even.erase(it);\n        }\n    }\n    if(even.size() == 0)\
    \ {\n        return \"NO\";\n    }\n    return \"YES\";", "    // Write your code\
    \ here\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long count\
    \ = 0;\n    long sum = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenCount = 0;\n    long oddCount = 0;\n    long evenSum2 = 0;\n    long oddSum2\
    \ = 0;\n    long evenCount2 = 0;\n    long oddCount2 = 0;\n    long evenSum3 =\
    \ 0;\n    long oddSum3 = 0;\n    long evenCount3 = 0;\n    long oddCount3 = 0;\n\
    \    long evenSum4 = 0;\n    long oddSum4 = 0;\n    long evenCount4 = 0;\n   \
    \ long oddCount4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long\
    \ evenCount5 = 0;\n    long oddCount5 = 0;\n    long evenSum6 = 0;\n    long oddSum6\
    \ = 0;\n    long evenCount6 = 0;\n    long oddCount6 = 0;\n    long evenSum7 =\
    \ 0;\n    long oddSum7 = 0;\n    long evenCount7 = 0;\n    long oddCount7 = 0;\n\
    \    long evenSum8 = 0;\n    long oddSum8 = 0;\n    long evenCount8 = 0;\n   \
    \ long oddCount8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long\
    \ evenCount9 = 0;\n    long oddCount9 = 0;\n    long evenSum10 = 0;\n    long\
    \ oddSum10 = 0;\n    long evenCount10 = 0;\n    long oddCount10 = 0;\n    long\
    \ evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenCount11 = 0;\n    long\
    \ oddCount11 = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenCount12\
    \ = 0;\n    long oddCount12 = 0;\n    long evenSum13 = 0;\n    long oddSum13 =\
    \ 0;\n    long evenCount13 = 0;\n    long oddCount13 = 0;\n    long evenSum14\
    \ = 0;\n    long oddSum14 = 0;\n    long evenCount14 = 0;\n    long oddCount14\
    \ = 0;\n    long evenSum15 = 0;\n    long oddSum15 = 0;\n    long evenCount15\
    \ = 0;\n    long oddCount15 = 0;\n    long evenSum16 = 0;\n    long oddSum16 =\
    \ 0;\n    long evenCount16 = 0;\n    long oddCount16 = 0;\n    long evenSum17\
    \ = 0;\n    long oddSum17 = 0;\n    long evenCount17 = 0;\n    long oddCount17\
    \ = 0;\n    long evenSum18 = 0;\n    long oddSum18 = 0;\n    long evenCount18\
    \ = 0;\n    long oddCount18 = 0;", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n   \
    \ long oddodd = 0;\n    long eveneveneven = 0;\n    long evenoddodd = 0;\n   \
    \ long oddoddeven = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven = 0;\n\
    \    long evenoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven",
  "    // Your code here\n    ", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax\
    \ = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long\
    \ evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n\
    \    long oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 =\
    \ lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long\
    \ evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n\
    \    long oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long oddMax5 =\
    \ lst2[0];\n    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long\
    \ evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n\
    \    long oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long oddMax7 =\
    \ lst2[0];\n    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long\
    \ evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n\
    \    long oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long oddMax9 =\
    \ lst2[0];\n    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long\
    \ evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n\
    \    long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11\
    \ = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst2[0];\n  \
    \  long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13\
    \ = lst2[0];\n    ", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax2 =\
    \ lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n    long\
    \ oddMin2 = lst2[0];\n    long evenMax3 = lst1[0];\n    long oddMax3 = lst1[0];\n\
    \    long evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n    long evenMax4\
    \ = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n    long\
    \ oddMin4 = lst2[0];\n    long evenMax5 = lst1[0];\n    long oddMax5 = lst1[0];\n\
    \    long evenMin5 = lst1[0];\n    long oddMin5 = lst1[0];\n    long evenMax6\
    \ = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n    long\
    \ oddMin6 = lst2[0];\n    long evenMax7 = lst1[0];\n    long oddMax7 = lst1[0];\n\
    \    long evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n    long evenMax8\
    \ = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n    long\
    \ oddMin8 = lst2[0];\n    long evenMax9 = lst1[0];\n    long oddMax9 = lst1[0];\n\
    \    long evenMin9 = lst1[0];\n    long oddMin9 = lst1[0];\n    long evenMax10\
    \ = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n  \
    \  long oddMin10 = lst2[0];\n    long evenMax11 = lst1[0];\n    long oddMax11\
    \ = lst1[0];\n    long evenMin11 = lst1[0];\n    long oddMin11 = lst1[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst1[0];\n  \
    \  long oddMax13 = lst1[0];\n    long evenMin13 = lst1[0];\n    long oddMin13\
    \ = lst1[0];\n    ", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMin = INT_MAX;\n    long oddMin = INT_MAX;\n\
    \    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n    long evenMinSum\
    \ = INT_MAX;\n    long oddMinSum = INT_MAX;\n    long evenMaxSum = INT_MIN;\n\
    \    long oddMaxSum = INT_MIN;\n    long evenMinCount = INT_MAX;\n    long oddMinCount\
    \ = INT_MAX;\n    long evenMaxCount = INT_MIN;\n    long oddMaxCount = INT_MIN;\n\
    \    long evenMinSumCount = INT_MAX;\n    long oddMinSumCount = INT_MAX;\n   \
    \ long evenMaxSumCount = INT_MIN;\n    long oddMaxSumCount = INT_MIN;\n    long\
    \ evenMinCountSum = INT_MAX;\n    long oddMinCountSum = INT_MAX;\n    long evenMaxCountSum\
    \ = INT_MIN;\n    long oddMaxCountSum = INT_MIN;\n    long evenMinSumCount = INT_MAX;\n\
    \    long oddMinSumCount = INT_MAX;\n    long evenMaxSumCountSum = INT_MIN;\n\
    \    long oddMaxSumCountSum = INT_MIN;\n    long evenMinCountSum = INT_MAX;\n\
    \    long oddMinCountSum = INT_MAX;\n    long evenMaxCountSum = INT_MIN;\n   \
    \ long oddMaxCountSum = INT_MIN;\n    long evenMinSumCountSum = INT_MAX;\n   \
    \ long oddMinSumCountSum = INT_MAX;\n    long evenMaxSumCountSum = INT_MIN;\n\
    \    long oddMaxSumCountSum = INT_MIN;\n    long evenMinCountSum = INT_MAX;\n\
    \    long oddMinCountSum = INT_MAX;\n    long evenMaxCountSum = INT_MIN;\n   \
    \ long oddMaxCountSum = INT_MIN;\n    long evenMinSumCountSum = INT_MAX;\n   \
    \ long oddMinSumCountSum = INT_MAX;\n    long evenMaxSumCountSum = INT_MIN;\n\
    \    long oddMaxSumCountSum = INT_MIN;\n    long evenMinCountSum = INT_MAX;\n\
    \    long oddMinCountSum = INT_MAX;\n    long evenMaxCountSum = INT_MIN;\n   \
    \ long oddMaxCountSum = INT_MIN;\n    long evenMinSum", "    // Write your code\
    \ here\n    long even = 0;\n    long odd = 0;\n    long sum = 0;\n    long count\
    \ = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n\
    \    }\n    for (long i = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n\
    \    }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2\
    \ == 0) {\n            even = even + lst1[i];\n            count++;\n        }\
    \ else {\n            odd = odd + lst1[i];\n        }\n    }\n    for (long i\
    \ = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            even\
    \ = even + lst2[i];\n            count++;\n        } else {\n            odd =\
    \ odd + lst2[i];\n        }\n    }\n    if (sum % 2 == 0) {\n        if (count\
    \ == lst1.size()) {\n            return \"YES\";\n        } else {\n         \
    \   return \"NO\";\n        }\n    } else {\n        if (count == lst2.size())\
    \ {\n            return \"YES\";\n        } else {\n            return \"NO\"\
    ;\n        }\n    }", '    // Your code here', "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax3 = lst1[0];\n    long\
    \ oddMax3 = lst1[0];\n    long evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n\
    \    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4\
    \ = lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax5 = lst1[0];\n    long\
    \ oddMax5 = lst1[0];\n    long evenMin5 = lst1[0];\n    long oddMin5 = lst1[0];\n\
    \    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6\
    \ = lst2[0];\n    long oddMin6 = lst2[0];\n    long evenMax7 = lst1[0];\n    long\
    \ oddMax7 = lst1[0];\n    long evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n\
    \    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8\
    \ = lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax9 = lst1[0];\n    long\
    \ oddMax9 = lst1[0];\n    long evenMin9 = lst1[0];\n    long oddMin9 = lst1[0];\n\
    \    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10\
    \ = lst2[0];\n    long oddMin10 = lst2[0];\n    long evenMax11 = lst1[0];\n  \
    \  long oddMax11 = lst1[0];\n    long evenMin11 = lst1[0];\n    long oddMin11\
    \ = lst1[0];\n    long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n  \
    \  long evenMin12 = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13\
    \ = lst1[0];\n    long oddMax13 = lst1[0];\n    long evenMin13 = lst1[0];\n  \
    \  long oddMin13 = lst1[0];\n    ", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n   \
    \ long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst2[0];\n    long oddMin2 = lst2[0];\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        even = lst1[i];\n        odd = lst2[i];\n        if (even >\
    \ evenMax) {\n            evenMax = even;\n        }\n        if (odd > oddMax)\
    \ {\n            oddMax = odd;\n        }\n        if (even < evenMin) {\n   \
    \         evenMin = even;\n        }\n        if (odd < oddMin) {\n          \
    \  oddMin = odd;\n        }\n        if (even > evenMax2) {\n            evenMax2\
    \ = even;\n        }\n        if (odd > oddMax2) {\n            oddMax2 = odd;\n\
    \        }\n        if (even < evenMin2) {\n            evenMin2 = even;\n   \
    \     }\n        if (odd < oddMin2) {\n            oddMin2 = odd;\n        }\n\
    \    }\n    for (long i = 0; i < lst2.size(); i++) {\n        even = lst2[i];\n\
    \        odd = lst1[i];\n        if (even > evenMax) {\n            evenMax =\
    \ even;\n        }\n        if (odd > oddMax) {\n            oddMax = odd;\n \
    \       }\n        if (even < evenMin) {\n            evenMin = even;\n      \
    \  }\n        if (odd < oddMin) {\n            oddMin = odd;\n        }\n    \
    \    if (even > evenMax2) {\n            evenMax2 = even;\n        }\n       \
    \ if (odd > oddMax2) {\n            oddMax2 = odd;\n        }\n        if (even\
    \ < evenMin2) {\n            evenMin2 = even;\n        }\n        if (odd < oddMin2)\
    \ {\n            oddMin2 = odd;\n        }\n    }\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        even = lst1[i];\n        odd = lst2[i];\n        if (even >\
    \ evenMax) {\n            evenMax = even;\n        }\n        if (odd > oddMax)\
    \ {\n            oddMax = odd;\n        }\n        if (even < evenMin) {\n   \
    \         evenMin = even;\n        }\n        if (odd < oddMin) {\n          \
    \  oddMin = odd;\n        }\n        if (even > evenMax2) {\n            evenMax2\
    \ = ", "    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax\
    \ = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long\
    \ oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n\
    \    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax3\
    \ = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n    long\
    \ oddMin3 = lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n\
    \    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax5\
    \ = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n    long\
    \ oddMin5 = lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n\
    \    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long evenMax7\
    \ = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n    long\
    \ oddMin7 = lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n\
    \    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax9\
    \ = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n    long\
    \ oddMin9 = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n\
    \    long evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n    long evenMax11\
    \ = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin11 = lst2[0];\n  \
    \  long oddMin11 = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12\
    \ = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12 = lst2[0];\n  \
    \  long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n    long evenMin13\
    \ = lst2[0];\n    long oddMin13 = lst2[0];\n    long evenMax14 = ", "    // Write\
    \ your code here\n    ", "    // Write your code here\n    long even = 0;\n  \
    \  long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = 0;\n    long oddMax = 0;\n  \
    \  long evenMin = 0;\n    long oddMin = 0;\n    long evenMaxIndex = 0;\n    long\
    \ oddMaxIndex = 0;\n    long evenMinIndex = 0;\n    long oddMinIndex = 0;\n  \
    \  long evenMaxSum = 0;\n    long oddMaxSum = 0;\n    long evenMinSum = 0;\n \
    \   long oddMinSum = 0;\n    long evenMaxMax = 0;\n    long oddMaxMax = 0;\n \
    \   long evenMinMax = 0;\n    long oddMinMax = 0;\n    long evenMaxMin = 0;\n\
    \    long oddMaxMin = 0;\n    long evenMaxMinIndex = 0;\n    long oddMaxMinIndex\
    \ = 0;\n    long evenMinMinIndex = 0;\n    long oddMinMinIndex = 0;\n    long\
    \ evenMaxMinSum = 0;\n    long oddMaxMinSum = 0;\n    long evenMinMinSum = 0;\n\
    \    long oddMinMinSum = 0;\n    long evenMaxMinMax = 0;\n    long oddMaxMinMax\
    \ = 0;\n    long evenMinMinMax = 0;\n    long oddMinMinMax = 0;\n    long evenMaxMinMin\
    \ = 0;\n    long oddMaxMinMin = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin\
    \ = 0;\n    long evenMaxMinMinIndex = 0;\n    long oddMaxMinMinIndex = 0;\n  \
    \  long evenMinMinMinIndex = 0;\n    long oddMinMinMinIndex = 0;\n    long evenMaxMinMinSum\
    \ = 0;\n    long oddMaxMinMinSum = 0;\n    long evenMinMinMinSum = 0;\n    long\
    \ oddMinMinMinSum = 0;\n    long evenMaxMinMinMax = 0;\n    long oddMaxMinMinMax\
    \ = 0;\n    long evenMinMinMinMax = 0;\n    long oddMinMinMinMax = 0;\n    long\
    \ evenMaxMinMinMin = 0;\n    long oddMaxMinMinMin = 0;\n    long evenMinMinMinMin\
    \ = 0;\n    long oddMinMinMinMin = 0;\n    long evenMaxMinMinMinIndex = 0;\n \
    \   long oddMaxMinMinMinIndex = 0;\n    long evenMinMinMinIndex = 0;\n    long\
    \ oddMinMinMinIndex = 0;\n    long evenMaxMinMinMinSum = 0;\n    long oddMaxMinMinMinSum\
    \ = 0;\n    long evenMinMinMinSum = 0;\n    long oddMinMinMinSum = 0;\n    long\
    \ even", "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long\
    \ eveneven = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven\
    \ = 0;\n    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long oddoddodd\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    ", "    // Your code here\n    ", "    // Write your code here\n \
    \   long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n\
    \    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 =\
    \ 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6\
    \ = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long\
    \ odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n \
    \   long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12\
    \ = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long\
    \ even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n\
    \    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17\
    \ = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long\
    \ odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n\
    \    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23\
    \ = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long\
    \ even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n\
    \    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28\
    \ = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long\
    \ odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n\
    \    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34\
    \ = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long\
    \ even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n\
    \    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39\
    \ = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 1;\n    long\
    \ odd41 = 1;\n    long even42 = 1;\n    long odd42 = 1;\n    long even43 = 1;\n\
    \    long odd43 = 1;", "    // Write your code here\n    ", "    // Write your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long sum = 0;\n    long\
    \ count = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n\
    \    }\n    for (long i = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n\
    \    }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2\
    \ == 0) {\n            even += lst1[i];\n        }\n    }\n    for (long i = 0;\
    \ i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            even +=\
    \ lst2[i];\n        }\n    }\n    for (long i = 0; i < lst1.size(); i++) {\n \
    \       if (lst1[i] % 2 != 0) {\n            odd += lst1[i];\n        }\n    }\n\
    \    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n\
    \            odd += lst2[i];\n        }\n    }\n    if (sum == even) {\n     \
    \   return \"YES\";\n    }\n    if (sum == odd) {\n        return \"NO\";\n  \
    \  }\n    return \"NO\";", "    // Write your code here\n    \n    long even =\
    \ 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n   \
    \ long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenSum2 = 0;\n\
    \    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long\
    \ evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3 = 0;\n    long oddSum3\
    \ = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenMin3 = 0;\n\
    \    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long oddSum4 = 0;\n    long\
    \ evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4 = 0;\n    long oddMin4\
    \ = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenMax5 = 0;\n\
    \    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long\
    \ evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6 = 0;\n    long oddMax6\
    \ = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long\
    \ evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8 = 0;\n    long oddSum8\
    \ = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenMin8 = 0;\n\
    \    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long\
    \ evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9 = 0;\n    long oddMin9\
    \ = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long evenMax10 =\
    \ 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n    long oddMin10 = 0;\n\
    \    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenMax11 = 0;\n  \
    \  long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11 = 0;\n    long\
    \ evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12", "    // Write your\
    \ code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++) {\n        if(lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++) {\n        if(lst2[i]\
    \ % 2 == 0) {\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++) {\n        if(even[i] != even[even.size() - 1])\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";", "   \
    \ // Your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 =\
    \ lst2[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long\
    \ evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n    long evenMax3 = lst1[0];\n\
    \    long oddMax3 = lst1[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 =\
    \ lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long\
    \ evenMin5 = lst1[0];\n    long oddMin5 = lst1[0];\n    long evenMax5 = lst1[0];\n\
    \    long oddMax5 = lst1[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 =\
    \ lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long\
    \ evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n    long evenMax7 = lst1[0];\n\
    \    long oddMax7 = lst1[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 =\
    \ lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long\
    \ evenMin9 = lst1[0];\n    long oddMin9 = lst1[0];\n    long evenMax9 = lst1[0];\n\
    \    long oddMax9 = lst1[0];\n    long evenMin10 = lst2[0];\n    long oddMin10\
    \ = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n  \
    \  long evenMin11 = lst1[0];\n    long oddMin11 = lst1[0];\n    long evenMax11\
    \ = lst1[0];\n    long oddMax11 = lst1[0];\n    long evenMin12 = lst2[0];\n  \
    \  long oddMin12 = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12\
    \ = lst2[0];\n    long evenMin13 = lst1[0];\n    long oddMin13 = lst1[0];\n  \
    \  long evenMax13 = lst1[0];\n    long oddMax13 = lst1[0];\n    ", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n\
    \    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long even4 =\
    \ 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6\
    \ = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long\
    \ even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n  \
    \  long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long odd11\
    \ = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long\
    \ odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n\
    \    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long even17\
    \ = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long\
    \ even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n\
    \    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long odd22\
    \ = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long\
    \ odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n\
    \    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long even28\
    \ = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long\
    \ even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n\
    \    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long odd33\
    \ = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long\
    \ odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n\
    \    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long even39\
    \ = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long\
    \ even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n\
    \    long even43 = 0;\n    long odd43 = 0;\n    ", "    // Write your code here\n\
    \    \n    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2\
    \ = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long\
    \ odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n  \
    \  long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n\
    \    long odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10\
    \ = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long\
    \ even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n\
    \    long even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15\
    \ = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long\
    \ odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n\
    \    long odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21\
    \ = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long\
    \ even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n\
    \    long even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26\
    \ = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long\
    \ odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n\
    \    long odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32\
    \ = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long\
    \ even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n\
    \    long even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37\
    \ = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long\
    \ odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 1;\n\
    \    long odd41 = 1;\n    long even42 = 1;\n    long odd42 = 1;\n    long even43\
    \ = 1;\n    long odd", "    long even = 0;\n    long odd = 0;\n    long sum =\
    \ 0;\n    long count = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenCount = 0;\n    long oddCount = 0;\n    long evenSum2 = 0;\n    long oddSum2\
    \ = 0;\n    long evenCount2 = 0;\n    long oddCount2 = 0;\n    long evenSum3 =\
    \ 0;\n    long oddSum3 = 0;\n    long evenCount3 = 0;\n    long oddCount3 = 0;\n\
    \    long evenSum4 = 0;\n    long oddSum4 = 0;\n    long evenCount4 = 0;\n   \
    \ long oddCount4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long\
    \ evenCount5 = 0;\n    long oddCount5 = 0;\n    long evenSum6 = 0;\n    long oddSum6\
    \ = 0;\n    long evenCount6 = 0;\n    long oddCount6 = 0;\n    long evenSum7 =\
    \ 0;\n    long oddSum7 = 0;\n    long evenCount7 = 0;\n    long oddCount7 = 0;\n\
    \    long evenSum8 = 0;\n    long oddSum8 = 0;\n    long evenCount8 = 0;\n   \
    \ long oddCount8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long\
    \ evenCount9 = 0;\n    long oddCount9 = 0;\n    long evenSum10 = 0;\n    long\
    \ oddSum10 = 0;\n    long evenCount10 = 0;\n    long oddCount10 = 0;\n    long\
    \ evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenCount11 = 0;\n    long\
    \ oddCount11 = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenCount12\
    \ = 0;\n    long oddCount12 = 0;\n    long evenSum13 = 0;\n    long oddSum13 =\
    \ 0;\n    long evenCount13 = 0;\n    long oddCount13 = 0;\n    long evenSum14\
    \ = 0;\n    long oddSum14 = 0;\n    long evenCount14 = 0;\n    long oddCount14\
    \ = 0;\n    long evenSum15 = 0;\n    long oddSum15 = 0;\n    long evenCount15\
    \ = 0;\n    long oddCount15 = 0;\n    long evenSum16 = 0;\n    long oddSum16 =\
    \ 0;\n    long evenCount16 = 0;\n    long oddCount16 = 0;\n    long evenSum17\
    \ = 0;\n    long oddSum17 = 0;\n    long evenCount17 = 0;\n    long oddCount17\
    \ = 0;\n    long evenSum18 = 0;\n    long oddSum18 = 0;\n    long evenCount18\
    \ = 0;\n    long oddCount18 = 0;\n    long evenSum19 = 0;\n    long ", "    //\
    \ Write your code here\n    \n    long even = 0;\n    long odd = 0;\n    long\
    \ evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum\
    \ = 0;\n    \n    for(long i = 0; i < lst1.size(); i++) {\n        even = lst1[i];\n\
    \        odd = lst2[i];\n        evenCount += 1;\n        oddCount += 1;\n   \
    \     evenSum += even;\n        oddSum += odd;\n    }\n    \n    if(evenCount\
    \ == oddCount) {\n        if(evenSum == oddSum) {\n            return \"YES\"\
    ;\n        }\n        return \"NO\";\n    }\n    return \"NO\";", "    // Write\
    \ your code here\n    \n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    \n    for(long i = 0; i < lst1.size(); i++){\n\
    \        if(lst1[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    \n    for(long i = 0; i < lst2.size();\
    \ i++){\n        if(lst2[i] % 2 == 0){\n            evenCount++;\n        }\n\
    \        else{\n            oddCount++;\n        }\n    }\n    \n    if(evenCount\
    \ == even){\n        return \"YES\";\n    }\n    else{\n        return \"NO\"\
    ;\n    }", "    // Write your code here\n    std::vector<long> even;\n    even.push_back(lst1[0]);\n\
    \    even.push_back(lst2[0]);\n    long evenSum = even[0] + even[1];\n    long\
    \ evenDiff = even[0] - even[1];\n    long evenProduct = even[0] * even[1];\n \
    \   long evenProductDiff = evenProduct - evenSum;\n    long evenProductDiff2 =\
    \ evenProductDiff - evenDiff;\n    long evenProductDiff3 = evenProductDiff2 -\
    \ evenProduct;\n    long evenProductDiff4 = evenProductDiff3 - evenProduct;\n\
    \    long evenProductDiff5 = evenProductDiff4 - evenProduct;\n    long evenProductDiff6\
    \ = evenProductDiff5 - evenProduct;\n    long evenProductDiff7 = evenProductDiff6\
    \ - evenProduct;\n    long evenProductDiff8 = evenProductDiff7 - evenProduct;\n\
    \    long evenProductDiff9 = evenProductDiff8 - evenProduct;\n    long evenProductDiff10\
    \ = evenProductDiff9 - evenProduct;\n    long evenProductDiff11 = evenProductDiff10\
    \ - evenProduct;\n    long evenProductDiff12 = evenProductDiff11 - evenProduct;\n\
    \    long evenProductDiff13 = evenProductDiff12 - evenProduct;\n    long evenProductDiff14\
    \ = evenProductDiff13 - evenProduct;\n    long evenProductDiff15 = evenProductDiff14\
    \ - evenProduct;\n    long evenProductDiff16 = evenProductDiff15 - evenProduct;\n\
    \    long evenProductDiff17 = evenProductDiff16 - evenProduct;\n    long evenProductDiff18\
    \ = evenProductDiff17 - evenProduct;\n    long evenProductDiff19 = evenProductDiff18\
    \ - evenProduct;\n    long evenProductDiff20 = evenProductDiff19 - evenProduct;\n\
    \    long evenProductDiff21 = evenProductDiff20 - evenProduct;\n    long evenProductDiff22\
    \ = evenProductDiff21 - evenProduct;\n    long evenProductDiff23 = evenProductDiff22\
    \ - evenProduct;\n    long evenProductDiff24 = evenProductDiff23 - evenProduct;\n\
    \    long evenProductDiff25 = evenProductDiff24 - evenProduct;\n    long evenProductDiff26\
    \ = evenProductDiff25 - evenProduct;\n    long evenProductDiff27 = evenProductDiff26\
    \ - evenProduct;\n    long evenProductDiff28 = evenProductDiff27 - evenProduct;\n\
    \    long evenProductDiff29 = evenProductDiff28 - evenProduct;\n    long evenProductDiff30\
    \ = ", "    // Write your code here\n    long even = 0;\n    long odd = 0;\n \
    \   long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long\
    \ oddSum = 0;\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long\
    \ evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin2 = lst2[0];\n\
    \    long oddMin2 = lst2[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i]\
    \ % 2 == 0) {\n            even = even + lst1[i];\n            evenCount = evenCount\
    \ + 1;\n            evenSum = evenSum + lst1[i];\n            if (lst1[i] < evenMin)\
    \ {\n                evenMin = lst1[i];\n            }\n            if (lst1[i]\
    \ > evenMax) {\n                evenMax = lst1[i];\n            }\n        }\n\
    \        else {\n            odd = odd + lst1[i];\n            oddCount = oddCount\
    \ + 1;\n            oddSum = oddSum + lst1[i];\n            if (lst1[i] < oddMin)\
    \ {\n                oddMin = lst1[i];\n            }\n            if (lst1[i]\
    \ > oddMax) {\n                oddMax = lst1[i];\n            }\n        }\n \
    \   }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 ==\
    \ 0) {\n            even = even + lst2[i];\n            evenCount = evenCount\
    \ + 1;\n            evenSum = evenSum + lst2[i];\n            if (lst2[i] < evenMin2)\
    \ {\n                evenMin2 = lst2[i];\n            }\n            if (lst2[i]\
    \ > evenMax2) {\n                evenMax2 = lst2[i];\n            }\n        }\n\
    \        else {\n            odd = odd + lst2[i];\n            oddCount = oddCount\
    \ + 1;\n            oddSum = oddSum + lst2[i];\n            if (lst2[i] < oddMin2)\
    \ {\n                oddMin2 = lst2[i];\n            }\n            if (lst2[i]\
    \ > oddMax2) {\n                oddMax2 = lst2[i];\n            }\n        }\n\
    \    }\n    if (evenCount == lst1.size()) {\n        if (evenSum == even) {\n\
    \            return \"YES\";\n        }\n        else {\n            return \"\
    NO\";\n        }\n    }\n    else if (oddCount == lst1.size()) {\n        if (oddSum\
    \ == odd) {\n            return \"YES\";\n        }\n        else {\n        \
    \    return \"NO\";\n        }\n    }\n    else if (evenCount == lst2.size())\
    \ {\n        if (evenSum == even) {\n            return \"YES\";\n        }\n\
    \        else {\n            return \"", "    // Your code here\n    ", "    //\
    \ Your code here\n    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n\
    \    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long even4 =\
    \ 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6\
    \ = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long\
    \ even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n  \
    \  long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long odd11\
    \ = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long\
    \ odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n\
    \    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long even17\
    \ = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long\
    \ even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n\
    \    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long odd22\
    \ = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long\
    \ odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n\
    \    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long even28\
    \ = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long\
    \ even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n\
    \    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long odd33\
    \ = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long\
    \ odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n\
    \    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long even39\
    \ = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long\
    \ even41 = 1;\n    long odd41 = 1;\n    long even42 = 1;\n    long odd42 = 1;\n\
    \    long even43 = 1;\n    long odd43 = 1;", "    long even = 0;\n    long odd\
    \ = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n\
    \    long eveneveneven = 0;\n    long evenoddodd = 0;\n    long oddoddeven = 0;\n\
    \    long oddoddodd = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneveneven = 0;\n  \
    \  long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n  \
    \  long eveneveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneveneven\
    \ = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n\
    \    long evenoddoddoddeven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n\
    \    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneven", "    // Your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 ==\
    \ 0) {\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++) {\n        if(lst2[i] % 2 == 0) {\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    for(long i = 0; i < even.size(); i++) {\n        if(even[i]\
    \ != lst1[i] && even[i] != lst2[i]) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax\
    \ = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long\
    \ evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n\
    \    long oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 =\
    \ lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long\
    \ evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n\
    \    long oddMin4 = lst2[0];\n    for (long i = 0; i < lst1.size(); i++) {\n \
    \       if (lst1[i] > evenMax) {\n            evenMax = lst1[i];\n        }\n\
    \        if (lst1[i] < evenMin) {\n            evenMin = lst1[i];\n        }\n\
    \        if (lst1[i] > evenMax2) {\n            evenMax2 = lst1[i];\n        }\n\
    \        if (lst1[i] < evenMin2) {\n            evenMin2 = lst1[i];\n        }\n\
    \        if (lst1[i] > evenMax3) {\n            evenMax3 = lst1[i];\n        }\n\
    \        if (lst1[i] < evenMin3) {\n            evenMin3 = lst1[i];\n        }\n\
    \        if (lst1[i] > evenMax4) {\n            evenMax4 = lst1[i];\n        }\n\
    \        if (lst1[i] < evenMin4) {\n            evenMin4 = lst1[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] > oddMax)\
    \ {\n            oddMax = lst2[i];\n        }\n        if (lst2[i] < oddMin) {\n\
    \            oddMin = lst2[i];\n        }\n        if (lst2[i] > oddMax2) {\n\
    \            oddMax2 = lst2[i];\n        }\n        if (lst2[i] < oddMin2) {\n\
    \            oddMin2 = lst2[i];\n        }\n        if (lst2[i] > oddMax3) {\n\
    \            oddMax3 = lst2[i];\n        }\n        if (lst2[i] < oddMin3) {\n\
    \            oddMin3 = lst2[i];\n        }\n        if (lst2[i] > oddMax4) {\n\
    \            oddMax4 = lst2[i];\n        }\n        if (lst2[i] < oddMin4) {\n\
    \            oddMin4 = lst2[i];\n        }\n    }\n    for (", "    // Write your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n\
    \    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 =\
    \ lst2[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long\
    \ evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n    long evenMax3 = lst1[0];\n\
    \    long oddMax3 = lst1[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 =\
    \ lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long\
    \ evenMin5 = lst1[0];\n    long oddMin5 = lst1[0];\n    long evenMax5 = lst1[0];\n\
    \    long oddMax5 = lst1[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 =\
    \ lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long\
    \ evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n    long evenMax7 = lst1[0];\n\
    \    long oddMax7 = lst1[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 =\
    \ lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long\
    \ evenMin9 = lst1[0];\n    long oddMin9 = lst1[0];\n    long evenMax9 = lst1[0];\n\
    \    long oddMax9 = lst1[0];\n    long evenMin10 = lst2[0];\n    long oddMin10\
    \ = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n  \
    \  long evenMin11 = lst1[0];\n    long oddMin11 = lst1[0];\n    long evenMax11\
    \ = lst1[0];\n    long oddMax11 = lst1[0];\n    long evenMin12 = lst2[0];\n  \
    \  long oddMin12 = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12\
    \ = lst2[0];\n    long evenMin13 = lst1[0];\n    long oddMin13 = lst1[0];\n  \
    \  long evenMax13 = lst1[0];\n    long oddMax13 = lst1[0];\n    ", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = std::numeric_limits<long>::max();\n    long oddMax = std::numeric_limits<long>::max();\n\
    \    long evenMin = std::numeric_limits<long>::min();\n    long oddMin = std::numeric_limits<long>::min();\n\
    \    long evenMaxIndex = 0;\n    long oddMaxIndex = 0;\n    long evenMinIndex\
    \ = 0;\n    long oddMinIndex = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex\
    \ = 0;\n    long evenCountIndex = 0;\n    long oddCountIndex = 0;\n    long evenSumIndex\
    \ = 0;\n    long oddSumIndex = 0;\n    long evenMaxIndex = 0;\n    long oddMaxIndex\
    \ = 0;\n    long evenMinIndex = 0;\n    long oddMinIndex = 0;\n    long evenSumIndex\
    \ = 0;\n    long oddSumIndex = 0;\n    long evenCountIndex = 0;\n    long oddCountIndex\
    \ = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex = 0;\n    long evenMaxIndex\
    \ = 0;\n    long oddMaxIndex = 0;\n    long evenMinIndex = 0;\n    long oddMinIndex\
    \ = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex = 0;\n    long evenCountIndex\
    \ = 0;\n    long oddCountIndex = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex\
    \ = 0;\n    long evenMaxIndex = 0;\n    long oddMaxIndex = 0;\n    long evenMinIndex\
    \ = 0;\n    long oddMinIndex = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex\
    \ = 0;\n    long evenCountIndex = 0;\n    long oddCountIndex = 0;\n    long evenSumIndex\
    \ = 0;\n    long oddSumIndex = 0;\n    long evenCountIndex = 0;\n    long oddCountIndex\
    \ = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex = 0;\n    long evenCountIndex\
    \ = 0;\n    long oddCountIndex = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex\
    \ = 0;\n    long evenCountIndex = 0;\n    long oddCountIndex = 0;\n    long evenSumIndex\
    \ = 0;\n    long oddSumIndex = 0;\n    long evenCountIndex = 0;\n    long oddCountIndex\
    \ = 0;\n    long evenSumIndex = 0;\n    long oddSumIndex = 0;\n    long evenCountIndex\
    \ = 0;\n    long oddCountIndex = 0;\n    long evenSumIndex = 0;\n    long oddSum",
  "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  // Write your code here\n    ", "    // Write your code here\n    std::vector<long>\
    \ even;\n    even.clear();\n    for (long i = 0; i < lst1.size(); i++) {\n   \
    \     if (lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n        }\n\
    \    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2\
    \ == 0) {\n            even.push_back(lst2[i]);\n        }\n    }\n    if (even.size()\
    \ == lst1.size()) {\n        return \"YES\";\n    }\n    return \"NO\";", "  \
    \  // Write your code here\n    long even = 0;\n    long odd = 0;\n    long even2\
    \ = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long\
    \ even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n  \
    \  long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n\
    \    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 =\
    \ 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long\
    \ odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n\
    \    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15\
    \ = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long\
    \ even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n\
    \    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20\
    \ = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long\
    \ odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n\
    \    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26\
    \ = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long\
    \ even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n\
    \    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31\
    \ = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long\
    \ odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n\
    \    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37\
    \ = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long\
    \ even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n\
    \    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long odd42\
    \ = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ", "    // Write your code\
    \ here\n    \n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long\
    \ count = 0;\n    long sum = 0;\n    \n    for(long i = 0; i < lst1.size(); i++){\n\
    \        sum += lst1[i];\n    }\n    \n    for(long i = 0; i < lst2.size(); i++){\n\
    \        sum += lst2[i];\n    }\n    \n    for(long i = 0; i < lst1.size(); i++){\n\
    \        temp = lst1[i];\n        lst1[i] = lst2[i];\n        lst2[i] = temp;\n\
    \    }\n    \n    for(long i = 0; i < lst1.size(); i++){\n        if(lst1[i] %\
    \ 2 == 0){\n            even++;\n        }\n        else{\n            odd++;\n\
    \        }\n    }\n    \n    if(sum == even){\n        return \"YES\";\n    }\n\
    \    else if(sum == odd){\n        return \"NO\";\n    }\n    else{\n        return\
    \ \"NO\";\n    }", "    // Your code here\n    std::vector<long> even;\n    for(long\
    \ i = 0; i < lst1.size(); i++){\n        if(lst1[i] % 2 == 0){\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i]\
    \ % 2 == 0){\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++){\n        if(even[i] != even[even.size() - 1]){\n\
    \            even.erase(even.begin() + i);\n        }\n    }\n    if(even.size()\
    \ == 0){\n        return \"NO\";\n    }\n    return \"YES\";", "    // Write your\
    \ code here\n    long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n        if (sum\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    if (even > odd) {\n        return \"NO\";\n    } else {\n\
    \        return \"YES\";\n    }", "    // Write your code here\n    \n    \n \
    \   return \"\";", "    // Write your code here\n    std::vector<long> even;\n\
    \    even.reserve(lst1.size());\n    for (long i : lst1) {\n        if (i % 2\
    \ == 0) {\n            even.push_back(i);\n        }\n    }\n    even.insert(even.end(),\
    \ lst2.begin(), lst2.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    if (even.size() == lst1.size()) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n\
    \        } else {\n            odd = odd + lst1[i];\n        }\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n    \
    \        even = even + lst2[i];\n        } else {\n            odd = odd + lst2[i];\n\
    \        }\n    }\n    if (even > odd) {\n        return \"NO\";\n    } else {\n\
    \        return \"YES\";\n    }", "    // Your code here\n    std::vector<long>\
    \ even;\n    even.reserve(lst1.size());\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    even.insert(even.end(), lst2.begin(), lst2.end());\n  \
    \  even.erase(std::unique(even.begin(), even.end()), even.end());\n    if (even.size()\
    \ == lst1.size()) {\n        return \"YES\";\n    }\n    return \"NO\";", "  \
    \  // Your code here\n    long even = 0;\n    long odd = 0;\n    long eveneven\
    \ = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n\
    \    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n\
    \    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    ", "    // Write your\
    \ code here\n    std::vector<long> even;\n    for(long i=0;i<lst1.size();i++){\n\
    \        if(lst1[i]%2==0){\n            even.push_back(lst1[i]);\n        }\n\
    \    }\n    for(long i=0;i<lst2.size();i++){\n        if(lst2[i]%2==0){\n    \
    \        even.push_back(lst2[i]);\n        }\n    }\n    if(even.size()==lst1.size()){\n\
    \        return \"YES\";\n    }\n    return \"NO\";", "    // Write your code\
    \ here\n    ", "    // Write your code here\n    std::vector<long> even;\n   \
    \ even.reserve(lst1.size());\n    for (long i = 0; i < lst1.size(); i++) {\n \
    \       if (lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n      \
    \  }\n    }\n    std::vector<long> even2;\n    even2.reserve(lst2.size());\n \
    \   for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n\
    \            even2.push_back(lst2[i]);\n        }\n    }\n    if (even.size()\
    \ == even2.size()) {\n        for (long i = 0; i < even.size(); i++) {\n     \
    \       if (even[i] != even2[i]) {\n                return \"NO\";\n         \
    \   }\n        }\n        return \"YES\";\n    }\n    return \"NO\";", "    //\
    \ Write your code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++){\n        if(lst1[i] % 2 == 0){\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i]\
    \ % 2 == 0){\n            even.push_back(lst2[i]);\n        }\n    }\n    if(even.size()\
    \ == lst1.size()){\n        return \"YES\";\n    }\n    return \"NO\";", "   \
    \ // Write your code here\n    std::vector<long> even;\n    even.push_back(lst1[0]);\n\
    \    even.push_back(lst2[0]);\n    even.push_back(lst1[1]);\n    even.push_back(lst2[1]);\n\
    \    even.push_back(lst1[2]);\n    even.push_back(lst2[2]);\n    even.push_back(lst1[3]);\n\
    \    even.push_back(lst2[3]);\n    even.push_back(lst1[4]);\n    even.push_back(lst2[4]);\n\
    \    even.push_back(lst1[5]);\n    even.push_back(lst2[5]);\n    even.push_back(lst1[6]);\n\
    \    even.push_back(lst2[6]);\n    even.push_back(lst1[7]);\n    even.push_back(lst2[7]);\n\
    \    even.push_back(lst1[8]);\n    even.push_back(lst2[8]);\n    even.push_back(lst1[9]);\n\
    \    even.push_back(lst2[9]);\n    even.push_back(lst1[10]);\n    even.push_back(lst2[10]);\n\
    \    even.push_back(lst1[11]);\n    even.push_back(lst2[11]);\n    even.push_back(lst1[12]);\n\
    \    even.push_back(lst2[12]);\n    even.push_back(lst1[13]);\n    even.push_back(lst2[13]);\n\
    \    even.push_back(lst1[14]);\n    even.push_back(lst2[14]);\n    even.push_back(lst1[15]);\n\
    \    even.push_back(lst2[15]);\n    even.push_back(lst1[16]);\n    even.push_back(lst2[16]);\n\
    \    even.push_back(lst1[17]);\n    even.push_back(lst2[17]);\n    even.push_back(lst1[18]);\n\
    \    even.push_back(lst2[18]);\n    even.push_back(lst1[19]);\n    even.push_back(lst2[19]);\n\
    \    even.push_back(lst1[20]);\n    even.push_back(lst2[20]);\n    even.push_back(lst1[21]);\n\
    \    even.push_back(lst2[21]);\n    even.push_back(lst1[22]);\n    even.push_back(lst2[22]);\n\
    \    even.push_back(lst1[23]);\n    even.push_back(lst2[23]);\n    even.push_back(lst1[24]);\n\
    \    even.push_back(lst2[24]);\n    even.push_back(lst1[25]);\n    even.push_back(lst2[25]);\n\
    \    even.push_back(lst1[26]);\n    even.push_back(lst2[26]);\n    even.push_back(lst1[27]);\n\
    \    even.push_back(lst2[27", "    // Your code here\n    ", "    // Write your\
    \ code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++) {\n        if(lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++) {\n        if(lst2[i]\
    \ % 2 == 0) {\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++) {\n        if(even[i] != even[even.size()-1]) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";", "    // Your\
    \ code here\n    ", "    // Write your code here\n    std::vector<long> even;\n\
    \    for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 == 0) {\n\
    \            even.push_back(lst1[i]);\n        }\n    }\n    for(long i = 0; i\
    \ < lst2.size(); i++) {\n        if(lst2[i] % 2 == 0) {\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    for(long i = 0; i < even.size(); i++) {\n        if(even[i]\
    \ != even[even.size()-1]) {\n            even.push_back(even[i]);\n        }\n\
    \    }\n    for(long i = 0; i < even.size(); i++) {\n        if(even[i] != even[even.size()-1])\
    \ {\n            even.push_back(even[i]);\n        }\n    }\n    if(even.size()\
    \ == lst1.size()) {\n        return \"YES\";\n    }\n    return \"NO\";", "  \
    \  // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    for (long i = 0; i < lst1.size(); i++) {\n  \
    \      if (lst1[i] > evenMax) {\n            evenMax = lst1[i];\n        }\n \
    \       if (lst1[i] < evenMin) {\n            evenMin = lst1[i];\n        }\n\
    \        if (lst2[i] > oddMax) {\n            oddMax = lst2[i];\n        }\n \
    \       if (lst2[i] < oddMin) {\n            oddMin = lst2[i];\n        }\n  \
    \  }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 ==\
    \ 0) {\n            evenCount++;\n            evenSum += lst1[i];\n        }\n\
    \        else {\n            oddCount++;\n            oddSum += lst1[i];\n   \
    \     }\n    }\n    if (evenCount == 0 && oddCount == 0) {\n        return \"\
    NO\";\n    }\n    if (evenCount == 0 && oddCount != 0) {\n        return \"NO\"\
    ;\n    }\n    if (evenCount != 0 && oddCount == 0) {\n        return \"NO\";\n\
    \    }\n    if (evenCount != 0 && oddCount != 0) {\n        if (evenSum == oddSum)\
    \ {\n            return \"YES\";\n        }\n        else {\n            return\
    \ \"NO\";\n        }\n    }", "    // Write your code here\n    \n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++){\n        if(lst1[i] % 2 ==\
    \ 0){\n            even.push_back(lst1[i]);\n        }\n    }\n    \n    for(long\
    \ i = 0; i < lst2.size(); i++){\n        if(lst2[i] % 2 == 0){\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    \n    for(long i = 0; i < even.size(); i++){\n        if(even[i]\
    \ != lst1[i] && even[i] != lst2[i]){\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n    long oddodd\
    \ = 0;\n    long eveneveneven = 0;\n    long evenoddodd = 0;\n    long oddoddeven\
    \ = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    ", "    // Write your code here\n    std::vector<long> even;\n   \
    \ for(long i=0;i<lst1.size();i++){\n        if(lst1[i]%2==0){\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i=0;i<lst2.size();i++){\n        if(lst2[i]%2==0){\n\
    \            even.push_back(lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++){\n\
    \        if(even[i]<lst1[i]){\n            std::swap(even[i],lst1[i]);\n     \
    \   }\n    }\n    for(long i=0;i<even.size();i++){\n        if(even[i]<lst2[i]){\n\
    \            std::swap(even[i],lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++){\n\
    \        if(even[i]==lst1[i]){\n            std::swap(even[i],lst1[i]);\n    \
    \    }\n    }\n    for(long i=0;i<even.size();i++){\n        if(even[i]==lst2[i]){\n\
    \            std::swap(even[i],lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++){\n\
    \        if(even[i]<lst1[i]){\n            std::swap(even[i],lst1[i]);\n     \
    \   }\n    }\n    for(long i=0;i<even.size();i++){\n        if(even[i]<lst2[i]){\n\
    \            std::swap(even[i],lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++){\n\
    \        if(even[i]==lst1[i]){\n            std::swap(even[i],lst1[i]);\n    \
    \    }\n    }\n    for(long i=0;i<even.size();i++){\n        if(even[i]==lst2[i]){\n\
    \            std::swap(even[i],lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++){\n\
    \        if(even[i]<lst1[i]){\n            std::swap(even[i],lst1[i]);\n     \
    \   }\n    }\n    for(long i=0;i<even.size();i++){\n        if(even[i]<lst2[i]){\n\
    \            std::swap(even[i],lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++){\n\
    \        if(even[i]==lst1[i]){\n            std::swap(even[i],lst1[i]);\n    \
    \    }\n    }\n    for(long i=0;i<even.size();i++){\n        if(even[i]==lst2[i]){\n\
    \            std::swap(even[i],lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++",
  '    // Your code here', "    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMinSum = std::numeric_limits<long>::max();\n    long oddMinSum =\
    \ std::numeric_limits<long>::max();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    long evenMinCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinCount = std::numeric_limits<long>::max();\n\
    \    long evenMaxCount = std::numeric_limits<long>::max();\n    long oddMaxCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinSumCount = std::numeric_limits<long>::max();\n\
    \    long oddMinSumCount = std::numeric_limits<long>::max();\n    long evenMaxSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMaxSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMinCountSum = std::numeric_limits<long>::max();\n    long oddMinCountSum\
    \ = std::numeric_limits<long>::max();\n    long evenMaxCountSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxCountSum = std::numeric_limits<long>::max();\n    long evenMinSumCountSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinSumCountSum = std::numeric_limits<long>::max();\n\
    \    long evenMaxSumCountSum = std::numeric_limits<long>::max();\n    long oddMaxSumCountSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinCountSumCount = std::numeric_limits<long>::max();\n\
    \    long oddMinCountSumCount = std::numeric_limits<long>::max();\n    long evenMaxCountSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMaxCountSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMinSumCountSumCount = std::numeric_limits<long>::max();\n    long\
    \ oddMinSumCountSumCount = std::numeric_limits<long>::max();\n    long evenMaxSumCountSumCount\
    \ = std::numeric_limits<long>::max();", "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n\
    \    long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = INT_MAX;\n  \
    \  long oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = 0;\n    long\
    \ oddMin2 = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMin3 = 0;\n    long oddMin3 = 0;\n\
    \    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenMax4\
    \ = 0;\n    long oddMax4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long evenMax5 = 0;\n    long\
    \ oddMax5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMin6\
    \ = 0;\n    long oddMin6 = 0;\n    long evenMax6 = 0;\n    long oddMax6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMin7 = 0;\n    long\
    \ oddMin7 = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMin8 = 0;\n    long oddMin8 = 0;\n\
    \    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenMax9\
    \ = 0;\n    long oddMax9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMin10 = 0;\n    long oddMin10 = 0;\n    long evenMax10 = 0;\n  \
    \  long oddMax10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMin11 = 0;\n    long oddMin11 = 0;\n    long evenMax11 = 0;\n    long oddMax11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMin12 =\
    \ 0;\n    long oddMin12 = 0;\n    long evenMax12 = 0;\n    long oddMax12 = 0;",
  "    // Write your code here\n    std::vector<long> even;\n    even.push_back(lst1[0]);\n\
    \    even.push_back(lst2[0]);\n    even.push_back(lst1[1]);\n    even.push_back(lst2[1]);\n\
    \    even.push_back(lst1[2]);\n    even.push_back(lst2[2]);\n    even.push_back(lst1[3]);\n\
    \    even.push_back(lst2[3]);\n    even.push_back(lst1[4]);\n    even.push_back(lst2[4]);\n\
    \    even.push_back(lst1[5]);\n    even.push_back(lst2[5]);\n    even.push_back(lst1[6]);\n\
    \    even.push_back(lst2[6]);\n    even.push_back(lst1[7]);\n    even.push_back(lst2[7]);\n\
    \    even.push_back(lst1[8]);\n    even.push_back(lst2[8]);\n    even.push_back(lst1[9]);\n\
    \    even.push_back(lst2[9]);\n    even.push_back(lst1[10]);\n    even.push_back(lst2[10]);\n\
    \    even.push_back(lst1[11]);\n    even.push_back(lst2[11]);\n    even.push_back(lst1[12]);\n\
    \    even.push_back(lst2[12]);\n    even.push_back(lst1[13]);\n    even.push_back(lst2[13]);\n\
    \    even.push_back(lst1[14]);\n    even.push_back(lst2[14]);\n    even.push_back(lst1[15]);\n\
    \    even.push_back(lst2[15]);\n    even.push_back(lst1[16]);\n    even.push_back(lst2[16]);\n\
    \    even.push_back(lst1[17]);\n    even.push_back(lst2[17]);\n    even.push_back(lst1[18]);\n\
    \    even.push_back(lst2[18]);\n    even.push_back(lst1[19]);\n    even.push_back(lst2[19]);\n\
    \    even.push_back(lst1[20]);\n    even.push_back(lst2[20]);\n    even.push_back(lst1[21]);\n\
    \    even.push_back(lst2[21]);\n    even.push_back(lst1[22]);\n    even.push_back(lst2[22]);\n\
    \    even.push_back(lst1[23]);\n    even.push_back(lst2[23]);\n    even.push_back(lst1[24]);\n\
    \    even.push_back(lst2[24]);\n    even.push_back(lst1[25]);\n    even.push_back(lst2[25]);\n\
    \    even.push_back(lst1[26]);\n    even.push_back(lst2[26]);\n    even.push_back(lst1[27]);\n\
    \    even.push_back(lst2[27", "    long even = 0;\n    long odd = 0;\n    long\
    \ sum = 0;\n    long count = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n\
    \        sum += lst1[i];\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n\
    \        sum += lst2[i];\n    }\n    for (long i = 0; i < lst1.size(); i++) {\n\
    \        if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n       \
    \ } else {\n            odd = odd + lst1[i];\n        }\n    }\n    for (long\
    \ i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n          \
    \  even = even + lst2[i];\n        } else {\n            odd = odd + lst2[i];\n\
    \        }\n    }\n    if (sum % 2 == 0) {\n        if (even > odd) {\n      \
    \      return \"YES\";\n        } else {\n            return \"NO\";\n       \
    \ }\n    } else {\n        if (even < odd) {\n            return \"YES\";\n  \
    \      } else {\n            return \"NO\";\n        }\n    }", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = std::numeric_limits<long>::max();\n    long oddMax = std::numeric_limits<long>::max();\n\
    \    long evenMin = std::numeric_limits<long>::min();\n    long oddMin = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long\
    \ oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n\
    \    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4\
    \ = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long\
    \ oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6\
    \ = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long\
    \ oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n\
    \    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9\
    \ = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n  \
    \  long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 =\
    \ 0;\n", "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long eveneven = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long\
    \ eveneveneven = 0;\n    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long\
    \ oddoddodd = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n\
    \    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven", "    // Your\
    \ code goes here\n    \n    \n    return \"\";", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long\
    \ oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n\
    \    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4\
    \ = lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long\
    \ oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n\
    \    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6\
    \ = lst2[0];\n    long oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long\
    \ oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n\
    \    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8\
    \ = lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long\
    \ oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n\
    \    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10\
    \ = lst2[0];\n    long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n  \
    \  long oddMax11 = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11\
    \ = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n  \
    \  long evenMin12 = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13\
    \ = lst2[0];\n    long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n  \
    \  long oddMin13 = lst2[0];\n    ", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = lst1[0];\n   \
    \ long oddMin = lst1[0];\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = 0;\n    long\
    \ oddMin2 = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMin3 = 0;\n    long oddMin3 = 0;\n\
    \    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenMax4\
    \ = 0;\n    long oddMax4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long evenMax5 = 0;\n    long\
    \ oddMax5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMin6\
    \ = 0;\n    long oddMin6 = 0;\n    long evenMax6 = 0;\n    long oddMax6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMin7 = 0;\n    long\
    \ oddMin7 = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMin8 = 0;\n    long oddMin8 = 0;\n\
    \    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenMax9\
    \ = 0;\n    long oddMax9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMin10 = 0;\n    long oddMin10 = 0;\n    long evenMax10 = 0;\n  \
    \  long oddMax10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMin11 = 0;\n    long oddMin11 = 0;\n    long evenMax11 = 0;\n    long oddMax11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMin12 =\
    \ 0;\n    long oddMin12 = 0;\n    long evenMax12 = 0;\n    long oddMax12 = 0;",
  "    // Your code here\n    ", "    // Write your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 ==\
    \ 0) {\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++) {\n        if(lst2[i] % 2 == 0) {\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    if(even.size() == lst1.size()) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }", "    // Your code here\n    std::vector<long>\
    \ even;\n    even.clear();\n    even.insert(even.end(), lst1.begin(), lst1.end());\n\
    \    even.insert(even.end(), lst2.begin(), lst2.end());\n    even.erase(std::unique(even.begin(),\
    \ even.end()), even.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    if (even.size() == lst1.size()) {\n        return \"YES\"\
    ;\n    }\n    return \"NO\";", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMin = lst1[0];\n    long oddMin\
    \ = lst1[0];\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n    \
    \        even = even + lst1[i];\n            evenCount = evenCount + 1;\n    \
    \        evenSum = evenSum + lst1[i];\n            evenMin = std::min(evenMin,\
    \ lst1[i]);\n            evenMax = std::max(evenMax, lst1[i]);\n        } else\
    \ {\n            odd = odd + lst1[i];\n            oddCount = oddCount + 1;\n\
    \            oddSum = oddSum + lst1[i];\n            oddMin = std::min(oddMin,\
    \ lst1[i]);\n            oddMax = std::max(oddMax, lst1[i]);\n        }\n    }\n\
    \    if (evenCount == lst2.size()) {\n        if (evenSum == even) {\n       \
    \     return \"YES\";\n        } else {\n            return \"NO\";\n        }\n\
    \    }\n    if (oddCount == lst2.size()) {\n        if (oddSum == odd) {\n   \
    \         return \"YES\";\n        } else {\n            return \"NO\";\n    \
    \    }\n    }\n    if (evenCount > lst2.size()) {\n        if (evenSum == even)\
    \ {\n            return \"YES\";\n        } else {\n            return \"NO\"\
    ;\n        }\n    }\n    if (oddCount > lst2.size()) {\n        if (oddSum ==\
    \ odd) {\n            return \"YES\";\n        } else {\n            return \"\
    NO\";\n        }\n    }\n    if (evenCount < lst2.size()) {\n        if (evenSum\
    \ == even) {\n            return \"YES\";\n        } else {\n            return\
    \ \"NO\";\n        }\n    }\n    if (oddCount < lst2.size()) {\n        if (oddSum\
    \ == odd) {\n            return \"YES\";\n        } else {\n            return\
    \ \"NO\";\n        }\n    }\n    if (evenCount > lst2.size() && oddCount > lst2.size())\
    \ {\n        if (evenSum == even) {\n            return \"YES\";\n        } else\
    \ {\n            return \"NO\";\n        }\n    }\n    if (evenCount < lst2.size()\
    \ && oddCount < lst2.size()) {\n        if (evenSum == even) {\n            return\
    \ \"YES\";\n        } else {\n            return \"NO\";\n        }\n    }\n \
    \   if (evenCount == lst2.size() && oddCount == lst2.size()) {\n        if (evenSum\
    \ == even) {\n            return \"YES\";\n        } else {\n            return\
    \ \"NO\";\n        }\n    }\n    if (evenCount == lst2.size() && oddCount != lst2.size())\
    \ {\n", "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 =\
    \ 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5\
    \ = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long\
    \ odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n  \
    \  long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11\
    \ = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long\
    \ even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n\
    \    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16\
    \ = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long\
    \ odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n\
    \    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22\
    \ = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long\
    \ even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n\
    \    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27\
    \ = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long\
    \ odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n\
    \    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33\
    \ = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long\
    \ even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n\
    \    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38\
    \ = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long\
    \ odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n\
    \    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ", "    //\
    \ Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        even = lst1[i];\n     \
    \   odd = lst2[i];\n        evenCount = 1;\n        oddCount = 1;\n        evenSum\
    \ = evenSum + even;\n        oddSum = oddSum + odd;\n        evenMin = min(even,\
    \ evenMin);\n        oddMin = min(odd, oddMin);\n        evenMax = max(even, evenMax);\n\
    \        oddMax = max(odd, oddMax);\n        if (even % 2 == 0 && odd % 2 == 0)\
    \ {\n            evenCount = evenCount + 1;\n            evenSum = evenSum + even;\n\
    \            evenMin = min(even, evenMin);\n            evenMax = max(even, evenMax);\n\
    \        }\n        if (even % 2 != 0 && odd % 2 != 0) {\n            oddCount\
    \ = oddCount + 1;\n            oddSum = oddSum + odd;\n            oddMin = min(odd,\
    \ oddMin);\n            oddMax = max(odd, oddMax);\n        }\n    }\n    if (evenCount\
    \ == lst1.size()) {\n        return \"YES\";\n    }\n    if (oddCount == lst1.size())\
    \ {\n        return \"NO\";\n    }\n    if (evenCount == lst2.size()) {\n    \
    \    return \"NO\";\n    }\n    if (oddCount == lst2.size()) {\n        return\
    \ \"YES\";\n    }\n    if (evenSum == evenMin && oddSum == oddMin) {\n       \
    \ return \"YES\";\n    }\n    if (evenSum == evenMax && oddSum == oddMax) {\n\
    \        return \"YES\";\n    }\n    if (evenSum == oddMin && oddSum == evenMin)\
    \ {\n        return \"NO\";\n    }\n    if (evenSum == oddMax && oddSum == evenMax)\
    \ {\n        return \"NO\";\n    }\n    return \"NO\";", "    // Your code here\n\
    \    \n    \n    return \"\";", "    // Write your code here\n    std::vector<long>\
    \ even;\n    even.reserve(lst1.size());\n    for (long i : lst1) {\n        if\
    \ (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    even.clear();\n\
    \    for (long i : lst2) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n\
    \        }\n    }\n    if (even.size() == lst1.size()) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }", "    // Write your code here\n\
    \    std::vector<long> even;\n    even.reserve(lst1.size());\n    for (long i\
    \ : lst1) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n     \
    \   }\n    }\n    std::vector<long> even2;\n    even2.reserve(lst2.size());\n\
    \    for (long i : lst2) {\n        if (i % 2 == 0) {\n            even2.push_back(i);\n\
    \        }\n    }\n    std::vector<long> even3;\n    even3.reserve(lst1.size());\n\
    \    for (long i : even) {\n        even3.push_back(i);\n    }\n    std::vector<long>\
    \ even4;\n    even4.reserve(lst2.size());\n    for (long i : even2) {\n      \
    \  even4.push_back(i);\n    }\n    std::vector<long> even5;\n    even5.reserve(lst1.size());\n\
    \    for (long i : even3) {\n        even5.push_back(i);\n    }\n    std::vector<long>\
    \ even6;\n    even6.reserve(lst2.size());\n    for (long i : even4) {\n      \
    \  even6.push_back(i);\n    }\n    std::vector<long> even7;\n    even7.reserve(lst1.size());\n\
    \    for (long i : even5) {\n        even7.push_back(i);\n    }\n    std::vector<long>\
    \ even8;\n    even8.reserve(lst2.size());\n    for (long i : even6) {\n      \
    \  even8.push_back(i);\n    }\n    std::vector<long> even9;\n    even9.reserve(lst1.size());\n\
    \    for (long i : even7) {\n        even9.push_back(i);\n    }\n    std::vector<long>\
    \ even10;\n    even10.reserve(lst2.size());\n    for (long i : even8) {\n    \
    \    even10.push_back(i);\n    }\n    std::vector<long> even11;\n    even11.reserve(lst1.size());\n\
    \    for (long i : even9) {\n        even11.push_back(i);\n    }\n    std::vector<long>\
    \ even12;\n    even12.reserve(lst2.size());\n    for (long i : even10) {\n   \
    \     even12.push_back(i);\n    }\n    std::vector<long> even13;\n    even13.reserve(lst1.size());\n\
    \    for (long i : even11) {\n        even13.push_back(i);\n    }\n    std::vector<long>\
    \ even14;\n    even14.reserve(lst2.size());\n    for (long i : even12) {\n   \
    \     even14.push_back(i);\n    }\n    std::vector<long> even15;\n    even15.reserve(lst1.size());\n\
    \    for (long i : even13) {\n", "    // Write your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 ==\
    \ 0) {\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++) {\n        if(lst2[i] % 2 == 0) {\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    if(even.size() == lst1.size()) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }", '    // Your code here', "  \
    \  // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMinSum = std::numeric_limits<long>::max();\n    long oddMinSum =\
    \ std::numeric_limits<long>::max();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    long evenMinCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinCount = std::numeric_limits<long>::max();\n\
    \    long evenMaxCount = std::numeric_limits<long>::max();\n    long oddMaxCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinSum = std::numeric_limits<long>::max();\n\
    \    long oddMinSum = std::numeric_limits<long>::max();\n    long evenMaxSum =\
    \ std::numeric_limits<long>::max();\n    long oddMaxSum = std::numeric_limits<long>::max();\n\
    \    long evenMinCount = std::numeric_limits<long>::max();\n    long oddMinCount\
    \ = std::numeric_limits<long>::max();\n    long evenMaxCount = std::numeric_limits<long>::max();\n\
    \    long oddMaxCount = std::numeric_limits<long>::max();\n    long evenMinSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinSum = std::numeric_limits<long>::max();\n\
    \    long evenMaxSum = std::numeric_limits<long>::max();\n    long oddMaxSum =\
    \ std::numeric_limits<long>::max();\n    long evenMinCount = std::numeric_limits<long>::max();\n\
    \    long oddMinCount = std::numeric_limits<long>::max();\n    long evenMaxCount\
    \ = std::numeric_limits<long>::max();\n    long oddMaxCount = std::numeric_limits<long>::max();\n\
    \    long evenMinSum = std::numeric_limits<long>::max();\n    long oddMinSum =\
    \ std::numeric_limits<long>::max();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    long evenMinCount\
    \ = std::numeric_limits<", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n    long oddodd\
    \ = 0;\n    long eveneveneven = 0;\n    long evenoddodd = 0;\n    long oddoddeven\
    \ = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven", "    // Write\
    \ your code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    // Your code\
    \ here\n    long even = 0;\n    long odd = 0;\n    long eveneven = 0;\n    long\
    \ evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n    long evenoddodd\
    \ = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    ", "    long even = 0;\n    long odd\
    \ = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n\
    \    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenSumOfEven =\
    \ 0;\n    long oddSumOfEven = 0;\n    long evenSumOfOdd = 0;\n    long oddSumOfOdd\
    \ = 0;\n    long evenMaxOfEven = std::numeric_limits<long>::max();\n    long oddMaxOfOdd\
    \ = std::numeric_limits<long>::max();\n    long evenMinOfEven = std::numeric_limits<long>::min();\n\
    \    long oddMinOfOdd = std::numeric_limits<long>::min();\n    long evenMaxOfOdd\
    \ = std::numeric_limits<long>::max();\n    long evenMinOfOdd = std::numeric_limits<long>::min();\n\
    \    long evenSumOfOdd = 0;\n    long oddSumOfEven = 0;\n    long evenSumOfEven\
    \ = 0;\n    long oddSumOfOdd = 0;\n    long evenMaxOfOdd = std::numeric_limits<long>::max();\n\
    \    long evenMinOfOdd = std::numeric_limits<long>::min();\n    long evenMaxOfEven\
    \ = std::numeric_limits<long>::max();\n    long evenMinOfEven = std::numeric_limits<long>::min();\n\
    \    long evenSumOfEven = 0;\n    long oddSumOfOdd = 0;\n    long evenSumOfOdd\
    \ = 0;\n    long oddSumOfEven = 0;\n    long evenMaxOfEven = std::numeric_limits<long>::max();\n\
    \    long evenMinOfEven = std::numeric_limits<long>::min();\n    long evenMaxOfOdd\
    \ = std::numeric_limits<long>::max();\n    long evenMinOfOdd = std::numeric_limits<long>::min();\n\
    \    long evenSumOfOdd = 0;\n    long oddSumOfOdd = 0;\n    long evenSumOfEven\
    \ = 0;\n    long oddSumOfEven = 0;\n    long evenMaxOfEven = std::numeric_limits<long>::max();\n\
    \    long evenMinOfEven = std::numeric_limits<long>::min();\n    long evenMaxOfOdd\
    \ = std::numeric_limits<long>::max();\n    long evenMinOf", "    // Write your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n\
    \    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long\
    \ evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n\
    \    long oddMin3 = lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long\
    \ evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n\
    \    long oddMin5 = lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long\
    \ evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n\
    \    long oddMin7 = lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long\
    \ evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n\
    \    long oddMin9 = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n  \
    \  long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin11\
    \ = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax12 = lst2[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n  \
    \  long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n    ", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long\
    \ evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n\
    \    long oddMin3 = lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long\
    \ evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n\
    \    long oddMin5 = lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long\
    \ evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n\
    \    long oddMin7 = lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long\
    \ evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n\
    \    long oddMin9 = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n  \
    \  long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin11\
    \ = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax12 = lst2[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n  \
    \  long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n    ", '    // Your
    code here', "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            even = even + lst1[i];\n        } else {\n            odd = odd +\
    \ lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n \
    \       if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n        }\
    \ else {\n            odd = odd + lst2[i];\n        }\n    }\n    if (even > odd)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }", " \
    \   // Your code here\n    long even = 0;\n    long odd = 0;\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        sum\
    \ += lst1[i];\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        sum\
    \ += lst2[i];\n    }\n    for (long i = 0; i < lst1.size(); i++) {\n        if\
    \ (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n        } else {\n\
    \            odd = odd + lst1[i];\n        }\n    }\n    for (long i = 0; i <\
    \ lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            even = even\
    \ + lst2[i];\n        } else {\n            odd = odd + lst2[i];\n        }\n\
    \    }\n    if (sum % 2 == 0) {\n        if (even > odd) {\n            return\
    \ \"YES\";\n        } else {\n            return \"NO\";\n        }\n    } else\
    \ {\n        if (even < odd) {\n            return \"YES\";\n        } else {\n\
    \            return \"NO\";\n        }\n    }", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n\
    \    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 =\
    \ 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6\
    \ = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long\
    \ odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n \
    \   long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12\
    \ = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long\
    \ even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n\
    \    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17\
    \ = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long\
    \ odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n\
    \    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23\
    \ = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long\
    \ even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n\
    \    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28\
    \ = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long\
    \ odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n\
    \    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34\
    \ = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long\
    \ even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n\
    \    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39\
    \ = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long\
    \ odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n\
    \    long odd43 = 0;\n    ", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 =\
    \ 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5\
    \ = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long\
    \ even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n  \
    \  long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 =\
    \ 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long\
    \ odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n\
    \    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16\
    \ = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long\
    \ even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n\
    \    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21\
    \ = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long\
    \ odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n\
    \    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27\
    \ = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long\
    \ even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n\
    \    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32\
    \ = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long\
    \ odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n\
    \    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38\
    \ = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long\
    \ even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n\
    \    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43\
    \ = 0;\n    ", "    // Write your code here\n    std::vector<long> even;\n   \
    \ for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 == 0) {\n  \
    \          even.push_back(lst1[i]);\n        }\n    }\n    for(long i = 0; i <\
    \ lst2.size(); i++) {\n        if(lst2[i] % 2 == 0) {\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    for(long i = 0; i < even.size(); i++) {\n        if(even[i]\
    \ != even[even.size() - 1]) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";", '    // Your code here', "    // Write your code here\n\
    \    std::vector<long> even;\n    for(long i = 0; i < lst1.size(); i++){\n   \
    \     if(lst1[i] % 2 == 0){\n            even.push_back(lst1[i]);\n        }\n\
    \    }\n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i] % 2 ==\
    \ 0){\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < even.size(); i++){\n        if(even[i] != even[even.size() - 1]){\n\
    \            even.erase(even.begin() + i);\n        }\n    }\n    if(even.size()\
    \ == 0){\n        return \"NO\";\n    }\n    return \"YES\";", "    // Write your\
    \ code here\n    std::vector<long> even;\n    for(auto i : lst1){\n        if(i%2==0){\n\
    \            even.push_back(i);\n        }\n    }\n    for(auto i : lst2){\n \
    \       if(i%2==0){\n            even.push_back(i);\n        }\n    }\n    if(even.size()\
    \ == lst1.size()){\n        return \"YES\";\n    }\n    return \"NO\";", "   \
    \ // Your code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++) {\n        if(lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++) {\n        if(lst2[i]\
    \ % 2 == 0) {\n            even.push_back(lst2[i]);\n        }\n    }\n    if(even.size()\
    \ == lst1.size()) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }", "    // Your code here\n    std::vector<long> even;\n    even.reserve(lst1.size());\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            even.push_back(lst1[i]);\n        }\n    }\n    even.insert(even.end(),\
    \ lst2.begin(), lst2.end());\n    for (long i = 0; i < even.size(); i++) {\n \
    \       if (even[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long sum = 0;\n    long count = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long\
    \ t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n\
    \    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long\
    \ C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n\
    \    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long\
    \ L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n\
    \    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long\
    \ U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n\
    \    long Z = 0;\n    long AA = 0;\n    long BB = 0;\n    long CC = 0;\n    long\
    \ DD = 0;\n    long EE = 0;\n    long FF = 0;\n    long GG = 0;\n    long HH =\
    \ 0;\n    long II = 0;\n    long JJ = 0;\n    long KK = 0;\n    long LL = 0;\n\
    \    long MM = 0;\n    long NN = 0;\n    long OO = 0;\n    long PP = 0;\n    long\
    \ QQ = 0;\n    long RR = 0;\n    long SS = 0;\n    long TT = 0;\n    long UU =\
    \ 0;\n    long VV = 0;\n    long WW = 0;\n    long XX = 0;\n    long YY = 0;\n\
    \    long ZZ = 0;\n    long AAA = 0;\n    long BBB = 0;\n    long CCC = 0;\n \
    \   long DDD = 0;\n    long EEE = 0;\n    long FFF = 0;\n    long GGG = 0;\n \
    \   long HHH = 0;\n    long III = 0;\n    long JJJ = 0;\n    long KKK = 0;\n \
    \   long LLL = 0;\n    long MMM = 0;\n    long NNN = 0;\n    long OOO = 0;\n \
    \   long PPP = 0;\n    long QQQ = 0;\n    long RRR = 0;\n    long SSS = 0;\n \
    \   long TTT = 0;\n    long UUU = 0;\n    long VVV = 0;\n    long WWW = 0;\n \
    \   long XXX = 0;\n    long YYY", "    // Write your code here\n    long sum =\
    \ 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n\
    \    }\n    for (long i = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n\
    \    }\n    if (sum % 2 == 0) {\n        return \"YES\";\n    } else {\n     \
    \   return \"NO\";\n    }", "    // Write your code here\n    long sum = 0;\n\
    \    long even = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        sum\
    \ += lst1[i];\n        if (sum % 2 == 0) {\n            even++;\n        }\n \
    \   }\n    long even2 = even;\n    long even3 = even;\n    long even4 = even;\n\
    \    long even5 = even;\n    long even6 = even;\n    long even7 = even;\n    long\
    \ even8 = even;\n    long even9 = even;\n    long even10 = even;\n    long even11\
    \ = even;\n    long even12 = even;\n    long even13 = even;\n    long even14 =\
    \ even;\n    long even15 = even;\n    long even16 = even;\n    long even17 = even;\n\
    \    long even18 = even;\n    long even19 = even;\n    long even20 = even;\n \
    \   long even21 = even;\n    long even22 = even;\n    long even23 = even;\n  \
    \  long even24 = even;\n    long even25 = even;\n    long even26 = even;\n   \
    \ long even27 = even;\n    long even28 = even;\n    long even29 = even;\n    long\
    \ even30 = even;\n    long even31 = even;\n    long even32 = even;\n    long even33\
    \ = even;\n    long even34 = even;\n    long even35 = even;\n    long even36 =\
    \ even;\n    long even37 = even;\n    long even38 = even;\n    long even39 = even;\n\
    \    long even40 = even;\n    long even41 = even;\n    long even42 = even;\n \
    \   long even43 = even;\n    long even44 = even;\n    long even45 = even;\n  \
    \  long even46 = even;\n    long even47 = even;\n    long even48 = even;\n   \
    \ long even49 = even;\n    long even50 = even;\n    long even51 = even;\n    long\
    \ even52 = even;\n    long even53 = even;\n    long even54 = even;\n    long even55\
    \ = even;\n    long even56 = even;\n    long even57 = even;\n    long even58 =\
    \ even;\n    long even59 = even;\n    long even60 = even;\n    long even61 = even;\n",
  "    // Write your code here\n    std::vector<long> even;\n    even.reserve(lst1.size());\n\
    \    for(long i : lst1){\n        if(i%2==0){\n            even.push_back(i);\n\
    \        }\n    }\n    for(long i : lst2){\n        if(i%2==0){\n            even.push_back(i);\n\
    \        }\n    }\n    if(even.size()==lst1.size()){\n        return \"YES\";\n\
    \    }\n    return \"NO\";", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax\
    \ = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long\
    \ evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n\
    \    long oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 =\
    \ lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long\
    \ evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n\
    \    long oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long oddMax5 =\
    \ lst2[0];\n    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long\
    \ evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n\
    \    long oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long oddMax7 =\
    \ lst2[0];\n    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long\
    \ evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n\
    \    long oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long oddMax9 =\
    \ lst2[0];\n    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long\
    \ evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n\
    \    long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11\
    \ = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst2[0];\n  \
    \  long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13\
    \ = lst2[0];\n    ", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n   \
    \ long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n\
    \    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 =\
    \ 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9\
    \ = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long\
    \ even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n\
    \    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14\
    \ = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long\
    \ odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n\
    \    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20\
    \ = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long\
    \ even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n\
    \    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25\
    \ = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long\
    \ odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n\
    \    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31\
    \ = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long\
    \ even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n\
    \    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36\
    \ = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long\
    \ odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n\
    \    long odd40 = 0;\n    long even41 = 1;\n    long odd41 = 1;\n    long even42\
    \ = 1;\n    long odd42 = 1;\n    long even43 = 1;\n    long odd43 = 1;", "   \
    \ // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 =\
    \ lst2[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long\
    \ evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long evenMax3 = lst2[0];\n\
    \    long oddMax3 = lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 =\
    \ lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long\
    \ evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long evenMax5 = lst2[0];\n\
    \    long oddMax5 = lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 =\
    \ lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long\
    \ evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long evenMax7 = lst2[0];\n\
    \    long oddMax7 = lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 =\
    \ lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long\
    \ evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long evenMax9 = lst2[0];\n\
    \    long oddMax9 = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10\
    \ = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n  \
    \  long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax11\
    \ = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin12 = lst2[0];\n  \
    \  long oddMin12 = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12\
    \ = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n  \
    \  long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n    ", "    // Write\
    \ your code here\n    \n    std::vector<long> even;\n    even.reserve(lst1.size());\n\
    \    for(auto &i : lst1){\n        if(i%2==0){\n            even.push_back(i);\n\
    \        }\n    }\n    \n    for(auto &i : lst2){\n        if(i%2==0){\n     \
    \       even.push_back(i);\n        }\n    }\n    \n    for(auto &i : even){\n\
    \        if(lst1.size()==0){\n            return \"NO\";\n        }\n        for(auto\
    \ &j : even){\n            if(j==i){\n                continue;\n            }\n\
    \            if(lst1.size()==0){\n                return \"NO\";\n           \
    \ }\n            if(lst1[j-1]>lst1[j]){\n                lst1.erase(lst1.begin()+j);\n\
    \                lst1.insert(lst1.begin()+j, i);\n                lst2.erase(lst2.begin()+j);\n\
    \                lst2.insert(lst2.begin()+j, i);\n                \n         \
    \   }\n        }\n    }\n    return \"YES\";", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax3 = lst1[0];\n    long\
    \ oddMax3 = lst1[0];\n    long evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n\
    \    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4\
    \ = lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax5 = lst1[0];\n    long\
    \ oddMax5 = lst1[0];\n    long evenMin5 = lst1[0];\n    long oddMin5 = lst1[0];\n\
    \    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6\
    \ = lst2[0];\n    long oddMin6 = lst2[0];\n    long evenMax7 = lst1[0];\n    long\
    \ oddMax7 = lst1[0];\n    long evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n\
    \    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8\
    \ = lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax9 = lst1[0];\n    long\
    \ oddMax9 = lst1[0];\n    long evenMin9 = lst1[0];\n    long oddMin9 = lst1[0];\n\
    \    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10\
    \ = lst2[0];\n    long oddMin10 = lst2[0];\n    long evenMax11 = lst1[0];\n  \
    \  long oddMax11 = lst1[0];\n    long evenMin11 = lst1[0];\n    long oddMin11\
    \ = lst1[0];\n    long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n  \
    \  long evenMin12 = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13\
    \ = lst1[0];\n    long oddMax13 = lst1[0];\n    long evenMin13 = lst1[0];\n  \
    \  long oddMin13 = lst1[0];\n    ", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenTotal = 0;\n\
    \    long oddTotal = 0;\n    long evenMinSum = 0;\n    long oddMinSum = 0;\n \
    \   long evenMaxSum = 0;\n    long oddMaxSum = 0;\n    long evenMinMax = 0;\n\
    \    long oddMinMax = 0;\n    long evenMinMin = 0;\n    long oddMinMin = 0;\n\
    \    long evenMinSum2 = 0;\n    long oddMinSum2 = 0;\n    long evenMaxSum2 = 0;\n\
    \    long oddMaxSum2 = 0;\n    long evenMinMax2 = 0;\n    long oddMinMax2 = 0;\n\
    \    long evenMinMin2 = 0;\n    long oddMinMin2 = 0;\n    long evenMinSum3 = 0;\n\
    \    long oddMinSum3 = 0;\n    long evenMaxSum3 = 0;\n    long oddMaxSum3 = 0;\n\
    \    long evenMinMax3 = 0;\n    long oddMinMax3 = 0;\n    long evenMinMin3 = 0;\n\
    \    long oddMinMin3 = 0;\n    long evenMinSum4 = 0;\n    long oddMinSum4 = 0;\n\
    \    long evenMaxSum4 = 0;\n    long oddMaxSum4 = 0;\n    long evenMinMax4 = 0;\n\
    \    long oddMinMax4 = 0;\n    long evenMinMin4 = 0;\n    long oddMinMin4 = 0;\n\
    \    long evenMinSum5 = 0;\n    long oddMinSum5 = 0;\n    long evenMaxSum5 = 0;\n\
    \    long oddMaxSum5 = 0;\n    long evenMinMax5 = 0;\n    long oddMinMax5 = 0;\n\
    \    long evenMinMin5 = 0;\n    long oddMinMin5 = 0;\n    long evenMinSum6 = 0;\n\
    \    long oddMinSum6 = 0;\n    long evenMaxSum6 = 0;\n    long oddMaxSum6 = 0;\n\
    \    long evenMinMax6 = 0;\n    long oddMinMax6 = 0;\n    long evenMinMin6 = 0;\n\
    \    long oddMinMin6 = 0;\n    long evenMinSum7 = 0;\n    long oddMinSum7 = 0;\n\
    \    long evenMaxSum7 = 0;\n    long oddMaxSum7 = 0;\n    long evenMinMax7 = 0;\n\
    \    long oddMinMax7 = 0;\n    long evenMinMin7 = 0;\n    long oddMinMin", " \
    \   // Write your code here\n    long even = 0;\n    long odd = 0;\n    long sum\
    \ = 0;\n    long count = 0;\n    long sumEven = 0;\n    long sumOdd = 0;\n   \
    \ long sumEvenOdd = 0;\n    long sumEvenOddEven = 0;\n    long sumEvenOddOdd =\
    \ 0;\n    long sumEvenOddEvenOdd = 0;\n    long sumEvenOddEvenOddOdd = 0;\n  \
    \  long sumEvenOddEvenOddEvenOdd = 0;\n    long sumEvenOddEvenOddEvenOddOdd =\
    \ 0;\n    long sumEvenOddEvenOddEvenOddEvenOdd = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddOdd\
    \ = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddOdd\
    \ = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n    long\
    \ sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddOdd = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddOdd = 0;\n\
    \    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n \
    \   long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd =\
    \ 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n    long sumEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd",
  "    // Your code goes here\n    long even = 0;\n    long odd = 0;\n    long eveneven\
    \ = 0;\n    long oddodd = 0;\n    long evenodd = 0;\n    long oddeven = 0;\n \
    \   long eveneveneven = 0;\n    long oddoddodd = 0;\n    long evenevenodd = 0;\n\
    \    long oddoddeven = 0;\n    long eveneveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long oddoddoddeven = 0;\n    long evenevenevenodd = 0;\n    long oddoddodd",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long eveneven\
    \ = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n\
    \    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n\
    \    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n \
    \   long oddoddoddeveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddoddeveneven", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenSum2 = 0;\n\
    \    long oddSum2 = 0;\n    long evenMin2 = std::numeric_limits<long>::max();\n\
    \    long oddMin2 = std::numeric_limits<long>::max();\n    long evenMax2 = std::numeric_limits<long>::min();\n\
    \    long oddMax2 = std::numeric_limits<long>::min();\n    long evenSum3 = 0;\n\
    \    long oddSum3 = 0;\n    long evenMin3 = std::numeric_limits<long>::max();\n\
    \    long oddMin3 = std::numeric_limits<long>::max();\n    long evenMax3 = std::numeric_limits<long>::min();\n\
    \    long oddMax3 = std::numeric_limits<long>::min();\n    long evenSum4 = 0;\n\
    \    long oddSum4 = 0;\n    long evenMin4 = std::numeric_limits<long>::max();\n\
    \    long oddMin4 = std::numeric_limits<long>::max();\n    long evenMax4 = std::numeric_limits<long>::min();\n\
    \    long oddMax4 = std::numeric_limits<long>::min();\n    long evenSum5 = 0;\n\
    \    long oddSum5 = 0;\n    long evenMin5 = std::numeric_limits<long>::max();\n\
    \    long oddMin5 = std::numeric_limits<long>::max();\n    long evenMax5 = std::numeric_limits<long>::min();\n\
    \    long oddMax5 = std::numeric_limits<long>::min();\n    long evenSum6 = 0;\n\
    \    long oddSum6 = 0;\n    long evenMin6 = std::numeric_limits<long>::max();\n\
    \    long oddMin6 = std::numeric_limits<long>::max();\n    long evenMax6 = std::numeric_limits<long>::min();\n\
    \    long oddMax6 = std::numeric_limits<long>::min();\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMin7 = std::numeric_limits<long>::max();\n\
    \    long oddMin7 = std::numeric_limits<long>::max();\n    long evenMax7 = std::numeric_limits<long>::min();\n\
    \    long oddMax7 = std::numeric_limits<long>::min();\n    long evenSum8", " \
    \   // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  long even = 0;\n    long odd = 0;\n    long evenSum = 0;\n    long oddSum =\
    \ 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenCount2 = 0;\n   \
    \ long oddCount2 = 0;\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenCount3 = 0;\n    long oddCount3 =\
    \ 0;\n    long evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n    long evenMax3\
    \ = lst1[0];\n    long oddMax3 = lst1[0];\n    long evenSum4 = 0;\n    long oddSum4\
    \ = 0;\n    long evenCount4 = 0;\n    long oddCount4 = 0;\n    long evenMin4 =\
    \ lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax4 = lst2[0];\n    long\
    \ oddMax4 = lst2[0];\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long\
    \ evenCount5 = 0;\n    long oddCount5 = 0;\n    long evenMin5 = lst1[0];\n   \
    \ long oddMin5 = lst1[0];\n    long evenMax5 = lst1[0];\n    long oddMax5 = lst1[0];\n\
    \    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenCount6 = 0;\n   \
    \ long oddCount6 = 0;\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n\
    \    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenSum7\
    \ = 0;\n    long oddSum7 = 0;\n    long evenCount7 = 0;\n    long oddCount7 =\
    \ 0;\n    long evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n    long evenMax7\
    \ = lst1[0];\n    long oddMax7 = lst1[0];\n    long evenSum8 = 0;\n    long oddSum8\
    \ = 0;\n    long evenCount8 = 0;\n    long oddCount8 = 0;\n    long evenMin8 =\
    \ lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax8 = lst2[0];\n    long\
    \ oddMax8 = lst2[0];\n    long evenSum9 = 0;\n    long odd", "    // Write your\
    \ code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++) {\n        if(lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++) {\n        if(lst2[i]\
    \ % 2 == 0) {\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++) {\n        if(even[i] != lst1[i] && even[i] !=\
    \ lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;", "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long sum\
    \ = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long\
    \ temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n\
    \    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10\
    \ = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n   \
    \ long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n    ", "    // Write your\
    \ code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++){\n        if(lst1[i] % 2 == 0){\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i]\
    \ % 2 == 0){\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++){\n        if(even[i] != even[even.size() - 1]){\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";", "    // Write\
    \ your code here\n    \n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    \n    for(long i = 0; i < lst1.size(); i++){\n\
    \        if(lst1[i] > evenMax){\n            evenMax = lst1[i];\n        }\n \
    \       if(lst1[i] < evenMin){\n            evenMin = lst1[i];\n        }\n  \
    \      if(lst1[i] > oddMax){\n            oddMax = lst1[i];\n        }\n     \
    \   if(lst1[i] < oddMin){\n            oddMin = lst1[i];\n        }\n    }\n \
    \   \n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i] > evenMax){\n\
    \            evenMax = lst2[i];\n        }\n        if(lst2[i] < evenMin){\n \
    \           evenMin = lst2[i];\n        }\n        if(lst2[i] > oddMax){\n   \
    \         oddMax = lst2[i];\n        }\n        if(lst2[i] < oddMin){\n      \
    \      oddMin = lst2[i];\n        }\n    }\n    \n    for(long i = 0; i < lst1.size();\
    \ i++){\n        if(lst1[i] > evenMax){\n            evenMax = lst1[i];\n    \
    \    }\n        if(lst1[i] < evenMin){\n            evenMin = lst1[i];\n     \
    \   }\n        if(lst1[i] > oddMax){\n            oddMax = lst1[i];\n        }\n\
    \        if(lst1[i] < oddMin){\n            oddMin = lst1[i];\n        }\n   \
    \ }\n    \n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i] > evenMax){\n\
    \            evenMax = lst2[i];\n        }\n        if(lst2[i] < evenMin){\n \
    \           evenMin = lst2[i];\n        }\n        if(lst2[i] > oddMax){\n   \
    \         oddMax = lst2[i];\n        }\n        if(lst2[i] < oddMin){\n      \
    \      oddMin = lst2[i];\n        }\n    }\n    \n    for(long i = 0; i < lst1.size();\
    \ i++){\n        if(lst1[i] > evenMax){\n            evenMax = lst1[i];\n    \
    \    }\n        if(lst1[i] < evenMin){\n            evenMin = lst1[i];\n     \
    \   }\n        if(lst1[i] > oddMax){\n            oddMax = lst1[i];\n        }\n\
    \        if(lst1[i] < odd", '    // Your code here', "    long even = 0;\n   \
    \ long odd = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax\
    \ = std::numeric_limits<long>::max();\n    long oddMax = std::numeric_limits<long>::max();\n\
    \    long evenMin = std::numeric_limits<long>::min();\n    long oddMin = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = std::numeric_limits<long>::max();\n\
    \    long oddMax2 = std::numeric_limits<long>::max();\n    long evenMin2 = std::numeric_limits<long>::min();\n\
    \    long oddMin2 = std::numeric_limits<long>::min();\n    long evenSum3 = 0;\n\
    \    long oddSum3 = 0;\n    long evenMax3 = std::numeric_limits<long>::max();\n\
    \    long oddMax3 = std::numeric_limits<long>::max();\n    long evenMin3 = std::numeric_limits<long>::min();\n\
    \    long oddMin3 = std::numeric_limits<long>::min();\n    long evenSum4 = 0;\n\
    \    long oddSum4 = 0;\n    long evenMax4 = std::numeric_limits<long>::max();\n\
    \    long oddMax4 = std::numeric_limits<long>::max();\n    long evenMin4 = std::numeric_limits<long>::min();\n\
    \    long oddMin4 = std::numeric_limits<long>::min();\n    long evenSum5 = 0;\n\
    \    long oddSum5 = 0;\n    long evenMax5 = std::numeric_limits<long>::max();\n\
    \    long oddMax5 = std::numeric_limits<long>::max();\n    long evenMin5 = std::numeric_limits<long>::min();\n\
    \    long oddMin5 = std::numeric_limits<long>::min();\n    long evenSum6 = 0;\n\
    \    long oddSum6 = 0;\n    long evenMax6 = std::numeric_limits<long>::max();\n\
    \    long oddMax6 = std::numeric_limits<long>::max();\n    long evenMin6 = std::numeric_limits<long>::min();\n\
    \    long oddMin6 = std::numeric_limits<long>::min();\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMax7 = std::numeric_limits<long>::max();\n\
    \    long oddMax7 = std::numeric_limits<long>::max();\n    long evenMin7 = std::numeric_limits<long>::min();\n\
    \    long oddMin7 = std::numeric_limits<long>::min();\n    long evenSum8 = 0;\n\
    \    long oddSum8 = 0;\n    long evenMax8 = std::numeric_limits", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n\
    \    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long even4 =\
    \ 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6\
    \ = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long\
    \ even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n  \
    \  long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long odd11\
    \ = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long\
    \ odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n\
    \    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long even17\
    \ = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long\
    \ even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n\
    \    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long odd22\
    \ = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long\
    \ odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n\
    \    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long even28\
    \ = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long\
    \ even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n\
    \    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long odd33\
    \ = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long\
    \ odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n\
    \    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long even39\
    \ = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long\
    \ even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n\
    \    long even43 = 0;\n    long odd43 = 0;\n    ", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax2\
    \ = lst2[0];\n    long oddMax2 = lst2[0];\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n\
    \            evenCount++;\n            evenSum = evenSum + lst1[i];\n        \
    \    if (lst1[i] < evenMin) {\n                evenMin = lst1[i];\n          \
    \  }\n            if (lst1[i] > evenMax) {\n                evenMax = lst1[i];\n\
    \            }\n        }\n        else {\n            odd = odd + lst1[i];\n\
    \            oddCount++;\n            oddSum = oddSum + lst1[i];\n           \
    \ if (lst1[i] < oddMin) {\n                oddMin = lst1[i];\n            }\n\
    \            if (lst1[i] > oddMax) {\n                oddMax = lst1[i];\n    \
    \        }\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n \
    \       if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n        \
    \    evenCount++;\n            evenSum = evenSum + lst2[i];\n            if (lst2[i]\
    \ < evenMin2) {\n                evenMin2 = lst2[i];\n            }\n        \
    \    if (lst2[i] > evenMax2) {\n                evenMax2 = lst2[i];\n        \
    \    }\n        }\n        else {\n            odd = odd + lst2[i];\n        \
    \    oddCount++;\n            oddSum = oddSum + lst2[i];\n            if (lst2[i]\
    \ < oddMin2) {\n                oddMin2 = lst2[i];\n            }\n          \
    \  if (lst2[i] > oddMax2) {\n                oddMax2 = lst2[i];\n            }\n\
    \        }\n    }\n    if (evenCount == 0) {\n        return \"NO\";\n    }\n\
    \    if (evenCount == 1) {\n        if (evenSum == even) {\n            return\
    \ \"YES\";\n        }\n    }\n    if (evenCount == 2) {\n        if (evenSum ==\
    \ even) {\n            if (evenMin == evenMax) {\n                if (oddMin ==\
    \ oddMax) {\n                    return \"YES\";\n                }\n        \
    \    }\n        }\n    }\n    if (evenCount == 3) {\n        if (evenSum == even)\
    \ {\n            if (evenMin == evenMax) {\n                if (oddMin == ", " \
    \   // Write your code here\n    std::vector<long> even;\n    for(long i = 0;\
    \ i < lst1.size(); i++){\n        if(lst1[i] % 2 == 0){\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i]\
    \ % 2 == 0){\n            even.push_back(lst2[i]);\n        }\n    }\n    if(even.size()\
    \ == lst1.size()){\n        return \"YES\";\n    }\n    return \"NO\";", "   \
    \ // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMinSum = std::numeric_limits<long>::max();\n    long oddMinSum =\
    \ std::numeric_limits<long>::max();\n    long evenMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMaxSum = std::numeric_limits<long>::min();\n    long evenMinCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinCount = std::numeric_limits<long>::max();\n\
    \    long evenMaxCount = std::numeric_limits<long>::min();\n    long oddMaxCount\
    \ = std::numeric_limits<long>::min();\n    long evenMinSumCount = std::numeric_limits<long>::max();\n\
    \    long oddMinSumCount = std::numeric_limits<long>::max();\n    long evenMaxSumCount\
    \ = std::numeric_limits<long>::min();\n    long oddMaxSumCount = std::numeric_limits<long>::min();\n\
    \    long evenMinMin = std::numeric_limits<long>::max();\n    long oddMinMin =\
    \ std::numeric_limits<long>::max();\n    long evenMaxMin = std::numeric_limits<long>::min();\n\
    \    long oddMaxMin = std::numeric_limits<long>::min();\n    long evenMinMax =\
    \ std::numeric_limits<long>::max();\n    long oddMinMax = std::numeric_limits<long>::max();\n\
    \    long evenMaxMax = std::numeric_limits<long>::min();\n    long oddMaxMax =\
    \ std::numeric_limits<long>::min();\n    long evenMinMinSum = std::numeric_limits<long>::max();\n\
    \    long oddMinMinSum = std::numeric_limits<long>::max();\n    long evenMaxMinSum\
    \ = std::numeric_limits<long>::min();\n    long oddMaxMinSum = std::numeric_limits<long>::min();\n\
    \    long evenMinMaxSum = std::numeric_limits<long>::max();\n    long oddMinMaxSum\
    \ = std::numeric_limits<long>::max();\n    long evenMaxMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMaxMaxSum = std::numeric_", "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n\
    \    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n  \
    \  long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst2[0];\n    long oddMin2 = lst2[0];\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] > evenMax) {\n            evenMax = lst1[i];\n \
    \       }\n        if (lst1[i] < evenMin) {\n            evenMin = lst1[i];\n\
    \        }\n        if (lst2[i] > oddMax2) {\n            oddMax2 = lst2[i];\n\
    \        }\n        if (lst2[i] < oddMin2) {\n            oddMin2 = lst2[i];\n\
    \        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ > evenMax2) {\n            evenMax2 = lst2[i];\n        }\n        if (lst2[i]\
    \ < evenMin2) {\n            evenMin2 = lst2[i];\n        }\n    }\n    for (long\
    \ i = 0; i < lst1.size(); i++) {\n        if (lst1[i] > oddMax) {\n          \
    \  oddMax = lst1[i];\n        }\n        if (lst1[i] < oddMin) {\n           \
    \ oddMin = lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++)\
    \ {\n        if (lst2[i] > oddMax2) {\n            oddMax2 = lst2[i];\n      \
    \  }\n        if (lst2[i] < oddMin2) {\n            oddMin2 = lst2[i];\n     \
    \   }\n    }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i]\
    \ > evenMax) {\n            evenMax = lst1[i];\n        }\n        if (lst1[i]\
    \ < evenMin) {\n            evenMin = lst1[i];\n        }\n        if (lst2[i]\
    \ > oddMax2) {\n            oddMax2 = lst2[i];\n        }\n        if (lst2[i]\
    \ < oddMin2) {\n            oddMin2 = lst2[i];\n        }\n    }\n    for (long\
    \ i = 0; i < lst2.size(); i++) {\n        if (lst2[i] > evenMax2) {\n        \
    \    evenMax2 = lst2[i];\n        }\n        if (lst2[i] < evenMin2) {\n     \
    \       evenMin2 = lst2[i];\n        }\n    }\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] > oddMax) {\n            oddMax = lst1[i];\n   \
    \     }\n        if (lst1[i] < oddMin) {\n            ", "    // Write your code\
    \ here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax\
    \ = 0;\n    long oddMax = 0;\n    long evenMin = 0;\n    long oddMin = 0;\n  \
    \  long evenMaxCount = 0;\n    long oddMaxCount = 0;\n    long evenMinCount =\
    \ 0;\n    long oddMinCount = 0;\n    long evenMaxSum = 0;\n    long oddMaxSum\
    \ = 0;\n    long evenMinSum = 0;\n    long oddMinSum = 0;\n    long evenMaxMax\
    \ = 0;\n    long oddMaxMax = 0;\n    long evenMinMax = 0;\n    long oddMinMax\
    \ = 0;\n    long evenMaxMin = 0;\n    long oddMaxMin = 0;\n    long evenMaxMinCount\
    \ = 0;\n    long oddMaxMinCount = 0;\n    long evenMinMinCount = 0;\n    long\
    \ oddMinMinCount = 0;\n    long evenMaxMinSum = 0;\n    long oddMaxMinSum = 0;\n\
    \    long evenMinMinSum = 0;\n    long oddMinMinSum = 0;\n    long evenMaxMinMax\
    \ = 0;\n    long oddMaxMinMax = 0;\n    long evenMinMinMax = 0;\n    long oddMinMinMax\
    \ = 0;\n    long evenMaxMinMin = 0;\n    long oddMaxMinMin = 0;\n    long evenMinMinMin\
    \ = 0;\n    long oddMinMinMin = 0;\n    long evenMaxMinMinCount = 0;\n    long\
    \ oddMaxMinMinCount = 0;\n    long evenMinMinMinCount = 0;\n    long oddMinMinMinCount\
    \ = 0;\n    long evenMaxMinMinSum = 0;\n    long oddMaxMinMinSum = 0;\n    long\
    \ evenMinMinMinSum = 0;\n    long oddMinMinMinSum = 0;\n    long evenMaxMinMinMax\
    \ = 0;\n    long oddMaxMinMinMax = 0;\n    long evenMinMinMinMax = 0;\n    long\
    \ oddMinMinMinMax = 0;\n    long evenMaxMinMinMin = 0;\n    long oddMaxMinMin\
    \ = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin = 0;\n    long evenMaxMinMinCount\
    \ = 0;\n    long oddMaxMinMinCount = 0;\n    long evenMinMinMinCount = 0;\n  \
    \  long oddMinMinMinCount = 0;\n    long evenMaxMinMinSum = 0;\n    long oddMaxMinMinSum\
    \ = 0;\n    long evenMinMinMinSum = 0;\n    long oddMinMinMinSum = 0;\n    long\
    \ evenMaxMinMinMax = 0;\n    ", "    // Write your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++){\n        if(lst1[i] % 2 ==\
    \ 0){\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++){\n        if(lst2[i] % 2 == 0){\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    for(long i = 0; i < even.size(); i++){\n        if(even[i]\
    \ != even[even.size()-1]){\n            return \"NO\";\n        }\n    }\n   \
    \ return \"YES\";", "    // Your code here\n    ", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMaxSum = 0;\n\
    \    long oddMaxSum = 0;\n    long evenMinSum = 0;\n    long oddMinSum = 0;\n\
    \    long evenMaxCount = 0;\n    long oddMaxCount = 0;\n    long evenMinCount\
    \ = 0;\n    long oddMinCount = 0;\n    long evenMaxSum2 = 0;\n    long oddMaxSum2\
    \ = 0;\n    long evenMinSum2 = 0;\n    long oddMinSum2 = 0;\n    long evenMaxCount2\
    \ = 0;\n    long oddMaxCount2 = 0;\n    long evenMinCount2 = 0;\n    long oddMinCount2\
    \ = 0;\n    long evenMaxSum3 = 0;\n    long oddMaxSum3 = 0;\n    long evenMinSum3\
    \ = 0;\n    long oddMinSum3 = 0;\n    long evenMaxCount3 = 0;\n    long oddMaxCount3\
    \ = 0;\n    long evenMinCount3 = 0;\n    long oddMinCount3 = 0;\n    long evenMaxSum4\
    \ = 0;\n    long oddMaxSum4 = 0;\n    long evenMinSum4 = 0;\n    long oddMinSum4\
    \ = 0;\n    long evenMaxCount4 = 0;\n    long oddMaxCount4 = 0;\n    long evenMinCount4\
    \ = 0;\n    long oddMinCount4 = 0;\n    long evenMaxSum5 = 0;\n    long oddMaxSum5\
    \ = 0;\n    long evenMinSum5 = 0;\n    long oddMinSum5 = 0;\n    long evenMaxCount5\
    \ = 0;\n    long oddMaxCount5 = 0;\n    long evenMinCount5 = 0;\n    long oddMinCount5\
    \ = 0;\n    long evenMaxSum6 = 0;\n    long oddMaxSum6 = 0;\n    long evenMinSum6\
    \ = 0;\n    long oddMinSum6 = 0;\n    long evenMaxCount6 = 0;\n    long oddMaxCount6\
    \ = 0;\n    long evenMinCount6 = 0;\n    long oddMinCount6 = 0;\n    long evenMaxSum7\
    \ = 0;\n    long oddMaxSum7 = 0;\n    long evenMinSum7 = 0;\n    long oddMinSum7\
    \ = 0;\n    long evenMaxCount7 = 0;\n    long oddMaxCount7 = 0;\n    long evenMinCount7\
    \ = 0;\n    long oddMinCount7 = 0;\n    long evenMaxSum8 = 0;\n    ", "    long\
    \ even = 0;\n    long odd = 0;\n    long temp = 0;\n    long sum = 0;\n    long\
    \ count = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l =\
    \ 0;\n    long m = 0;\n    long n = 0;\n    long p = 0;\n    long q = 0;\n   \
    \ long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v =\
    \ 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n   \
    \ long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E =\
    \ 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n   \
    \ long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N =\
    \ 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n   \
    \ long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W =\
    \ 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA = 0;\n  \
    \  long BB = 0;\n    long CC = 0;\n    long DD = 0;\n    long EE = 0;\n    long\
    \ FF = 0;\n    long GG = 0;\n    long HH = 0;\n    long II = 0;\n    long JJ =\
    \ 0;\n    long KK = 0;\n    long LL = 0;\n    long MM = 0;\n    long NN = 0;\n\
    \    long OO = 0;\n    long PP = 0;\n    long QQ = 0;\n    long RR = 0;\n    long\
    \ SS = 0;\n    long TT = 0;\n    long UU = 0;\n    long VV = 0;\n    long WW =\
    \ 0;\n    long XX = 0;\n    long YY = 0;\n    long ZZ = 0;\n    long AAA = 0;\n\
    \    long BBB = 0;\n    long CCC = 0;\n    long DDD = 0;\n    long EEE = 0;\n\
    \    long FFF = 0;\n    long GGG = 0;\n    long HHH = 0;\n    long III = 0;\n\
    \    long JJJ = 0;\n    long KKK = 0;\n    long LLL = 0;\n    long MMM = 0;\n\
    \    long NNN = 0;\n    long OOO = 0;\n    long PPP = 0;\n    long QQQ = 0;\n\
    \    long RRR = 0;\n    long SSS = 0;\n    long TTT = 0;\n    long UUU = 0;\n\
    \    long VVV = 0;\n    long WWW = 0;\n    long XXX = 0;\n    long YYY", "   \
    \ // Write your code here\n    std::vector<long> even;\n    even.clear();\n  \
    \  even.insert(even.end(), lst1.begin(), lst1.end());\n    even.insert(even.end(),\
    \ lst2.begin(), lst2.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    even.erase(std::unique(even.begin(), even.end()), even.end());\n\
    \    even.erase(std::unique(even.begin(), even.end()), even.end());\n    even.erase(std::unique(even.begin(),\
    \ even.end()), even.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    even.erase(std::unique(even.begin(), even.end()), even.end());\n\
    \    even.erase(std::unique(even.begin(), even.end()), even.end());\n    even.erase(std::unique(even.begin(),\
    \ even.end()), even.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    even.erase(std::unique(even.begin(), even.end()), even.end());\n\
    \    even.erase(std::unique(even.begin(), even.end()), even.end());\n    even.erase(std::unique(even.begin(),\
    \ even.end()), even.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    even.erase(std::unique(even.begin(), even.end()), even.end());\n\
    \    even.erase(std::unique(even.begin(), even.end()), even.end());\n    even.erase(std::unique(even.begin(),\
    \ even.end()), even.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    even.erase(std::unique(even.begin(), even.end()), even.end());\n\
    \    even.erase(std::unique(even.begin(), even.end()), even.end());\n    even.erase(std::unique(even.begin(),\
    \ even.end()), even.end());\n    even.erase(std::unique(even.begin(), even.end()),\
    \ even.end());\n    even.erase(std::unique(even.begin(), even.end()), even.end());\n\
    \    even.erase(std::unique(even.begin(), even.end()), even.end());\n    ", " \
    \   // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 =\
    \ lst2[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long\
    \ evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long evenMax3 = lst2[0];\n\
    \    long oddMax3 = lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 =\
    \ lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long\
    \ evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long evenMax5 = lst2[0];\n\
    \    long oddMax5 = lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 =\
    \ lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long\
    \ evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long evenMax7 = lst2[0];\n\
    \    long oddMax7 = lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 =\
    \ lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long\
    \ evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long evenMax9 = lst2[0];\n\
    \    long oddMax9 = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10\
    \ = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n  \
    \  long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax11\
    \ = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin12 = lst2[0];\n  \
    \  long oddMin12 = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12\
    \ = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n  \
    \  long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n    ", "    // Write\
    \ your code here\n    \n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::max();\n    long oddMax = std::numeric_limits<long>::max();\n\
    \    long evenMin = std::numeric_limits<long>::min();\n    long oddMin = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long\
    \ oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n\
    \    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4\
    \ = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long\
    \ oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6\
    \ = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long\
    \ oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n\
    \    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9\
    \ = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n  \
    \  long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12",
  "    // Write your code here\n    std::vector<long> even;\n    for(long i = 0; i\
    \ < lst1.size(); i++){\n        if(lst1[i] % 2 == 0){\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i]\
    \ % 2 == 0){\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++){\n        if(even[i] != even[even.size()-1]){\n\
    \            even.push_back(even[i]);\n        }\n    }\n    for(long i = 0; i\
    \ < even.size(); i++){\n        if(even[i] != even[0]){\n            even.erase(even.begin()+i);\n\
    \        }\n    }\n    if(even.size() == 0){\n        return \"NO\";\n    }\n\
    \    return \"YES\";", "    // Write your code here\n    std::vector<long> even;\n\
    \    even.reserve(lst1.size());\n    for (long i : lst1) {\n        if (i % 2\
    \ == 0) {\n            even.push_back(i);\n        }\n    }\n    even.erase(std::unique(even.begin(),\
    \ even.end()), even.end());\n    if (even.size() == lst1.size()) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";", "    // Write your code here\n    std::vector<long>\
    \ even;\n    even.push_back(lst1[0]);\n    even.push_back(lst2[0]);\n    even.push_back(lst1[1]);\n\
    \    even.push_back(lst2[1]);\n    even.push_back(lst1[2]);\n    even.push_back(lst2[2]);\n\
    \    even.push_back(lst1[3]);\n    even.push_back(lst2[3]);\n    even.push_back(lst1[4]);\n\
    \    even.push_back(lst2[4]);\n    even.push_back(lst1[5]);\n    even.push_back(lst2[5]);\n\
    \    even.push_back(lst1[6]);\n    even.push_back(lst2[6]);\n    even.push_back(lst1[7]);\n\
    \    even.push_back(lst2[7]);\n    even.push_back(lst1[8]);\n    even.push_back(lst2[8]);\n\
    \    even.push_back(lst1[9]);\n    even.push_back(lst2[9]);\n    even.push_back(lst1[10]);\n\
    \    even.push_back(lst2[10]);\n    even.push_back(lst1[11]);\n    even.push_back(lst2[11]);\n\
    \    even.push_back(lst1[12]);\n    even.push_back(lst2[12]);\n    even.push_back(lst1[13]);\n\
    \    even.push_back(lst2[13]);\n    even.push_back(lst1[14]);\n    even.push_back(lst2[14]);\n\
    \    even.push_back(lst1[15]);\n    even.push_back(lst2[15]);\n    even.push_back(lst1[16]);\n\
    \    even.push_back(lst2[16]);\n    even.push_back(lst1[17]);\n    even.push_back(lst2[17]);\n\
    \    even.push_back(lst1[18]);\n    even.push_back(lst2[18]);\n    even.push_back(lst1[19]);\n\
    \    even.push_back(lst2[19]);\n    even.push_back(lst1[20]);\n    even.push_back(lst2[20]);\n\
    \    even.push_back(lst1[21]);\n    even.push_back(lst2[21]);\n    even.push_back(lst1[22]);\n\
    \    even.push_back(lst2[22]);\n    even.push_back(lst1[23]);\n    even.push_back(lst2[23]);\n\
    \    even.push_back(lst1[24]);\n    even.push_back(lst2[24]);\n    even.push_back(lst1[25]);\n\
    \    even.push_back(lst2[25]);\n    even.push_back(lst1[26]);\n    even.push_back(lst2[26]);\n\
    \    even.push_back(lst1[27]);\n    even.push_back(lst2[27", "    // Write your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long sum = 0;\n    long\
    \ count = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n \
    \   long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7\
    \ = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long\
    \ temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n\
    \    long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18\
    \ = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n   \
    \ long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25\
    \ = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n   \
    \ long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32\
    \ = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n   \
    \ long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39\
    \ = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n   \
    \ long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46\
    \ = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n   \
    \ long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53\
    \ = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n   \
    \ long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60\
    \ = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n   \
    \ long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67\
    \ = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n   \
    \ long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74\
    \ = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n   \
    \ long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n    long temp81\
    \ = 0;\n    long temp82 = 0;\n    ", "    long even = 0;\n    long odd = 0;\n\
    \    long eveneven = 0;\n    long oddodd = 0;\n    long evenodd = 0;\n    long\
    \ oddeven = 0;\n    long eveneveneven = 0;\n    long oddoddodd = 0;\n    long\
    \ evenevenodd = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven = 0;\n\
    \    long oddoddoddodd = 0;\n    long evenevenoddodd = 0;\n    long oddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long oddoddoddodd = 0;\n    long evenevenodd\
    \ = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven = 0;\n    long oddoddoddodd\
    \ = 0;\n    long evenevenodd = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long oddoddoddodd = 0;\n    long evenevenodd = 0;\n    long oddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd = 0;\n    long evenevenodd\
    \ = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd\
    \ = 0;\n    long evenevenodd = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long oddoddodd = 0;\n    long evenevenodd = 0;\n    long oddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd = 0;\n    long evenevenodd\
    \ = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd\
    \ = 0;\n    long evenevenodd = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long oddoddodd = 0;\n    long evenevenodd = 0;\n    long oddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd = 0;\n    long evenevenodd\
    \ = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd\
    \ = 0;\n    long evenevenodd = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long oddoddodd = 0;\n    long evenevenodd = 0;\n    long oddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd = 0;\n    long evenevenodd\
    \ = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven = 0;\n    long oddoddodd\
    \ = 0;\n    long evenevenodd = 0;\n    long oddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long ", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long sum = 0;\n    long count = 0;\n    long temp = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n\
    \    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long\
    \ J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n\
    \    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long\
    \ S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n\
    \    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long\
    \ BB = 0;\n    long CC = 0;\n    long DD = 0;\n    long EE = 0;\n    long FF =\
    \ 0;\n    long GG = 0;\n    long HH = 0;\n    long II = 0;\n    long JJ = 0;\n\
    \    long KK = 0;\n    long LL = 0;\n    long MM = 0;\n    long NN = 0;\n    long\
    \ OO = 0;\n    long PP = 0;\n    long QQ = 0;\n    long RR = 0;\n    long SS =\
    \ 0;\n    long TT = 0;\n    long UU = 0;\n    long VV = 0;\n    long WW = 0;\n\
    \    long XX = 0;\n    long YY = 0;\n    long ZZ = 0;\n    long AAA = 0;\n   \
    \ long BBB = 0;\n    long CCC = 0;\n    long DDD = 0;\n    long EEE = 0;\n   \
    \ long FFF = 0;\n    long GGG = 0;\n    long HHH = 0;\n    long III = 0;\n   \
    \ long JJJ = 0;\n    long KKK = 0;\n    long LLL = 0;\n    long MMM = 0;\n   \
    \ long NNN = 0;\n    long OOO = 0;\n    long PPP = 0;\n    long QQQ = 0;\n   \
    \ long RRR = 0;\n    long SSS = 0;\n    long TTT = 0;\n    long UUU = 0;\n   \
    \ long VVV = 0;\n    long WWW", "    // Write your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 ==\
    \ 0) {\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++) {\n        if(lst2[i] % 2 == 0) {\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    if(even.size() == lst1.size()) {\n        return \"YES\"\
    ;\n    }\n    return \"NO\";", "    // Write your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++){\n        if(lst1[i] % 2 ==\
    \ 0){\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++){\n        if(lst2[i] % 2 == 0){\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    if(even.size() == lst1.size()){\n        return \"YES\"\
    ;\n    }\n    return \"NO\";", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMaxSum = 0;\n\
    \    long oddMaxSum = 0;\n    long evenMinSum = 0;\n    long oddMinSum = 0;\n\
    \    long evenMaxCount = 0;\n    long oddMaxCount = 0;\n    long evenMinCount\
    \ = 0;\n    long oddMinCount = 0;\n    long evenMaxSum2 = 0;\n    long oddMaxSum2\
    \ = 0;\n    long evenMinSum2 = 0;\n    long oddMinSum2 = 0;\n    long evenMaxCount2\
    \ = 0;\n    long oddMaxCount2 = 0;\n    long evenMinCount2 = 0;\n    long oddMinCount2\
    \ = 0;\n    long evenMaxSum3 = 0;\n    long oddMaxSum3 = 0;\n    long evenMinSum3\
    \ = 0;\n    long oddMinSum3 = 0;\n    long evenMaxCount3 = 0;\n    long oddMaxCount3\
    \ = 0;\n    long evenMinCount3 = 0;\n    long oddMinCount3 = 0;\n    long evenMaxSum4\
    \ = 0;\n    long oddMaxSum4 = 0;\n    long evenMinSum4 = 0;\n    long oddMinSum4\
    \ = 0;\n    long evenMaxCount4 = 0;\n    long oddMaxCount4 = 0;\n    long evenMinCount4\
    \ = 0;\n    long oddMinCount4 = 0;\n    long evenMaxSum5 = 0;\n    long oddMaxSum5\
    \ = 0;\n    long evenMinSum5 = 0;\n    long oddMinSum5 = 0;\n    long evenMaxCount5\
    \ = 0;\n    long oddMaxCount5 = 0;\n    long evenMinCount5 = 0;\n    long oddMinCount5\
    \ = 0;\n    long evenMaxSum6 = 0;\n    long oddMaxSum6 = 0;\n    long evenMinSum6\
    \ = 0;\n    long oddMinSum6 = 0;\n    long evenMaxCount6 = 0;\n    long oddMaxCount6\
    \ = 0;\n    long evenMinCount6 = 0;\n    long oddMinCount6 = 0;\n    long evenMaxSum7\
    \ = 0;\n    long oddMaxSum7 = 0;\n    long evenMinSum7 = 0;\n    long oddMinSum7\
    \ = 0;\n    long evenMaxCount7 = 0;\n    long oddMaxCount7 = 0;\n    long evenMinCount7\
    \ = 0;\n    long oddMinCount7 = 0;\n    long evenMaxSum8 = 0;\n    ", "    //\
    \ Write your code here\n    std::vector<long> even;\n    for(long i=0;i<lst1.size();i++){\n\
    \        if(lst1[i]%2==0){\n            even.push_back(lst1[i]);\n        }\n\
    \    }\n    for(long i=0;i<lst2.size();i++){\n        if(lst2[i]%2==0){\n    \
    \        even.push_back(lst2[i]);\n        }\n    }\n    for(long i=0;i<even.size();i++){\n\
    \        if(even[i]!=lst1[i]){\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";", "    // Write your code here\n    ", "    // Write your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n\
    \    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = std::numeric_limits<long>::max();\n\
    \    long oddMin2 = std::numeric_limits<long>::max();\n    long evenMax2 = std::numeric_limits<long>::min();\n\
    \    long oddMax2 = std::numeric_limits<long>::min();\n    long evenSum3 = 0;\n\
    \    long oddSum3 = 0;\n    long evenMin3 = std::numeric_limits<long>::max();\n\
    \    long oddMin3 = std::numeric_limits<long>::max();\n    long evenMax3 = std::numeric_limits<long>::min();\n\
    \    long oddMax3 = std::numeric_limits<long>::min();\n    long evenSum4 = 0;\n\
    \    long oddSum4 = 0;\n    long evenMin4 = std::numeric_limits<long>::max();\n\
    \    long oddMin4 = std::numeric_limits<long>::max();\n    long evenMax4 = std::numeric_limits<long>::min();\n\
    \    long oddMax4 = std::numeric_limits<long>::min();\n    long evenSum5 = 0;\n\
    \    long oddSum5 = 0;\n    long evenMin5 = std::numeric_limits<long>::max();\n\
    \    long oddMin5 = std::numeric_limits<long>::max();\n    long evenMax5 = std::numeric_limits<long>::min();\n\
    \    long oddMax5 = std::numeric_limits<long>::min();\n    long evenSum6 = 0;\n\
    \    long oddSum6 = 0;\n    long evenMin6 = std::numeric_limits<long>::max();\n\
    \    long oddMin6 = std::numeric_limits<long>::max();\n    long evenMax6 = std::numeric_limits<long>::min();\n\
    \    long oddMax6 = std::numeric_limits<long>::min();\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMin7 = std::numeric_limits<long>::max();\n\
    \    long oddMin7 = std::numeric_limits<long>::max();\n    long evenMax7 = std::numeric_limits<long>::min();\n\
    \    long oddMax7 = std::numeric_limits<long>::min();\n    long evenSum8", " \
    \   // Your code goes here\n    long even = 0;\n    long odd = 0;\n    long sum\
    \ = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long\
    \ temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n\
    \    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10\
    \ = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n   \
    \ long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n", "    // Your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenSum2 = 0;\n\
    \    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long\
    \ evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3 = 0;\n    long oddSum3\
    \ = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenMin3 = 0;\n\
    \    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long oddSum4 = 0;\n    long\
    \ evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4 = 0;\n    long oddMin4\
    \ = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenMax5 = 0;\n\
    \    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long\
    \ evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6 = 0;\n    long oddMax6\
    \ = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long\
    \ evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8 = 0;\n    long oddSum8\
    \ = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenMin8 = 0;\n\
    \    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long\
    \ evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9 = 0;\n    long oddMin9\
    \ = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long evenMax10 =\
    \ 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n    long oddMin10 = 0;\n\
    \    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenMax11 = 0;\n  \
    \  long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11 = 0;\n    long\
    \ evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 = 0;\n", '    //
    Your code here', "    // Write your code here\n    long even = 0;\n    long odd\
    \ = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n\
    \    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax2 =\
    \ lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n    long\
    \ oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n\
    \    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long evenMax4\
    \ = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n    long\
    \ oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n\
    \    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long evenMax6\
    \ = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n    long\
    \ oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n\
    \    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long evenMax8\
    \ = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n    long\
    \ oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n\
    \    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long evenMax10\
    \ = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n  \
    \  long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11\
    \ = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst2[0];\n  \
    \  long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13\
    \ = lst2[0];\n    ", "    // Write your code here\n    \n    std::vector<long>\
    \ even;\n    even.reserve(lst1.size());\n    for(auto &i : lst1){\n        if(i%2\
    \ == 0){\n            even.push_back(i);\n        }\n    }\n    \n    for(auto\
    \ &i : lst2){\n        if(i%2 == 0){\n            even.push_back(i);\n       \
    \ }\n    }\n    \n    if(even.size() == lst1.size()){\n        return \"YES\"\
    ;\n    }\n    return \"NO\";", "    // Your code here\n    long even = 0;\n  \
    \  long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax2 =\
    \ lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n    long\
    \ oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n\
    \    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long evenMax4\
    \ = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n    long\
    \ oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n\
    \    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long evenMax6\
    \ = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n    long\
    \ oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n\
    \    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long evenMax8\
    \ = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n    long\
    \ oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n\
    \    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long evenMax10\
    \ = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n  \
    \  long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11\
    \ = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst2[0];\n  \
    \  long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13\
    \ = lst2[0];\n    ", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n   \
    \ long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n\
    \    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 =\
    \ 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9\
    \ = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long\
    \ even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n\
    \    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14\
    \ = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long\
    \ odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n\
    \    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20\
    \ = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long\
    \ even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n\
    \    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25\
    \ = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long\
    \ odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n\
    \    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31\
    \ = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long\
    \ even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n\
    \    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36\
    \ = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long\
    \ odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n\
    \    long odd40 = 0;\n    long even41 = 1;\n    long odd41 = 1;\n    long even42\
    \ = 1;\n    long odd42 = 1;\n    long even43 = 1;\n    long odd43 = 1;", "   \
    \ // Write your code here\n    long even = 0;\n    long odd = 0;\n    long sum\
    \ = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n\
    \    }\n    for (long i = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n\
    \    }\n    if (sum % 2 == 0) {\n        even = sum / 2;\n        odd = sum %\
    \ 2;\n        if (even > odd) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";", "    // Your code here\n    std::vector<long> even;\n \
    \   even.reserve(lst1.size());\n    for (auto i : lst1) {\n        if (i % 2 ==\
    \ 0) {\n            even.push_back(i);\n        }\n    }\n    even.shrink_to_fit();\n\
    \    std::vector<long> odd;\n    odd.reserve(lst2.size());\n    for (auto i :\
    \ lst2) {\n        if (i % 2 != 0) {\n            odd.push_back(i);\n        }\n\
    \    }\n    odd.shrink_to_fit();\n    std::vector<long> result;\n    result.reserve(lst1.size());\n\
    \    for (auto i : even) {\n        if (odd.find(i) == odd.end()) {\n        \
    \    result.push_back(i);\n        }\n    }\n    if (result.size() == lst1.size())\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }", " \
    \   // Your code here\n    ", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax\
    \ = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long\
    \ evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n\
    \    long oddMin2 = lst2[0];\n    long evenMax3 = lst1[0];\n    long oddMax3 =\
    \ lst1[0];\n    long evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n    long\
    \ evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n\
    \    long oddMin4 = lst2[0];\n    long evenMax5 = lst1[0];\n    long oddMax5 =\
    \ lst1[0];\n    long evenMin5 = lst1[0];\n    long oddMin5 = lst1[0];\n    long\
    \ evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n\
    \    long oddMin6 = lst2[0];\n    long evenMax7 = lst1[0];\n    long oddMax7 =\
    \ lst1[0];\n    long evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n    long\
    \ evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n\
    \    long oddMin8 = lst2[0];\n    long evenMax9 = lst1[0];\n    long oddMax9 =\
    \ lst1[0];\n    long evenMin9 = lst1[0];\n    long oddMin9 = lst1[0];\n    long\
    \ evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n\
    \    long oddMin10 = lst2[0];\n    long evenMax11 = lst1[0];\n    long oddMax11\
    \ = lst1[0];\n    long evenMin11 = lst1[0];\n    long oddMin11 = lst1[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst1[0];\n  \
    \  long oddMax13 = lst1[0];\n    long evenMin13 = lst1[0];\n    long oddMin13\
    \ = lst1[0];\n    ", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long temp = 0;\n    long count = 0;\n    long index = 0;\n   \
    \ long sum = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum2 = 0;\n    long oddSum2 = 0;\n\
    \    long evenCount2 = 0;\n    long oddCount2 = 0;\n    long evenSum3 = 0;\n \
    \   long oddSum3 = 0;\n    long evenCount3 = 0;\n    long oddCount3 = 0;\n   \
    \ long evenSum4 = 0;\n    long oddSum4 = 0;\n    long evenCount4 = 0;\n    long\
    \ oddCount4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenCount5\
    \ = 0;\n    long oddCount5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n\
    \    long evenCount6 = 0;\n    long oddCount6 = 0;\n    long evenSum7 = 0;\n \
    \   long oddSum7 = 0;\n    long evenCount7 = 0;\n    long oddCount7 = 0;\n   \
    \ long evenSum8 = 0;\n    long oddSum8 = 0;\n    long evenCount8 = 0;\n    long\
    \ oddCount8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long evenCount9\
    \ = 0;\n    long oddCount9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 =\
    \ 0;\n    long evenCount10 = 0;\n    long oddCount10 = 0;\n    long evenSum11\
    \ = 0;\n    long oddSum11 = 0;\n    long evenCount11 = 0;\n    long oddCount11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenCount12\
    \ = 0;\n    long oddCount12 = 0;\n    long evenSum13 = 0;\n    long oddSum13 =\
    \ 0;\n    long evenCount13 = 0;\n    long oddCount13 = 0;\n    long evenSum14\
    \ = 0;\n    long oddSum14 = 0;\n    long evenCount14 = 0;\n    long oddCount14\
    \ = 0;\n    long evenSum15 = 0;\n    long oddSum15 = 0;\n    long evenCount15\
    \ = 0;\n    long oddCount15 = 0;\n    long evenSum16 = 0;\n    long oddSum16 =\
    \ 0;\n    long evenCount16 = 0;\n    long oddCount16 = 0;\n    long evenSum17\
    \ = 0;\n    long oddSum17 = 0;\n    long evenCount17 = 0;\n    long oddCount17\
    \ = 0;\n    long evenSum18 = 0;\n    long oddSum18 = 0;\n    long evenCount18\
    \ = 0;\n    ", "    // Write your code here\n    std::vector<long> even;\n   \
    \ for(long i = 0; i < lst1.size(); i++){\n        if(lst1[i] % 2 == 0){\n    \
    \        even.push_back(lst1[i]);\n        }\n    }\n    for(long i = 0; i < lst2.size();\
    \ i++){\n        if(lst2[i] % 2 == 0){\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    if(even.size() == lst1.size()){\n        return \"YES\"\
    ;\n    }\n    return \"NO\";", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long sum = 0;\n    long temp = 0;\n    long count = 0;\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n    }\n\
    \    for (long i = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n    }\n\
    \    even = sum % 2;\n    odd = sum / 2;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        temp = lst1[i];\n        lst1[i] = lst2[i];\n        lst2[i]\
    \ = temp;\n    }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i]\
    \ % 2 == 0) {\n            count++;\n        }\n    }\n    if (count == even)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }"]
stop_tokens:
- "\n}"

name: HumanEval_92_any_int
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ 3 numbers.\n// Returns true if one of the numbers is equal to the sum of the other\
  \ two, and all numbers are integers.\n// Returns false in any other cases.\n// Examples\n\
  // >>> any_int((float(5)), (float(2)), (float(7)))\n// (true)\n// >>> any_int((float(3)),\
  \ (float(2)), (float(2)))\n// (false)\n// >>> any_int((float(3)), (float(-2)), (float(1)))\n\
  // (true)\n// >>> any_int((3.6), (-2.2), (float(2)))\n// (false)\nbool any_int(float\
  \ x, float y, float z) {\n"
tests: "}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
  \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
  \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n  \
  \  assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
  \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
  \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
  \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
  \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
  \ == (false));\n}\n"
completions: ["    if (x < y && x < z) {\n        return true;\n    }\n    if (y <\
    \ x && y < z) {\n        return true;\n    }\n    if (z < x && z < y) {\n    \
    \    return true;\n    }\n    return false;", "    int x_int = (int)x;\n    int\
    \ y_int = (int)y;\n    int z_int = (int)z;\n    if (x_int == y_int + z_int) {\n\
    \        return true;\n    }\n    return false;", "    int xx = x;\n    int yy\
    \ = y;\n    int zz = z;\n    if (xx < yy && xx < zz) {\n        return true;\n\
    \    } else if (yy < zz) {\n        return true;\n    } else {\n        return\
    \ false;\n    }", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n\
    \    if (x + y == z) {\n        return true;\n    }\n    return false;", "   \
    \ assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    float sum = x\
    \ + y + z;\n    return sum == x || sum == y || sum == z;", "    if (x == y + z\
    \ && x == y + z && x == y + z) {\n        return true;\n    }\n    return false;",
  "    float sum = x + y + z;\n    return sum == x || sum == y || sum == z;", "  \
    \  assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return ((x +\
    \ y == z) && (x == y));", "    float sum = (x + y + z);\n    if (sum == x) {\n\
    \        return true;\n    } else if (sum == y) {\n        return true;\n    }\
    \ else if (sum == z) {\n        return true;\n    } else {\n        return false;\n\
    \    }", "    int a = abs(x);\n    int b = abs(y);\n    int c = abs(z);\n    int\
    \ d = a + b + c;\n    if (d == 0) {\n        return false;\n    }\n    if (a >\
    \ b) {\n        if (a > c) {\n            return true;\n        } else {\n   \
    \         return false;\n        }\n    } else {\n        if (b > c) {\n     \
    \       return true;\n        } else {\n            return false;\n        }\n\
    \    }", "    // Write your code here\n    float sum=x+y+z;\n    if(sum==(x+y+z)){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }", "    if\
    \ (x == x + y && y == y + z && z == z + x) return true;\n    return false;", " \
    \   // Write your code here\n    float sum = (x + y + z);\n    if (sum == x)\n\
    \        return true;\n    else if (sum == y)\n        return true;\n    else\
    \ if (sum == z)\n        return true;\n    else\n        return false;", "   \
    \ int x_int = (int) x;\n    int y_int = (int) y;\n    int z_int = (int) z;\n \
    \   return x_int + y_int == z_int;", "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    float sum = x + y + z;\n    return sum == x || sum ==\
    \ y || sum == z;", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >=\
    \ 0);\n    if (x + y == z) {\n        return true;\n    }\n    return false;",
  "    float sum = x + y + z;\n    if (sum == x)\n        return true;\n    if (sum\
    \ == y)\n        return true;\n    if (sum == z)\n        return true;\n    return\
    \ false;", '    return ((x == x + y) && (x == x + z) && (x == y + z));', "   \
    \ // Write your code here.\n    return ((x == x + y) && (x == x + z) && (y ==\
    \ y + z));", "    // Write your code here\n    float sum;\n    sum=x+y+z;\n  \
    \  if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }"]
stop_tokens:
- "\n}"

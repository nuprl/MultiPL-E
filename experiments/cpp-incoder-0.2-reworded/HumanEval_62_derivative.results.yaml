language: cpp
name: HumanEval_62_derivative
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long n = xs.size();\n    long m = (n -\
    \ 1) / 2;\n    long a = xs[m] * xs[m];\n    long b = xs[m] * xs[m] * xs[m];\n\
    \    long c = xs[m] * xs[m] * xs[m] * xs[m];\n    long d = xs[m] * xs[m] * xs[m]\
    \ * xs[m] * xs[m];\n    long e = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n\
    \    long f = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n    long\
    \ g = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n    long\
    \ h = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n\
    \    long i = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] *\
    \ xs[m] * xs[m];\n    long j = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] *\
    \ xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n    long k = xs[m] * xs[m] * xs[m] *\
    \ xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n    long l =\
    \ xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m]\
    \ * xs[m] * xs[m];\n    long m = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m]\
    \ * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n    long n = xs[m]\
    \ * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m]\
    \ * xs[m] * xs[m];\n    long o = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m]\
    \ * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n    long p = xs[m]\
    \ * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m]\
    \ * xs[m] * xs[m] * xs[m];\n    long \n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps1b_nde5.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmps1b_nde5.cpp:26:10: error: redeclaration of 'long int m'\n\
    \     long m = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] *\
    \ xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n          ^\n/tmp/tmps1b_nde5.cpp:13:10:\
    \ error: 'long int m' previously declared here\n     long m = (n - 1) / 2;\n \
    \         ^\n/tmp/tmps1b_nde5.cpp:27:10: error: redeclaration of 'long int n'\n\
    \     long n = xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] * xs[m] *\
    \ xs[m] * xs[m] * xs[m] * xs[m] * xs[m];\n          ^\n/tmp/tmps1b_nde5.cpp:12:10:\
    \ error: 'long int n' previously declared here\n     long n = xs.size();\n   \
    \       ^\n/tmp/tmps1b_nde5.cpp:31:1: error: expected unqualified-id before '}'\
    \ token\n }\n ^\n/tmp/tmps1b_nde5.cpp: In function 'int main()':\n/tmp/tmps1b_nde5.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmps1b_nde5.cpp:2:\n/tmp/tmps1b_nde5.cpp:34:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmps1b_nde5.cpp:34:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmps1b_nde5.cpp:34:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmps1b_nde5.cpp:34:86:\
    \ error: no matching function for call to 'std::vect"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long power = 1;\n    for\
    \ (long i = 0; i < xs.size(); i++) {\n        power = power * xs[i];\n       \
    \ derivatives.push_back(power);\n    }\n    return derivatives;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpadzh9h0j.cpp: In function 'int main()':\n/tmp/tmpadzh9h0j.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpadzh9h0j.cpp:2:\n/tmp/tmpadzh9h0j.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpadzh9h0j.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpadzh9h0j.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpadzh9h0j.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpadzh9h0j.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpadzh9h0j.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 1;\n    for (long long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = xs[i] * b;\n        b += xs[i];\n    }\n    return derivative;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp31tmxy0m.cpp: In function 'int main()':\n/tmp/tmp31tmxy0m.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp31tmxy0m.cpp:2:\n/tmp/tmp31tmxy0m.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp31tmxy0m.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp31tmxy0m.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp31tmxy0m.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp31tmxy0m.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp31tmxy0m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> derivatives;\n   \
    \ long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    return derivatives;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfgu3sank.cpp: In function 'int main()':\n/tmp/tmpfgu3sank.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfgu3sank.cpp:2:\n/tmp/tmpfgu3sank.cpp:33:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpfgu3sank.cpp:33:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpfgu3sank.cpp:33:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpfgu3sank.cpp:33:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpfgu3sank.cpp:33:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpfgu3sank.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    derivatives.push_back(xs[0]);\n\
    \    long long a = xs[1];\n    long long b = xs[2];\n    long long c = xs[3];\n\
    \    long long d = xs[4];\n    long long e = xs[5];\n    long long f = xs[6];\n\
    \    long long g = xs[7];\n    long long h = xs[8];\n    long long i = xs[9];\n\
    \    long long j = xs[10];\n    long long k = xs[11];\n    long long l = xs[12];\n\
    \    long long m = xs[13];\n    long long n = xs[14];\n    long long o = xs[15];\n\
    \    long long p = xs[16];\n    long long q = xs[17];\n    long long r = xs[18];\n\
    \    long long s = xs[19];\n    long long t = xs[20];\n    long long u = xs[21];\n\
    \    long long v = xs[22];\n    long long w = xs[23];\n    long long x = xs[24];\n\
    \    long long y = xs[25];\n    long long z = xs[26];\n    long long a = xs[27];\n\
    \    long long b = xs[28];\n    long long c = xs[29];\n    long long d = xs[30];\n\
    \    long long e = xs[31];\n    long long f = xs[32];\n    long long g = xs[33];\n\
    \    long long h = xs[34];\n    long long i = xs[35];\n    long long j = xs[36];\n\
    \    long long k = xs[37];\n    long long l = xs[38];\n    long long m = xs[39];\n\
    \    long long n = xs[40];\n    long long o = xs[41];\n    long long p = xs[42];\n\
    \    long long q = xs[43];\n    long long r = xs[44];\n    long long s = xs[45];\n\
    \    long long t = xs[46];\n    long long u = xs[47];\n    long long v = xs[48];\n\
    \    long long w = xs[49];\n    long long x = xs[50];\n    long long y = xs[51];\n\
    \    long long z = xs[52];\n    long long a = xs[53];\n    long long b = xs[54];\n\
    \    long long c = xs[55];\n    long long d = \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgv0y9cvy.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmpgv0y9cvy.cpp:39:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[27];\n               ^\n/tmp/tmpgv0y9cvy.cpp:13:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[1];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:40:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[28];\n               ^\n/tmp/tmpgv0y9cvy.cpp:14:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[2];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:41:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[29];\n               ^\n/tmp/tmpgv0y9cvy.cpp:15:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[3];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:42:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[30];\n               ^\n/tmp/tmpgv0y9cvy.cpp:16:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[4];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:43:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[31];\n               ^\n/tmp/tmpgv0y9cvy.cpp:17:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[5];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:44:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[32];\n               ^\n/tmp/tmpgv0y9cvy.cpp:18:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[6];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:45:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[33];\n               ^\n/tmp/tmpgv0y9cvy.cpp:19:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[7];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:46:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[34];\n               ^\n/tmp/tmpgv0y9cvy.cpp:20:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[8];\n\
    \               ^\n/tmp/tmpgv0y9cvy.cpp:47:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = xs[0];\n\
    \    long long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n\
    \    long long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n\
    \    long long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n\
    \    long long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n\
    \    long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppee_cuni.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmppee_cuni.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmppee_cuni.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmppee_cuni.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmppee_cuni.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmppee_cuni.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmppee_cuni.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmppee_cuni.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmppee_cuni.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmppee_cuni.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    derivatives.push_back(xs[0]);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        derivatives.push_back(xs[i]\
    \ + derivatives[i - 1] * xs[i - 1]);\n    }\n    return derivatives;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcklkx3n4.cpp: In function 'int main()':\n/tmp/tmpcklkx3n4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcklkx3n4.cpp:2:\n/tmp/tmpcklkx3n4.cpp:20:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpcklkx3n4.cpp:20:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpcklkx3n4.cpp:20:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpcklkx3n4.cpp:20:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpcklkx3n4.cpp:20:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpcklkx3n4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    derivative[0] = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n     \
    \   derivative[i] = xs[i] - derivative[i - 1];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppft4ani5.cpp: In function 'int main()':\n/tmp/tmppft4ani5.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppft4ani5.cpp:2:\n/tmp/tmppft4ani5.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmppft4ani5.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmppft4ani5.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppft4ani5.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppft4ani5.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppft4ani5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivatives;\n    long\
    \ long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n    long\
    \ long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n    long\
    \ long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n    long\
    \ long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n    long\
    \ long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n   \
    \ long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[55];\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4fbzshp.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmpm4fbzshp.cpp:39:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmpm4fbzshp.cpp:13:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:40:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmpm4fbzshp.cpp:14:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:41:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmpm4fbzshp.cpp:15:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:42:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmpm4fbzshp.cpp:16:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:43:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmpm4fbzshp.cpp:17:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:44:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmpm4fbzshp.cpp:18:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:45:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmpm4fbzshp.cpp:19:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:46:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmpm4fbzshp.cpp:20:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmpm4fbzshp.cpp:47:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long pow = 1;\n    for (long\
    \ i = 0; i < xs.size(); i++) {\n        pow *= xs[i];\n        derivatives.push_back(pow);\n\
    \    }\n    return derivatives;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiukgk4x5.cpp: In function 'int main()':\n/tmp/tmpiukgk4x5.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiukgk4x5.cpp:2:\n/tmp/tmpiukgk4x5.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpiukgk4x5.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpiukgk4x5.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpiukgk4x5.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpiukgk4x5.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpiukgk4x5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * xs[i];\n \
    \       derivative[i] = res;\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp59z74sce.cpp: In function 'int main()':\n/tmp/tmp59z74sce.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/tmp/tmp59z74sce.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp59z74sce.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp59z74sce.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp59z74sce.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp59z74sce.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long n = xs.size();\n    long m = 0;\n\
    \    long k = n - 1;\n    long s = 0;\n    long t = 1;\n    long r = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = \n}\n\
    int main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp45tqev3x.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp45tqev3x.cpp:20:10: error: redeclaration of 'long int r'\n\
    \     long r = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:17:10: error: 'long int r'\
    \ previously declared here\n     long r = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:21:10:\
    \ error: redeclaration of 'long int m'\n     long m = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:13:10:\
    \ error: 'long int m' previously declared here\n     long m = 0;\n          ^\n\
    /tmp/tmp45tqev3x.cpp:32:10: error: redeclaration of 'long int k'\n     long k\
    \ = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:14:10: error: 'long int k' previously\
    \ declared here\n     long k = n - 1;\n          ^\n/tmp/tmp45tqev3x.cpp:34:10:\
    \ error: redeclaration of 'long int m'\n     long m = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:13:10:\
    \ error: 'long int m' previously declared here\n     long m = 0;\n          ^\n\
    /tmp/tmp45tqev3x.cpp:35:10: error: redeclaration of 'long int n'\n     long n\
    \ = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:12:10: error: 'long int n' previously\
    \ declared here\n     long n = xs.size();\n          ^\n/tmp/tmp45tqev3x.cpp:37:10:\
    \ error: redeclaration of 'long int p'\n     long p = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:18:10:\
    \ error: 'long int p' previously declared here\n     long p = 1;\n          ^\n\
    /tmp/tmp45tqev3x.cpp:38:10: error: redeclaration of 'long int q'\n     long q\
    \ = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:19:10: error: 'long int q' previously\
    \ declared here\n     long q = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:39:10: error:\
    \ redeclaration of 'long int r'\n     long r = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:17:10:\
    \ error: 'long int r' previously declared here\n     long r = 1;\n          ^\n\
    /tmp/tmp45tqev3x.cpp:40:10: error: redeclaration of 'long int s'\n     long s\
    \ = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:15:10: error: 'long int s' previously\
    \ declared here\n     long s = 0;\n          ^\n/tmp/tmp45tqev3x.cpp:41:10: error:\
    \ redeclaration of 'long int t'\n     long t = 1;\n          ^\n/tmp/tmp45tqev3x.cpp:16:10:\
    \ error: 'long int t' previously declared here\n     long t "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 0, c = 0;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = xs[i];\n    }\n    for (int i = xs.size() - 1; i >= 0; i--) {\n        a =\
    \ xs[i] + xs[i + 1] * a + xs[i + 2] * a * a + xs[i + 3] * a * a * a;\n       \
    \ b = xs[i + 1] + xs[i] * b + xs[i + 2] * b * b + xs[i + 3] * b * b * b;\n   \
    \     c = xs[i + 2] + xs[i] * c + xs[i + 3] * c * c + xs[i + 4] * c * c * c;\n\
    \        derivative[i] = (a + b + c) / xs[i];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg3dlxgjh.cpp: In function 'int main()':\n/tmp/tmpg3dlxgjh.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg3dlxgjh.cpp:2:\n/tmp/tmpg3dlxgjh.cpp:26:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpg3dlxgjh.cpp:26:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpg3dlxgjh.cpp:26:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpg3dlxgjh.cpp:26:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpg3dlxgjh.cpp:26:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpg3dlxgjh.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long sum = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        sum += xs[i] * xs[i];\n \
    \       derivative[i] = sum;\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvhdsjdg_.cpp: In function 'int main()':\n/tmp/tmpvhdsjdg_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvhdsjdg_.cpp:2:\n/tmp/tmpvhdsjdg_.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpvhdsjdg_.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpvhdsjdg_.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpvhdsjdg_.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpvhdsjdg_.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpvhdsjdg_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size());\n \
    \   long n = xs.size();\n    long m = 0;\n    long k = 0;\n    long sum = 0;\n\
    \    long cur = 0;\n    long cur2 = 0;\n    long cur3 = 0;\n    long cur4 = 0;\n\
    \    long cur5 = 0;\n    long cur6 = 0;\n    long cur7 = 0;\n    long cur8 = 0;\n\
    \    long cur9 = 0;\n    long cur10 = 0;\n    long cur11 = 0;\n    long cur12\
    \ = 0;\n    long cur13 = 0;\n    long cur14 = 0;\n    long cur15 = 0;\n    long\
    \ cur16 = 0;\n    long cur17 = 0;\n    long cur18 = 0;\n    long cur19 = 0;\n\
    \    long cur20 = 0;\n    long cur21 = 0;\n    long cur22 = 0;\n    long cur23\
    \ = 0;\n    long cur24 = 0;\n    long cur25 = 0;\n    long cur26 = 0;\n    long\
    \ cur27 = 0;\n    long cur28 = 0;\n    long cur29 = 0;\n    long cur30 = 0;\n\
    \    long cur31 = 0;\n    long cur32 = 0;\n    long cur33 = 0;\n    long cur34\
    \ = 0;\n    long cur35 = 0;\n    long cur36 = 0;\n    long cur37 = 0;\n    long\
    \ cur38 = 0;\n    long cur39 = 0;\n    long cur40 = 0;\n    long cur41 = 0;\n\
    \    long cur42 = 0;\n    long cur43 = 0;\n    long cur44 = 0;\n    long cur45\
    \ = 0;\n    long cur46 = 0;\n    long cur47 = 0;\n    long cur48 = 0;\n    long\
    \ cur49 = 0;\n    long cur50 = 0;\n    long cur51 = 0;\n    long cur52 = 0;\n\
    \    long cur53 = 0;\n    long cur54 = 0;\n    long cur55 = 0;\n    long cur56\
    \ = 0;\n    long cur57 = 0;\n    long cur58 = 0;\n    long cur59 = 0;\n    long\
    \ cur60 = 0;\n    long cur61 = 0;\n    long cur62 = 0;\n    long cur63 = 0;\n\
    \    long cur64 = 0;\n    long cur65 = 0;\n    long cur66 = 0;\n    long cur67\
    \ = 0;\n    long cur68 = 0;\n    long cur69 = 0;\n    long cur70 = 0;\n    long\
    \ cur71 = 0;\n    long cur72 = 0;\n    long cur73 = 0;\n    long cur74 = 0;\n\
    \    long cur75 = 0;\n    long cur76 = 0;\n    long cur77 = 0;\n    long cur78\
    \ = 0;\n    long cur79 = 0;\n    long cur80 = 0;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpykgy5j_p.cpp: In function 'int main()':\n/tmp/tmpykgy5j_p.cpp:99:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpykgy5j_p.cpp:2:\n/tmp/tmpykgy5j_p.cpp:100:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpykgy5j_p.cpp:100:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpykgy5j_p.cpp:100:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpykgy5j_p.cpp:100:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpykgy5j_p.cpp:100:86: note: candidates are:\nIn\
    \ file included from /usr/include/c++/4.8.2/vector:64:0,\n                 from\
    \ /usr/include/c++/4.8.2/queue:61,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpykgy5j_p.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 fr"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long sum = 0;\n    for (long\
    \ long i = 0; i < xs.size(); i++) {\n        sum += xs[i] * xs[i];\n    }\n  \
    \  derivatives.push_back((long long)sum);\n    for (long long i = xs.size() -\
    \ 1; i >= 0; i--) {\n        sum += xs[i] * derivatives.back();\n        derivatives.push_back((long\
    \ long)sum);\n    }\n    return derivatives;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdh_mqd8v.cpp: In function 'int main()':\n/tmp/tmpdh_mqd8v.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdh_mqd8v.cpp:2:\n/tmp/tmpdh_mqd8v.cpp:25:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpdh_mqd8v.cpp:25:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpdh_mqd8v.cpp:25:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdh_mqd8v.cpp:25:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdh_mqd8v.cpp:25:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdh_mqd8v.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    derivative[1] = xs[1];\n    for (int i = 2; i < derivative.size(); i++) {\n\
    \        derivative[i] = derivative[i - 1] * xs[i];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5zjgiihl.cpp: In function 'int main()':\n/tmp/tmp5zjgiihl.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5zjgiihl.cpp:2:\n/tmp/tmp5zjgiihl.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5zjgiihl.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5zjgiihl.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5zjgiihl.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5zjgiihl.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5zjgiihl.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivatives(xs.size()\
    \ - 1);\n    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long\
    \ d = xs[3];\n    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n\
    \    long h = xs[7];\n    derivatives[0] = a;\n    derivatives[1] = b;\n    derivatives[2]\
    \ = c;\n    derivatives[3] = d;\n    derivatives[4] = e;\n    derivatives[5] =\
    \ f;\n    derivatives[6] = g;\n    derivatives[7] = h;\n    derivatives[8] = 2\
    \ * g;\n    derivatives[9] = 6 * f;\n    derivatives[10] = 24 * e;\n    derivatives[11]\
    \ = 120 * d;\n    derivatives[12] = 720 * c;\n    derivatives[13] = 5040 * b;\n\
    \    derivatives[14] = 40320 * a;\n    derivatives[15] = 362880 * h;\n    derivatives[16]\
    \ = 3628800 * g;\n    derivatives[17] = 39916800 * f;\n    derivatives[18] = 479001600\
    \ * e;\n    derivatives[19] = 6227020800 * d;\n    derivatives[20] = 87178291200\
    \ * c;\n    derivatives[21] = 1307674368000 * b; // 2^30\n    derivatives[22]\
    \ = 20922789888000 * a; // 2^30\n    derivatives[23] = 355687428096000 * h; //\
    \ 2^30\n    derivatives[24] = 6402373705728000 * g; // 2^30\n    derivatives[25]\
    \ = 121645100408832000 * f; // 2^30\n    derivatives[26] = 2432902008176640000\
    \ * e; // 2^30\n    derivatives[27] = 51090942171709440000 * d; // 2^30\n    derivatives[28]\
    \ = 1124000727777607680000 * c; // 2^30\n    derivatives[29] = 25852016738884976640000\
    \ * b; // 2^30\n    derivatives[30] = 50331648641509521280000 * a; // 2^30\n \
    \   derivatives[31] = 675539944105574432000000 * h; // 2^30\n    derivatives[32]\
    \ = 134217727895642288000000 * g; // 2^30\n    derivatives[33] = 268435456994676800000000\
    \ * f; // 2^30\n    derivatives[34] = 5\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphz2i42j5.cpp:48:23: warning: integer constant is too large for\
    \ its type [enabled by default]\n     derivatives[27] = 51090942171709440000 *\
    \ d; // 2^30\n                       ^\n/tmp/tmphz2i42j5.cpp:48:5: warning: this\
    \ decimal constant is unsigned only in ISO C90 [enabled by default]\n     derivatives[27]\
    \ = 51090942171709440000 * d; // 2^30\n     ^\n/tmp/tmphz2i42j5.cpp:49:23: warning:\
    \ integer constant is too large for its type [enabled by default]\n     derivatives[28]\
    \ = 1124000727777607680000 * c; // 2^30\n                       ^\n/tmp/tmphz2i42j5.cpp:49:5:\
    \ warning: this decimal constant is unsigned only in ISO C90 [enabled by default]\n\
    \     derivatives[28] = 1124000727777607680000 * c; // 2^30\n     ^\n/tmp/tmphz2i42j5.cpp:50:23:\
    \ warning: integer constant is too large for its type [enabled by default]\n \
    \    derivatives[29] = 25852016738884976640000 * b; // 2^30\n                \
    \       ^\n/tmp/tmphz2i42j5.cpp:51:23: warning: integer constant is too large\
    \ for its type [enabled by default]\n     derivatives[30] = 50331648641509521280000\
    \ * a; // 2^30\n                       ^\n/tmp/tmphz2i42j5.cpp:52:23: warning:\
    \ integer constant is too large for its type [enabled by default]\n     derivatives[31]\
    \ = 675539944105574432000000 * h; // 2^30\n                       ^\n/tmp/tmphz2i42j5.cpp:53:23:\
    \ warning: integer constant is too large for its type [enabled by default]\n \
    \    derivatives[32] = 134217727895642288000000 * g; // 2^30\n               \
    \        ^\n/tmp/tmphz2i42j5.cpp:53:5: warning: this decimal constant is unsigned\
    \ only in ISO C90 [enabled by default]\n     derivatives[32] = 134217727895642288000000\
    \ * g; // 2^30\n     ^\n/tmp/tmphz2i42j5.cpp:54:23: warning: integer constant\
    \ is too large for its type [enabled by default]\n     derivatives[33] = 268435456994676800000000\
    \ * f; // 2^30\n                       ^\n/tmp/tmphz2i42j5.cpp:54:5: warning:\
    \ this decimal constant is unsigned only in ISO C90 [enabled by default]\n   \
    \  derivatives[33] = 268435456994676800000000 * f; // 2^30\n     ^\n/tmp/tmphz2i42j5.cpp:\
    \ In function 'std::vector<long i"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * xs[i];\n \
    \       derivative[i] = res;\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp59z74sce.cpp: In function 'int main()':\n/tmp/tmp59z74sce.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/tmp/tmp59z74sce.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp59z74sce.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp59z74sce.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp59z74sce.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp59z74sce.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> ds;\n    ds.push_back(xs[0]);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        ds.push_back(ds[i - 1] * xs[i]);\n\
    \    }\n    return ds;\n}\nint main() {\n    auto candidate = derivative;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpxdfbqun4: /tmp/tmpxdfbqun4.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpd5t65ks4: /tmp/tmpd5t65ks4.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs(xs.size());\n    for (long i = 0; i < xs.size();\
    \ i++) {\n        dxs[i] = xs[i] - xs[i - 1];\n    }\n    return dxs;\n}\nint\
    \ main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpt40bslwv: /tmp/tmpt40bslwv.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 0, c = 0;\n    long long d = 1;\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = 0;\n    }\n    for (int i = 0; i < xs.size(); i++) {\n\
    \n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxl3kf36.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzxl3kf36.cpp:128:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  128 | int main() {\n      |     \
    \       ^\n/tmp/tmpzxl3kf36.cpp:135:1: error: expected \u2018}\u2019 at end of\
    \ input\n  135 | }\n      | ^\n/tmp/tmpzxl3kf36.cpp:10:52: note: to match this\
    \ \u2018{\u2019\n   10 | std::vector<long> derivative(std::vector<long> xs) {\n\
    \      |                                                    ^\n/tmp/tmpzxl3kf36.cpp:135:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  135 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> result;\n    long a\
    \ = xs[0];\n    long b = xs[1];\n    for (long i = 2; i < xs.size(); i++) {\n\
    \        long c = xs[i];\n        long d = b * c;\n        result.push_back(a\
    \ * d);\n        a = d;\n        b = c;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_ips1_m7: /tmp/tmp_ips1_m7.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        derivative.push_back(xs[i]\
    \ * i);\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7_6howq7: /tmp/tmp7_6howq7.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3]\
    \ = d;\n    derivative[4] = e;\n    derivative[5] = f;\n    derivative[6] = g;\n\
    \    derivative[7] = h;\n    derivative[8] = a;\n    derivative[9] = b;\n    derivative[10]\
    \ = c;\n    derivative[11] = d;\n    derivative[12] = e;\n    derivative[13] =\
    \ f;\n    derivative[14] = g;\n    derivative[15] = h;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpnj3jxuez: /tmp/tmpnj3jxuez.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long pow = 1;\n    for (long\
    \ i = 0; i < xs.size(); i++) {\n        pow *= xs[i];\n        derivatives.push_back(pow);\n\
    \    }\n    return derivatives;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiukgk4x5.cpp: In function 'int main()':\n/tmp/tmpiukgk4x5.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiukgk4x5.cpp:2:\n/tmp/tmpiukgk4x5.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpiukgk4x5.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpiukgk4x5.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpiukgk4x5.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpiukgk4x5.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpiukgk4x5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs;\n    dxs.push_back(xs[0]);\n\
    \    for (long i = 1; i < xs.size(); i++) {\n        dxs.push_back(xs[i] * dxs[i\
    \ - 1]);\n    }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpshc0fh91: /tmp/tmpshc0fh91.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    std::vector<long>\
    \ derivative(xs.size());\n    long long pow = 1;\n    for (long i = 0; i < xs.size();\
    \ i++) {\n        derivative[i] = pow;\n        pow *= xs[i];\n    }\n    return\
    \ derivative;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp13det87n: /tmp/tmp13det87n.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3]\
    \ = d;\n    derivative[4] = e;\n    derivative[5] = f;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpf8tlfcdn: /tmp/tmpf8tlfcdn.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> result;\n    long a\
    \ = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n  \
    \  long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = xs[26];\n    long b = xs[27];\n    long c = xs[28];\n\
    \    long d = xs[29];\n    long e = xs[30];\n    long f = xs[31];\n    long g\
    \ = xs[32];\n    long h = xs[33];\n    long i = xs[34];\n    long j = xs[35];\n\
    \    long k = xs[36];\n    long l = xs[37];\n    long m = xs[38];\n    long n\
    \ = xs[39];\n    long o = xs[40];\n    long p = xs[41];\n    long q = xs[42];\n\
    \    long r = xs[43];\n    long s = xs[44];\n    long t = xs[45];\n    long u\
    \ = xs[46];\n    long v = xs[47];\n    long w = xs[48];\n    long x = xs[49];\n\
    \    long y = xs[50];\n    long z = xs[51];\n    long a = xs[52];\n    long b\
    \ = xs[53];\n    long c = xs[54];\n    long d = xs[55];\n    long e = xs[56];\n\
    \    long f = xs[57];\n    long g = xs[58];\n    long h = xs[59];\n    long i\
    \ = xs[60];\n    long j = xs[61];\n    long k = xs[62];\n}\nint main() {\n   \
    \ auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjlrs83w9.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjlrs83w9.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = xs[26];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = xs[27];\n      |          ^\n\
    /tmp/tmpjlrs83w9.cpp:14:10: note: \u2018long int b\u2019 previously declared here\n\
    \   14 |     long b = xs[1];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = xs[28];\n\
    \      |          ^\n/tmp/tmpjlrs83w9.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmpjlrs83w9.cpp:42:10: error: redeclaration of \u2018long int d\u2019\n \
    \  42 |     long d = xs[29];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:16:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   16 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:43:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   43 |     long e = xs[30];\n      |          ^\n\
    /tmp/tmpjlrs83w9.cpp:17:10: note: \u2018long int e\u2019 previously declared here\n\
    \   17 |     long e = xs[4];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:44:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   44 |     long f = xs[31];\n\
    \      |          ^\n/tmp/tmpjlrs83w9.cpp:18:10: note: \u2018long int f\u2019\
    \ previously declared here\n   18 |     long f = xs[5];\n      |          ^\n\
    /tmp/tmpjlrs83w9.cpp:45:10: error: redeclaration of \u2018long int g\u2019\n \
    \  45 |     long g = xs[32];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:19:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   19 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:46:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   46 |     long h = xs[33];\n      |          ^\n\
    /tmp/tmpjlrs83w9.cpp:20:10: note: \u2018long int h\u2019 previously declared here\n\
    \   20 |     long h = xs[7];\n      |          ^\n/tmp/tmpjlrs83w9.cpp:47:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   47 |     long i = xs[34];\n\
    \     "
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> ys;\n    ys.push_back(0);\n\
    \    for (long i = 2; i < xs.size(); i++) {\n        ys.push_back(xs[i] + ys[i\
    \ - 1] * xs[i - 1]);\n    }\n    return ys;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmphh6kbum6: /tmp/tmphh6kbum6.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx11gnipt.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpx11gnipt.cpp:38:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   38 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmpx11gnipt.cpp:12:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   12 |     long long a = xs[0];\n      |               ^\n/tmp/tmpx11gnipt.cpp:39:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   39 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmpx11gnipt.cpp:13:15: note: \u2018\
    long long int b\u2019 previously declared here\n   13 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:40:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   40 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:14:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   14 |     long long c = xs[2];\n      |               ^\n/tmp/tmpx11gnipt.cpp:41:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   41 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmpx11gnipt.cpp:15:15: note: \u2018\
    long long int d\u2019 previously declared here\n   15 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:42:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   42 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:16:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   16 |     long long e = xs[4];\n      |               ^\n/tmp/tmpx11gnipt.cpp:43:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   43 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmpx11gnipt.cpp:17:15: note: \u2018\
    long long int f\u2019 previously declared here\n   17 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:44:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   44 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:18:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   18 |     long long g = xs[6];\n      |               ^\n/tmp/tmpx11gnipt.cpp:45:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   45 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> result;\n    long\
    \ a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = b * x + c;\n    long b = d * x + e;\n    long c = f\
    \ * x + g;\n    long d = h * x + i;\n    long e = j * x + k;\n    long f = m *\
    \ x + l;\n    long g = n * x + o;\n    long h = p * x + q;\n    long i = r * x\
    \ + s;\n    long j = t * x + t;\n    long k = u * x + v;\n    long l = w * x +\
    \ w;\n    long m = x * x + y;\n    long n = x * x + z;\n    long o = y * x + a;\n\
    \    long p = y * x + b;\n    long q = z * x + c;\n    long r = z * x + d;\n \
    \   long s = z * x + e;\n    long t = z * x + f;\n    long u = z * x + g;\n  \
    \  long v = z * x + h;\n    long w = z * x + i;\n    long x = z * x + j;\n   \
    \ long y = z * x + k;\n    long z = z * x + l;\n    long a = b * x + c;\n    long\
    \ b = d * x + e;\n    long c = f * x + g;\n    long d = h * x + i;\n    long e\
    \ = j * x + k;\n    long f = m * x + l;\n    long g = n * x + o;\n    long h =\
    \ p * x + q;\n    long i = r * x + s;\n    long j = t * x + t;\n    long k = u\
    \ * x + v;\n    long l = w * x + w;\n    \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpakjo_ftr.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpakjo_ftr.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = b * x + c;\n      |          ^\n/tmp/tmpakjo_ftr.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmpakjo_ftr.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = d * x + e;\n      |        \
    \  ^\n/tmp/tmpakjo_ftr.cpp:14:10: note: \u2018long int b\u2019 previously declared\
    \ here\n   14 |     long b = xs[1];\n      |          ^\n/tmp/tmpakjo_ftr.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = f * x +\
    \ g;\n      |          ^\n/tmp/tmpakjo_ftr.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmpakjo_ftr.cpp:42:10: error: redeclaration of \u2018long int d\u2019\n \
    \  42 |     long d = h * x + i;\n      |          ^\n/tmp/tmpakjo_ftr.cpp:16:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   16 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmpakjo_ftr.cpp:43:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   43 |     long e = j * x + k;\n      |        \
    \  ^\n/tmp/tmpakjo_ftr.cpp:17:10: note: \u2018long int e\u2019 previously declared\
    \ here\n   17 |     long e = xs[4];\n      |          ^\n/tmp/tmpakjo_ftr.cpp:44:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   44 |     long f = m * x +\
    \ l;\n      |          ^\n/tmp/tmpakjo_ftr.cpp:18:10: note: \u2018long int f\u2019\
    \ previously declared here\n   18 |     long f = xs[5];\n      |          ^\n\
    /tmp/tmpakjo_ftr.cpp:45:10: error: redeclaration of \u2018long int g\u2019\n \
    \  45 |     long g = n * x + o;\n      |          ^\n/tmp/tmpakjo_ftr.cpp:19:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   19 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmpakjo_ftr.cpp:46:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   46 |     long h = p * x + q;\n      |        \
    \  ^\n/tmp/tmpakjo_ftr.cpp:20:10: note: \u2018long int h\u2019 previously declared\
    \ here\n   20 |     long h = xs[7];\n      |          ^\n/tmp/tmpakjo_ftr.cpp:47:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   47 |   "
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size() - 1);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        dxs[i - 1] = (xs[i] - xs[i\
    \ - 1]) / (xs[i] - xs[i - 1]);\n    }\n    return dxs;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7qsw2muc: /tmp/tmp7qsw2muc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long pow = 1;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative.push_back(xs[i]);\n\
    \        pow *= xs[i];\n    }\n    for (long i = xs.size() - 1; i >= 0; i--) {\n\
    \        derivative.push_back(pow);\n        pow *= xs[i];\n    }\n    return\
    \ derivative;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp43_brr4i: /tmp/tmp43_brr4i.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    derivative[0] = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n     \
    \   derivative[i] = derivative[i - 1] * xs[i];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpardwij5o: /tmp/tmpardwij5o.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    long n = xs.size();\n    long m = 1;\n\
    \    long k = 0;\n    long sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n\
    \    long sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n\
    \    long sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 =\
    \ 0;\n    long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long\
    \ sum15 = 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n\
    \    long sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22\
    \ = 0;\n    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long\
    \ sum26 = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n\
    \    long sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33\
    \ = 0;\n    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long\
    \ sum37 = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n\
    \    long sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44\
    \ = 0;\n    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long\
    \ sum48 = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n\
    \    long sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55\
    \ = 0;\n    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long\
    \ sum59 = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n\
    \    long sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long sum66\
    \ = 0;\n    long sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long\
    \ sum70 = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n\
    \    long sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long sum77\
    \ = 0;\n    long sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long\
    \ sum81 = 0;\n    long sum82 = 0;\n    \n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpsp5963ff: /tmp/tmpsp5963ff.cpp:101: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    for (long i = xs.size() - 1; i >= 0; i--) {\n        derivative.push_back(xs[i]\
    \ * pow(xs[i + 1], 2));\n    }\n    return derivative;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpi2051a1r: /tmp/tmpi2051a1r.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nbhiipn.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1nbhiipn.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmp1nbhiipn.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    long n = xs.size();\n    long m = 1;\n\
    \    for (long i = 2; i <= n; i++) {\n        long k = i;\n        while (k %\
    \ 2 == 0) {\n            k /= 2;\n        }\n        long tmp = (xs[k] * m) /\
    \ (2 * i);\n        dxs.push_back(tmp);\n        m *= i;\n    }\n    return dxs;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2tvvx6rd: /tmp/tmp2tvvx6rd.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        derivative[i] = xs[i] * i;\n\
    \        res += xs[i] * xs[i];\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgtm_hjyz: /tmp/tmpgtm_hjyz.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    for (long i = 1; i < xs.size(); i++) {\n        derivative.push_back(xs[i]\
    \ - xs[i - 1]);\n    }\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpoam3vjxb: /tmp/tmpoam3vjxb.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> derivative(xs.size());\n\
    \    derivative[0] = xs[1];\n    for (int i = 2; i < xs.size(); i++) {\n     \
    \   derivative[i] = xs[i] - derivative[i - 1] * xs[i - 1];\n    }\n    return\
    \ derivative;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp32hwkejb: /tmp/tmp32hwkejb.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747884
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nbhiipn.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1nbhiipn.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmp1nbhiipn.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long int n = xs.size();\n\
    \    long long int m = 1;\n    long long int k = n - 1;\n    long long int j =\
    \ 0;\n    long long int sum = 0;\n    long long int product = 1;\n    long long\
    \ int sum2 = 0;\n    long long int product2 = 0;\n    long long int sum3 = 0;\n\
    \    long long int product3 = 0;\n    long long int sum4 = 0;\n    long long int\
    \ product4 = 0;\n    long long int sum5 = 0;\n    long long int product5 = 0;\n\
    \    long long int sum6 = 0;\n    long long int product6 = 0;\n    long long int\
    \ sum7 = 0;\n    long long int product7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int product8 = 0;\n    long long int sum9 = 0;\n    long long int\
    \ product9 = 0;\n    long long int sum10 = 0;\n    long long int product10 = 0;\n\
    \    long long int sum11 = 0;\n    long long int product11 = 0;\n    long long\
    \ int sum12 = 0;\n    long long int product12 = 0;\n    long long int sum13 =\
    \ 0;\n    long long int product13 = 0;\n    long long int sum14 = 0;\n    long\
    \ long int product14 = 0;\n    long long int sum15 = 0;\n    long long int product15\
    \ = 0;\n    long long int sum16 = 0;\n    long long int product16 = 0;\n    long\
    \ long int sum17 = 0;\n    long long int product17 = 0;\n    long long int sum18\
    \ = 0;\n    long long int product18 = 0;\n    long long int sum19 = 0;\n    long\
    \ long int product19 = 0;\n    long long int sum20 = 0;\n    long long int product20\
    \ = 0;\n    long long int sum21 = 0;\n    long long int product21 = 0;\n    long\
    \ long int sum22 = 0;\n    long long int product22 = 0;\n    long long int sum23\
    \ = 0;\n    long long int product23 = 0;\n    long long int sum24 = 0;\n    long\
    \ long int product24 = 0;\n    long long int sum25 = 0;\n    long long int product25\
    \ = 0;\n    long long int sum26 = 0;\n    long long int product26 = 0;\n    long\
    \ long int sum27 = 0;\n    long long int product27 = 0;\n    long long int sum28\
    \ = 0;\n    long long int product28 = 0;\n    long long int sum29 = 0;\n    long\
    \ long int product29 = 0;\n    long long int sum30 = 0;\n    long long int product30\
    \ = 0;\n    long long int \n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvj9wo_n3.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpvj9wo_n3.cpp:77:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   77 | }\n      | ^\n/tmp/tmpvj9wo_n3.cpp:77:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    dxs.push_back(xs[0]);\n    for (int i\
    \ = 1; i < xs.size(); i++) {\n        dxs.push_back(xs[i] * dxs[i - 1]);\n   \
    \ }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp91iuiz6i: /tmp/tmp91iuiz6i.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747884
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx11gnipt.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpx11gnipt.cpp:38:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   38 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmpx11gnipt.cpp:12:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   12 |     long long a = xs[0];\n      |               ^\n/tmp/tmpx11gnipt.cpp:39:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   39 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmpx11gnipt.cpp:13:15: note: \u2018\
    long long int b\u2019 previously declared here\n   13 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:40:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   40 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:14:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   14 |     long long c = xs[2];\n      |               ^\n/tmp/tmpx11gnipt.cpp:41:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   41 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmpx11gnipt.cpp:15:15: note: \u2018\
    long long int d\u2019 previously declared here\n   15 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:42:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   42 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:16:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   16 |     long long e = xs[4];\n      |               ^\n/tmp/tmpx11gnipt.cpp:43:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   43 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmpx11gnipt.cpp:17:15: note: \u2018\
    long long int f\u2019 previously declared here\n   17 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:44:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   44 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:18:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   18 |     long long g = xs[6];\n      |               ^\n/tmp/tmpx11gnipt.cpp:45:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   45 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long n = xs.size();\n  \
    \  long long m = 1;\n    for (long long i = 1; i < n; i++) {\n        m += xs[i]\
    \ * m;\n    }\n    derivatives.push_back(m);\n    for (long long i = 2; i < n;\
    \ i++) {\n        long long d = 1;\n        for (long long j = i; j < n; j++)\
    \ {\n            d += xs[j] * d;\n        }\n        derivatives.push_back(d);\n\
    \    }\n    return derivatives;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp3lxp9l9s: /tmp/tmp3lxp9l9s.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    long long res = 0;\n\
    \    for (long long i = 1; i < xs.size(); i++) {\n        res += xs[i] * i;\n\
    \    }\n    return std::vector<long>{res};\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpq1qzfleo: /tmp/tmpq1qzfleo.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 1;\n    for (size_t i = 0; i < xs.size(); i++) {\n        derivative[i] =\
    \ xs[i] * b;\n        a = b * xs[i];\n        b = a;\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpkhovx529: /tmp/tmpkhovx529.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpd5t65ks4: /tmp/tmpd5t65ks4.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = xs[26];\n    long b = xs[27];\n    long c = xs[28];\n\
    \    long d = xs[29];\n    long e = xs[30];\n    long f = xs[31];\n    long g\
    \ = xs[32];\n    long h = xs[33];\n    long i = xs[34];\n    long j = xs[35];\n\
    \    long k = xs[36];\n    long l = xs[37];\n    long m = xs[38];\n    long n\
    \ = xs[39];\n    long o = xs[40];\n    long p = xs[41];\n    long q = xs[42];\n\
    \    long r = xs[43];\n    long s = xs[44];\n    long t = xs[45];\n    long u\
    \ = xs[46];\n    long v = xs[47];\n    long w = xs[48];\n    long x = xs[49];\n\
    \    long y = xs[50];\n    long z = xs[51];\n    long a = xs[52];\n    long b\
    \ = xs[53];\n    long c = xs[54];\n    long d = xs[55];\n    long e = xs[56];\n\
    \    long f = xs[57];\n    long g = xs[58];\n    long h = xs[59];\n    long i\
    \ = xs[60];\n    long j = xs[61];\n    long k = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy4yiw5ai.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpy4yiw5ai.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = xs[26];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = xs[27];\n      |          ^\n\
    /tmp/tmpy4yiw5ai.cpp:14:10: note: \u2018long int b\u2019 previously declared here\n\
    \   14 |     long b = xs[1];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = xs[28];\n\
    \      |          ^\n/tmp/tmpy4yiw5ai.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmpy4yiw5ai.cpp:42:10: error: redeclaration of \u2018long int d\u2019\n \
    \  42 |     long d = xs[29];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:16:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   16 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:43:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   43 |     long e = xs[30];\n      |          ^\n\
    /tmp/tmpy4yiw5ai.cpp:17:10: note: \u2018long int e\u2019 previously declared here\n\
    \   17 |     long e = xs[4];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:44:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   44 |     long f = xs[31];\n\
    \      |          ^\n/tmp/tmpy4yiw5ai.cpp:18:10: note: \u2018long int f\u2019\
    \ previously declared here\n   18 |     long f = xs[5];\n      |          ^\n\
    /tmp/tmpy4yiw5ai.cpp:45:10: error: redeclaration of \u2018long int g\u2019\n \
    \  45 |     long g = xs[32];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:19:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   19 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:46:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   46 |     long h = xs[33];\n      |          ^\n\
    /tmp/tmpy4yiw5ai.cpp:20:10: note: \u2018long int h\u2019 previously declared here\n\
    \   20 |     long h = xs[7];\n      |          ^\n/tmp/tmpy4yiw5ai.cpp:47:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   47 |     long i = xs[34];\n\
    \     "
  stdout: ''
  timestamp: 1659747884
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long n = xs.size();\n    long\
    \ d = 1;\n    long m = 1;\n    long k = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k1 = n - 1;\n    long k2 = n - 2;\n    long k3 = n - 3;\n    long k4\
    \ = n - 4;\n    long k5 = n - 5;\n    long k6 = n - 6;\n    long k7 = n - 7;\n\
    \    long k8 = n - 8;\n    long k9 = n - 9;\n    long k10 = n - 10;\n    long\
    \ k11 = n - 11;\n    long k12 = n - 12;\n    long k13 = n - 13;\n    long k14\
    \ = n - 14;\n    long k15 = n - 15;\n    long k16 = n - 16;\n    long k17 = n\
    \ - 17;\n    long k18 = n - 18;\n    long k19 = n - 19;\n    long k20 = n - 20;\n\
    \    long k21 = n - 21;\n    long k22 = n - 22;\n    long k23 = n - 23;\n    long\
    \ k24 = n - 24;\n    long k25 = n - 25;\n    long k26 = n - 26;\n    long k27\
    \ = n - 27;\n    long k28 = n - 28;\n    long k29 = n - 29;\n    long k30 = n\
    \ - 30;\n    long k31 = n - 31;\n    long k32 = n - 32;\n    long k33 = n - 33;\n\
    \    long k34 = n - 34;\n    long k35 = n - 35;\n    long k36 = n - 36;\n    long\
    \ k37 = n - 37;\n    long k38 = n - 38;\n    long k39 = n - 39;\n    long k40\
    \ = n - 40;\n    long k41 = n - 41;\n    long k42 = n - 42;\n    long k43 = n\
    \ - 43;\n    long k44 = n - 44;\n    long k45 = n - 45;\n    long k46 = n - 46;\n\
    \    long k47 = n - 47;\n    long k48 = n - 48;\n    long k49 = n - 49;\n    long\
    \ k50 = n - 50;\n    long k51 = n - 51;\n    long k52 = n - 52;\n    long k53\
    \ = n - 53;\n    long k54 = n - 54;\n    long k55 = n - 55;\n    long k56 = n\
    \ - 56;\n    long \n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdmofjssp.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdmofjssp.cpp:75:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   75 | }\n      | ^\n/tmp/tmpdmofjssp.cpp:75:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long pow = 1;\n    for (long\
    \ long i = 0; i < xs.size(); i++) {\n        derivatives.push_back(xs[i] * pow);\n\
    \        pow *= xs[i];\n    }\n    return derivatives;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpxbb3_hb8: /tmp/tmpxbb3_hb8.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> derivative(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    derivative[0] = a;\n\
    \    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4]\
    \ = e;\n    derivative[5] = f;\n    derivative[6] = g;\n    derivative[7] = h;\n\
    \    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpwf5zthue: /tmp/tmpwf5zthue.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    derivative[0] = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n     \
    \   derivative[i] = derivative[i - 1] * xs[i];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpardwij5o: /tmp/tmpardwij5o.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> ds(xs.size() - 1);\n\
    \    for (size_t i = 1; i < ds.size(); i++) {\n        ds[i] = xs[i] - xs[i -\
    \ 1];\n    }\n    return ds;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy388aqua: /tmp/tmpy388aqua.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long a = 0, b = 0, c = 0,\
    \ d = 0;\n    long long n = xs.size();\n    long long m = n - 1;\n    long long\
    \ k = n - 1;\n    long long l = 1;\n    long long m = n - 1;\n    long long n\
    \ = n - 1;\n    long long p = 1;\n    long long q = 1;\n    long long r = 1;\n\
    \    long long s = 1;\n    long long t = 1;\n    long long u = 1;\n    long long\
    \ v = 1;\n    long long w = 1;\n    long long x = 1;\n    long long y = 1;\n \
    \   long long z = 1;\n    long long a = 1;\n    long long b = 1;\n    long long\
    \ c = 1;\n    long long d = 1;\n    long long e = 1;\n    long long f = 1;\n \
    \   long long g = 1;\n    long long h = 1;\n    long long i = 1;\n    long long\
    \ j = 1;\n    long long k = 1;\n    long long l = 1;\n    long long m = n - 1;\n\
    \    long long n = n - 1;\n    long long p = 1;\n    long long q = 1;\n    long\
    \ long r = 1;\n    long long s = 1;\n    long long t = 1;\n    long long u = 1;\n\
    \    long long v = 1;\n    long long w = 1;\n    long long x = 1;\n    long long\
    \ y = 1;\n    long long z = 1;\n    long long a = 1;\n    long long b = 1;\n \
    \   long long c = 1;\n    long long d = 1;\n    long long e = 1;\n    long long\
    \ f = 1;\n    long long g = 1;\n    long long h = 1;\n    long long i = 1;\n \
    \   long long j = 1;\n    long long k = 1;\n    long long l = 1;\n    long long\
    \ m = n - 1;\n    long long n = n - 1;\n    long long p = 1;\n    long long q\
    \ = 1;\n    long long r = 1;\n    long long s = 1;\n    long long t = 1;\n   \
    \ long long u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long\
    \ x = 1;\n    long long y = 1;\n    long long z = 1;\n    long long a = 1;\n \
    \   long long b = 1;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n    long long f = 1;\n    long long g = 1;\n    long long h = 1;\n \
    \   long long i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long\
    \ l = 1;\n    long long m = n - 1;\n    long \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi8qywrlb.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpi8qywrlb.cpp:17:15: error: redeclaration of \u2018long\
    \ long int m\u2019\n   17 |     long long m = n - 1;\n      |               ^\n\
    /tmp/tmpi8qywrlb.cpp:14:15: note: \u2018long long int m\u2019 previously declared\
    \ here\n   14 |     long long m = n - 1;\n      |               ^\n/tmp/tmpi8qywrlb.cpp:18:15:\
    \ error: redeclaration of \u2018long long int n\u2019\n   18 |     long long n\
    \ = n - 1;\n      |               ^\n/tmp/tmpi8qywrlb.cpp:13:15: note: \u2018\
    long long int n\u2019 previously declared here\n   13 |     long long n = xs.size();\n\
    \      |               ^\n/tmp/tmpi8qywrlb.cpp:30:15: error: redeclaration of\
    \ \u2018long long int a\u2019\n   30 |     long long a = 1;\n      |         \
    \      ^\n/tmp/tmpi8qywrlb.cpp:12:15: note: \u2018long long int a\u2019 previously\
    \ declared here\n   12 |     long long a = 0, b = 0, c = 0, d = 0;\n      |  \
    \             ^\n/tmp/tmpi8qywrlb.cpp:31:15: error: redeclaration of \u2018long\
    \ long int b\u2019\n   31 |     long long b = 1;\n      |               ^\n/tmp/tmpi8qywrlb.cpp:12:22:\
    \ note: \u2018long long int b\u2019 previously declared here\n   12 |     long\
    \ long a = 0, b = 0, c = 0, d = 0;\n      |                      ^\n/tmp/tmpi8qywrlb.cpp:32:15:\
    \ error: redeclaration of \u2018long long int c\u2019\n   32 |     long long c\
    \ = 1;\n      |               ^\n/tmp/tmpi8qywrlb.cpp:12:29: note: \u2018long\
    \ long int c\u2019 previously declared here\n   12 |     long long a = 0, b =\
    \ 0, c = 0, d = 0;\n      |                             ^\n/tmp/tmpi8qywrlb.cpp:33:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   33 |     long long d\
    \ = 1;\n      |               ^\n/tmp/tmpi8qywrlb.cpp:12:36: note: \u2018long\
    \ long int d\u2019 previously declared here\n   12 |     long long a = 0, b =\
    \ 0, c = 0, d = 0;\n      |                                    ^\n/tmp/tmpi8qywrlb.cpp:40:15:\
    \ error: redeclaration of \u2018long long int k\u2019\n   40 |     long long k\
    \ = 1;\n      |               ^\n/tmp/tmpi8qywrlb.cpp:15:15: note: \u2018long\
    \ long int k\u2019 previously declared here\n   15 |     long long k = n - 1;\n\
    \      |               ^\n/tmp/tmpi8qywrlb.cpp:41:15: error:"
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7xgc6rkg: /tmp/tmp7xgc6rkg.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747884
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * xs[i];\n \
    \       derivative[i] = res;\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp59z74sce.cpp: In function 'int main()':\n/tmp/tmp59z74sce.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/tmp/tmp59z74sce.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp59z74sce.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp59z74sce.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp59z74sce.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp59z74sce.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 0;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i] = 0;\n\
    \    }\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i] = xs[i];\n\
    \    }\n    for (long i = xs.size() - 1; i >= 0; i--) {\n        a = xs[i] + xs[i\
    \ + 1] * a + xs[i + 2] * a * a + xs[i + 3] * a * a * a;\n        b = xs[i + 1]\
    \ + xs[i] * b + xs[i + 2] * b * b + xs[i + 3] * b * b * b;\n        derivative[i]\
    \ = b / a;\n    }\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpt79ht7wr: /tmp/tmpt79ht7wr.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    dxs.push_back(xs[0]);\n    for (int i\
    \ = 1; i < xs.size(); i++) {\n        dxs.push_back(xs[i] + dxs[i - 1] * xs[i]);\n\
    \    }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpyr4111ca: /tmp/tmpyr4111ca.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long n = xs.size();\n    long m = 1;\n\
    \    long k = 0;\n    for (long i = 0; i < n; ++i) {\n        long j = i;\n  \
    \      while (j > 0) {\n            long tmp = k;\n            k = j;\n      \
    \      j = tmp;\n        }\n        ds.push_back(m);\n        m += xs[i];\n  \
    \  }\n    return ds;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659747890
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = b * x;\n    long b = c * x;\n    long c = d * x;\n \
    \   long d = e * x;\n    long e = f * x;\n    long f = g * x;\n    long g = h\
    \ * x;\n    long h = i * x;\n    long i = j * x;\n    long j = k * x;\n    long\
    \ k = l * x;\n    long l = m * x;\n    long m = n * x;\n    long n = o * x;\n\
    \    long o = p * x;\n    long p = q * x;\n    long q = r * x;\n    long r = s\
    \ * x;\n    long s = t * x;\n    long t = u * x;\n    long u = v * x;\n    long\
    \ v = w * x;\n    long w = x * x;\n    long x = y * x;\n    long y = z * x;\n\
    \    long z = a * x + b * y + c * z + d * y + e * z + f * z + g * z + h * z +\
    \ i * z + j * z + k * z + l * z + m * z + n * z + o * z + p * z + q * z + r *\
    \ z + s * z + t * z + u * z + v * z + w * z + x;\n    derivative[0] = a;\n   \
    \ derivative[1] = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4]\
    \ = e;\n    derivative[5] = f;\n    derivative[6] = g;\n    derivative[7] = h;\n\
    \    \n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptu2qm_75.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmptu2qm_75.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = b * x;\n      |          ^\n/tmp/tmptu2qm_75.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmptu2qm_75.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = c * x;\n      |          ^\n\
    /tmp/tmptu2qm_75.cpp:14:10: note: \u2018long int b\u2019 previously declared here\n\
    \   14 |     long b = xs[1];\n      |          ^\n/tmp/tmptu2qm_75.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = d * x;\n\
    \      |          ^\n/tmp/tmptu2qm_75.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmptu2qm_75.cpp:42:10: error: redeclaration of \u2018long int d\u2019\n \
    \  42 |     long d = e * x;\n      |          ^\n/tmp/tmptu2qm_75.cpp:16:10: note:\
    \ \u2018long int d\u2019 previously declared here\n   16 |     long d = xs[3];\n\
    \      |          ^\n/tmp/tmptu2qm_75.cpp:43:10: error: redeclaration of \u2018\
    long int e\u2019\n   43 |     long e = f * x;\n      |          ^\n/tmp/tmptu2qm_75.cpp:17:10:\
    \ note: \u2018long int e\u2019 previously declared here\n   17 |     long e =\
    \ xs[4];\n      |          ^\n/tmp/tmptu2qm_75.cpp:44:10: error: redeclaration\
    \ of \u2018long int f\u2019\n   44 |     long f = g * x;\n      |          ^\n\
    /tmp/tmptu2qm_75.cpp:18:10: note: \u2018long int f\u2019 previously declared here\n\
    \   18 |     long f = xs[5];\n      |          ^\n/tmp/tmptu2qm_75.cpp:45:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   45 |     long g = h * x;\n\
    \      |          ^\n/tmp/tmptu2qm_75.cpp:19:10: note: \u2018long int g\u2019\
    \ previously declared here\n   19 |     long g = xs[6];\n      |          ^\n\
    /tmp/tmptu2qm_75.cpp:46:10: error: redeclaration of \u2018long int h\u2019\n \
    \  46 |     long h = i * x;\n      |          ^\n/tmp/tmptu2qm_75.cpp:20:10: note:\
    \ \u2018long int h\u2019 previously declared here\n   20 |     long h = xs[7];\n\
    \      |          ^\n/tmp/tmptu2qm_75.cpp:47:10: error: redeclaration of \u2018\
    long int i\u2019\n   47 |     long i = j * x;\n      |       "
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7xgc6rkg: /tmp/tmp7xgc6rkg.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747884
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3]\
    \ = d;\n    derivative[4] = e;\n    derivative[5] = f;\n    derivative[6] = g;\n\
    \    derivative[7] = h;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdf2nhap0: /tmp/tmpdf2nhap0.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx11gnipt.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpx11gnipt.cpp:38:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   38 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmpx11gnipt.cpp:12:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   12 |     long long a = xs[0];\n      |               ^\n/tmp/tmpx11gnipt.cpp:39:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   39 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmpx11gnipt.cpp:13:15: note: \u2018\
    long long int b\u2019 previously declared here\n   13 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:40:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   40 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:14:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   14 |     long long c = xs[2];\n      |               ^\n/tmp/tmpx11gnipt.cpp:41:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   41 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmpx11gnipt.cpp:15:15: note: \u2018\
    long long int d\u2019 previously declared here\n   15 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:42:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   42 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:16:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   16 |     long long e = xs[4];\n      |               ^\n/tmp/tmpx11gnipt.cpp:43:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   43 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmpx11gnipt.cpp:17:15: note: \u2018\
    long long int f\u2019 previously declared here\n   17 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:44:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   44 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:18:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   18 |     long long g = xs[6];\n      |               ^\n/tmp/tmpx11gnipt.cpp:45:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   45 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplpqgps0i.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmplpqgps0i.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmplpqgps0i.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmplpqgps0i.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmplpqgps0i.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmplpqgps0i.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmplpqgps0i.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmplpqgps0i.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmplpqgps0i.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmplpqgps0i.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmplpqgps0i.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmplpqgps0i.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmplpqgps0i.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmplpqgps0i.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmplpqgps0i.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmplpqgps0i.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    long long ans = 1;\n\
    \    for (long long i = 1; i < xs.size(); i++) {\n        ans *= i;\n        ans\
    \ += xs[i] * ans;\n    }\n    ans *= xs.size();\n    ans /= xs.size();\n    return\
    \ std::vector<long>(ans);\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp08_csbal: /tmp/tmp08_csbal.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplpqgps0i.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmplpqgps0i.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmplpqgps0i.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmplpqgps0i.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmplpqgps0i.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmplpqgps0i.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmplpqgps0i.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmplpqgps0i.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmplpqgps0i.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmplpqgps0i.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmplpqgps0i.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmplpqgps0i.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmplpqgps0i.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmplpqgps0i.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmplpqgps0i.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmplpqgps0i.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 0;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i] = xs[i];\n\
    \    }\n    for (long i = xs.size() - 1; i >= 0; i--) {\n        b = xs[i] * xs[i];\n\
    \        for (long j = i + 1; j < xs.size(); j++) {\n            derivative[j]\
    \ += b * xs[j];\n        }\n        a = b;\n    }\n    return derivative;\n}\n\
    int main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgyq2jixq: /tmp/tmpgyq2jixq.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 1;\n\
    \    for (long long i = 0; i < xs.size(); i++) {\n        derivative[i] = xs[i]\
    \ * a;\n        a *= xs[i];\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6w0cahko: /tmp/tmp6w0cahko.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    long n = xs.size();\n    long m = (n\
    \ + 1) >> 1;\n    long sum = 0;\n    for (int i = 0; i < m; i++) {\n        sum\
    \ += xs[i] * xs[i];\n    }\n    sum -= xs[n - 1] * xs[n - 1];\n    for (int i\
    \ = 0; i < m; i++) {\n        dxs.push_back(xs[i] * sum / xs[n - 1]);\n    }\n\
    \    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4c9ajp2u: /tmp/tmp4c9ajp2u.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long a = 0, b = 0, c = 0;\n\
    \    long long d = 0, e = 0;\n    long long f = 0, g = 0;\n    long long h = 0,\
    \ i = 0;\n    long long j = 0;\n    long long k = 0;\n    long long l = 0;\n \
    \   long long m = 0, n = 0;\n    long long o = 0;\n    long long p = 0, q = 0;\n\
    \    long long r = 0, s = 0;\n    long long t = 0, u = 0;\n    long long v = 0,\
    \ w = 0;\n    long long x = 0, y = 0;\n    long long z = 0;\n    long long a =\
    \ 0, b = 0, c = 0;\n    long long d = 0, e = 0;\n    long long f = 0, g = 0;\n\
    \    long long h = 0, i = 0;\n    long long j = 0;\n    long long k = 0;\n   \
    \ long long l = 0;\n    long long m = 0, n = 0;\n    long long o = 0;\n    long\
    \ long p = 0, q = 0;\n    long long r = 0, s = 0;\n    long long t = 0, u = 0;\n\
    \    long long v = 0, w = 0;\n    long long x = 0, y = 0;\n    long long z = 0;\n\
    \    long long a = 0, b = 0, c = 0;\n    long long d = 0, e = 0;\n    long long\
    \ f = 0, g = 0;\n    long long h = 0, i = 0;\n    long long j = 0;\n    long long\
    \ k = 0;\n    long long l = 0;\n    long long m = 0, n = 0;\n    long long o =\
    \ 0;\n    long long p = 0, q = 0;\n    long long r = 0, s = 0;\n    long long\
    \ t = 0, u = 0;\n    long long v = 0, w = 0;\n    long long x = 0, y = 0;\n  \
    \  long long z = 0;\n    long long a = 0, b = 0, c = 0;\n    long long d = 0,\
    \ e = 0;\n    long long f = 0, g = 0;\n    long long h = 0, i = 0;\n    long long\
    \ j = 0;\n    long long k = 0;\n    long long l = 0;\n    long long m = 0, n =\
    \ 0;\n    long long o = 0;\n    long long p = 0, q = 0;\n    long long r = 0,\
    \ s = 0;\n    long long t = 0, u = 0;\n    long long v = 0, w = 0;\n    long long\
    \ x = 0, y = 0;\n    long long z = 0;\n    long long a = 0, b = 0, c = 0;\n  \
    \  long long d = 0, e = 0;\n    long long f = 0, g = 0;\n    long long h = 0,\
    \ i = 0;\n    long long j = 0;\n    long long k = 0;\n    long long l = 0;\n \
    \   long long m = 0, n = 0;\n    long long o = 0;\n\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2jjnpyj2.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2jjnpyj2.cpp:27:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   27 |     long long a = 0, b = 0, c = 0;\n      |      \
    \         ^\n/tmp/tmp2jjnpyj2.cpp:12:15: note: \u2018long long int a\u2019 previously\
    \ declared here\n   12 |     long long a = 0, b = 0, c = 0;\n      |         \
    \      ^\n/tmp/tmp2jjnpyj2.cpp:27:22: error: redeclaration of \u2018long long\
    \ int b\u2019\n   27 |     long long a = 0, b = 0, c = 0;\n      |           \
    \           ^\n/tmp/tmp2jjnpyj2.cpp:12:22: note: \u2018long long int b\u2019 previously\
    \ declared here\n   12 |     long long a = 0, b = 0, c = 0;\n      |         \
    \             ^\n/tmp/tmp2jjnpyj2.cpp:27:29: error: redeclaration of \u2018long\
    \ long int c\u2019\n   27 |     long long a = 0, b = 0, c = 0;\n      |      \
    \                       ^\n/tmp/tmp2jjnpyj2.cpp:12:29: note: \u2018long long int\
    \ c\u2019 previously declared here\n   12 |     long long a = 0, b = 0, c = 0;\n\
    \      |                             ^\n/tmp/tmp2jjnpyj2.cpp:28:15: error: redeclaration\
    \ of \u2018long long int d\u2019\n   28 |     long long d = 0, e = 0;\n      |\
    \               ^\n/tmp/tmp2jjnpyj2.cpp:13:15: note: \u2018long long int d\u2019\
    \ previously declared here\n   13 |     long long d = 0, e = 0;\n      |     \
    \          ^\n/tmp/tmp2jjnpyj2.cpp:28:22: error: redeclaration of \u2018long long\
    \ int e\u2019\n   28 |     long long d = 0, e = 0;\n      |                  \
    \    ^\n/tmp/tmp2jjnpyj2.cpp:13:22: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long d = 0, e = 0;\n      |                \
    \      ^\n/tmp/tmp2jjnpyj2.cpp:29:15: error: redeclaration of \u2018long long\
    \ int f\u2019\n   29 |     long long f = 0, g = 0;\n      |               ^\n\
    /tmp/tmp2jjnpyj2.cpp:14:15: note: \u2018long long int f\u2019 previously declared\
    \ here\n   14 |     long long f = 0, g = 0;\n      |               ^\n/tmp/tmp2jjnpyj2.cpp:29:22:\
    \ error: redeclaration of \u2018long long int g\u2019\n   29 |     long long f\
    \ = 0, g = 0;\n      |                      ^\n/tmp/tmp2jjnpyj2.cpp:14:22: note:\
    \ \u2018long long int g\u2019 previously declared here\n   14 |     long long\
    \ f = 0, g = 0;\n     "
  stdout: ''
  timestamp: 1659747886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    long long ans = 0;\n\
    \    for (long long i = 0; i < xs.size(); i++) {\n        ans += xs[i] * pow(xs.size(),\
    \ i);\n    }\n    ans *= pow(xs.size(), xs.size() - 1);\n    return std::vector<long>(ans);\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpp0645emf: /tmp/tmpp0645emf.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    derivative[6] = b * e - a * f;\n    derivative[7]\
    \ = b * f + a * e;\n    derivative[8] = c * e - b * d;\n    derivative[9] = c\
    \ * d - b * a;\n    derivative[10] = d * e - c * f;\n    derivative[11] = d *\
    \ f + c * e;\n    derivative[12] = a * e + b * d;\n    derivative[13] = a * d\
    \ + b * c;\n    derivative[14] = b * d - c * a;\n    derivative[15] = c * d -\
    \ a * b;\n    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpwh8mi5j9: /tmp/tmpwh8mi5j9.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    derivatives.push_back(a);\n \
    \   derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ukx0c8x.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp7ukx0c8x.cpp:84:28: error: expected \u2018)\u2019 before\
    \ \u2018}\u2019 token\n   84 |     derivatives.push_back(a\n      |          \
    \                ~ ^\n      |                            )\n   85 | }\n      |\
    \ ~                           \n/tmp/tmp7ukx0c8x.cpp:85:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   85 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    long g = a * e * e + b * d * d + c * c * c + d *\
    \ d * d + e * e * e + f * f * f;\n    derivative[0] = g;\n    derivative[1] =\
    \ a * e * e + b * d * d + c * c * c + d * d * d + e * e * e + f * f * f;\n   \
    \ derivative[2] = a * e * e + b * d * d + c * c * c + d * d * d + e * e * e +\
    \ f * f * f;\n    derivative[3] = a * e * e + b * d * d + c * c * c + d * d *\
    \ d + e * e * e + f * f * f;\n    derivative[4] = a * e * e + b * d * d + c *\
    \ c * c + d * d * d + e * e * e + f * f * f;\n    derivative[5] = a * e * e +\
    \ b * d * d + c * c * c + d * d * d + e * e * e + f * f * f;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppc3cepgr: /tmp/tmppc3cepgr.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0agg9uj6.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0agg9uj6.cpp:83:28: error: expected \u2018)\u2019 before\
    \ \u2018}\u2019 token\n   83 |     derivatives.push_back(h\n      |          \
    \                ~ ^\n      |                            )\n   84 | }\n      |\
    \ ~                           \n/tmp/tmp0agg9uj6.cpp:84:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpd5t65ks4: /tmp/tmpd5t65ks4.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        derivative[i] = xs[i] - derivative[i\
    \ - 1];\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6uk05u8c: /tmp/tmp6uk05u8c.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long n = xs.size();\n    long m = 1;\n\
    \    for (long i = 2; i <= n; i++) {\n        m += xs[i] * m;\n        ds.push_back(m);\n\
    \    }\n    return ds;\n}\nint main() {\n    auto candidate = derivative;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7_u96yjb: /tmp/tmp7_u96yjb.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    derivative[0] = a;\n\
    \    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4]\
    \ = e;\n    derivative[5] = f;\n    derivative[6] = g;\n    derivative[7] = h;\n\
    \    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp414sfbcy: /tmp/tmp414sfbcy.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpd5t65ks4: /tmp/tmpd5t65ks4.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long a = xs[0];\n    long b =\
    \ xs[1];\n    long c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n    long\
    \ f = xs[5];\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n \
    \   derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    return derivatives;\n}\nint main() {\n   \
    \ auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp787e2018: /tmp/tmp787e2018.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        derivative[i] = xs[i] * derivative[i\
    \ - 1];\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpn0epn3e0: /tmp/tmpn0epn3e0.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx11gnipt.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpx11gnipt.cpp:38:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   38 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmpx11gnipt.cpp:12:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   12 |     long long a = xs[0];\n      |               ^\n/tmp/tmpx11gnipt.cpp:39:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   39 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmpx11gnipt.cpp:13:15: note: \u2018\
    long long int b\u2019 previously declared here\n   13 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:40:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   40 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:14:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   14 |     long long c = xs[2];\n      |               ^\n/tmp/tmpx11gnipt.cpp:41:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   41 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmpx11gnipt.cpp:15:15: note: \u2018\
    long long int d\u2019 previously declared here\n   15 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:42:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   42 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:16:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   16 |     long long e = xs[4];\n      |               ^\n/tmp/tmpx11gnipt.cpp:43:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   43 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmpx11gnipt.cpp:17:15: note: \u2018\
    long long int f\u2019 previously declared here\n   17 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmpx11gnipt.cpp:44:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   44 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmpx11gnipt.cpp:18:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   18 |     long long g = xs[6];\n      |               ^\n/tmp/tmpx11gnipt.cpp:45:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   45 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * xs[i];\n \
    \       derivative[i] = res;\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp59z74sce.cpp: In function 'int main()':\n/tmp/tmp59z74sce.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/tmp/tmp59z74sce.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp59z74sce.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp59z74sce.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp59z74sce.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp59z74sce.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size());\n \
    \   for (long i = 0; i < xs.size(); i++) {\n        dxs[i] = xs[i] - xs[i - 1];\n\
    \    }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpc7vob81p: /tmp/tmpc7vob81p.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy8qllgbb: /tmp/tmpy8qllgbb.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> dxs;\n    dxs.push_back(xs[1]);\n\
    \    for (int i = 2; i < xs.size(); i++) {\n        dxs.push_back(dxs[i-1] * xs[i]);\n\
    \    }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp493wxp94: /tmp/tmp493wxp94.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long pow = 1;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative.push_back(xs[i]\
    \ * pow);\n        pow *= xs[i];\n    }\n    return derivative;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2vr8nn1_: /tmp/tmp2vr8nn1_.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long sum = 0;\n    long\
    \ long cur = 0;\n    long long pow = 1;\n    for (long long i = 0; i < xs.size();\
    \ i++) {\n        sum += pow * (xs[i]);\n        cur += pow * (xs[i] * xs[i]);\n\
    \        pow *= xs[i];\n        derivatives.push_back(cur);\n    }\n    derivatives.push_back(sum);\n\
    \    return derivatives;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmply5rrjgo: /tmp/tmply5rrjgo.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 1;\n    for (long long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = xs[i] * b;\n        b += xs[i];\n    }\n    return derivative;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp31tmxy0m.cpp: In function 'int main()':\n/tmp/tmp31tmxy0m.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp31tmxy0m.cpp:2:\n/tmp/tmp31tmxy0m.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp31tmxy0m.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp31tmxy0m.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp31tmxy0m.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp31tmxy0m.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp31tmxy0m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long a = xs[0];\n    long b = xs[1];\n\
    \    long c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n    long f = xs[5];\n\
    \    long g = xs[6];\n    long h = xs[7];\n    long i = xs[8];\n    long j = xs[9];\n\
    \    long k = xs[10];\n    long l = xs[11];\n    long m = xs[12];\n    long n\
    \ = xs[13];\n    long o = xs[14];\n    long p = xs[15];\n    long q = xs[16];\n\
    \    long r = xs[17];\n    long s = xs[18];\n    long t = xs[19];\n    long u\
    \ = xs[20];\n    long v = xs[21];\n    long w = xs[22];\n    long x = xs[23];\n\
    \    long y = xs[24];\n    long z = xs[25];\n    long a = a * e - b * d;\n   \
    \ long b = b * e - c * d;\n    long c = c * e - d * d;\n    long d = d * e - e\
    \ * d;\n    long e = e * e - f * d;\n    long f = f * e - g * d;\n    long g =\
    \ g * e - h * d;\n    long h = h * e - i * d;\n    long i = i * e - j * d;\n \
    \   long j = j * e - k * d;\n    long k = k * e - l * d;\n    long l = l * e -\
    \ m * d;\n    long m = m * e - n * d;\n    long n = n * e - o * d;\n    long o\
    \ = o * e - p * d;\n    long p = p * e - q * d;\n    long q = q * e - r * d;\n\
    \    long r = r * e - s * d;\n    long s = s * e - t * d;\n    long t = t * e\
    \ - u * d;\n    long u = u * e - v * d;\n    long v = v * e - w * d;\n    long\
    \ w = w * e - x * d;\n    long x = x * e - y * d;\n    long y = y * e - z * d;\n\
    \    long z = z * e;\n    long a = a * f - b * g;\n    long b = b * f - c * g;\n\
    \    long c = c * f - d * g;\n    long d = d * f - e * g\n}\nint main() {\n  \
    \  auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt_zpifcz.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpt_zpifcz.cpp:38:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   38 |     long a = a * e - b * d;\n      |          ^\n/tmp/tmpt_zpifcz.cpp:12:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   12 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmpt_zpifcz.cpp:39:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   39 |     long b = b * e - c * d;\n      |    \
    \      ^\n/tmp/tmpt_zpifcz.cpp:13:10: note: \u2018long int b\u2019 previously\
    \ declared here\n   13 |     long b = xs[1];\n      |          ^\n/tmp/tmpt_zpifcz.cpp:40:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   40 |     long c = c * e -\
    \ d * d;\n      |          ^\n/tmp/tmpt_zpifcz.cpp:14:10: note: \u2018long int\
    \ c\u2019 previously declared here\n   14 |     long c = xs[2];\n      |     \
    \     ^\n/tmp/tmpt_zpifcz.cpp:41:10: error: redeclaration of \u2018long int d\u2019\
    \n   41 |     long d = d * e - e * d;\n      |          ^\n/tmp/tmpt_zpifcz.cpp:15:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   15 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmpt_zpifcz.cpp:42:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   42 |     long e = e * e - f * d;\n      |    \
    \      ^\n/tmp/tmpt_zpifcz.cpp:16:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   16 |     long e = xs[4];\n      |          ^\n/tmp/tmpt_zpifcz.cpp:43:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   43 |     long f = f * e -\
    \ g * d;\n      |          ^\n/tmp/tmpt_zpifcz.cpp:17:10: note: \u2018long int\
    \ f\u2019 previously declared here\n   17 |     long f = xs[5];\n      |     \
    \     ^\n/tmp/tmpt_zpifcz.cpp:44:10: error: redeclaration of \u2018long int g\u2019\
    \n   44 |     long g = g * e - h * d;\n      |          ^\n/tmp/tmpt_zpifcz.cpp:18:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   18 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmpt_zpifcz.cpp:45:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   45 |     long h = h * e - i * d;\n      |    \
    \      ^\n/tmp/tmpt_zpifcz.cpp:19:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   19 |     long h = xs[7];\n      |          ^\n/tmp/tmpt_zpifcz.cpp:46:10:\
    \ error: redeclar"
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative\
    \ of this polynomial in the same form.\n    std::vector<long> derivative;\n  \
    \  long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    derivative.push_back(a);\n\
    \    derivative.push_back(b);\n    derivative.push_back(c);\n    derivative.push_back(d);\n\
    \    derivative.push_back(e);\n    derivative.push_back(f);\n    derivative.push_back(g);\n\
    \    derivative.push_back(h);\n    return derivative;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpvqwr18l1: /tmp/tmpvqwr18l1.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = a + b * x + c * x^2 + d * x^3 + e * x^4 + f * x^5 +\
    \ g * x^6 + h * x^7 + i * x^8 + j * x^9 + k * x^10 + l * x^11 + m * x^12 + n *\
    \ x^13 + o * x^14 + p * x^15 + q * x^16 + r * x^17 + s * x^18 + t * x^19 + u *\
    \ x^20 + v * x^21 + w * x^22 + x * x^23 + y * x^24 + z * x^25;\n    long b = b\
    \ * x + c * x^2 + d * x^3 + e * x^4 + f * x^5 + g * x^6 + h * x^7 + i * x^8 +\
    \ j * x^9 + k * x^10 + l * x^11 + m * x^12 + n * x^13 + o * x^14 + p * x^15 +\
    \ q * x^16 + r * x^17 + s * x^18 + t * x^19 + u * x^20 + v * x^21 + w * x^22 +\
    \ x * x^23 + y * x^24 + z * x^25;\n    long c = c * x + d * x^2 + e * x^3 + f\
    \ * x^4 + g * \n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj65zfif2.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpj65zfif2.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = a + b * x + c * x^2 + d * x^3 + e * x^4 +\
    \ f * x^5 + g * x^6 + h * x^7 + i * x^8 + j * x^9 + k * x^10 + l * x^11 + m *\
    \ x^12 + n * x^13 + o * x^14 + p * x^15 + q * x^16 + r * x^17 + s * x^18 + t *\
    \ x^19 + u * x^20 + v * x^21 + w * x^22 + x * x^23 + y * x^24 + z * x^25;\n  \
    \    |          ^\n/tmp/tmpj65zfif2.cpp:13:10: note: \u2018long int a\u2019 previously\
    \ declared here\n   13 |     long a = xs[0];\n      |          ^\n/tmp/tmpj65zfif2.cpp:40:10:\
    \ error: redeclaration of \u2018long int b\u2019\n   40 |     long b = b * x +\
    \ c * x^2 + d * x^3 + e * x^4 + f * x^5 + g * x^6 + h * x^7 + i * x^8 + j * x^9\
    \ + k * x^10 + l * x^11 + m * x^12 + n * x^13 + o * x^14 + p * x^15 + q * x^16\
    \ + r * x^17 + s * x^18 + t * x^19 + u * x^20 + v * x^21 + w * x^22 + x * x^23\
    \ + y * x^24 + z * x^25;\n      |          ^\n/tmp/tmpj65zfif2.cpp:14:10: note:\
    \ \u2018long int b\u2019 previously declared here\n   14 |     long b = xs[1];\n\
    \      |          ^\n/tmp/tmpj65zfif2.cpp:41:10: error: redeclaration of \u2018\
    long int c\u2019\n   41 |     long c = c * x + d * x^2 + e * x^3 + f * x^4 + g\
    \ *\n      |          ^\n/tmp/tmpj65zfif2.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmpj65zfif2.cpp:42:1: error: expected primary-expression before \u2018}\u2019\
    \ token\n   42 | }\n      | ^\n/tmp/tmpj65zfif2.cpp:42:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   42 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3]\
    \ = d;\n    derivative[4] = e;\n    derivative[5] = f;\n    derivative[6] = g;\n\
    \    derivative[7] = h;\n    derivative[8] = a;\n    derivative[9] = b;\n    derivative[10]\
    \ = c;\n    derivative[11] = d;\n    derivative[12] = e;\n    derivative[13] =\
    \ f;\n    derivative[14] = g;\n    derivative[15] = h;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpnj3jxuez: /tmp/tmpnj3jxuez.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    long long res = 0;\n\
    \    for (long long i = 1; i < xs.size(); i++) {\n        res += xs[i] * xs[i\
    \ - 1];\n    }\n    return std::vector<long>({res});\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp92cr3x9v: /tmp/tmp92cr3x9v.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> ys;\n    ys.push_back(xs[0]);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        ys.push_back(xs[i] + ys[i\
    \ - 1] * xs[i]);\n    }\n    return ys;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzw0nveid: /tmp/tmpzw0nveid.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 1;\n    for (long long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = xs[i] * b;\n        b += xs[i];\n    }\n    return derivative;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp31tmxy0m.cpp: In function 'int main()':\n/tmp/tmp31tmxy0m.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp31tmxy0m.cpp:2:\n/tmp/tmp31tmxy0m.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp31tmxy0m.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp31tmxy0m.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp31tmxy0m.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp31tmxy0m.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp31tmxy0m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = 0, b = 0, c = 0,\
    \ d = 0;\n    long long n = xs.size();\n    long long m = n - 1;\n    long long\
    \ k = 0;\n    long long i = 0;\n    long long j = 0;\n    long long k = 0;\n \
    \   long long l = 0;\n    long long m = 0;\n    long long n = 0;\n    long long\
    \ o = 0;\n    long long p = 0;\n    long long q = 0;\n    long long r = 0;\n \
    \   long long s = 0;\n    long long t = 0;\n    long long u = 0;\n    long long\
    \ v = 0;\n    long long w = 0;\n    long long x = 0;\n    long long y = 0;\n \
    \   long long z = 0;\n    long long a = 0;\n    long long b = 0;\n    long long\
    \ c = 0;\n    long long d = 0;\n    long long e = 0;\n    long long f = 0;\n \
    \   long long g = 0;\n    long long h = 0;\n    long long i = 0;\n    long long\
    \ j = 0;\n    long long k = 0;\n    long long l = 0;\n    long long m = 0;\n \
    \   long long n = 0;\n    long long o = 0;\n    long long p = 0;\n    long long\
    \ q = 0;\n    long long r = 0;\n    long long s = 0;\n    long long t = 0;\n \
    \   long long u = 0;\n    long long v = 0;\n    long long w = 0;\n    long long\
    \ x = 0;\n    long long y = 0;\n    long long z = 0;\n    long long a = 0;\n \
    \   long long b = 0;\n    long long c = 0;\n    long long d = 0;\n    long long\
    \ e = 0;\n    long long f = 0;\n    long long g = 0;\n    long long h = 0;\n \
    \   long long i = 0;\n    long long j = 0;\n    long long k = 0;\n    long long\
    \ l = 0;\n    long long m = 0;\n    long long n = 0;\n    long long o = 0;\n \
    \   long long p = 0;\n    long long q = 0;\n    long long r = 0;\n    long long\
    \ s = 0;\n    long long t = 0;\n    long long u = 0;\n    long long v = 0;\n \
    \   long long w = 0;\n    long long x = 0;\n    long long y = 0;\n    long long\
    \ z = 0;\n    long long a = 0;\n    long long b = 0;\n    long long c = 0;\n \
    \   long long d = 0;\n    long long e = 0;\n    long long f = 0;\n    long long\
    \ g = 0;\n    long long h = 0;\n    long long i = 0;\n    long long j = 0;\n \
    \   long \n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvm1qretn.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpvm1qretn.cpp:18:15: error: redeclaration of \u2018long\
    \ long int k\u2019\n   18 |     long long k = 0;\n      |               ^\n/tmp/tmpvm1qretn.cpp:15:15:\
    \ note: \u2018long long int k\u2019 previously declared here\n   15 |     long\
    \ long k = 0;\n      |               ^\n/tmp/tmpvm1qretn.cpp:20:15: error: redeclaration\
    \ of \u2018long long int m\u2019\n   20 |     long long m = 0;\n      |      \
    \         ^\n/tmp/tmpvm1qretn.cpp:14:15: note: \u2018long long int m\u2019 previously\
    \ declared here\n   14 |     long long m = n - 1;\n      |               ^\n/tmp/tmpvm1qretn.cpp:21:15:\
    \ error: redeclaration of \u2018long long int n\u2019\n   21 |     long long n\
    \ = 0;\n      |               ^\n/tmp/tmpvm1qretn.cpp:13:15: note: \u2018long\
    \ long int n\u2019 previously declared here\n   13 |     long long n = xs.size();\n\
    \      |               ^\n/tmp/tmpvm1qretn.cpp:34:15: error: redeclaration of\
    \ \u2018long long int a\u2019\n   34 |     long long a = 0;\n      |         \
    \      ^\n/tmp/tmpvm1qretn.cpp:12:15: note: \u2018long long int a\u2019 previously\
    \ declared here\n   12 |     long long a = 0, b = 0, c = 0, d = 0;\n      |  \
    \             ^\n/tmp/tmpvm1qretn.cpp:35:15: error: redeclaration of \u2018long\
    \ long int b\u2019\n   35 |     long long b = 0;\n      |               ^\n/tmp/tmpvm1qretn.cpp:12:22:\
    \ note: \u2018long long int b\u2019 previously declared here\n   12 |     long\
    \ long a = 0, b = 0, c = 0, d = 0;\n      |                      ^\n/tmp/tmpvm1qretn.cpp:36:15:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long c\
    \ = 0;\n      |               ^\n/tmp/tmpvm1qretn.cpp:12:29: note: \u2018long\
    \ long int c\u2019 previously declared here\n   12 |     long long a = 0, b =\
    \ 0, c = 0, d = 0;\n      |                             ^\n/tmp/tmpvm1qretn.cpp:37:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   37 |     long long d\
    \ = 0;\n      |               ^\n/tmp/tmpvm1qretn.cpp:12:36: note: \u2018long\
    \ long int d\u2019 previously declared here\n   12 |     long long a = 0, b =\
    \ 0, c = 0, d = 0;\n      |                                    ^\n/tmp/tmpvm1qretn.cpp:42:15:\
    \ error: redeclarati"
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 1;\n    for (size_t i = 0; i < xs.size(); i++) {\n        derivative[i] =\
    \ xs[i];\n    }\n    for (size_t i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = derivative[i] * b;\n    }\n    for (size_t i = 0; i < xs.size(); i++) {\n\
    \        derivative[i] = derivative[i] + a;\n    }\n    return derivative;\n}\n\
    int main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpmhxz56cc: /tmp/tmpmhxz56cc.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747888
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long long a = 0, b = 0, c = 0;\n    long\
    \ long d = 1;\n    long long e = 1;\n    long long f = 1;\n    long long g = xs[0];\n\
    \    long long h = xs[1];\n    long long i = 1;\n    long long j = 1;\n    long\
    \ long k = 1;\n    long long l = xs[2];\n    long long m = 1;\n    long long n\
    \ = 1;\n    long long o = 1;\n    long long p = 1;\n    long long q = 1;\n   \
    \ long long r = 1;\n    long long s = 1;\n    long long t = 1;\n    long long\
    \ u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long x = 1;\n \
    \   long long y = 1;\n    long long z = 1;\n    long long a = 1;\n    long long\
    \ b = 1;\n    long long c = 1;\n    long long d = 1;\n    long long e = 1;\n \
    \   long long f = 1;\n    long long g = xs[0];\n    long long h = xs[1];\n   \
    \ long long i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long\
    \ l = xs[2];\n    long long m = 1;\n    long long n = 1;\n    long long o = 1;\n\
    \    long long p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long\
    \ s = 1;\n    long long t = 1;\n    long long u = 1;\n    long long v = 1;\n \
    \   long long w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long\
    \ z = 1;\n    long long a = 1;\n    long long b = 1;\n    long long c = 1;\n \
    \   long long d = 1;\n    long long e = 1;\n    long long f = 1;\n    long long\
    \ g = xs[0];\n    long long h = xs[1];\n    long long i = 1;\n    long long j\
    \ = 1;\n    long long k = 1;\n    long long l = xs[2];\n    long long m = 1;\n\
    \    long long n = 1;\n    long long o = 1;\n    long long p = 1;\n    long long\
    \ q = 1;\n    long long r = 1;\n    long long s = 1;\n    long long t = 1;\n \
    \   long long u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long\
    \ x = 1;\n    long long y = 1;\n    long long z = 1;\n    long long a = 1;\n \
    \   long long b = 1;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp903u4lu0.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp903u4lu0.cpp:36:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   36 |     long long a = 1;\n      |               ^\n/tmp/tmp903u4lu0.cpp:12:15:\
    \ note: \u2018long long int a\u2019 previously declared here\n   12 |     long\
    \ long a = 0, b = 0, c = 0;\n      |               ^\n/tmp/tmp903u4lu0.cpp:37:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   37 |     long long b\
    \ = 1;\n      |               ^\n/tmp/tmp903u4lu0.cpp:12:22: note: \u2018long\
    \ long int b\u2019 previously declared here\n   12 |     long long a = 0, b =\
    \ 0, c = 0;\n      |                      ^\n/tmp/tmp903u4lu0.cpp:38:15: error:\
    \ redeclaration of \u2018long long int c\u2019\n   38 |     long long c = 1;\n\
    \      |               ^\n/tmp/tmp903u4lu0.cpp:12:29: note: \u2018long long int\
    \ c\u2019 previously declared here\n   12 |     long long a = 0, b = 0, c = 0;\n\
    \      |                             ^\n/tmp/tmp903u4lu0.cpp:39:15: error: redeclaration\
    \ of \u2018long long int d\u2019\n   39 |     long long d = 1;\n      |      \
    \         ^\n/tmp/tmp903u4lu0.cpp:13:15: note: \u2018long long int d\u2019 previously\
    \ declared here\n   13 |     long long d = 1;\n      |               ^\n/tmp/tmp903u4lu0.cpp:40:15:\
    \ error: redeclaration of \u2018long long int e\u2019\n   40 |     long long e\
    \ = 1;\n      |               ^\n/tmp/tmp903u4lu0.cpp:14:15: note: \u2018long\
    \ long int e\u2019 previously declared here\n   14 |     long long e = 1;\n  \
    \    |               ^\n/tmp/tmp903u4lu0.cpp:41:15: error: redeclaration of \u2018\
    long long int f\u2019\n   41 |     long long f = 1;\n      |               ^\n\
    /tmp/tmp903u4lu0.cpp:15:15: note: \u2018long long int f\u2019 previously declared\
    \ here\n   15 |     long long f = 1;\n      |               ^\n/tmp/tmp903u4lu0.cpp:42:15:\
    \ error: redeclaration of \u2018long long int g\u2019\n   42 |     long long g\
    \ = xs[0];\n      |               ^\n/tmp/tmp903u4lu0.cpp:16:15: note: \u2018\
    long long int g\u2019 previously declared here\n   16 |     long long g = xs[0];\n\
    \      |               ^\n/tmp/tmp903u4lu0.cpp:43:15: error: redeclaration of\
    \ \u2018long long int h\u2019\n   43 |     long long h = xs[1];\n      |   "
  stdout: ''
  timestamp: 1659747889
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long n = xs.size();\n    long m = 1;\n\
    \    long k = 0;\n    long s = 0;\n    long t = 1;\n    long r = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long j = 0;\n    long k = 0;\n    long s = 0;\n\
    \    long t = 1;\n    long r = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ j = 0;\n    long k = 0;\n    long s = 0;\n    long t = 1;\n    long r = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long j = 0;\n    long k = 0;\n    long\
    \ s = 0;\n    long t = 1;\n    long r = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long j = 0;\n    long k = 0;\n    long s = 0;\n    long t = 1;\n    long\
    \ r = 1;\n    long p = 1;\n    long q = 1;\n    long j = 0;\n    long k = 0;\n\
    \    long s = 0;\n    long t = 1;\n    long r = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long j = 0;\n    long k = 0;\n    long s = 0;\n    long t = 1;\n\
    \    long r = 1;\n    long p = 1;\n    long q = 1;\n    long j = 0;\n    long\
    \ k = 0;\n    long s = 0;\n    long t = 1;\n    long r = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long j = 0;\n    long k = 0;\n    long s = 0;\n    long\
    \ t = 1;\n    long r = 1;\n    long p = 1;\n    long q = 1;\n    long j = 0;\n\
    \    long k = 0;\n    long s = 0;\n    long t = 1;\n    long r = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long j = 0;\n    long k = 0;\n    long s = 0;\n\
    \    long t = 1;\n    long r = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ j = 0;\n    long k = 0;\n    long s = 0;\n    long t = 1;\n    long r = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long j = 0;\n    long k = 0;\n    long\
    \ s = 0;\n    long t = 1;\n    long r = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long j = 0;\n    long k = 0;\n    long s = 0;\n    long t = 1;\n    long\
    \ r = 1;\n    long p = 1;\n    long q = 1;\n    long j = 0;\n    long k = 0;\n\
    \    long s = 0;\n    long t = 1;\n    long r = \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmdfqaolb.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmdfqaolb.cpp:21:10: error: redeclaration of \u2018long\
    \ int k\u2019\n   21 |     long k = 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:14:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   14 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:22:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   22 |     long s = 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:15:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   15 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:23:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   23 |     long t = 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:16:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   16 |     long t =\
    \ 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:24:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   24 |     long r = 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:17:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   17 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:25:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   25 |     long p = 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:18:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   18 |     long p =\
    \ 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:26:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   26 |     long q = 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:19:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   19 |     long q =\
    \ 1;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:27:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   27 |     long j = 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:20:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   20 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:28:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   28 |     long k = 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:14:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   14 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:29:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   29 |     long s = 0;\n      |          ^\n/tmp/tmpmdfqaolb.cpp:15:10:\
    \ note: \u2018long int s\u2019 previously decla"
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> dxs;\n    dxs.push_back(xs[1]);\n\
    \    for (int i = 2; i < xs.size(); i++) {\n        dxs.push_back(xs[i] + dxs[i\
    \ - 1]);\n    }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptdqoxwzv: /tmp/tmptdqoxwzv.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    long long res = 0;\n\
    \    for (long long i = 1; i < xs.size(); i++) {\n        res += xs[i] * xs[i\
    \ - 1];\n    }\n    return std::vector<long>({res});\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp92cr3x9v: /tmp/tmp92cr3x9v.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds(xs.size());\n    long long a = 0, b = 1;\n \
    \   for (long long i = 0; i < xs.size(); i++) {\n        ds[i] = 0;\n    }\n \
    \   for (long long i = 0; i < xs.size(); i++) {\n        ds[i] = xs[i] * b;\n\
    \        b += xs[i];\n    }\n    for (long long i = 0; i < xs.size(); i++) {\n\
    \        ds[i] = ds[i] / a;\n        a += xs[i];\n    }\n    return ds;\n}\nint\
    \ main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 0, c = 0;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = 0;\n    }\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = xs[i];\n    }\n    for (long i = xs.size() - 1; i >= 0; i--) {\n        a\
    \ = xs[i];\n        b = xs[i + 1];\n        c = b * xs[i];\n        for (long\
    \ j = i + 2; j < xs.size(); j++) {\n            derivative[j] += c * xs[j];\n\
    \        }\n    }\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4uzj_v24: /tmp/tmp4uzj_v24.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3]\
    \ = d;\n    derivative[4] = e;\n    derivative[5] = f;\n    derivative[6] = g;\n\
    \    derivative[7] = h;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdf2nhap0: /tmp/tmpdf2nhap0.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * xs[i];\n \
    \   }\n    derivative[0] = res;\n    for (long i = 1; i < xs.size(); i++) {\n\
    \        derivative[i] = derivative[i - 1] + xs[i] * xs[i];\n    }\n    return\
    \ derivative;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpil20wpwd: /tmp/tmpil20wpwd.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    derivative[6] = b * e - a * f;\n    derivative[7]\
    \ = b * f + a * e;\n    derivative[8] = c * e - b * d;\n    derivative[9] = c\
    \ * d - b * a;\n    derivative[10] = d * e - c * f;\n    derivative[11] = d *\
    \ f + c * e;\n    derivative[12] = a * e - b * d;\n    derivative[13] = a * d\
    \ - b * c;\n    derivative[14] = b * e + a * d;\n    derivative[15] = b * f -\
    \ a * c;\n    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp3lfr6g5j: /tmp/tmp3lfr6g5j.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivatives;\n    long\
    \ a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = a * e - b * d;\n    long b = b * e - c * d;\n    long\
    \ c = c * e - d * d;\n    long d = d * e - e * d;\n    long e = e * e - f * d;\n\
    \    long f = f * e - g * d;\n    long g = g * e - h * d;\n    long h = h * e\
    \ - i * d;\n    long i = i * e - j * d;\n    long j = j * e - k * d;\n    long\
    \ k = k * e - l * d;\n    long l = l * e - m * d;\n    long m = m * e - n * d;\n\
    \    long n = n * e - o * d;\n    long o = o * e - p * d;\n    long p = p * e\
    \ - q * d;\n    long q = q * e - r * d;\n    long r = r * e - s * d;\n    long\
    \ s = s * e - t * d;\n    long t = t * e - u * d;\n    long u = u * e - v * d;\n\
    \    long v = v * e - w * d;\n    long w = w * e - x * d;\n    long x = x * e\
    \ - y * d;\n    long y = y * e - z * d;\n    long z = z * e;\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(1);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5npuatez.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5npuatez.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = a * e - b * d;\n      |          ^\n/tmp/tmp5npuatez.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmp5npuatez.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = b * e - c * d;\n      |    \
    \      ^\n/tmp/tmp5npuatez.cpp:14:10: note: \u2018long int b\u2019 previously\
    \ declared here\n   14 |     long b = xs[1];\n      |          ^\n/tmp/tmp5npuatez.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = c * e -\
    \ d * d;\n      |          ^\n/tmp/tmp5npuatez.cpp:15:10: note: \u2018long int\
    \ c\u2019 previously declared here\n   15 |     long c = xs[2];\n      |     \
    \     ^\n/tmp/tmp5npuatez.cpp:42:10: error: redeclaration of \u2018long int d\u2019\
    \n   42 |     long d = d * e - e * d;\n      |          ^\n/tmp/tmp5npuatez.cpp:16:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   16 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmp5npuatez.cpp:43:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   43 |     long e = e * e - f * d;\n      |    \
    \      ^\n/tmp/tmp5npuatez.cpp:17:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   17 |     long e = xs[4];\n      |          ^\n/tmp/tmp5npuatez.cpp:44:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   44 |     long f = f * e -\
    \ g * d;\n      |          ^\n/tmp/tmp5npuatez.cpp:18:10: note: \u2018long int\
    \ f\u2019 previously declared here\n   18 |     long f = xs[5];\n      |     \
    \     ^\n/tmp/tmp5npuatez.cpp:45:10: error: redeclaration of \u2018long int g\u2019\
    \n   45 |     long g = g * e - h * d;\n      |          ^\n/tmp/tmp5npuatez.cpp:19:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   19 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmp5npuatez.cpp:46:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   46 |     long h = h * e - i * d;\n      |    \
    \      ^\n/tmp/tmp5npuatez.cpp:20:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   20 |     long h = xs[7];\n      |          ^\n/tmp/tmp5npuatez.cpp:47:10:\
    \ error: redeclar"
  stdout: ''
  timestamp: 1659747889
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 1;\n\
    \    long long b = 1;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n    long long f = 0;\n    long long g = 1;\n    long long h = 1;\n \
    \   long long i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long\
    \ l = 1;\n    long long m = 1;\n    long long n = 1;\n    long long o = 1;\n \
    \   long long p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long\
    \ s = 1;\n    long long t = 1;\n    long long u = 1;\n    long long v = 1;\n \
    \   long long w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long\
    \ z = 1;\n    long long a = 1;\n    long long b = 1;\n    long long c = 1;\n \
    \   long long d = 1;\n    long long e = 1;\n    long long f = 0;\n    long long\
    \ g = 1;\n    long long h = 1;\n    long long i = 1;\n    long long j = 1;\n \
    \   long long k = 1;\n    long long l = 1;\n    long long m = 1;\n    long long\
    \ n = 1;\n    long long o = 1;\n    long long p = 1;\n    long long q = 1;\n \
    \   long long r = 1;\n    long long s = 1;\n    long long t = 1;\n    long long\
    \ u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long x = 1;\n \
    \   long long y = 1;\n    long long z = 1;\n    long long a = 1;\n    long long\
    \ b = 1;\n    long long c = 1;\n    long long d = 1;\n    long long e = 1;\n \
    \   long long f = 0;\n    long long g = 1;\n    long long h = 1;\n    long long\
    \ i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long l = 1;\n \
    \   long long m = 1;\n    long long n = 1;\n    long long o = 1;\n    long long\
    \ p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long s = 1;\n \
    \   long long t = 1;\n    long long u = 1;\n    long long v = 1;\n    long long\
    \ w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long z = 1;\n \
    \   long long a = 1;\n    long long b = 1;\n    long long c = 1;\n    long long\
    \ d = 1;\n    long long e = 1;\n    long long f = 0;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvz07idkw.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpvz07idkw.cpp:38:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   38 |     long long a = 1;\n      |               ^\n/tmp/tmpvz07idkw.cpp:12:15:\
    \ note: \u2018long long int a\u2019 previously declared here\n   12 |     long\
    \ long a = 1;\n      |               ^\n/tmp/tmpvz07idkw.cpp:39:15: error: redeclaration\
    \ of \u2018long long int b\u2019\n   39 |     long long b = 1;\n      |      \
    \         ^\n/tmp/tmpvz07idkw.cpp:13:15: note: \u2018long long int b\u2019 previously\
    \ declared here\n   13 |     long long b = 1;\n      |               ^\n/tmp/tmpvz07idkw.cpp:40:15:\
    \ error: redeclaration of \u2018long long int c\u2019\n   40 |     long long c\
    \ = 1;\n      |               ^\n/tmp/tmpvz07idkw.cpp:14:15: note: \u2018long\
    \ long int c\u2019 previously declared here\n   14 |     long long c = 1;\n  \
    \    |               ^\n/tmp/tmpvz07idkw.cpp:41:15: error: redeclaration of \u2018\
    long long int d\u2019\n   41 |     long long d = 1;\n      |               ^\n\
    /tmp/tmpvz07idkw.cpp:15:15: note: \u2018long long int d\u2019 previously declared\
    \ here\n   15 |     long long d = 1;\n      |               ^\n/tmp/tmpvz07idkw.cpp:42:15:\
    \ error: redeclaration of \u2018long long int e\u2019\n   42 |     long long e\
    \ = 1;\n      |               ^\n/tmp/tmpvz07idkw.cpp:16:15: note: \u2018long\
    \ long int e\u2019 previously declared here\n   16 |     long long e = 1;\n  \
    \    |               ^\n/tmp/tmpvz07idkw.cpp:43:15: error: redeclaration of \u2018\
    long long int f\u2019\n   43 |     long long f = 0;\n      |               ^\n\
    /tmp/tmpvz07idkw.cpp:17:15: note: \u2018long long int f\u2019 previously declared\
    \ here\n   17 |     long long f = 0;\n      |               ^\n/tmp/tmpvz07idkw.cpp:44:15:\
    \ error: redeclaration of \u2018long long int g\u2019\n   44 |     long long g\
    \ = 1;\n      |               ^\n/tmp/tmpvz07idkw.cpp:18:15: note: \u2018long\
    \ long int g\u2019 previously declared here\n   18 |     long long g = 1;\n  \
    \    |               ^\n/tmp/tmpvz07idkw.cpp:45:15: error: redeclaration of \u2018\
    long long int h\u2019\n   45 |     long long h = 1;\n      |               ^\n\
    /tmp/tmpvz07idkw.cpp:19:15: note: \u2018long long int h\u2019 previousl"
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 1;\n    for (long long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = xs[i];\n        long long c = xs[i];\n        long long d = 1;\n        for\
    \ (long long j = i + 1; j < xs.size(); j++) {\n            derivative[j] = derivative[j]\
    \ - (a * xs[j] * d);\n            long long e = xs[j];\n            d = d * e;\n\
    \        }\n        a = a * c;\n        b = b * c;\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp27vz4gl9: /tmp/tmp27vz4gl9.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long sum = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        sum += xs[i];\n        derivative[i]\
    \ = sum;\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp37ys7_1j: /tmp/tmp37ys7_1j.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        derivative[i] = xs[i] - derivative[i\
    \ - 1];\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6uk05u8c: /tmp/tmp6uk05u8c.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    long long ans = 1;\n\
    \    for (long long i = 1; i < xs.size(); i++) {\n        ans *= xs[i];\n    \
    \    ans += xs[i] - ans;\n    }\n    return std::vector<long>(ans);\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp47vh5hjw: /tmp/tmp47vh5hjw.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long a = xs[0];\n    long b =\
    \ xs[1];\n    long c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n    long\
    \ f = xs[5];\n    derivative.push_back(a);\n    derivative.push_back(b);\n   \
    \ derivative.push_back(c);\n    derivative.push_back(d);\n    derivative.push_back(e);\n\
    \    derivative.push_back(f);\n    return derivative;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpt3n8e0p7: /tmp/tmpt3n8e0p7.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3]\
    \ = d;\n    derivative[4] = e;\n    derivative[5] = f;\n    derivative[6] = g;\n\
    \    derivative[7] = h;\n    derivative[8] = a;\n    derivative[9] = b;\n    derivative[10]\
    \ = c;\n    derivative[11] = d;\n    derivative[12] = e;\n    derivative[13] =\
    \ f;\n    derivative[14] = g;\n    derivative[15] = h;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpnj3jxuez: /tmp/tmpnj3jxuez.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    dxs.push_back(xs[0]);\n    for (int i\
    \ = 1; i < xs.size(); i++) {\n        dxs.push_back(dxs[i - 1] * xs[i]);\n   \
    \ }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzqj64xry: /tmp/tmpzqj64xry.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    long n = xs.size();\n    long m = 1;\n\
    \    long k = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = \n}\n\
    int main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy1wip7gb.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpy1wip7gb.cpp:25:10: error: redeclaration of \u2018long\
    \ int k\u2019\n   25 |     long k = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:14:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   14 |     long k =\
    \ 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:27:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   27 |     long m = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:13:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   13 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:28:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   28 |     long n = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:12:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   12 |     long n =\
    \ xs.size();\n      |          ^\n/tmp/tmpy1wip7gb.cpp:41:10: error: redeclaration\
    \ of \u2018long int a\u2019\n   41 |     long a = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:15:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   15 |     long a =\
    \ 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:42:10: error: redeclaration of\
    \ \u2018long int b\u2019\n   42 |     long b = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:16:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   16 |     long b =\
    \ 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:43:10: error: redeclaration of\
    \ \u2018long int c\u2019\n   43 |     long c = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:17:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   17 |     long c =\
    \ 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:44:10: error: redeclaration of\
    \ \u2018long int d\u2019\n   44 |     long d = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:18:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   18 |     long d =\
    \ 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:45:10: error: redeclaration of\
    \ \u2018long int e\u2019\n   45 |     long e = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:19:10:\
    \ note: \u2018long int e\u2019 previously declared here\n   19 |     long e =\
    \ 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:46:10: error: redeclaration of\
    \ \u2018long int f\u2019\n   46 |     long f = 1;\n      |          ^\n/tmp/tmpy1wip7gb.cpp:20:10:\
    \ note: \u2018long int f\u2019 previous"
  stdout: ''
  timestamp: 1659747889
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long n = xs.size();\n  \
    \  long long d = 1;\n    long long a = 1;\n    long long b = 1;\n    long long\
    \ c = 1;\n    long long d = 1;\n    long long e = 1;\n    long long f = 1;\n \
    \   long long g = 1;\n    long long h = 1;\n    long long i = 1;\n    long long\
    \ j = 1;\n    long long k = 1;\n    long long l = 1;\n    long long m = 1;\n \
    \   long long n = 1;\n    long long o = 1;\n    long long p = 1;\n    long long\
    \ q = 1;\n    long long r = 1;\n    long long s = 1;\n    long long t = 1;\n \
    \   long long u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long\
    \ x = 1;\n    long long y = 1;\n    long long z = 1;\n    long long a = 1;\n \
    \   long long b = 1;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n    long long f = 1;\n    long long g = 1;\n    long long h = 1;\n \
    \   long long i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long\
    \ l = 1;\n    long long m = 1;\n    long long n = 1;\n    long long o = 1;\n \
    \   long long p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long\
    \ s = 1;\n    long long t = 1;\n    long long u = 1;\n    long long v = 1;\n \
    \   long long w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long\
    \ z = 1;\n    long long a = 1;\n    long long b = 1;\n    long long c = 1;\n \
    \   long long d = 1;\n    long long e = 1;\n    long long f = 1;\n    long long\
    \ g = 1;\n    long long h = 1;\n    long long i = 1;\n    long long j = 1;\n \
    \   long long k = 1;\n    long long l = 1;\n    long long m = 1;\n    long long\
    \ n = 1;\n    long long o = 1;\n    long long p = 1;\n    long long q = 1;\n \
    \   long long r = 1;\n    long long s = 1;\n    long long t = 1;\n    long long\
    \ u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long x = 1;\n \
    \   long long y = 1;\n    long long z = 1;\n    long long a = 1;\n    long long\
    \ b = 1;\n    long long c = 1;\n    long long d = 1;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv9jzs8qx.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpv9jzs8qx.cpp:17:15: error: redeclaration of \u2018long\
    \ long int d\u2019\n   17 |     long long d = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:13:15:\
    \ note: \u2018long long int d\u2019 previously declared here\n   13 |     long\
    \ long d = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:27:15: error: redeclaration\
    \ of \u2018long long int n\u2019\n   27 |     long long n = 1;\n      |      \
    \         ^\n/tmp/tmpv9jzs8qx.cpp:12:15: note: \u2018long long int n\u2019 previously\
    \ declared here\n   12 |     long long n = xs.size();\n      |               ^\n\
    /tmp/tmpv9jzs8qx.cpp:40:15: error: redeclaration of \u2018long long int a\u2019\
    \n   40 |     long long a = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:14:15:\
    \ note: \u2018long long int a\u2019 previously declared here\n   14 |     long\
    \ long a = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:41:15: error: redeclaration\
    \ of \u2018long long int b\u2019\n   41 |     long long b = 1;\n      |      \
    \         ^\n/tmp/tmpv9jzs8qx.cpp:15:15: note: \u2018long long int b\u2019 previously\
    \ declared here\n   15 |     long long b = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:42:15:\
    \ error: redeclaration of \u2018long long int c\u2019\n   42 |     long long c\
    \ = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:16:15: note: \u2018long\
    \ long int c\u2019 previously declared here\n   16 |     long long c = 1;\n  \
    \    |               ^\n/tmp/tmpv9jzs8qx.cpp:43:15: error: redeclaration of \u2018\
    long long int d\u2019\n   43 |     long long d = 1;\n      |               ^\n\
    /tmp/tmpv9jzs8qx.cpp:13:15: note: \u2018long long int d\u2019 previously declared\
    \ here\n   13 |     long long d = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:44:15:\
    \ error: redeclaration of \u2018long long int e\u2019\n   44 |     long long e\
    \ = 1;\n      |               ^\n/tmp/tmpv9jzs8qx.cpp:18:15: note: \u2018long\
    \ long int e\u2019 previously declared here\n   18 |     long long e = 1;\n  \
    \    |               ^\n/tmp/tmpv9jzs8qx.cpp:45:15: error: redeclaration of \u2018\
    long long int f\u2019\n   45 |     long long f = 1;\n      |               ^\n\
    /tmp/tmpv9jzs8qx.cpp:19:15: note: \u2018long long int f\u2019 p"
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long n = xs.size();\n    long d = 1;\n\
    \    for (int i = 0; i < n; ++i) {\n        d *= xs[i];\n        ds.push_back(d);\n\
    \    }\n    return ds;\n}\nint main() {\n    auto candidate = derivative;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp66kmu_5p: /tmp/tmp66kmu_5p.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747890
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        derivative[i] = xs[i] * i;\n\
    \        res += xs[i] * xs[i];\n    }\n    derivative[0] = res / 2;\n    return\
    \ derivative;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpm5fibat9: /tmp/tmpm5fibat9.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747890
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = xs[0];\n\
    \    long long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n\
    \    long long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n\
    \    long long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n\
    \    long long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n\
    \    long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppee_cuni.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmppee_cuni.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmppee_cuni.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmppee_cuni.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmppee_cuni.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmppee_cuni.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmppee_cuni.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmppee_cuni.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmppee_cuni.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmppee_cuni.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmppee_cuni.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long long i = 0; i < xs.size(); i++) {\n        derivative[i] = xs[i]\
    \ * i;\n        res += xs[i] * xs[i];\n    }\n    derivative[0] = res / 2;\n \
    \   return derivative;\n}\nint main() {\n    auto candidate = derivative;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpfff7egmt: /tmp/tmpfff7egmt.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpd5t65ks4: /tmp/tmpd5t65ks4.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        derivative[i] = xs[i] - derivative[i\
    \ - 1];\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6uk05u8c: /tmp/tmp6uk05u8c.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long power = 1;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = power;\n        power *= xs[i];\n    }\n    return derivative;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpaxyjaehq: /tmp/tmpaxyjaehq.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747890
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long n = xs.size();\n    long m = 1;\n\
    \    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        sum += xs[i] *\
    \ m;\n        m *= n - i;\n        ds.push_back(sum);\n    }\n    return ds;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppylajffz: /tmp/tmppylajffz.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747890
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    if (xs.size() == 0) return std::vector<long>();\n    std::vector<long>\
    \ derivatives;\n    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n\
    \    long d = xs[3];\n    long e = xs[4];\n    long f = xs[5];\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    return derivatives;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpt3wtdznq: /tmp/tmpt3wtdznq.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747890
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> ds(xs.size());\n  \
    \  ds[0] = 1;\n    for (int i = 1; i < xs.size(); i++) {\n        ds[i] = ds[i\
    \ - 1] * xs[i];\n    }\n    return ds;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpoeepc53s: /tmp/tmpoeepc53s.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative\
    \ of this polynomial in the same form.\n    // >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n    // >>> derivative((std::vector<long>({(long)1,\
    \ (long)4, (long)12, (long)20})))\n    // >>> derivative((std::vector<long>({(long)1,\
    \ (long)2, (long)3})))\n    // >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n    // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    \    // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n   \
    \ // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    //\
    \ >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    // >>>\
    \ derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    // >>> derivative((std::vector<long>({(long)1,\
    \ (long)2, (long)3})))\n    // >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n    // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    \    // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n   \
    \ // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    //\
    \ >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    // >>>\
    \ derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    // >>> derivative((std::vector<long>({(long)1,\
    \ (long)2, (long)3})))\n    // >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n    // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    \    // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n   \
    \ // >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    //\
    \ >>> derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    // >>>\
    \ derivative((std::vector<long>({(long)1, (long)2, (long)3})))\n    // >>> derivative((std::vector<long>({(long)1,\
    \ (long)2, (long)3})))\n    // >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n    // \n}\nint main() {\n    auto candidate = derivative;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6lws_8c8: /tmp/tmp6lws_8c8.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747891
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nbhiipn.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1nbhiipn.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmp1nbhiipn.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0agg9uj6.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0agg9uj6.cpp:83:28: error: expected \u2018)\u2019 before\
    \ \u2018}\u2019 token\n   83 |     derivatives.push_back(h\n      |          \
    \                ~ ^\n      |                            )\n   84 | }\n      |\
    \ ~                           \n/tmp/tmp0agg9uj6.cpp:84:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long sum = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        sum += xs[i];\n        derivative[i]\
    \ = sum;\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp37ys7_1j: /tmp/tmp37ys7_1j.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long pow = 1;\n    long\
    \ long sum = 0;\n    long long cur = 0;\n    for (long long i = 0; i < xs.size();\
    \ i++) {\n        cur += pow * (xs[i]);\n        pow *= xs[i];\n        sum +=\
    \ cur;\n        derivatives.push_back(sum);\n    }\n    return derivatives;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpan8pujni: /tmp/tmpan8pujni.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747891
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    derivative[1] = xs[1];\n    for (int i = 2; i < derivative.size(); i++) {\n\
    \        derivative[i] = derivative[i - 1] * xs[i];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5zjgiihl.cpp: In function 'int main()':\n/tmp/tmp5zjgiihl.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5zjgiihl.cpp:2:\n/tmp/tmp5zjgiihl.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5zjgiihl.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5zjgiihl.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5zjgiihl.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5zjgiihl.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5zjgiihl.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    derivative.push_back(a);\n    derivative.push_back(b);\n\
    \    derivative.push_back(c);\n    derivative.push_back(d);\n    derivative.push_back(e);\n\
    \    derivative.push_back(f);\n    derivative.push_back(g);\n    derivative.push_back(h);\n\
    \    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmph4qdn4ul: /tmp/tmph4qdn4ul.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = xs[0];\n\
    \    long long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n\
    \    long long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n\
    \    long long h = xs[7];\n    derivative[0] = a;\n    derivative[1] = b;\n  \
    \  derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n    derivative[5]\
    \ = f;\n    derivative[6] = g;\n    derivative[7] = h;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4qujpysn: /tmp/tmp4qujpysn.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747891
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    long long pow = 1;\n    for (long\
    \ i = 0; i < xs.size(); i++) {\n        derivative += pow;\n        pow *= xs[i];\n\
    \    }\n    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmal991d2.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmal991d2.cpp:14:20: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   14 |         derivative += pow;\n      |         ~~~~~~~~~~~^~~~~~\n"
  stdout: ''
  timestamp: 1659747891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> dxs;\n    dxs.push_back(xs[0]);\n    for (int i\
    \ = 1; i < xs.size(); i++) {\n        dxs.push_back(xs[i] * dxs[i - 1]);\n   \
    \ }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp91iuiz6i: /tmp/tmp91iuiz6i.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747884
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() >= 2);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2]\
    \ = c;\n    derivative[3] = d;\n    derivative[4] = e;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpp37_m1tx: /tmp/tmpp37_m1tx.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nbhiipn.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1nbhiipn.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmp1nbhiipn.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long int n = (long long)xs.size();\n\
    \    long long int m = 1;\n    long long int k = n;\n    long long int i;\n  \
    \  long long int j;\n    long long int k;\n    long long int l;\n    long long\
    \ int m;\n    long long int n;\n    long long int p;\n    long long int q;\n \
    \   long long int r;\n    long long int s;\n    long long int t;\n    long long\
    \ int u;\n    long long int v;\n    long long int w;\n    long long int x;\n \
    \   long long int y;\n    long long int z;\n    long long int A;\n    long long\
    \ int B;\n    long long int C;\n    long long int D;\n    long long int E;\n \
    \   long long int F;\n    long long int G;\n    long long int H;\n    long long\
    \ int I;\n    long long int J;\n    long long int K;\n    long long int L;\n \
    \   long long int M;\n    long long int N;\n    long long int O;\n    long long\
    \ int P;\n    long long int Q;\n    long long int R;\n    long long int S;\n \
    \   long long int T;\n    long long int U;\n    long long int V;\n    long long\
    \ int W;\n    long long int X;\n    long long int Y;\n    long long int Z;\n \
    \   long long int a = 0;\n    long long int b = 0;\n    long long int c = 0;\n\
    \    long long int d = 0;\n    long long int e = 0;\n    long long int f = 0;\n\
    \    long long int g = 0;\n    long long int h = 0;\n    long long int i = 0;\n\
    \    long long int j = 0;\n    long long int k = 0;\n    long long int l = 0;\n\
    \    long long int m = 0;\n    long long int n = 0;\n    long long int o = 0;\n\
    \    long long int p = 0;\n    long long int q = 0;\n    long long int r = 0;\n\
    \    long long int s = 0;\n    long long int t = 0;\n    long long int u = 0;\n\
    \    long long int v = 0;\n    long long int w = 0;\n    long long int x = 0;\n\
    \    long long int y = 0;\n    long long int z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    \n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8bn_cbvy.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp8bn_cbvy.cpp:17:19: error: redeclaration of \u2018long\
    \ long int k\u2019\n   17 |     long long int k;\n      |                   ^\n\
    /tmp/tmp8bn_cbvy.cpp:14:19: note: \u2018long long int k\u2019 previously declared\
    \ here\n   14 |     long long int k = n;\n      |                   ^\n/tmp/tmp8bn_cbvy.cpp:19:19:\
    \ error: redeclaration of \u2018long long int m\u2019\n   19 |     long long int\
    \ m;\n      |                   ^\n/tmp/tmp8bn_cbvy.cpp:13:19: note: \u2018long\
    \ long int m\u2019 previously declared here\n   13 |     long long int m = 1;\n\
    \      |                   ^\n/tmp/tmp8bn_cbvy.cpp:20:19: error: redeclaration\
    \ of \u2018long long int n\u2019\n   20 |     long long int n;\n      |      \
    \             ^\n/tmp/tmp8bn_cbvy.cpp:12:19: note: \u2018long long int n\u2019\
    \ previously declared here\n   12 |     long long int n = (long long)xs.size();\n\
    \      |                   ^\n/tmp/tmp8bn_cbvy.cpp:66:19: error: redeclaration\
    \ of \u2018long long int i\u2019\n   66 |     long long int i = 0;\n      |  \
    \                 ^\n/tmp/tmp8bn_cbvy.cpp:15:19: note: \u2018long long int i\u2019\
    \ previously declared here\n   15 |     long long int i;\n      |            \
    \       ^\n/tmp/tmp8bn_cbvy.cpp:67:19: error: redeclaration of \u2018long long\
    \ int j\u2019\n   67 |     long long int j = 0;\n      |                   ^\n\
    /tmp/tmp8bn_cbvy.cpp:16:19: note: \u2018long long int j\u2019 previously declared\
    \ here\n   16 |     long long int j;\n      |                   ^\n/tmp/tmp8bn_cbvy.cpp:68:19:\
    \ error: redeclaration of \u2018long long int k\u2019\n   68 |     long long int\
    \ k = 0;\n      |                   ^\n/tmp/tmp8bn_cbvy.cpp:14:19: note: \u2018\
    long long int k\u2019 previously declared here\n   14 |     long long int k =\
    \ n;\n      |                   ^\n/tmp/tmp8bn_cbvy.cpp:69:19: error: redeclaration\
    \ of \u2018long long int l\u2019\n   69 |     long long int l = 0;\n      |  \
    \                 ^\n/tmp/tmp8bn_cbvy.cpp:18:19: note: \u2018long long int l\u2019\
    \ previously declared here\n   18 |     long long int l;\n      |            \
    \       ^\n/tmp/tmp8bn_cbvy.cpp:70:19: error: redeclaration of \u2018long long\
    \ int m\u2019\n   70 |"
  stdout: ''
  timestamp: 1659747891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    derivative[1] = xs[1];\n    for (int i = 2; i < xs.size(); i++) {\n     \
    \   derivative[i] = derivative[i - 1] * xs[i];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp13vu0c9p: /tmp/tmp13vu0c9p.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size() - 1);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        dxs[i - 1] = (xs[i] - xs[i\
    \ - 1]) / (xs[i] - xs[i - 1]);\n    }\n    return dxs;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7qsw2muc: /tmp/tmp7qsw2muc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size() - 1);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        dxs[i - 1] = dxs[i] + xs[i]\
    \ * dxs[i - 1];\n    }\n    return dxs;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7on1qw6t: /tmp/tmp7on1qw6t.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    derivative[0] = xs[0];\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        derivative[i] = xs[i] - derivative[i\
    \ - 1];\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6uk05u8c: /tmp/tmp6uk05u8c.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nbhiipn.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1nbhiipn.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmp1nbhiipn.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivatives;\n    long\
    \ a = xs[0];\n    long b = xs[1];\n    for (long i = 2; i < xs.size(); i++) {\n\
    \        derivatives.push_back(b);\n        b *= xs[i];\n    }\n    derivatives.push_back(b);\n\
    \    return derivatives;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpxeplqlbd: /tmp/tmpxeplqlbd.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivatives;\n    long\
    \ a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = b * x + c;\n    long b = c * x + d;\n    long c = d\
    \ * x + e;\n    long d = e * x + f;\n    long e = f * x + g;\n    long f = g *\
    \ x + h;\n    long g = h * x + i;\n    long h = i * x + j;\n    long i = j * x\
    \ + k;\n    long j = k * x + l;\n    long k = l * x + m;\n    long l = m * x +\
    \ n;\n    long m = n * x + o;\n    long n = o * x + p;\n    long o = p * x + q;\n\
    \    long p = q * x + r;\n    long q = r * x + s;\n    long r = s * x + t;\n \
    \   long s = t * x + u;\n    long t = u * x + v;\n    long u = v * x + w;\n  \
    \  long v = w * x + x;\n    long w = x * x + y;\n    long x = y * x + z;\n   \
    \ long y = z * x + a;\n    long z = a * x + b;\n    long a = b * x + c;\n    long\
    \ b = c * x + d;\n    long c = d * x + e;\n    long d = e * x + f;\n    long e\
    \ = f * x + g;\n    long f = g * x + h;\n    long g = h * x + i;\n    long h =\
    \ i * x + j;\n    long i = j * x + k;\n    long j = k * x + l;\n    long k = l\
    \ * x + m;\n    long l = m * x + n;\n    \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj8ondckd.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpj8ondckd.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = b * x + c;\n      |          ^\n/tmp/tmpj8ondckd.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmpj8ondckd.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = c * x + d;\n      |        \
    \  ^\n/tmp/tmpj8ondckd.cpp:14:10: note: \u2018long int b\u2019 previously declared\
    \ here\n   14 |     long b = xs[1];\n      |          ^\n/tmp/tmpj8ondckd.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = d * x +\
    \ e;\n      |          ^\n/tmp/tmpj8ondckd.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmpj8ondckd.cpp:42:10: error: redeclaration of \u2018long int d\u2019\n \
    \  42 |     long d = e * x + f;\n      |          ^\n/tmp/tmpj8ondckd.cpp:16:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   16 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmpj8ondckd.cpp:43:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   43 |     long e = f * x + g;\n      |        \
    \  ^\n/tmp/tmpj8ondckd.cpp:17:10: note: \u2018long int e\u2019 previously declared\
    \ here\n   17 |     long e = xs[4];\n      |          ^\n/tmp/tmpj8ondckd.cpp:44:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   44 |     long f = g * x +\
    \ h;\n      |          ^\n/tmp/tmpj8ondckd.cpp:18:10: note: \u2018long int f\u2019\
    \ previously declared here\n   18 |     long f = xs[5];\n      |          ^\n\
    /tmp/tmpj8ondckd.cpp:45:10: error: redeclaration of \u2018long int g\u2019\n \
    \  45 |     long g = h * x + i;\n      |          ^\n/tmp/tmpj8ondckd.cpp:19:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   19 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmpj8ondckd.cpp:46:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   46 |     long h = i * x + j;\n      |        \
    \  ^\n/tmp/tmpj8ondckd.cpp:20:10: note: \u2018long int h\u2019 previously declared\
    \ here\n   20 |     long h = xs[7];\n      |          ^\n/tmp/tmpj8ondckd.cpp:47:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   47 |   "
  stdout: ''
  timestamp: 1659747891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * pow(xs[i],\
    \ i);\n    }\n    derivative[0] = res;\n    for (long i = 1; i < xs.size(); i++)\
    \ {\n        derivative[i] = derivative[i - 1] + xs[i] * pow(xs[i], i);\n    }\n\
    \    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_5xdw6ko: /tmp/tmp_5xdw6ko.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivatives(xs.size()\
    \ - 1);\n    for (size_t i = 1; i < xs.size(); i++) {\n        derivatives[i -\
    \ 1] = (xs[i] - xs[i - 1]) / (xs[i] - xs[i - 1]);\n    }\n    return derivatives;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpav7sno9y: /tmp/tmpav7sno9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    for (long i = 1; i < xs.size(); i++) {\n        derivative.push_back(xs[i]\
    \ - xs[i - 1]);\n    }\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpoam3vjxb: /tmp/tmpoam3vjxb.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size() - 1);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        dxs[i - 1] = xs[i - 1];\n\
    \    }\n    for (int i = xs.size() - 2; i >= 0; i--) {\n        dxs[i] = dxs[i\
    \ + 1] + (xs[i + 1] * dxs[i + 1]);\n    }\n    return dxs;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpkfaiyng0: /tmp/tmpkfaiyng0.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size() - 1);\n\
    \    for (long i = xs.size() - 2; i >= 0; --i) {\n        dxs[i] = xs[i + 1];\n\
    \    }\n    dxs[0] = 1;\n    for (long i = 1; i < xs.size(); ++i) {\n        dxs[i]\
    \ = dxs[i - 1] * xs[i];\n    }\n    return dxs;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp0xatt7nh: /tmp/tmp0xatt7nh.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4tdq3xvv.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp4tdq3xvv.cpp:84:25: error: expected \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   84 |     derivative.push_back\n      |             \
    \            ^\n      |                         ;\n   85 | }\n      | ~      \
    \                  \n/tmp/tmp4tdq3xvv.cpp:84:16: error: statement cannot resolve\
    \ address of overloaded function\n   84 |     derivative.push_back\n      |  \
    \   ~~~~~~~~~~~^~~~~~~~~\n/tmp/tmp4tdq3xvv.cpp:85:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   85 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659747892
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long a = xs[0];\n    long b =\
    \ xs[1];\n    long c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n    long\
    \ f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n    long i = xs[8];\n\
    \    long j = xs[9];\n    long k = xs[10];\n    long l = xs[11];\n    long m =\
    \ xs[12];\n    long n = xs[13];\n    long o = xs[14];\n    long p = xs[15];\n\
    \    long q = xs[16];\n    long r = xs[17];\n    long s = xs[18];\n    long t\
    \ = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n    long w = xs[22];\n\
    \    long x = xs[23];\n    long y = xs[24];\n    long z = xs[25];\n    long a\
    \ = xs[26];\n    long b = xs[27];\n    long c = xs[28];\n    long d = xs[29];\n\
    \    long e = xs[30];\n    long f = xs[31];\n    long g = xs[32];\n    long h\
    \ = xs[33];\n    long i = xs[34];\n    long j = xs[35];\n    long k = xs[36];\n\
    \    long l = xs[37];\n    long m = xs[38];\n    long n = xs[39];\n    long o\
    \ = xs[40];\n    long p = xs[41];\n    long q = xs[42];\n    long r = xs[43];\n\
    \    long s = xs[44];\n    long t = xs[45];\n    long u = xs[46];\n    long v\
    \ = xs[47];\n    long w = xs[48];\n    long x = xs[49];\n    long y = xs[50];\n\
    \    long z = xs[51];\n    long a = xs[52];\n    long b = xs[53];\n    long c\
    \ = xs[54];\n    long d = xs[55];\n    long e = xs[56];\n    long f = xs[57];\n\
    \    long g = xs[58];\n    long h = xs[59];\n    long i = xs[60];\n    long j\
    \ = xs[61];\n    long k = xs[62];\n    long l = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu9unvjzo.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpu9unvjzo.cpp:38:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   38 |     long a = xs[26];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:12:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   12 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:39:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   39 |     long b = xs[27];\n      |          ^\n\
    /tmp/tmpu9unvjzo.cpp:13:10: note: \u2018long int b\u2019 previously declared here\n\
    \   13 |     long b = xs[1];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:40:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   40 |     long c = xs[28];\n\
    \      |          ^\n/tmp/tmpu9unvjzo.cpp:14:10: note: \u2018long int c\u2019\
    \ previously declared here\n   14 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmpu9unvjzo.cpp:41:10: error: redeclaration of \u2018long int d\u2019\n \
    \  41 |     long d = xs[29];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:15:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   15 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:42:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   42 |     long e = xs[30];\n      |          ^\n\
    /tmp/tmpu9unvjzo.cpp:16:10: note: \u2018long int e\u2019 previously declared here\n\
    \   16 |     long e = xs[4];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:43:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   43 |     long f = xs[31];\n\
    \      |          ^\n/tmp/tmpu9unvjzo.cpp:17:10: note: \u2018long int f\u2019\
    \ previously declared here\n   17 |     long f = xs[5];\n      |          ^\n\
    /tmp/tmpu9unvjzo.cpp:44:10: error: redeclaration of \u2018long int g\u2019\n \
    \  44 |     long g = xs[32];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:18:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   18 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:45:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   45 |     long h = xs[33];\n      |          ^\n\
    /tmp/tmpu9unvjzo.cpp:19:10: note: \u2018long int h\u2019 previously declared here\n\
    \   19 |     long h = xs[7];\n      |          ^\n/tmp/tmpu9unvjzo.cpp:46:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   46 |     long i = xs[34];\n\
    \     "
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    if (xs.size() < 2)\n        return std::vector<long>();\n    std::vector<long>\
    \ derivatives(xs.size() - 1);\n    long a = xs[0];\n    long b = xs[1];\n    for\
    \ (long i = 2; i < xs.size(); i++) {\n        derivatives[i - 2] = (b * xs[i])\
    \ - (a * derivatives[i - 1]);\n        a = b;\n        b = xs[i];\n    }\n   \
    \ return derivatives;\n}\nint main() {\n    auto candidate = derivative;\n   \
    \ assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpc54xdbq8: /tmp/tmpc54xdbq8.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long a = 0, b\
    \ = 1;\n    for (long long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = xs[i];\n    }\n    for (long long i = xs.size() - 1; i >= 0; i--) {\n    \
    \    derivative[i] = (b - a) / xs[i];\n        a = b;\n        b = derivative[i];\n\
    \    }\n    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptp7vhtyq: /tmp/tmptp7vhtyq.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = a * x;\n    long b = b * x;\n    long c = c * x;\n \
    \   long d = d * x;\n    long e = e * x;\n    long f = f * x;\n    long g = g\
    \ * x;\n    long h = h * x;\n    long i = i * x;\n    long j = j * x;\n    long\
    \ k = k * x;\n    long l = l * x;\n    long m = m * x;\n    long n = n * x;\n\
    \    long o = o * x;\n    long p = p * x;\n    long q = q * x;\n    long r = r\
    \ * x;\n    long s = s * x;\n    long t = t * x;\n    long u = u * x;\n    long\
    \ v = v * x;\n    long w = w * x;\n    long x = x * x;\n    long y = y * x;\n\
    \    long z = z * x;\n    long a = a * y;\n    long b = b * y;\n    long c = c\
    \ * y;\n    long d = d * y;\n    long e = e * y;\n    long f = f * y;\n    long\
    \ g = g * y;\n    long h = h * y;\n    long i = i * y;\n    long j = j * y;\n\
    \    long k = k * y;\n    long l = l * y;\n    long m = m * y;\n    long n = n\
    \ * y;\n    long o = o * y;\n    long p = p * y;\n    long q = q * y;\n    long\
    \ r = r * y;\n    long s = s * y;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjpaz3ag3.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjpaz3ag3.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = a * x;\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = b * x;\n      |          ^\n\
    /tmp/tmpjpaz3ag3.cpp:14:10: note: \u2018long int b\u2019 previously declared here\n\
    \   14 |     long b = xs[1];\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = c * x;\n\
    \      |          ^\n/tmp/tmpjpaz3ag3.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmpjpaz3ag3.cpp:42:10: error: redeclaration of \u2018long int d\u2019\n \
    \  42 |     long d = d * x;\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:16:10: note:\
    \ \u2018long int d\u2019 previously declared here\n   16 |     long d = xs[3];\n\
    \      |          ^\n/tmp/tmpjpaz3ag3.cpp:43:10: error: redeclaration of \u2018\
    long int e\u2019\n   43 |     long e = e * x;\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:17:10:\
    \ note: \u2018long int e\u2019 previously declared here\n   17 |     long e =\
    \ xs[4];\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:44:10: error: redeclaration\
    \ of \u2018long int f\u2019\n   44 |     long f = f * x;\n      |          ^\n\
    /tmp/tmpjpaz3ag3.cpp:18:10: note: \u2018long int f\u2019 previously declared here\n\
    \   18 |     long f = xs[5];\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:45:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   45 |     long g = g * x;\n\
    \      |          ^\n/tmp/tmpjpaz3ag3.cpp:19:10: note: \u2018long int g\u2019\
    \ previously declared here\n   19 |     long g = xs[6];\n      |          ^\n\
    /tmp/tmpjpaz3ag3.cpp:46:10: error: redeclaration of \u2018long int h\u2019\n \
    \  46 |     long h = h * x;\n      |          ^\n/tmp/tmpjpaz3ag3.cpp:20:10: note:\
    \ \u2018long int h\u2019 previously declared here\n   20 |     long h = xs[7];\n\
    \      |          ^\n/tmp/tmpjpaz3ag3.cpp:47:10: error: redeclaration of \u2018\
    long int i\u2019\n   47 |     long i = i * x;\n      |       "
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    derivative[0] = a;\n    derivative[1] = b;\n    derivative[2] = c;\n    derivative[3]\
    \ = d;\n    derivative[4] = e;\n    derivative[5] = f;\n    derivative[6] = g;\n\
    \    derivative[7] = h;\n    derivative[8] = a;\n    derivative[9] = b;\n    derivative[10]\
    \ = c;\n    derivative[11] = d;\n    derivative[12] = e;\n    derivative[13] =\
    \ f;\n    derivative[14] = g;\n    derivative[15] = h;\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpnj3jxuez: /tmp/tmpnj3jxuez.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * xs[i];\n \
    \       derivative[i] = res;\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp59z74sce.cpp: In function 'int main()':\n/tmp/tmp59z74sce.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/tmp/tmp59z74sce.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp59z74sce.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp59z74sce.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp59z74sce.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp59z74sce.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp59z74sce.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    std::vector<long>\
    \ derivative(xs.size());\n    derivative[0] = xs[0];\n    for (int i = 1; i <\
    \ xs.size(); i++) {\n        derivative[i] = xs[i] - derivative[i - 1] * xs[i\
    \ - 1];\n    }\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp13o6e7qw: /tmp/tmp13o6e7qw.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size() - 1);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        dxs[i - 1] = (xs[i] - xs[i\
    \ - 1]) / (xs[i] - xs[i - 1]);\n    }\n    return dxs;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7qsw2muc: /tmp/tmp7qsw2muc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> ds(xs.size());\n  \
    \  long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = 1;\n    long f = 1;\n    long g = a;\n    long h = b;\n    long\
    \ i = c;\n    long j = 1;\n    long k = 1;\n    long l = a;\n    long m = b;\n\
    \    long n = c;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = c;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1aor2g4z.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1aor2g4z.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmp1aor2g4z.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:14:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   14 |     long b =\
    \ xs[1];\n      |          ^\n/tmp/tmp1aor2g4z.cpp:41:10: error: redeclaration\
    \ of \u2018long int c\u2019\n   41 |     long c = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:15:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   15 |     long c =\
    \ xs[2];\n      |          ^\n/tmp/tmp1aor2g4z.cpp:42:10: error: redeclaration\
    \ of \u2018long int d\u2019\n   42 |     long d = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:16:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   16 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmp1aor2g4z.cpp:43:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   43 |     long e = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:17:10:\
    \ note: \u2018long int e\u2019 previously declared here\n   17 |     long e =\
    \ 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:44:10: error: redeclaration of\
    \ \u2018long int f\u2019\n   44 |     long f = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:18:10:\
    \ note: \u2018long int f\u2019 previously declared here\n   18 |     long f =\
    \ 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:45:10: error: redeclaration of\
    \ \u2018long int g\u2019\n   45 |     long g = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:19:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   19 |     long g =\
    \ a;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:46:10: error: redeclaration of\
    \ \u2018long int h\u2019\n   46 |     long h = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:20:10:\
    \ note: \u2018long int h\u2019 previously declared here\n   20 |     long h =\
    \ b;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:47:10: error: redeclaration of\
    \ \u2018long int i\u2019\n   47 |     long i = 1;\n      |          ^\n/tmp/tmp1aor2g4z.cpp:21:10:\
    \ note: \u2018long int i\u2019 "
  stdout: ''
  timestamp: 1659747892
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long res = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        res += xs[i] * pow(xs[i],\
    \ i);\n    }\n    derivative[0] = res;\n    for (long i = 1; i < xs.size(); i++)\
    \ {\n        derivative[i] = derivative[i - 1] + xs[i] * pow(xs[i], i);\n    }\n\
    \    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_5xdw6ko: /tmp/tmp_5xdw6ko.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747892
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long pow = 1;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        derivative[i] = pow;\n  \
    \      pow *= xs[i];\n    }\n    return derivative;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpndvyuneh: /tmp/tmpndvyuneh.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    derivative.push_back(a);\n\
    \    derivative.push_back(b);\n    derivative.push_back(c);\n    derivative.push_back(d);\n\
    \    derivative.push_back(e);\n    derivative.push_back(f);\n    derivative.push_back(g);\n\
    \    derivative.push_back(h);\n    return derivative;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpx0wxejyj: /tmp/tmpx0wxejyj.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    derivative[0] = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n     \
    \   derivative[i] = xs[i] - derivative[i - 1];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppft4ani5.cpp: In function 'int main()':\n/tmp/tmppft4ani5.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppft4ani5.cpp:2:\n/tmp/tmppft4ani5.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmppft4ani5.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmppft4ani5.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppft4ani5.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppft4ani5.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppft4ani5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> ds;\n    ds.push_back(xs[0]);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        ds.push_back(ds[i - 1] * xs[i]);\n\
    \    }\n    return ds;\n}\nint main() {\n    auto candidate = derivative;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpxdfbqun4: /tmp/tmpxdfbqun4.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long power = 1;\n    for (long i = 0; i < xs.size(); i++) {\n        derivative[i]\
    \ = power;\n        power *= xs[i];\n    }\n    return derivative;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpaxyjaehq: /tmp/tmpaxyjaehq.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747890
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.resize(xs.size() -\
    \ 1);\n    derivative[0] = xs[0];\n    for (int i = 1; i < xs.size() - 1; i++)\
    \ {\n        derivative[i] = xs[i] - derivative[i - 1];\n    }\n    return derivative;\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpud9olft1: /tmp/tmpud9olft1.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs;\n    dxs.push_back(xs[0]);\n\
    \    for (int i = 1; i < xs.size(); i++) {\n        dxs.push_back(dxs[i - 1] *\
    \ xs[i]);\n    }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpkdf6hnil: /tmp/tmpkdf6hnil.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    // xs[0] + xs[1] * x + xs[2] * x^2 + ....\n    long long ans = 0;\n\
    \    for (long long i = 1; i < xs.size(); i++) {\n        ans += xs[i] * xs[i\
    \ - 1];\n    }\n    ans *= xs.size();\n    ans /= xs.size() - 1;\n    return std::vector<long>(ans);\n\
    }\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpv90w3c84: /tmp/tmpv90w3c84.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    if (xs.size() < 2) {\n        return std::vector<long>();\n    }\n\
    \    std::vector<long> derivatives;\n    long a = xs[0];\n    long b = xs[1];\n\
    \    long c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n    long f = xs[5];\n\
    \    long g = xs[6];\n    long h = xs[7];\n    derivatives.push_back(a);\n   \
    \ derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpojdi75sg: /tmp/tmpojdi75sg.cpp:90: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    derivative[0] = a;\n    derivative[1] = b * e - c * d;\n    derivative[2]\
    \ = c * e + b * d;\n    derivative[3] = a * e + b * c + d * f;\n    derivative[4]\
    \ = a * e - b * c - d * f;\n    derivative[5] = a * e + b * c - d * f;\n    return\
    \ derivative;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: "*** Error in `/tmp/tmp34qzyj8r': realloc(): invalid next size: 0x00000000019f9d20\
    \ ***\n======= Backtrace: =========\n/lib64/libc.so.6(+0x7f474)[0x2ae65423b474]\n\
    /lib64/libc.so.6(+0x84861)[0x2ae654240861]\n/lib64/libc.so.6(+0x86ce2)[0x2ae654242ce2]\n\
    /lib64/libc.so.6(vasprintf+0xdb)[0x2ae654233eab]\n/lib64/libc.so.6(asprintf+0x87)[0x2ae65420f6a7]\n\
    /lib64/libc.so.6(+0x2f102)[0x2ae6541eb102]\n/lib64/libc.so.6(+0x2f252)[0x2ae6541eb252]\n\
    /tmp/tmp34qzyj8r[0x400d1d]\n/lib64/libc.so.6(__libc_start_main+0xf5)[0x2ae6541de555]\n\
    /tmp/tmp34qzyj8r[0x4008a9]\n======= Memory map: ========\n00400000-00404000 r-xp\
    \ 00000000 08:02 1064106                            /tmp/tmp34qzyj8r\n00603000-00604000\
    \ r--p 00003000 08:02 1064106                            /tmp/tmp34qzyj8r\n00604000-00605000\
    \ rw-p 00004000 08:02 1064106                            /tmp/tmp34qzyj8r\n019e8000-01a1a000\
    \ rw-p 00000000 00:00 0                                  [heap]\n2ae6536a5000-2ae6536c7000\
    \ r-xp 00000000 08:01 50332356                   /usr/lib64/ld-2.17.so\n2ae6536c7000-2ae6536ca000\
    \ rw-p 00000000 00:00 0 \n2ae6536e2000-2ae6536e7000 rw-p 00000000 00:00 0 \n2ae6538c6000-2ae6538c7000\
    \ r--p 00021000 08:01 50332356                   /usr/lib64/ld-2.17.so\n2ae6538c7000-2ae6538c8000\
    \ rw-p 00022000 08:01 50332356                   /usr/lib64/ld-2.17.so\n2ae6538c8000-2ae6538c9000\
    \ rw-p 00000000 00:00 0 \n2ae6538c9000-2ae653a92000 r-xp 00000000 00:29 1475687066821932785\
    \        /shared/centos7/clang/10.0.1/lib/libstdc++.so.6.0.27\n2ae653a92000-2ae653c91000\
    \ ---p 001c9000 00:29 1475687066821932785        /shared/centos7/clang/10.0.1/lib/libstdc++.so.6.0.27\n\
    2ae653c91000-2ae653c9c000 r--p 001c8000 00:29 1475687066821932785        /shared/centos7/clang/10.0.1/lib/libstdc++.so.6.0.27\n\
    2ae653c9c000-2ae653c9f000 rw-p 001d3000 00:29 1475687066821932785        /shared/centos7/clang/10.0.1/lib/libstdc++.so.6.0.27\n\
    2ae653c9f000-2ae653ca2000 rw-p 00000000 00:00 0 \n2ae653ca2000-2ae653da3000 r-xp\
    \ 00000000 08:01 50332709                   /usr/lib64/libm-2.17.so\n2ae653da3000-2ae653fa2000\
    \ ---p 00101000 08:01 503"
  stdout: ''
  timestamp: 1659747893
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b * e - c * f;\n    derivative[2] = c * e + b * f;\n    derivative[3] = a\
    \ * e + b * f - c * d;\n    derivative[4] = a * e - b * f + c * d;\n    derivative[5]\
    \ = a * e + b * f - c * d;\n    return derivative;\n}\nint main() {\n    auto\
    \ candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12,\
    \ (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpcsky1_a6: /tmp/tmpcsky1_a6.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    derivative[6] = b * e - a * f;\n    derivative[7]\
    \ = a * e + b * f;\n    derivative[8] = a * d - b * c;\n    derivative[9] = b\
    \ * c + a * d;\n    return derivative;\n}\nint main() {\n    auto candidate =\
    \ derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzq1xz0ap: /tmp/tmpzq1xz0ap.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h);\n    derivatives.push_back(a);\n\
    \    derivatives.push_back(b);\n    derivatives.push_back(c);\n    derivatives.push_back(d);\n\
    \    derivatives.push_back(e);\n    derivatives.push_back(f);\n    derivatives.push_back(g);\n\
    \    derivatives.push_back(h);\n    derivatives.push_back(a);\n    derivatives.push_back(b);\n\
    \    derivatives.push_back(c);\n    derivatives.push_back(d);\n    derivatives.push_back(e);\n\
    \    derivatives.push_back(f);\n    derivatives.push_back(g);\n    derivatives.push_back(h);\n\
    \    derivatives.push_back(a);\n    derivatives.push_back(b);\n    derivatives.push_back(c);\n\
    \    derivatives.push_back(d);\n    derivatives.push_back(e);\n    derivatives.push_back(f);\n\
    \    derivatives.push_back(g);\n    derivatives.push_back(h\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0agg9uj6.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0agg9uj6.cpp:83:28: error: expected \u2018)\u2019 before\
    \ \u2018}\u2019 token\n   83 |     derivatives.push_back(h\n      |          \
    \                ~ ^\n      |                            )\n   84 | }\n      |\
    \ ~                           \n/tmp/tmp0agg9uj6.cpp:84:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   84 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659747887
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ds;\n    long long res = 0;\n    for (long long\
    \ i = 0; i < xs.size(); i++) {\n        res += xs[i] * pow(xs[i], i);\n    }\n\
    \    ds = std::vector<long>({res});\n    for (long long i = 1; i < xs.size();\
    \ i++) {\n        ds[i] = ds[i - 1] + xs[i] * pow(xs[i], i);\n    }\n    return\
    \ ds;\n}\nint main() {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmphqya5yjj: /tmp/tmphqya5yjj.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative(xs.size());\n    long long sum = 0;\n\
    \    for (long i = 0; i < xs.size(); i++) {\n        sum += xs[i] * xs[i];\n \
    \       derivative[i] = sum;\n    }\n    return derivative;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvhdsjdg_.cpp: In function 'int main()':\n/tmp/tmpvhdsjdg_.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvhdsjdg_.cpp:2:\n/tmp/tmpvhdsjdg_.cpp:21:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpvhdsjdg_.cpp:21:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpvhdsjdg_.cpp:21:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpvhdsjdg_.cpp:21:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpvhdsjdg_.cpp:21:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpvhdsjdg_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivative(xs.size());\n\
    \    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    derivative[0] = a;\n    derivative[1]\
    \ = b;\n    derivative[2] = c;\n    derivative[3] = d;\n    derivative[4] = e;\n\
    \    derivative[5] = f;\n    return derivative;\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpd5t65ks4: /tmp/tmpd5t65ks4.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747882
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivatives;\n    long long a = xs[0];\n    long\
    \ long b = xs[1];\n    long long c = xs[2];\n    long long d = xs[3];\n    long\
    \ long e = xs[4];\n    long long f = xs[5];\n    long long g = xs[6];\n    long\
    \ long h = xs[7];\n    long long i = xs[8];\n    long long j = xs[9];\n    long\
    \ long k = xs[10];\n    long long l = xs[11];\n    long long m = xs[12];\n   \
    \ long long n = xs[13];\n    long long o = xs[14];\n    long long p = xs[15];\n\
    \    long long q = xs[16];\n    long long r = xs[17];\n    long long s = xs[18];\n\
    \    long long t = xs[19];\n    long long u = xs[20];\n    long long v = xs[21];\n\
    \    long long w = xs[22];\n    long long x = xs[23];\n    long long y = xs[24];\n\
    \    long long z = xs[25];\n    long long a = xs[26];\n    long long b = xs[27];\n\
    \    long long c = xs[28];\n    long long d = xs[29];\n    long long e = xs[30];\n\
    \    long long f = xs[31];\n    long long g = xs[32];\n    long long h = xs[33];\n\
    \    long long i = xs[34];\n    long long j = xs[35];\n    long long k = xs[36];\n\
    \    long long l = xs[37];\n    long long m = xs[38];\n    long long n = xs[39];\n\
    \    long long o = xs[40];\n    long long p = xs[41];\n    long long q = xs[42];\n\
    \    long long r = xs[43];\n    long long s = xs[44];\n    long long t = xs[45];\n\
    \    long long u = xs[46];\n    long long v = xs[47];\n    long long w = xs[48];\n\
    \    long long x = xs[49];\n    long long y = xs[50];\n    long long z = xs[51];\n\
    \    long long a = xs[52];\n    long long b = xs[53];\n    long long c = xs[54];\n\
    \    long long d = xs[55];\n    long long e = x\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3qertwml.cpp: In function 'std::vector<long int> derivative(std::vector<long\
    \ int>)':\n/tmp/tmp3qertwml.cpp:38:15: error: redeclaration of 'long long int\
    \ a'\n     long long a = xs[26];\n               ^\n/tmp/tmp3qertwml.cpp:12:15:\
    \ error: 'long long int a' previously declared here\n     long long a = xs[0];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:39:15: error: redeclaration of 'long long\
    \ int b'\n     long long b = xs[27];\n               ^\n/tmp/tmp3qertwml.cpp:13:15:\
    \ error: 'long long int b' previously declared here\n     long long b = xs[1];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:40:15: error: redeclaration of 'long long\
    \ int c'\n     long long c = xs[28];\n               ^\n/tmp/tmp3qertwml.cpp:14:15:\
    \ error: 'long long int c' previously declared here\n     long long c = xs[2];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:41:15: error: redeclaration of 'long long\
    \ int d'\n     long long d = xs[29];\n               ^\n/tmp/tmp3qertwml.cpp:15:15:\
    \ error: 'long long int d' previously declared here\n     long long d = xs[3];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:42:15: error: redeclaration of 'long long\
    \ int e'\n     long long e = xs[30];\n               ^\n/tmp/tmp3qertwml.cpp:16:15:\
    \ error: 'long long int e' previously declared here\n     long long e = xs[4];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:43:15: error: redeclaration of 'long long\
    \ int f'\n     long long f = xs[31];\n               ^\n/tmp/tmp3qertwml.cpp:17:15:\
    \ error: 'long long int f' previously declared here\n     long long f = xs[5];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:44:15: error: redeclaration of 'long long\
    \ int g'\n     long long g = xs[32];\n               ^\n/tmp/tmp3qertwml.cpp:18:15:\
    \ error: 'long long int g' previously declared here\n     long long g = xs[6];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:45:15: error: redeclaration of 'long long\
    \ int h'\n     long long h = xs[33];\n               ^\n/tmp/tmp3qertwml.cpp:19:15:\
    \ error: 'long long int h' previously declared here\n     long long h = xs[7];\n\
    \               ^\n/tmp/tmp3qertwml.cpp:46:15: error: redeclaration of 'long long\
    \ int i'\n     "
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> derivatives(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = 1;\n    long long f = 0;\n    long\
    \ long g = 0;\n    long long h = 0;\n    long long i = 0;\n    long long j = 0;\n\
    \    long long k = 0;\n    long long l = 1;\n    long long m = 1;\n    long long\
    \ n = 1;\n    long long o = 1;\n    long long p = 1;\n    long long q = 1;\n \
    \   long long r = 1;\n    long long s = 1;\n    long long t = 1;\n    long long\
    \ u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long x = 1;\n \
    \   long long y = 1;\n    long long z = 1;\n    long long A = 1;\n    long long\
    \ B = 1;\n    long long C = 1;\n    long long D = 1;\n    long long E = 1;\n \
    \   long long F = 1;\n    long long G = 1;\n    long long H = 1;\n    long long\
    \ I = 1;\n    long long J = 1;\n    long long K = 1;\n    long long L = 1;\n \
    \   long long M = 1;\n    long long N = 1;\n    long long O = 1;\n    long long\
    \ P = 1;\n    long long Q = 1;\n    long long R = 1;\n    long long S = 1;\n \
    \   long long T = 1;\n    long long U = 1;\n    long long V = 1;\n    long long\
    \ W = 1;\n    long long X = 1;\n    long long Y = 1;\n    long long Z = 1;\n \
    \   long long A1 = 1;\n    long long B1 = 1;\n    long long C1 = 1;\n    long\
    \ long D1 = 1;\n    long long E1 = 1;\n    long long F1 = 1;\n    long long G1\
    \ = 1;\n    long long H1 = 1;\n    long long I1 = 1;\n    long long J1 = 1;\n\
    \    long long K1 = 1;\n    long long L1 = 1;\n    long long M1 = 1;\n    long\
    \ long N1 = 1;\n    long long O1 = 1;\n    long long P1 = 1;\n    long long Q1\
    \ = 1;\n    long long R1 = 1;\n    long long S1 = 1;\n    long long T1 = 1;\n\
    \    long long U1 = 1;\n    long long V1 = 1;\n    long long W1 = 1;\n    long\
    \ long X1 = 1;\n    long long Y1 = 1;\n    long long Z1 = 1;\n    long long A2\
    \ = 1;\n    long long B2 = 1;\n    long long C2 = 1;\n    \n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp5tlm2659: /tmp/tmp5tlm2659.cpp:98: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747893
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    long long g = xs[6];\n    long long h = xs[7];\n    long long i = xs[8];\n\
    \    long long j = xs[9];\n    long long k = xs[10];\n    long long l = xs[11];\n\
    \    long long m = xs[12];\n    long long n = xs[13];\n    long long o = xs[14];\n\
    \    long long p = xs[15];\n    long long q = xs[16];\n    long long r = xs[17];\n\
    \    long long s = xs[18];\n    long long t = xs[19];\n    long long u = xs[20];\n\
    \    long long v = xs[21];\n    long long w = xs[22];\n    long long x = xs[23];\n\
    \    long long y = xs[24];\n    long long z = xs[25];\n    long long a = xs[26];\n\
    \    long long b = xs[27];\n    long long c = xs[28];\n    long long d = xs[29];\n\
    \    long long e = xs[30];\n    long long f = xs[31];\n    long long g = xs[32];\n\
    \    long long h = xs[33];\n    long long i = xs[34];\n    long long j = xs[35];\n\
    \    long long k = xs[36];\n    long long l = xs[37];\n    long long m = xs[38];\n\
    \    long long n = xs[39];\n    long long o = xs[40];\n    long long p = xs[41];\n\
    \    long long q = xs[42];\n    long long r = xs[43];\n    long long s = xs[44];\n\
    \    long long t = xs[45];\n    long long u = xs[46];\n    long long v = xs[47];\n\
    \    long long w = xs[48];\n    long long x = xs[49];\n    long long y = xs[50];\n\
    \    long long z = xs[51];\n    long long a = xs[52];\n    long long b = xs[53];\n\
    \    long long c = xs[54];\n    long long d = xs[\n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nbhiipn.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1nbhiipn.cpp:39:15: error: redeclaration of \u2018long\
    \ long int a\u2019\n   39 |     long long a = xs[26];\n      |               ^\n\
    /tmp/tmp1nbhiipn.cpp:13:15: note: \u2018long long int a\u2019 previously declared\
    \ here\n   13 |     long long a = xs[0];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:40:15:\
    \ error: redeclaration of \u2018long long int b\u2019\n   40 |     long long b\
    \ = xs[27];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:14:15: note: \u2018\
    long long int b\u2019 previously declared here\n   14 |     long long b = xs[1];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:41:15: error: redeclaration of\
    \ \u2018long long int c\u2019\n   41 |     long long c = xs[28];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:15:15: note: \u2018long long int c\u2019 previously\
    \ declared here\n   15 |     long long c = xs[2];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:42:15:\
    \ error: redeclaration of \u2018long long int d\u2019\n   42 |     long long d\
    \ = xs[29];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:16:15: note: \u2018\
    long long int d\u2019 previously declared here\n   16 |     long long d = xs[3];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:43:15: error: redeclaration of\
    \ \u2018long long int e\u2019\n   43 |     long long e = xs[30];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:17:15: note: \u2018long long int e\u2019 previously\
    \ declared here\n   17 |     long long e = xs[4];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:44:15:\
    \ error: redeclaration of \u2018long long int f\u2019\n   44 |     long long f\
    \ = xs[31];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:18:15: note: \u2018\
    long long int f\u2019 previously declared here\n   18 |     long long f = xs[5];\n\
    \      |               ^\n/tmp/tmp1nbhiipn.cpp:45:15: error: redeclaration of\
    \ \u2018long long int g\u2019\n   45 |     long long g = xs[32];\n      |    \
    \           ^\n/tmp/tmp1nbhiipn.cpp:19:15: note: \u2018long long int g\u2019 previously\
    \ declared here\n   19 |     long long g = xs[6];\n      |               ^\n/tmp/tmp1nbhiipn.cpp:46:15:\
    \ error: redeclaration of \u2018long long int h\u2019\n   46 |     long long h\
    \ = xs[33];\n      |          "
  stdout: ''
  timestamp: 1659747882
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> derivative;\n    derivative.reserve(xs.size());\n\
    \    long long a = xs[0];\n    long long b = xs[1];\n    long long c = xs[2];\n\
    \    long long d = xs[3];\n    long long e = xs[4];\n    long long f = xs[5];\n\
    \    derivative.push_back(a);\n    derivative.push_back(b);\n    derivative.push_back(c);\n\
    \    derivative.push_back(d);\n    derivative.push_back(e);\n    derivative.push_back(f);\n\
    \    return derivative;\n}\nint main() {\n    auto candidate = derivative;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy8qllgbb: /tmp/tmpy8qllgbb.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747887
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size());\n \
    \   long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n\
    \    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n\
    \    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n    long l =\
    \ xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o = xs[14];\n\
    \    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n    long s\
    \ = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n\
    \    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n    long z\
    \ = xs[25];\n    long a = xs[26];\n    long b = xs[27];\n    long c = xs[28];\n\
    \    long d = xs[29];\n    long e = xs[30];\n    long f = xs[31];\n    long g\
    \ = xs[32];\n    long h = xs[33];\n    long i = xs[34];\n    long j = xs[35];\n\
    \    long k = xs[36];\n    long l = xs[37];\n    long m = xs[38];\n    long n\
    \ = xs[39];\n    long o = xs[40];\n    long p = xs[41];\n    long q = xs[42];\n\
    \    long r = xs[43];\n    long s = xs[44];\n    long t = xs[45];\n    long u\
    \ = xs[46];\n    long v = xs[47];\n    long w = xs[48];\n    long x = xs[49];\n\
    \    long y = xs[50];\n    long z = xs[51];\n    long a = xs[52];\n    long b\
    \ = xs[53];\n    long c = xs[54];\n    long d = xs[55];\n    long e = xs[56];\n\
    \    long f = xs[57];\n    long g = xs[58];\n    long h = xs[59];\n    long i\
    \ = xs[60];\n    long j = xs[61];\n    long k = \n}\nint main() {\n    auto candidate\
    \ = derivative;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5qjvgfnv.cpp: In function \u2018std::vector<long int> derivative(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5qjvgfnv.cpp:39:10: error: redeclaration of \u2018long\
    \ int a\u2019\n   39 |     long a = xs[26];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:13:10:\
    \ note: \u2018long int a\u2019 previously declared here\n   13 |     long a =\
    \ xs[0];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:40:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   40 |     long b = xs[27];\n      |          ^\n\
    /tmp/tmp5qjvgfnv.cpp:14:10: note: \u2018long int b\u2019 previously declared here\n\
    \   14 |     long b = xs[1];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:41:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   41 |     long c = xs[28];\n\
    \      |          ^\n/tmp/tmp5qjvgfnv.cpp:15:10: note: \u2018long int c\u2019\
    \ previously declared here\n   15 |     long c = xs[2];\n      |          ^\n\
    /tmp/tmp5qjvgfnv.cpp:42:10: error: redeclaration of \u2018long int d\u2019\n \
    \  42 |     long d = xs[29];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:16:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   16 |     long d =\
    \ xs[3];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:43:10: error: redeclaration\
    \ of \u2018long int e\u2019\n   43 |     long e = xs[30];\n      |          ^\n\
    /tmp/tmp5qjvgfnv.cpp:17:10: note: \u2018long int e\u2019 previously declared here\n\
    \   17 |     long e = xs[4];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:44:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   44 |     long f = xs[31];\n\
    \      |          ^\n/tmp/tmp5qjvgfnv.cpp:18:10: note: \u2018long int f\u2019\
    \ previously declared here\n   18 |     long f = xs[5];\n      |          ^\n\
    /tmp/tmp5qjvgfnv.cpp:45:10: error: redeclaration of \u2018long int g\u2019\n \
    \  45 |     long g = xs[32];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:19:10:\
    \ note: \u2018long int g\u2019 previously declared here\n   19 |     long g =\
    \ xs[6];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:46:10: error: redeclaration\
    \ of \u2018long int h\u2019\n   46 |     long h = xs[33];\n      |          ^\n\
    /tmp/tmp5qjvgfnv.cpp:20:10: note: \u2018long int h\u2019 previously declared here\n\
    \   20 |     long h = xs[7];\n      |          ^\n/tmp/tmp5qjvgfnv.cpp:47:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   47 |     long i = xs[34];\n\
    \     "
  stdout: ''
  timestamp: 1659747893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    assert(xs.size() > 1);\n    std::vector<long> dxs(xs.size() - 1);\n\
    \    for (long i = 1; i < xs.size(); i++) {\n        dxs[i - 1] = (xs[i] - xs[i\
    \ - 1]) / i;\n    }\n    return dxs;\n}\nint main() {\n    auto candidate = derivative;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<long>({(long)2,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp05_qsn95: /tmp/tmp05_qsn95.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,
    (long)12, (long)20}))'' failed.

    '
  stdout: ''
  timestamp: 1659747894

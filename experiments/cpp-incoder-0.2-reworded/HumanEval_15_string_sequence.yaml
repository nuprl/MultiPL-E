name: HumanEval_15_string_sequence
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
  \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
  // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
  \ n) {\n"
tests: "}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
  \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
  \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
completions: ["    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s +=\
    \ std::to_string(i);\n    }\n    return s;", "    std::string s;\n    for(int\
    \ i=0;i<n;i++)\n        s += to_string(i);\n    return s;", "    std::string s;\n\
    \    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n    }\n  \
    \  return s;", "    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;", "    std::string s;\n    for(long i=0;i<n;i++) {\n   \
    \     s += std::to_string(i);\n    }\n    return s;", "    std::string s;\n  \
    \  for(int i=0;i<n;i++)\n        s += std::to_string(i);\n    return s;", "  \
    \  std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;", "    std::string s = \"\";\n    long i = 1;\n    while\
    \ (i <= n) {\n        s += std::to_string(i);\n        ++i;\n    }\n    return\
    \ s;", "    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;", "    std::string s;\n    for(int i=0;i<n;i++)\
    \ {\n        s+=std::to_string(i);\n    }\n    return s;", "    std::string s;\n\
    \    for(int i=0;i<n;++i)\n        s+=std::to_string(i);\n    return s;", "  \
    \  std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;", "    std::string s;\n    for(int i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;", "    std::string s;\n   \
    \ for(long i=0;i<n;i++)\n        s += std::to_string(i);\n    return s;", "  \
    \  std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;", "    std::string s;\n    for(long i=0;i<n;i++)\n     \
    \   s += std::to_string(i);\n    return s;", "    std::string s;\n    for(int\
    \ i = 0; i <= n; i++) {\n        s += std::to_string(i);\n    }\n    return s;",
  "    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;", "    std::string s;\n    for(int i = 0; i <= n; i++) {\n\
    \        s += std::to_string(i);\n    }\n    return s;", "    std::string s;\n\
    \    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n    return s;"]
stop_tokens:
- "\n}"

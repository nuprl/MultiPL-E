name: HumanEval_85_add
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
  \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
  // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
  long add(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
  \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
completions: ["    long sum = 0;\n    for (long i : lst) {\n        if (i % 2 == 0)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    long n = lst.size();\n    long i = 0;\n    long j = 0;\n    while\
    \ (i < n) {\n        if (lst[i] % 2 == 0) {\n            sum += lst[i];\n    \
    \        i += 2;\n        } else {\n            i += 1;\n        }\n    }\n  \
    \  return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "    long ans = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 2 == 0) {\n            ans += lst[i];\n        }\n    }\n\
    \    return ans;", "    long ans = 0;\n    long i = 0;\n    long j = 0;\n    while\
    \ (i < lst.size()) {\n        if (lst[i] % 2 == 0) {\n            ans += lst[i];\n\
    \            i += 1;\n        } else {\n            ans += lst[j];\n         \
    \   j += 1;\n        }\n    }\n    return ans;", "    long ans = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans +=\
    \ lst[i];\n        }\n    }\n    return ans;", "    long sum = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;", "    long ans = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans +=\
    \ lst[i];\n        }\n    }\n    return ans;", "    long sum = 0;\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n        }\n \
    \   }\n    return sum;", "    long sum = 0;\n    for (long i : lst) {\n      \
    \  if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i\
    \ % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "    long ans = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 2 == 0) {\n            ans += lst[i];\n        }\n    }\n    return ans;", " \
    \   long sum = 0;\n    for (long i : lst) {\n        if (i % 2 == 0) {\n     \
    \       sum += i;\n        }\n    }\n    return sum;", "    long sum = 0;\n  \
    \  for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n      \
    \      sum += lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (long i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n\
    \        }\n    }\n    return sum;", "    long ans = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;", "    long ans = 0;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;"]
stop_tokens:
- "\n}"

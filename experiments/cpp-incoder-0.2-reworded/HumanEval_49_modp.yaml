name: HumanEval_49_modp
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be aware\
  \ of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n// (2)\n\
  // >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>> modp((100),\
  \ (101))\n// (1)\nlong modp(long n, long p) {\n"
tests: "}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
  \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
  \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
  \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
  \ (5)) == (3));\n}\n"
completions: ["    long r = 1;\n    long t = n;\n    long m = 1;\n    while (t !=\
    \ 0) {\n        long tmp = t % p;\n        t /= p;\n        r = (r * m) % p;\n\
    \        m = (m * tmp) % p;\n    }\n    return r;", "  assert(p > 0);\n  long\
    \ r = 1;\n  long m = 1;\n  while (m <= p) {\n    if (n % m == 0) {\n      r =\
    \ r * m + (n % m);\n      m = 1;\n    } else {\n      m = m * 2;\n    }\n  }\n\
    \  return r;", "  assert(p > 0);\n  long r = 1;\n  while (p > 1) {\n    if (n\
    \ & 1) {\n      r = (r * p) % p;\n    }\n    n >>= 1;\n    p >>= 1;\n  }\n  return\
    \ r;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n      \
    \      r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return r;", "    long ans = 1;\n    while (n) {\n        if (n % p\
    \ == 0) {\n            ans = (ans * p + n) % p;\n        }\n        n /= p;\n\
    \    }\n    return ans;", "    long ans = 1;\n    while (n) {\n        if (n %\
    \ p == 0) ans = (ans * p + n) % p;\n        n /= p;\n    }\n    return ans;",
  "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n & 1)\n      r = (r\
    \ * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n  return r;", "  assert(p\
    \ > 0);\n  long r = 1;\n  while (n > 0) {\n    r = r * p % n;\n    n /= p;\n \
    \ }\n  return r;", "  assert(p > 0);\n  long res = 1;\n  while (n > p) {\n   \
    \ res *= p;\n    n -= p;\n  }\n  return res + n;", "  assert(p > 0);\n  long r\
    \ = 1;\n  while (n) {\n    if (n & 1) r = r * p;\n    n >>= 1;\n    p *= p;\n\
    \  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n\
    \ & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long\
    \ ans = 1;\n    long t = 1;\n    long r = n;\n    long m = 1;\n    while (m <=\
    \ p) {\n        if (n % m == 0) {\n            ans = ans * t;\n        }\n   \
    \     t *= r;\n        r /= m;\n        m++;\n    }\n    return ans;", "    long\
    \ res = 1;\n    while (n) {\n        if (n&1)\n            res = (res * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n&1) != 0) r += p;\n        n >>= 1;\n\
    \        p *= p;\n    }\n    return r;", "    long r = 1;\n    while (n) {\n \
    \       if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n       \
    \ n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long ans = 1;\n\
    \    long t = 1;\n    long r = 1;\n    long m = 1;\n    while (n > 0) {\n    \
    \    if (n % 2 == 0) {\n            ans = (ans * t) % p;\n        }\n        t\
    \ = ((t * r) % p) % p;\n        n /= 2;\n        r = ((r * r) % p) % p;\n    }\n\
    \    return ans;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    r\
    \ = r * p % n;\n    n /= p;\n  }\n  return r;", "    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return res;", "    long r = 1;\n    long m = 1;\n    while (p > 0) {\n  \
    \      if (p & 1)\n            r = (r * n) % p;\n        m = (m * n) % p;\n  \
    \      p >>= 1;\n    }\n    return (r * m) % p;", "    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long\
    \ res = 1;\n    while (n) {\n        if (n&1) res = (res * p)%p;\n        n >>=\
    \ 1;\n        p = (p * p)%p;\n    }\n    return res;", "  assert(p > 0);\n  long\
    \ r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *=\
    \ p;\n  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n  long m = 1;\n  while\
    \ (n) {\n    if (n & 1) {\n      r = r * p % m;\n    }\n    m <<= 1;\n    n >>=\
    \ 1;\n  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n  for (long i = 1;\
    \ i < p; i++) {\n    r *= n;\n    r %= p;\n  }\n  return r;", "    long r = 1;\n\
    \    while (n) {\n        if ((n & 1) != 0)\n            r = (r * p) % p;\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long ans\
    \ = 1;\n    long t = n;\n    long r = p;\n    while (t > 0) {\n        ans = (ans\
    \ * r) % p;\n        t--;\n    }\n    return ans;", "    long res = 1;\n    while\
    \ (p > 0) {\n        if (p & 1) res = (res * n) % p;\n        n /= p;\n      \
    \  p /= 2;\n    }\n    return res;", "    long r = 1;\n    while (n) {\n     \
    \   if ((n & 1) != 0) {\n            r %= p;\n        }\n        n >>= 1;\n  \
    \      p >>= 1;\n    }\n    return r;", "    long ans = 1;\n    long t = 1;\n\
    \    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ t = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n    long\
    \ m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long t = 1;\n    long m = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long t = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ t = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n    long\
    \ m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long t = 1;\n    long m = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long t = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ t = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n    long\
    \ m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long t = 1;\n    long m = 1;\n    long q = 1;\n\
    \    long r = 1;\n    ", "  assert(p > 0);\n  long r = 1;\n  for (int i = 0; i\
    \ < p; i++) {\n    r *= n;\n  }\n  return r;", "    long res = 1;\n    while (n\
    \ > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;", "  assert(p > 0);\n \
    \ long r = 1;\n  for (long i = 1; i < p; i++) {\n    r = (r * n) % p;\n  }\n \
    \ return r;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n\
    \            r %= p;\n        }\n        n >>= 1;\n        p >>= 1;\n    }\n \
    \   return r;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n\
    \ & 1) {\n      r = (r * p) % p;\n    }\n    n >>= 1;\n    p = (p * p) % p;\n\
    \  }\n  return r;", "    long res = 1;\n    while (n) {\n        if (n&1) res\
    \ = (res*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n    }\n    return res;",
  "    long ans = 1;\n    while (n) {\n        if (n % p) ans = (ans * p) % p;\n \
    \       n /= p;\n    }\n    return ans;", "    long ans = 1;\n    while (n) {\n\
    \        if (n&1) ans = (ans*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n \
    \   }\n    return ans;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n\
    \    if (n & 1)\n      r = (r * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n\
    \  }\n  return r;", "    long res = 1;\n    while (n > 0) {\n        if (n % p\
    \ == 0) {\n            res *= p;\n            n /= p;\n        } else {\n    \
    \        res *= p;\n        }\n    }\n    return res;", "  assert(n >= 0 && p\
    \ >= 0);\n  long ans = 1;\n  while (n > p) {\n    ans = (ans * n) % p;\n    n\
    \ = (n * n) % p;\n  }\n  return ans;", "    long r = 1;\n    while (n) {\n   \
    \     if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n        n\
    \ >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long res = 1;\n\
    \    while (n) {\n        if (n & 1)\n            res = (res * p) % p;\n     \
    \   n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", "    long r =\
    \ 1;\n    while (n) {\n        if ((n & 1) == 1) {\n            r *= p;\n    \
    \    }\n        n >>= 1;\n        p *= p;\n    }\n    return r;", "    long res\
    \ = 1;\n    while (n) {\n        if (n&1) res = (res*p)%p;\n        n >>= 1;\n\
    \        p = (p*p)%p;\n    }\n    return res;", "    long res = 1;\n    long t\
    \ = n;\n    long r = p;\n    long q = 0;\n    while (r != 0) {\n        q = r\
    \ % t;\n        res = (res * t) + q;\n        t = t;\n        r = q;\n    }\n\
    \    return res;", "    long res = 1;\n    long t = n;\n    while (t != 0) {\n\
    \        if (t % p == 0) {\n            res *= p;\n        }\n        t /= p;\n\
    \    }\n    return res;", "    long ans = 1;\n    long t = n;\n    long r = p;\n\
    \    long m = 1;\n    while (t > 0) {\n        m += 1;\n        t /= 2;\n    }\n\
    \    while (m > 0) {\n        ans *= r;\n        r /= 2;\n        m -= 1;\n  \
    \  }\n    return ans;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if\
    \ (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n % p) == 0) {\n            r *= p;\n\
    \            n /= p;\n        }\n        else {\n            n /= p;\n       \
    \ }\n    }\n    return r;", "    long r = 1;\n    while (n) {\n        if ((n\
    \ & 1) != 0) {\n            n >>= 1;\n            r += p;\n        }\n       \
    \ p >>= 1;\n    }\n    return r;", "  assert(p > 0);\n  long r = 1;\n  long m\
    \ = 1;\n  while (m <= p) {\n    if (n % m == 0) {\n      r = r * m + (n % m);\n\
    \      m = 1;\n    } else {\n      m = m * 2 + 1;\n    }\n  }\n  return r;", " \
    \   long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r =\
    \ (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n\
    \    return r;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\
    \ {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "    long ans = 1;\n    while (p) {\n    \
    \    if (p & 1)\n            ans = (ans * n) % p;\n        n /= p;\n        p\
    \ >>= 1;\n    }\n    return ans;", "    long res = 1;\n    while (p > 1) {\n \
    \       if (p & 1) {\n            res = (res*n) % p;\n        }\n        n /=\
    \ p;\n        p /= 2;\n    }\n    return res;", "    long r = 1;\n    while (n)\
    \ {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long ans\
    \ = 1;\n    long t = n;\n    long r = p;\n    long m = 1;\n    while (t != 0)\
    \ {\n        ans = (ans * r) % m;\n        m = (m * r) % p;\n        t = (t *\
    \ r) % p;\n    }\n    return ans;", "    long res = 1;\n    while (p > 0) {\n\
    \        if (p & 1) res = (res * n) % p;\n        n /= p;\n        p /= 2;\n \
    \   }\n    return res;", "    long ans = 1;\n    long q = n;\n    while (p > 1)\
    \ {\n        if (q % 2 == 0) {\n            q = (q / 2);\n            ans = (ans\
    \ * q) % p;\n        } else {\n            q = (q / 2);\n            ans = (ans\
    \ * q + p) % p;\n        }\n    }\n    return ans;", "    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long\
    \ r = 1;\n    while (p > 1) {\n        if (p & 1) r = r * n % p;\n        p >>=\
    \ 1;\n        n /= p;\n    }\n    return r;", "    long r = 1;\n    while (n)\
    \ {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "  long res\
    \ = 1;\n  for (long i = 1; i < p; i++) {\n    res *= n;\n    res %= p;\n  }\n\
    \  return res;", "    long res = 1;\n    while (n) {\n        if (n & 1)\n   \
    \         res = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n \
    \   }\n    return res;", "    long res = 1;\n    while (n) {\n        if (n&1)\
    \ res *= p;\n        n >>= 1;\n        p *= p;\n    }\n    return res;", "   \
    \ long res = 1;\n    while (p > 0) {\n        if (p & 1) res = (res*n) % p;\n\
    \        n /= p;\n        p /= 2;\n    }\n    return res;", "    long r = 1;\n\
    \    while (n) {\n        if ((n & 1) != 0) {\n            r *= p;\n        }\n\
    \        n >>= 1;\n        p *= p;\n    }\n    return r;", "    long r = 1;\n\
    \    while (n) {\n        if ((n & 1) != 0) {\n            n = n >> 1;\n     \
    \       r = (r << 1) + 1;\n        } else {\n            n = n >> 1;\n       \
    \     r = (r << 1) + 2;\n        }\n    }\n    return (r % p);", "  assert(p >\
    \ 0);\n  long r = 1;\n  for (long i = 1; i < p; ++i) {\n    r *= n;\n  }\n  r\
    \ %= p;\n  return r;", "    long ans = 1;\n    long t = n;\n    while (t >= p)\
    \ {\n        ans = (ans * t) % p;\n        t = (t * t) % p;\n    }\n    return\
    \ ans;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n    \
    \        n = n / 2;\n            r = (r * p) % p;\n        }\n        else {\n\
    \            n = (n - 1) / 2;\n            r = (r * p) % p;\n        }\n    }\n\
    \    return r;", "    long res = 1;\n    while (n) {\n        if (n&1)\n     \
    \       res = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n   \
    \ }\n    return res;", "    long ans = 1;\n    long t = n;\n    long r = p;\n\
    \    long m = 1;\n    while (t > 0) {\n        if (t % 2 == 1) {\n           \
    \ ans = (ans * r) % p;\n        }\n        t = t / 2;\n        r = (r * r) % p;\n\
    \    }\n    return ans;", "  assert(p > 0);\n  long q = p / 2;\n  long r = p %\
    \ 2;\n  long ret = 1;\n  while (q > 0) {\n    if (n % q == 0) {\n      ret *=\
    \ q;\n      ret %= p;\n    }\n    q--;\n  }\n  if (r == 1) {\n    ret *= q;\n\
    \    ret %= p;\n  }\n  return ret;", "    long r = 1;\n    while (n) {\n     \
    \   if ((n&1) != 0) {\n            r = (r*p) % p;\n        }\n        n >>= 1;\n\
    \        p = (p*p) % p;\n    }\n    return r;", "    long ans = 1;\n    while\
    \ (n) {\n        if (n % p == 0)\n            ans = (ans * p + n) % p;\n     \
    \   n /= p;\n    }\n    return ans;", "    long r = 1;\n    while (n) {\n    \
    \    if (n&1) r += p;\n        n >>= 1;\n        p *= p;\n    }\n    return r;",
  "    long res = 1;\n    while (n > p) {\n        res *= 2;\n        n -= p;\n  \
    \  }\n    return res + n;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0)\
    \ {\n    if (n % p == 0) {\n      r *= p;\n      n /= p;\n    } else {\n     \
    \ r *= p;\n    }\n  }\n  return r;", "    long ans = 1;\n    while (n > p) {\n\
    \        ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n    return ans;",
  "    long ans = 1;\n    long d = 1;\n    while (p > 0) {\n        if (p & 1) ans\
    \ = (ans * n) % p;\n        n /= p;\n        d *= p;\n        p /= 2;\n    }\n\
    \    return ans % p;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n \
    \   r = r * p % n;\n    n /= p;\n  }\n  return r;", "    long ans = 1;\n    long\
    \ t = 1;\n    long r = 1;\n    while (n) {\n        if (n % p) {\n           \
    \ ans = (ans * t) % p;\n        }\n        n /= p;\n        t *= p;\n        r\
    \ *= p;\n    }\n    return ans;", "    long ans = 1;\n    while (n > p) {\n  \
    \      ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n    return ans;",
  "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r =\
    \ (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n\
    \    return r;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\
    \ {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "    long res = 1;\n    while (p > 1) {\n\
    \        if (p & 1) res = (res*n)%p;\n        n /= p;\n        p /= 2;\n    }\n\
    \    return res;", "    long res = 1;\n    long t = n;\n    long r = p;\n    while\
    \ (t != 0) {\n        if (t & 1) {\n            res = (res * r) % p;\n       \
    \ }\n        t = t >> 1;\n        r = (r * r) % p;\n    }\n    return res;", " \
    \   long res = 1;\n    long t = n;\n    while (t != 0) {\n        if (t % p ==\
    \ 0) {\n            res *= p;\n        }\n        t /= p;\n    }\n    return res;",
  "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n % p == 0) {\n   \
    \   r *= p;\n      n /= p;\n    } else {\n      r *= p;\n    }\n  }\n  return\
    \ r;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n      \
    \      r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return r;", "    long ans = 1;\n    while (n) {\n        if (n&1)\
    \ ans = (ans*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n    }\n    return\
    \ ans;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n   \
    \   r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "  assert(p > 0);\n\
    \  long r = 1;\n  for (long i = 1; i < p; i++) {\n    r = r * n % p;\n  }\n  return\
    \ r;", "  assert(p > 0);\n  long res = 1;\n  while (n) {\n    if (n & 1)\n   \
    \   res *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return res;", "  assert(p > 0);\n\
    \  long r = 1;\n  while (n > 0) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n\
    \    p *= p;\n  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n  for (long\
    \ i = 1; i < p; i++) {\n    r *= n;\n  }\n  r %= p;\n  return r;", "  assert(p\
    \ > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1) r = r * p;\n    n >>= 1;\n\
    \    p *= p;\n  }\n  return r;", "    long r = 1;\n    while (n) {\n        if\
    \ ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return r;", "    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long\
    \ ans = 1;\n    long t = 1;\n    long r = n;\n    long m = 1;\n    while (p >\
    \ 0) {\n        if (p & 1) {\n            ans = (ans * r) % p;\n        }\n  \
    \      t *= r;\n        r /= p;\n        m <<= 1;\n        p >>= 1;\n    }\n \
    \   ans = (ans * t) % m;\n    return ans;", "    long ans = 1;\n    long t = 1;\n\
    \    long r = n;\n    long m = 1;\n    while (r != 0) {\n        long q = r %\
    \ p;\n        ans = (ans * t) % p;\n        t = (t * q) % p;\n        r = (r *\
    \ m) % p;\n        m = (m * q) % p;\n    }\n    return ans;", "  long res = 1;\n\
    \  while (n != 0) {\n    if (n & 1)\n      res = (res * p) % p;\n    n >>= 1;\n\
    \    p = (p * p) % p;\n  }\n  return res;", "    long res = 1;\n    while (p >\
    \ 0) {\n        if (n & p)\n            res *= p;\n        n /= p;\n        p--;\n\
    \    }\n    return res;", "    long res = 1;\n    long t = n;\n    while (t !=\
    \ 0) {\n        if (t % p == 0) {\n            res *= p;\n        }\n        t\
    \ /= p;\n    }\n    return res;", "  long res = 1;\n  while (n != 0) {\n    if\
    \ (n & 1)\n      res = (res * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n\
    \  return res;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\
    \ {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "    long ans = 1;\n    while (n > p) {\n\
    \        ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n    return ans;",
  "    long res = 1;\n    while (p > 1) {\n        if (p & 1) res = (res * n) % p;\n\
    \        n /= p;\n        p /= 2;\n    }\n    return res;", "  assert(p > 0);\n\
    \  long r = 1;\n  while (n > 0) {\n    if (n & 1)\n      r = r * p;\n    n >>=\
    \ 1;\n    p = p * p;\n  }\n  return r;", "    long r = 1;\n    while (n) {\n \
    \       if ((n % p) == 0) {\n            r <<= 1;\n            r |= 1;\n     \
    \       n /= p;\n        } else {\n            r <<= 1;\n        }\n    }\n  \
    \  return r;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n\
    \            n = n / 2;\n            r = (r * p) % p;\n        }\n        p =\
    \ (p * p) % p;\n        n = (n * 2) % p;\n    }\n    return r;", "    long r =\
    \ 1;\n    while (n) {\n        if (n % p == 0) {\n            r <<= 1;\n     \
    \       r |= 1;\n            n /= p;\n        } else {\n            r <<= 1;\n\
    \        }\n    }\n    return r;", "  assert(p > 0);\n  long r = 1;\n  for (long\
    \ i = 1; i < p; i++) {\n    r *= n;\n  }\n  return r % p;", "    long res = 1;\n\
    \    while (p > 0) {\n        if (p & 1) res = (res*n) % p;\n        n /= p;\n\
    \        p /= 2;\n    }\n    return res;", "    long res = 1;\n    while (p >\
    \ 1) {\n        if (p & 1) res = (res * n) % p;\n        n /= p;\n        p /=\
    \ 2;\n    }\n    return res;", "    long ans = 1;\n    long t = 1;\n    long r\
    \ = n;\n    long m = 1;\n    while (m <= p) {\n        if (n % m == 0) {\n   \
    \         ans = (ans * t) % p;\n        }\n        t *= r;\n        m += 1;\n\
    \    }\n    return ans;", "    long r = 1;\n    while (n) {\n        if ((n &\
    \ 1) != 0)\n            r = (r * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return r;", "    long r = 1;\n    while (n) {\n        if (n\
    \ % p == 0) return r;\n        r <<= 1;\n        n >>= 1;\n    }\n    return r;",
  "  assert(p > 0);\n  long r = 1;\n  long m = 1;\n  while (n) {\n    if (n & 1)\n\
    \      r = r * p % m;\n    m = m * p % m;\n    n >>= 1;\n  }\n  return r;", " \
    \   long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            n =\
    \ n / 2;\n            r = (r * p) % p;\n        }\n        else {\n          \
    \  n = (n - 1) / 2;\n            r = (r * p) % p;\n        }\n    }\n    return\
    \ r;", "    long res = 1;\n    while (p > 0) {\n        if (n & p)\n         \
    \   res++;\n        n >>= 1;\n        p--;\n    }\n    return res;", "  assert(p\
    \ > 0);\n  long r = 1;\n  for (long i = 1; i < p; ++i) {\n    r *= n;\n    r %=\
    \ p;\n  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n   \
    \ if (n & 1)\n      r += p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", " \
    \   long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r =\
    \ (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n\
    \    return r;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n\
    \ & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r *= p;\n\
    \        }\n        n >>= 1;\n        p *= p;\n    }\n    return r;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            n = n >> 1;\n\
    \            r = (r * p) % p;\n        }\n        else {\n            n = n >>\
    \ 1;\n            p = (p * p) % p;\n        }\n    }\n    return r;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p)\
    \ % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    long res = 1;\n    while (n) {\n        if (n&1) res = (res * p) %\
    \ p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", " \
    \ assert(p > 0);\n  long r = 1;\n  long m = 1;\n  while (n) {\n    if (n & 1)\n\
    \      r = r * p % m;\n    m = m * p % m;\n    n >>= 1;\n  }\n  return r;", " \
    \   long res = 1;\n    while (p > 1) {\n        if (p & 1) res = (res * n) % p;\n\
    \        n /= p;\n        p /= 2;\n    }\n    return res;", "    long ans = 1;\n\
    \    while (n) {\n        if (n % p == 0) {\n            ans = (ans * p) % p;\n\
    \        }\n        n /= p;\n    }\n    return ans;", "    long ans = 1;\n   \
    \ while (n) {\n        if (n % p == 0) {\n            ans = (ans * p + n) % p;\n\
    \        }\n        n /= p;\n    }\n    return ans;", "    long r = 1;\n    while\
    \ (n) {\n        if ((n&1) != 0) r *= p;\n        n >>= 1;\n        p *= p;\n\
    \    }\n    return r;", "  long ans = 1;\n  while (n) {\n    if (n % p) ans =\
    \ (ans * p) % p;\n    n /= p;\n  }\n  return ans;", "  assert(n >= 0 && p >= 0);\n\
    \  long r = 1;\n  while (n > 0) {\n    r = r * p % n;\n    n /= p;\n  }\n  return\
    \ r;", "  assert(n >= 0);\n  assert(p >= 0);\n  long r = 1;\n  while (n) {\n \
    \   if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", " \
    \   long r = 1;\n    long m = 1;\n    while (n) {\n        if (n&1) r += p;\n\
    \        n >>= 1;\n        p *= p;\n    }\n    return (r * p) % p;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n % p) == 0) return r;\n        r <<=\
    \ 1;\n        n >>= 1;\n    }\n    return r;", "    long res = 1;\n    while (n)\
    \ {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;", "    long res = 1;\n    while\
    \ (n != 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n\
    \ >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", "  assert(p > 0);\n\
    \  long r = 1;\n  while (p != 0) {\n    if (p & 1) r = r * n;\n    n >>= 1;\n\
    \    p >>= 1;\n  }\n  return r;", "  long ans = 1;\n  while (n) {\n    ans = (ans\
    \ * n) % p;\n    n = (n * n) % p;\n  }\n  return ans;", "    long res = 1;\n \
    \   while (n) {\n        if (n&1)\n            res = (res * p) % p;\n        n\
    \ >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", "    long r = 1;\n\
    \    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n\
    \        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "    long res = 1;\n    while (n) {\n        if (n & 1)\n            res = (res\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;",
  "    long res = 1;\n    while (n) {\n        if (n & 1)\n            res = (res\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;",
  "  assert(p > 0);\n  long q = p / 2;\n  long r = p % 2;\n  long ans = 1;\n  while\
    \ (q > 0) {\n    long t = ans;\n    ans = ans * n + (r * ans % p);\n    ans =\
    \ ans % p;\n    q = q / 2;\n    r = q % 2;\n  }\n  return ans;", "    long res\
    \ = 1;\n    while (p > 1) {\n        if (p & 1) {\n            res = (res * n)\
    \ % p;\n        }\n        n = ((n * n) % p) % p;\n        p >>= 1;\n    }\n \
    \   return res;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\
    \ {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "    long res = 1;\n    while (n) {\n    \
    \    if (n%p == 0) return res;\n        res *= p;\n        n /= p;\n    }\n  \
    \  return res;", "  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n\
    \    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long r = 1;\n    while (n)\
    \ {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "  assert(p\
    \ > 0);\n  long r = 1;\n  while (n > 0) {\n    r = r * p % n;\n    n /= p;\n \
    \ }\n  return r;", "    long res = 1;\n    while (n) {\n        if (n & 1)\n \
    \           res = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return res;", "    long res = 1;\n    while (n > 0) {\n        if\
    \ (n & 1) {\n            res = (res * p) % p;\n        }\n        n >>= 1;\n \
    \       p = (p * p) % p;\n    }\n    return res;", "  long res = 1;\n  while (n\
    \ > 0) {\n    if (n & 1) res = (res * p) % p;\n    n >>= 1;\n    p = (p * p) %\
    \ p;\n  }\n  return res;", "    long r = 1;\n    while (n) {\n        if ((n &\
    \ 1) != 0) {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n    \
    \    p = (p * p) % p;\n    }\n    return r;", "    long ans = 1;\n    while (p\
    \ != 0) {\n        if (p & 1) {\n            ans = (ans * n) % p;\n        }\n\
    \        n = ((n * n) % p) % p;\n        p >>= 1;\n    }\n    return ans;", " \
    \   long r = 1;\n    long m = 1;\n    long t;\n    while (n) {\n        t = m\
    \ % p;\n        m /= p;\n        r ^= t;\n        n -= t;\n    }\n    return r;",
  "  assert(p > 0);\n  long r = 1;\n  for (long i = 1; i < p; i++) {\n    r = (r *\
    \ n) % p;\n  }\n  return r;", "    long res = 1;\n    while (n) {\n        if\
    \ (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return res;", "  assert(p > 0);\n  long r = 1;\n  while\
    \ (n > 0) {\n    r = r * p % n;\n    n /= p;\n  }\n  return r;", "    long r =\
    \ 1;\n    long m = 1;\n    while (p > 0) {\n        if (p & 1)\n            r\
    \ = (r * n) % p;\n        m = (m * n) % p;\n        p >>= 1;\n    }\n    return\
    \ (r * m) % p;", "    long res = 1;\n    while (n) {\n        if (n&1) res = (res*p)%p;\n\
    \        n >>= 1;\n        p = (p*p)%p;\n    }\n    return res;", "    long r\
    \ = 1;\n    while (n) {\n        if ((n % p) == 0) return r;\n        r <<= 1;\n\
    \        n >>= 1;\n    }\n    return r;", "  assert(n >= 0);\n  assert(p >= 0);\n\
    \  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n \
    \   p *= p;\n  }\n  return r;", "    long r = 1;\n    while (n) {\n        if\
    \ (n & 1)\n            r = (r * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return r;", "    long ans = 1;\n    long t = 1;\n    long r\
    \ = n;\n    while (r != 0) {\n        long q = r % p;\n        ans = (ans * t)\
    \ % p;\n        t = t;\n        r = q;\n    }\n    return ans;", "    long r =\
    \ 1;\n    while (n) {\n        if ((n&1) != 0) r = (r*p) % p;\n        n >>= 1;\n\
    \        p = (p*p) % p;\n    }\n    return r;", "    long res = 1;\n    while\
    \ (p > 0) {\n        if (n & p)\n            res = (res * p) % p;\n        p /=\
    \ 2;\n    }\n    return res;", "  assert(p > 0);\n  long res = 1;\n  while (n)\
    \ {\n    if (n & 1)\n      res *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ res;", "    long r = 1;\n    while (n) {\n        if ((n&1) != 0) r *= p;\n\
    \        n >>= 1;\n        p *= p;\n    }\n    return r;", "    long r = 1;\n\
    \    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n\
    \        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "    long res = 1;\n    long t = n;\n    while (t != 0) {\n        if (t % p ==\
    \ 0) {\n            res *= p;\n        }\n        t /= p;\n    }\n    return res;",
  "  long r = 1;\n  while (p) {\n    if (p & 1) r *= n;\n    n /= p;\n    p >>= 1;\n\
    \  }\n  return r;", "  assert(p > 0);\n  long res = 1;\n  while (n > 0) {\n  \
    \  if (n & 1)\n      res = (res * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n\
    \  }\n  return res;", "    long r = 1;\n    while (n) {\n        if (n&1) r +=\
    \ p;\n        n >>= 1;\n        p *= p;\n    }\n    return r;", "  assert(p >\
    \ 0);\n  long r = 1;\n  for (long i = 1; i < p; i++) {\n    r *= n;\n  }\n  r\
    \ %= p;\n  return r;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if\
    \ (n & 1)\n      r = (r * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n \
    \ return r;", "  assert(p > 0);\n  long r = 1;\n  for (long i = 1; i < p; i++)\
    \ {\n    r = (r * n) % p;\n  }\n  return r;", "    long r = 1;\n    while (n)\
    \ {\n        if (n & 1)\n            r = (r * p) % p;\n        n >>= 1;\n    \
    \    p = (p * p) % p;\n    }\n    return r;", "    long r = 1;\n    while (n)\
    \ {\n        if ((n & 1) != 0) {\n            n = n / 2;\n            r = (r *\
    \ p) % p;\n        }\n        else {\n            n = (n - 1) / 2;\n         \
    \   r = (r * p) % p;\n        }\n    }\n    return r;", "    long res = 1;\n \
    \   while (n) {\n        if (n&1) res = (res * p) % p;\n        n >>= 1;\n   \
    \     p = (p * p) % p;\n    }\n    return res;", "  assert(p > 0);\n  long q =\
    \ p / 2;\n  long r = p % 2;\n  long ans = 1;\n  while (n > 0) {\n    if (n % 2\
    \ == 1) {\n      ans = (ans * q) % p;\n    }\n    n /= 2;\n    q = (q * q) % p;\n\
    \  }\n  if (r == 1) {\n    ans = (ans * q) % p;\n  }\n  return ans;", "    long\
    \ ans = 1;\n    long t = n;\n    long r = p;\n    long m = 1;\n    while (t >\
    \ 0) {\n        ans = (ans * r) % p;\n        t = (t / r) % p;\n        m = (m\
    \ * r) % p;\n    }\n    return ans;", "  assert(p > 0);\n  long q = p / 2;\n \
    \ long r = p % 2;\n  long t = q * q;\n  long ans = 1;\n  while (r != 0) {\n  \
    \  long tmp = ans;\n    ans = (ans * (n - t)) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n\
    \    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n\
    \    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n\
    \    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n\
    \    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n\
    \    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n\
    \    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n\
    \    ans = (ans * q) % q;\n    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n\
    \    ans = (ans * r) % q;\n    ans = (ans * q) % q;\n    ans = (", "    long res\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long A = 1;\n    long B = 1;\n    long C = 1;\n \
    \   long D = 1;\n    long E = 1;\n    long F = 1;\n    long G = 1;\n    long H\
    \ = 1;\n    long I = 1;\n    long J = 1;\n    long K = 1;\n    long L = 1;\n \
    \   long M = 1;\n    long N = 1;\n    long O = 1;\n    long P = 1;\n    long Q\
    \ = 1;\n    long R = 1;\n    long S = 1;\n    long T = 1;\n    long U = 1;\n \
    \   long V = 1;\n    long W = 1;\n    long X = 1;\n    long Y = 1;\n    long Z\
    \ = 1;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n \
    \   long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i\
    \ = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n \
    \   long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r\
    \ = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n \
    \   long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long A\
    \ = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n \
    \   long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long J\
    \ = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n \
    \   long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S\
    \ = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n \
    \   long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a1 = 0;\n    long\
    \ b1 = 0;\n    long c1 = 0;\n    long d1 = 0;\n    long e1 = 0;\n    long f1 =\
    \ 0;\n    long g1 = 0;\n    long h1 = 0;\n    long i1 = 0;\n    long j1 = 0;\n\
    \    long k1 = 0;\n    long l1 = 0;\n    long m1 = 0;\n    long n1 = 0;\n", " \
    \   long res = 1;\n    while (p > 1) {\n        if (p & 1) res = (res * n) % p;\n\
    \        n /= p;\n        p /= 2;\n    }\n    return res;", "  assert(p > 0);\n\
    \  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n \
    \   p *= p;\n  }\n  return r;", "  assert(p > 0);\n  long q = p / 2;\n  long r\
    \ = p % 2;\n  long ans = 1;\n  while (q > 0) {\n    if (n % q == 0) {\n      ans\
    \ = (ans * q + r) % p;\n    }\n    q--;\n    r = (r * 2 + 1) % p;\n  }\n  return\
    \ ans;", "  assert(p > 0);\n  long q = p / 2;\n  long r = p % 2;\n  long ans =\
    \ 1;\n  while (q > 0) {\n    long t = ans;\n    ans = ans * n + (r * ans % p);\n\
    \    r = t % p;\n    q = q / 2;\n  }\n  return ans;", "  assert(p > 0);\n  long\
    \ r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *=\
    \ p;\n  }\n  return r;", "    long ans = 1;\n    while (n) {\n        ans = (ans\
    \ * p) % p;\n        n /= p;\n    }\n    return ans;", "  long r = 1;\n  while\
    \ (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ r;", "    long r = 1;\n    while (n) {\n        if ((n&1) != 0) r += p;\n  \
    \      n >>= 1;\n        p *= p;\n    }\n    return r;", "  long r = 1;\n  while\
    \ (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ r;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n & 1)\n \
    \     r = (r * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n  return r;",
  "    long res = 1;\n    while (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n\
    \        p *= p;\n    }\n    return res;"]
stop_tokens:
- "\n}"

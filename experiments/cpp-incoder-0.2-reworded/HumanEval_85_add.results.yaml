language: cpp
name: HumanEval_85_add
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    long i = 0;\n    long j = 0;\n    while (i < n) {\n        if (lst[i] % 2\
    \ == 0) {\n            sum += lst[i];\n            i += 2;\n        } else {\n\
    \            i += 1;\n        }\n    }\n    return sum;\n}\nint main() {\n   \
    \ auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88})))\
    \ == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6,\
    \ (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpmwdnalgd: /tmp/tmpmwdnalgd.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    while (i < lst.size()) {\n        if (lst[i] % 2 == 0) {\n     \
    \       ans += lst[i];\n            i += 1;\n        } else {\n            ans\
    \ += lst[j];\n            j += 1;\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_acfax6o: /tmp/tmp_acfax6o.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_4ra0qe_: /tmp/tmp_4ra0qe_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (int i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwooroxm7: /tmp/tmpwooroxm7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 1) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmptcw7l7lq: /tmp/tmptcw7l7lq.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 1) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpryrt9uw0: /tmp/tmpryrt9uw0.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_4ra0qe_: /tmp/tmp_4ra0qe_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 1) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpnn3557jw: /tmp/tmpnn3557jw.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)5, (long)6, (long)7, (long)2, (long)122}))) == (122)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long n = lst.size();\n\
    \    long i = 0;\n    long j = 0;\n    while (i < n) {\n        if (lst[i] % 2\
    \ == 0) {\n            ans += lst[i];\n            i += 2;\n        } else {\n\
    \            i += 1;\n        }\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88})))\
    \ == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6,\
    \ (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpw_2fg_8f: /tmp/tmpw_2fg_8f.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long n = lst.size();\n\
    \    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            ans\
    \ += lst[i];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmps_6x2r1d: /tmp/tmps_6x2r1d.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (int i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwooroxm7: /tmp/tmpwooroxm7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long even = 0;\n   \
    \ for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n       \
    \     sum += lst[i];\n        } else {\n            even += lst[i];\n        }\n\
    \    }\n    return sum + even;\n}\nint main() {\n    auto candidate = add;\n \
    \   assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n   \
    \ assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpa4q58trz: /tmp/tmpa4q58trz.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_4ra0qe_: /tmp/tmp_4ra0qe_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 1) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmptcw7l7lq: /tmp/tmptcw7l7lq.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for(long i : lst) {\n\
    \        if(i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpexo0cixy: /tmp/tmpexo0cixy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_4ra0qe_: /tmp/tmp_4ra0qe_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long sum = 0;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n           \
    \ sum += lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 2 == 1) {\n            ans += sum;\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpbzjazo3g: /tmp/tmpbzjazo3g.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 1) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmptcw7l7lq: /tmp/tmptcw7l7lq.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    while (i < lst.size()) {\n        if (lst[i] % 2 == 0) {\n     \
    \       ans += lst[i];\n            i += 1;\n        } else {\n            while\
    \ (j < lst.size() && lst[j] % 2 == 0) {\n                ans += lst[j];\n    \
    \            j += 1;\n            }\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_3dm3wg2: /tmp/tmp_3dm3wg2.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long sum = 0;\n    for\
    \ (long i : lst) {\n        sum += i;\n    }\n    for (long i : lst) {\n     \
    \   if (i % 2 == 0) {\n            ans += sum;\n        }\n        sum += i;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpnauxuqmd: /tmp/tmpnauxuqmd.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long n = lst.size();\n\
    \    long i = 0;\n    while (i < n) {\n        if (lst[i] % 2 == 0) {\n      \
    \      ans += lst[i];\n        }\n        i += 2;\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpz658n39u: /tmp/tmpz658n39u.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 1) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpryrt9uw0: /tmp/tmpryrt9uw0.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long size = lst.size();\n\
    \    for (long i = 0; i < size; i++) {\n        if (i % 2 == 0) {\n          \
    \  sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88})))\
    \ == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6,\
    \ (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmphrwzrf8x: /tmp/tmphrwzrf8x.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (int i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwooroxm7: /tmp/tmpwooroxm7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 1) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpryrt9uw0: /tmp/tmpryrt9uw0.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 1) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpnn3557jw: /tmp/tmpnn3557jw.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)5, (long)6, (long)7, (long)2, (long)122}))) == (122)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 1) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpnn3557jw: /tmp/tmpnn3557jw.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)5, (long)6, (long)7, (long)2, (long)122}))) == (122)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    long n = lst.size();\n\
    \    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = add;\n    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7,\
    \ (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp_4ra0qe_: /tmp/tmp_4ra0qe_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    long sum = 0;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n           \
    \ sum += lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 2 == 1) {\n            ans += sum;\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpbzjazo3g: /tmp/tmpbzjazo3g.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            ans += lst[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5dr6nww: /tmp/tmpx5dr6nww.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long ans = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpf67at0qy: /tmp/tmpf67at0qy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
    \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcz2e26g9: /tmp/tmpcz2e26g9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
    \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
    // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
    long add(std::vector<long> lst) {\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (i % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = add;\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)88}))) == (88));\n  \
    \  assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)2,\
    \ (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5g3bdqm7: /tmp/tmp5g3bdqm7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)4,
    (long)88}))) == (88)'' failed.

    '
  stdout: ''
  timestamp: 1660132507

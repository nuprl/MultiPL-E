language: cpp
name: HumanEval_16_count_distinct_characters
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt89zj5f_.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpt89zj5f_.cpp:11:18: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n   11 |         count += string::npos;\n      |            \
    \      ^~~~~~\n"
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ ? 26 : (c >= 'a' && c <= 'z') ? 26 : (c >= '0' && c <= '9') ? 10 : 0;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp5p6cq8j8: /tmp/tmp5p6cq8j8.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == c) ? 1 : 0;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp2dakj77w: /tmp/tmp2dakj77w.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3q70oqel: /tmp/tmp3q70oqel.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3q70oqel: /tmp/tmp3q70oqel.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3q70oqel: /tmp/tmp3q70oqel.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpykkss7l0: /tmp/tmpykkss7l0.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt89zj5f_.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpt89zj5f_.cpp:11:18: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n   11 |         count += string::npos;\n      |            \
    \      ^~~~~~\n"
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n            case '+':\n            case '-':\n\
    \            case '_':\n            case '/':\n            case '=':\n       \
    \     case '!':\n            case '@':\n            case '#':\n            case\
    \ '$':\n            case '%':\n            case '^':\n            case '&':\n\
    \            case '*':\n            case '(':\n            case ')':\n       \
    \     case '[':\n            case ']':\n            case '{':\n            case\
    \ '}':\n            case '|':\n            case '\\\\':\n            case '\"\
    ':\n            case '<':\n            case '>':\n            case '?':\n    \
    \        case '/':\n            case '\\\\':\n            case '|':\n        \
    \    case '`':\n            case '~':\n            case '`':\n            case\
    \ '{':\n            case '}':\n            case '[':\n            case ']':\n\
    \            case '(':\n            case ')':\n            case '<':\n       \
    \     case '>':\n            case '?':\n            case '/':\n            case\
    \ '\\\\':\n            case '|':\n            case '`':\n            case '~':\n\
    \            case '`':\n            case '{':\n            case '}':\n       \
    \     case '[':\n            case ']':\n            case '(':\n            case\
    \ ')':\n            case '<':\n            case '>':\n            case '?':\n\
    \            case '/':\n            case '\\\\':\n            case '|':\n    \
    \        case '`':\n            case '~':\n            case '`':\n           \
    \ case '{':\n            case '}':\n            case '[':\n            case \n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe9jffdt6.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpe9jffdt6.cpp:99:13: error: duplicate case value\n   99 |          \
    \   case '/':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:77:13: note: previously\
    \ used here\n   77 |             case '/':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:100:13:\
    \ error: duplicate case value\n  100 |             case '\\\\':\n      |     \
    \        ^~~~\n/tmp/tmpe9jffdt6.cpp:94:13: note: previously used here\n   94 |\
    \             case '\\\\':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:101:13:\
    \ error: duplicate case value\n  101 |             case '|':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:93:13: note: previously used here\n   93 |  \
    \           case '|':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:104:13:\
    \ error: duplicate case value\n  104 |             case '`':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:102:13: note: previously used here\n  102 | \
    \            case '`':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:105:13:\
    \ error: duplicate case value\n  105 |             case '{':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:91:13: note: previously used here\n   91 |  \
    \           case '{':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:106:13:\
    \ error: duplicate case value\n  106 |             case '}':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:92:13: note: previously used here\n   92 |  \
    \           case '}':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:107:13:\
    \ error: duplicate case value\n  107 |             case '[':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:89:13: note: previously used here\n   89 |  \
    \           case '[':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:108:13:\
    \ error: duplicate case value\n  108 |             case ']':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:90:13: note: previously used here\n   90 |  \
    \           case ']':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:109:13:\
    \ error: duplicate case value\n  109 |             case '(':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:87:13: note: previously used here\n   87 |  \
    \     "
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == 'a' || c == 'A' ||\
    \ c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c ==\
    \ 'u' || c == 'U') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpa2ps9d4t: /tmp/tmpa2ps9d4t.cpp:20: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'a' && c <= 'z')\
    \ + (c >= 'A' && c <= 'Z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3u0ydw2t: /tmp/tmp3u0ydw2t.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                count = 0;\n                break;\n  \
    \      }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6yxmo_nh: /tmp/tmp6yxmo_nh.cpp:77: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n            case '+':\n            case '-':\n\
    \            case '/':\n            case '*':\n            case '=':\n       \
    \     case '?':\n            case '!':\n            case '<':\n            case\
    \ '>':\n            case '(':\n            case ')':\n            case '[':\n\
    \            case ']':\n            case '{':\n            case '}':\n       \
    \     case '|':\n            case '&':\n            case '%':\n            case\
    \ '$':\n            case '@':\n            case '#':\n            case '!':\n\
    \            case '=':\n            case '<':\n            case '>':\n       \
    \     case '(':\n            case ')':\n            case '[':\n            case\
    \ ']':\n            case '{':\n            case '}':\n            case '|':\n\
    \            case '&':\n            case '%':\n            case '$':\n       \
    \     case '@':\n            case '#':\n            case '!':\n            case\
    \ '=':\n            case '<':\n            case '>':\n            case '(':\n\
    \            case ')':\n            case '[':\n            case ']':\n       \
    \     case '{':\n            case '}':\n            case '|':\n            case\
    \ '&':\n            case '%':\n            case '$':\n            case '@':\n\
    \            case '#':\n            case '!':\n            case '=':\n       \
    \     case '<':\n            case '>':\n            case '(':\n            case\
    \ ')':\n            case '[':\n            case ']':\n            case '{':\n\
    \            case '}':\n            case '|':\n            case '&\n}\nint main()\
    \ {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpweqc_f5_.cpp:138:18: warning: missing terminating ' character\n\
    \  138 |             case '&\n      |                  ^\n/tmp/tmpweqc_f5_.cpp:138:18:\
    \ error: missing terminating ' character\n  138 |             case '&\n      |\
    \                  ^~\n/tmp/tmpweqc_f5_.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpweqc_f5_.cpp:95:13: error: duplicate case value\n   95 |          \
    \   case '!':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:80:13: note: previously\
    \ used here\n   80 |             case '!':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:96:13:\
    \ error: duplicate case value\n   96 |             case '=':\n      |        \
    \     ^~~~\n/tmp/tmpweqc_f5_.cpp:78:13: note: previously used here\n   78 |  \
    \           case '=':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:97:13: error:\
    \ duplicate case value\n   97 |             case '<':\n      |             ^~~~\n\
    /tmp/tmpweqc_f5_.cpp:81:13: note: previously used here\n   81 |             case\
    \ '<':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:98:13: error: duplicate\
    \ case value\n   98 |             case '>':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:82:13:\
    \ note: previously used here\n   82 |             case '>':\n      |         \
    \    ^~~~\n/tmp/tmpweqc_f5_.cpp:99:13: error: duplicate case value\n   99 |  \
    \           case '(':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:83:13: note:\
    \ previously used here\n   83 |             case '(':\n      |             ^~~~\n\
    /tmp/tmpweqc_f5_.cpp:100:13: error: duplicate case value\n  100 |            \
    \ case ')':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:84:13: note: previously\
    \ used here\n   84 |             case ')':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:101:13:\
    \ error: duplicate case value\n  101 |             case '[':\n      |        \
    \     ^~~~\n/tmp/tmpweqc_f5_.cpp:85:13: note: previously used here\n   85 |  \
    \           case '[':\n      |             ^~~~\n/tmp/tmpweqc_f5_.cpp:102:13:\
    \ error: duplicate case value\n  102 |             case ']':\n      |        \
    \     ^~~~\n/tmp/tmpweqc_f5_.cpp:86:13: note: previously used"
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == 'a' || c ==\
    \ 'A' || c == 'b' || c == 'B' || c == 'c' || c == 'C' || c == 'd' || c == 'D'\
    \ || c == 'e' || c == 'E' || c == 'f' || c == 'F' || c == 'g' || c == 'G' || c\
    \ == 'h' || c == 'H' || c == 'i' || c == 'I' || c == 'j' || c == 'J' || c == 'k'\
    \ || c == 'K' || c == 'l' || c == 'L' || c == 'm' || c == 'M' || c == 'n' || c\
    \ == 'N' || c == 'o' || c == 'O' || c == 'p' || c == 'P' || c == 'q' || c == 'Q'\
    \ || c == 'r' || c == 'R' || c == 's' || c == 'S' || c == 't' || c == 'T' || c\
    \ == 'u' || c == 'U' || c == 'v' || c == 'V' || c == 'w' || c == 'W' || c == 'x'\
    \ || c == 'X' || c == 'y' || c == 'Y' || c == 'z' || c == 'Z');\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpa5pg_uzm: /tmp/tmpa5pg_uzm.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpv3evdzu4: /tmp/tmpv3evdzu4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == 'a' || c ==\
    \ 'A' || c == 'b' || c == 'B' || c == 'c' || c == 'C' || c == 'd' || c == 'D'\
    \ || c == 'e' || c == 'E' || c == 'f' || c == 'F' || c == 'g' || c == 'G' || c\
    \ == 'h' || c == 'H' || c == 'i' || c == 'I' || c == 'j' || c == 'J' || c == 'k'\
    \ || c == 'K' || c == 'l' || c == 'L' || c == 'm' || c == 'M' || c == 'n' || c\
    \ == 'N' || c == 'o' || c == 'O' || c == 'p' || c == 'P' || c == 'q' || c == 'Q'\
    \ || c == 'r' || c == 'R' || c == 's' || c == 'S' || c == 't' || c == 'T' || c\
    \ == 'u' || c == 'U' || c == 'v' || c == 'V' || c == 'w' || c == 'W' || c == 'x'\
    \ || c == 'X' || c == 'y' || c == 'Y' || c == 'z' || c == 'Z');\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpa5pg_uzm: /tmp/tmpa5pg_uzm.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpykkss7l0: /tmp/tmpykkss7l0.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp1ebcc49g: /tmp/tmp1ebcc49g.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == c) ? 1 : 0;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp2dakj77w: /tmp/tmp2dakj77w.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ ? 26 : (c >= 'a' && c <= 'z') ? 26 : (c >= '0' && c <= '9') ? 10 : 0;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp5p6cq8j8: /tmp/tmp5p6cq8j8.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp1ebcc49g: /tmp/tmp1ebcc49g.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (auto c : string) {\n        ans += (c >= 'a' && c <= 'z')\
    \ + (c >= 'A' && c <= 'Z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp1bh0oc97: /tmp/tmp1bh0oc97.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3q70oqel: /tmp/tmp3q70oqel.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == 'a' || c == 'A' ||\
    \ c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c ==\
    \ 'u' || c == 'U') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpa2ps9d4t: /tmp/tmpa2ps9d4t.cpp:20: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3q70oqel: /tmp/tmp3q70oqel.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt89zj5f_.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpt89zj5f_.cpp:11:18: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n   11 |         count += string::npos;\n      |            \
    \      ^~~~~~\n"
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        if (c != string[count]) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == c); // count\
    \ the number of times each character appears\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpj7x_cnil: /tmp/tmpj7x_cnil.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3q70oqel: /tmp/tmp3q70oqel.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == 'a' || c ==\
    \ 'b' || c == 'c' || c == 'd' || c == 'e' || c == 'f' || c == 'g' || c == 'h'\
    \ || c == 'i' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c\
    \ == 'o' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'u'\
    \ || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z');\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmps51u5j1l: /tmp/tmps51u5j1l.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == '\\0') return count;\n\
    \        ++count;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpf_x2h9ut: /tmp/tmpf_x2h9ut.cpp:20: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpykkss7l0: /tmp/tmpykkss7l0.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == c) ? 1 : 0;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp2dakj77w: /tmp/tmp2dakj77w.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp1ebcc49g: /tmp/tmp1ebcc49g.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                count++;\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpwf4qovm1: /tmp/tmpwf4qovm1.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == 'a' || c == 'A' ||\
    \ c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c ==\
    \ 'u' || c == 'U') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpa2ps9d4t: /tmp/tmpa2ps9d4t.cpp:20: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpykkss7l0: /tmp/tmpykkss7l0.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        if (string[count] == c) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == toupper(c)) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nint main() {\n  \
    \  auto candidate = count_distinct_characters;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpbyr3qenl: /tmp/tmpbyr3qenl.cpp:20: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        count += (c == tolower(c)) ? 1 : 0;\n        count += (c == toupper(c))\
    \ ? 1 : 0;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpv3evdzu4: /tmp/tmpv3evdzu4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        if (string[count] == c) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpykkss7l0: /tmp/tmpykkss7l0.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n            case '+':\n            case '-':\n\
    \            case '_':\n            case '/':\n            case '=':\n       \
    \     case '!':\n            case '@':\n            case '#':\n            case\
    \ '$':\n            case '%':\n            case '^':\n            case '&':\n\
    \            case '*':\n            case '(':\n            case ')':\n       \
    \     case '[':\n            case ']':\n            case '{':\n            case\
    \ '}':\n            case '|':\n            case '\\\\':\n            case '\"\
    ':\n            case '<':\n            case '>':\n            case '?':\n    \
    \        case '/':\n            case '\\\\':\n            case '|':\n        \
    \    case '`':\n            case '~':\n            case '`':\n            case\
    \ '{':\n            case '}':\n            case '[':\n            case ']':\n\
    \            case '(':\n            case ')':\n            case '<':\n       \
    \     case '>':\n            case '?':\n            case '/':\n            case\
    \ '\\\\':\n            case '|':\n            case '`':\n            case '~':\n\
    \            case '`':\n            case '{':\n            case '}':\n       \
    \     case '[':\n            case ']':\n            case '(':\n            case\
    \ ')':\n            case '<':\n            case '>':\n            case '?':\n\
    \            case '/':\n            case '\\\\':\n            case '|':\n    \
    \        case '`':\n            case '~':\n            case '`':\n           \
    \ case '{':\n            case '}':\n            case '[':\n            case \n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe9jffdt6.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpe9jffdt6.cpp:99:13: error: duplicate case value\n   99 |          \
    \   case '/':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:77:13: note: previously\
    \ used here\n   77 |             case '/':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:100:13:\
    \ error: duplicate case value\n  100 |             case '\\\\':\n      |     \
    \        ^~~~\n/tmp/tmpe9jffdt6.cpp:94:13: note: previously used here\n   94 |\
    \             case '\\\\':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:101:13:\
    \ error: duplicate case value\n  101 |             case '|':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:93:13: note: previously used here\n   93 |  \
    \           case '|':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:104:13:\
    \ error: duplicate case value\n  104 |             case '`':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:102:13: note: previously used here\n  102 | \
    \            case '`':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:105:13:\
    \ error: duplicate case value\n  105 |             case '{':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:91:13: note: previously used here\n   91 |  \
    \           case '{':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:106:13:\
    \ error: duplicate case value\n  106 |             case '}':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:92:13: note: previously used here\n   92 |  \
    \           case '}':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:107:13:\
    \ error: duplicate case value\n  107 |             case '[':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:89:13: note: previously used here\n   89 |  \
    \           case '[':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:108:13:\
    \ error: duplicate case value\n  108 |             case ']':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:90:13: note: previously used here\n   90 |  \
    \           case ']':\n      |             ^~~~\n/tmp/tmpe9jffdt6.cpp:109:13:\
    \ error: duplicate case value\n  109 |             case '(':\n      |        \
    \     ^~~~\n/tmp/tmpe9jffdt6.cpp:87:13: note: previously used here\n   87 |  \
    \     "
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpykkss7l0: /tmp/tmpykkss7l0.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                count++;\n                break;\n    \
    \    }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpekvqyzjc: /tmp/tmpekvqyzjc.cpp:77: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == 'a' || c == 'A' ||\
    \ c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c ==\
    \ 'u' || c == 'U') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpa2ps9d4t: /tmp/tmpa2ps9d4t.cpp:20: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        if (std::tolower(c) == c) count++;\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    long len = string.length();\n    long cur = 0;\n    for (long\
    \ i = 0; i < len; i++) {\n        cur = string[i] - 'A';\n        if (cur != 0)\
    \ {\n            ans++;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpxl6nje72: /tmp/tmpxl6nje72.cpp:24: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U');\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp3jmc7485: /tmp/tmp3jmc7485.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt89zj5f_.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpt89zj5f_.cpp:11:18: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n   11 |         count += string::npos;\n      |            \
    \      ^~~~~~\n"
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'a':\n            case 'b':\n            case 'c':\n            case 'd':\n\
    \            case 'e':\n            case 'f':\n            case 'g':\n       \
    \     case 'h':\n            case 'i':\n            case 'j':\n            case\
    \ 'k':\n            case 'l':\n            case 'm':\n            case 'n':\n\
    \            case 'o':\n            case 'p':\n            case 'q':\n       \
    \     case 'r':\n            case 's':\n            case 't':\n            case\
    \ 'u':\n            case 'v':\n            case 'w':\n            case 'x':\n\
    \            case 'y':\n            case 'z':\n                count++;\n    \
    \            break;\n            default:\n                break;\n        }\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpskwuzi61: /tmp/tmpskwuzi61.cpp:50: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlsy_gse: /tmp/tmpvlsy_gse.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpd8y4n5z4: /tmp/tmpd8y4n5z4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmplvtjv6zq: /tmp/tmplvtjv6zq.cpp:76: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpspv55chd: /tmp/tmpspv55chd.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp6tr6wws6: /tmp/tmp6tr6wws6.cpp:18: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpv3evdzu4: /tmp/tmpv3evdzu4.cpp:19: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143141

name: HumanEval_152_compare
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember that\
  \ feeling when the result of some long-awaited\n// event is finally known. The feelings\
  \ and thoughts you have at that moment are\n// definitely worth noting down and\
  \ comparing.\n// Your task is to determine if a person correctly guessed the results\
  \ of a number of matches.\n// You are given two vectors of scores and guesses of\
  \ equal length, where each index shows a match. \n// Return a vector of the same\
  \ length denoting how far off each guess was. If they have guessed correctly,\n\
  // the value is 0, and if not, the value is the absolute difference between the\
  \ guess and the score.\n// example:\n// >>> compare((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)1})), (std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)2, (long)-2})))\n// (std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0, (long)3, (long)3}))\n// >>> compare((std::vector<long>({(long)0,\
  \ (long)5, (long)0, (long)0, (long)0, (long)4})), (std::vector<long>({(long)4, (long)1,\
  \ (long)1, (long)0, (long)0, (long)-2})))\n// (std::vector<long>({(long)4, (long)4,\
  \ (long)1, (long)0, (long)0, (long)6}))\nstd::vector<long> compare(std::vector<long>\
  \ game, std::vector<long> guess) {\n"
tests: "}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)1})), (std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)2, (long)-2}))) == (std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0, (long)3, (long)3})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)0, (long)0, (long)0, (long)0, (long)0})), (std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0, (long)0, (long)0}))) == (std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0, (long)0, (long)0})));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3})), (std::vector<long>({(long)-1, (long)-2, (long)-3}))) == (std::vector<long>({(long)2,\
  \ (long)4, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)5})), (std::vector<long>({(long)-1, (long)2, (long)3, (long)4})))\
  \ == (std::vector<long>({(long)2, (long)0, (long)0, (long)1})));\n}\n"
completions: ["    // Your code here\n    std::vector<long> result;\n    long sum\
    \ = 0;\n    long diff = 0;\n    long count = 0;\n    for(long i = 0; i < game.size();\
    \ i++) {\n        sum += game[i];\n        for(long j = 0; j < guess.size(); j++)\
    \ {\n            diff = abs(game[i] - guess[j]);\n            if(diff == 0) {\n\
    \                count++;\n            }\n            if(diff < sum) {\n     \
    \           result.push_back(diff);\n            }\n        }\n    }\n    if(count\
    \ == guess.size()) {\n        result.push_back(0);\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result(guess.size());\n    long score\
    \ = 0;\n    long diff = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n \
    \       if(game[i] == guess[i]) {\n            score++;\n        } else {\n  \
    \          diff = abs(game[i] - guess[i]);\n        }\n        result[i] = diff;\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result;\n\
    \    long score;\n    long diff;\n    long diff2;\n    long diff3;\n    long diff4;\n\
    \    long diff5;\n    long diff6;\n    long diff7;\n    long diff8;\n    long\
    \ diff9;\n    long diff10;\n    long diff11;\n    long diff12;\n    long diff13;\n\
    \    long diff14;\n    long diff15;\n    long diff16;\n    long diff17;\n    long\
    \ diff18;\n    long diff19;\n    long diff20;\n    long diff21;\n    long diff22;\n\
    \    long diff23;\n    long diff24;\n    long diff25;\n    long diff26;\n    long\
    \ diff27;\n    long diff28;\n    long diff29;\n    long diff30;\n    long diff31;\n\
    \    long diff32;\n    long diff33;\n    long diff34;\n    long diff35;\n    long\
    \ diff36;\n    long diff37;\n    long diff38;\n    long diff39;\n    long diff40;\n\
    \    long diff41;\n    long diff42;\n    long diff43;\n    long diff44;\n    long\
    \ diff45;\n    long diff46;\n    long diff47;\n    long diff48;\n    long diff49;\n\
    \    long diff50;\n    long diff51;\n    long diff52;\n    long diff53;\n    long\
    \ diff54;\n    long diff55;\n    long diff56;\n    long diff57;\n    long diff58;\n\
    \    long diff59;\n    long diff60;\n    long diff61;\n    long diff62;\n    long\
    \ diff63;\n    long diff64;\n    long diff65;\n    long diff66;\n    long diff67;\n\
    \    long diff68;\n    long diff69;\n    long diff70;\n    long diff71;\n    long\
    \ diff72;\n    long diff73;\n    long diff74;\n    long diff75;\n    long diff76;\n\
    \    long diff77;\n    long diff78;\n    long diff79;\n    long diff80;\n    long\
    \ diff81;\n    long diff82;\n    long diff83;\n    long diff84;\n    long diff85;\n\
    \    long diff86;\n", "    // Your code here\n    std::vector<long> result;\n\
    \    long score = 0;\n    long diff = 0;\n    long sum = 0;\n    long count =\
    \ 0;\n    for (long i = 0; i < game.size(); i++) {\n        sum += game[i];\n\
    \        count += 1;\n    }\n    for (long i = 0; i < guess.size(); i++) {\n \
    \       diff = abs(guess[i] - score);\n        if (diff == 0) {\n            result.push_back(0);\n\
    \        } else {\n            result.push_back(diff);\n        }\n    }\n   \
    \ for (long i = 0; i < guess.size(); i++) {\n        if (guess[i] == sum) {\n\
    \            result.push_back(0);\n        } else {\n            result.push_back(abs(guess[i]\
    \ - sum));\n        }\n    }\n    return result;", "    // Your code goes here\n\
    \    std::vector<long> result(guess.size());\n    long score;\n    long diff;\n\
    \    long sum = 0;\n    long count = 0;\n    long max = 0;\n    long min = 0;\n\
    \    long mid = 0;\n    long mid2 = 0;\n    long mid3 = 0;\n    long mid4 = 0;\n\
    \    long mid5 = 0;\n    long mid6 = 0;\n    long mid7 = 0;\n    long mid8 = 0;\n\
    \    long mid9 = 0;\n    long mid10 = 0;\n    long mid11 = 0;\n    long mid12\
    \ = 0;\n    long mid13 = 0;\n    long mid14 = 0;\n    long mid15 = 0;\n    long\
    \ mid16 = 0;\n    long mid17 = 0;\n    long mid18 = 0;\n    long mid19 = 0;\n\
    \    long mid20 = 0;\n    long mid21 = 0;\n    long mid22 = 0;\n    long mid23\
    \ = 0;\n    long mid24 = 0;\n    long mid25 = 0;\n    long mid26 = 0;\n    long\
    \ mid27 = 0;\n    long mid28 = 0;\n    long mid29 = 0;\n    long mid30 = 0;\n\
    \    long mid31 = 0;\n    long mid32 = 0;\n    long mid33 = 0;\n    long mid34\
    \ = 0;\n    long mid35 = 0;\n    long mid36 = 0;\n    long mid37 = 0;\n    long\
    \ mid38 = 0;\n    long mid39 = 0;\n    long mid40 = 0;\n    long mid41 = 0;\n\
    \    long mid42 = 0;\n    long mid43 = 0;\n    long mid44 = 0;\n    long mid45\
    \ = 0;\n    long mid46 = 0;\n    long mid47 = 0;\n    long mid48 = 0;\n    long\
    \ mid49 = 0;\n    long mid50 = 0;\n    long mid51 = 0;\n    long mid52 = 0;\n\
    \    long mid53 = 0;\n    long mid54 = 0;\n    long mid55 = 0;\n    long mid56\
    \ = 0;\n    long mid57 = 0;\n    long mid58 = 0;\n    long mid59 = 0;\n    long\
    \ mid60 = 0;\n    long mid61 = 0;\n    long mid62 = 0;\n    long mid63 = 0;\n\
    \    long mid64 = 0;\n    long mid65 = 0;\n    long mid66 = 0;\n    long mid67\
    \ = 0;\n    long mid68 = 0;\n    long mid69 = 0;\n    long mid70 = 0;\n    long\
    \ mid71 = 0;\n    long mid72 = 0;\n    long mid73 = 0;\n    long mid74 = 0;\n\
    \    long mid75 = 0;\n    long mid76 = 0;\n    long mid77 = 0;\n    long mid78\
    \ = 0;\n    long mid79", "    std::vector<long> result(guess.size());\n    long\
    \ score = 0;\n    long guess = 0;\n    long diff = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long\
    \ B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n\
    \    long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long\
    \ K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n\
    \    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long\
    \ T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n\
    \    long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long\
    \ c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n\
    \    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long\
    \ u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n\
    \    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long\
    \ D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n\
    \    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long\
    \ M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n\
    \    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long\
    \ V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n\
    \    long a = 0;\n    long b = 0;\n    long c", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for(long i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long score = 0;\n    long guess = 0;\n    long diff = 0;\n    long diff2 =\
    \ 0;\n    long diff3 = 0;\n    long diff4 = 0;\n    long diff5 = 0;\n    long\
    \ diff6 = 0;\n    long diff7 = 0;\n    long diff8 = 0;\n    long diff9 = 0;\n\
    \    long diff10 = 0;\n    long diff11 = 0;\n    long diff12 = 0;\n    long diff13\
    \ = 0;\n    long diff14 = 0;\n    long diff15 = 0;\n    long diff16 = 0;\n   \
    \ long diff17 = 0;\n    long diff18 = 0;\n    long diff19 = 0;\n    long diff20\
    \ = 0;\n    long diff21 = 0;\n    long diff22 = 0;\n    long diff23 = 0;\n   \
    \ long diff24 = 0;\n    long diff25 = 0;\n    long diff26 = 0;\n    long diff27\
    \ = 0;\n    long diff28 = 0;\n    long diff29 = 0;\n    long diff30 = 0;\n   \
    \ long diff31 = 0;\n    long diff32 = 0;\n    long diff33 = 0;\n    long diff34\
    \ = 0;\n    long diff35 = 0;\n    long diff36 = 0;\n    long diff37 = 0;\n   \
    \ long diff38 = 0;\n    long diff39 = 0;\n    long diff40 = 0;\n    long diff41\
    \ = 0;\n    long diff42 = 0;\n    long diff43 = 0;\n    long diff44 = 0;\n   \
    \ long diff45 = 0;\n    long diff46 = 0;\n    long diff47 = 0;\n    long diff48\
    \ = 0;\n    long diff49 = 0;\n    long diff50 = 0;\n    long diff51 = 0;\n   \
    \ long diff52 = 0;\n    long diff53 = 0;\n    long diff54 = 0;\n    long diff55\
    \ = 0;\n    long diff56 = 0;\n    long diff57 = 0;\n    long diff58 = 0;\n   \
    \ long diff59 = 0;\n    long diff60 = 0;\n    long diff61 = 0;\n    long diff62\
    \ = 0;\n    long diff63 = 0;\n    long diff64 = 0;\n    long diff65 = 0;\n   \
    \ long diff66 = 0;\n    long diff67 = 0;\n    long diff68 = 0;\n    long diff69\
    \ = 0;\n    long diff70 = 0;\n    long diff71 = 0;\n    long diff72 = 0;\n   \
    \ long diff73 = 0;\n    long diff74 = 0;\n    long diff75 = 0;\n    long diff76\
    \ = 0;\n    long diff77 = 0;\n    long diff78 = 0;\n    long diff79 = 0;\n   \
    \ long diff80 = 0;\n    long diff81 = 0;\n    long diff82 = 0;\n    long diff83\
    \ = 0;", "    std::vector<long> result(guess.size());\n    for (long i = 0; i\
    \ < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n\
    \    return result;", "    std::vector<long> result(guess.size());\n    long score\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        score += game[i]\
    \ * guess[i];\n    }\n    for (size_t i = 0; i < guess.size(); i++) {\n      \
    \  result[i] = abs(score - guess[i]);\n    }\n    return result;", "    // Your\
    \ code here\n    std::vector<long> result(guess.size());\n    long score = 0;\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        score += game[i] * guess[i];\n\
    \    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(score\
    \ - guess[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long score = 0;\n    long diff = 0;\n    long guess = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n        score =\
    \ game[i];\n        diff = abs(guess - score);\n        if (guess == score) {\n\
    \            result[i] = 0;\n        } else {\n            result[i] = diff;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    for (long i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n        diff\
    \ = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return\
    \ result;", "    std::vector<long> result(guess.size());\n    for (long i = 0;\
    \ i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n   \
    \ }\n    return result;", "    std::vector<long> result(guess.size());\n    for\
    \ (long i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long score = 0;\n    long diff = 0;\n    long sum = 0;\n    long\
    \ count = 0;\n    long sum2 = 0;\n    long count2 = 0;\n    long sum3 = 0;\n \
    \   long count3 = 0;\n    long sum4 = 0;\n    long count4 = 0;\n    long sum5\
    \ = 0;\n    long count5 = 0;\n    long sum6 = 0;\n    long count6 = 0;\n    long\
    \ sum7 = 0;\n    long count7 = 0;\n    long sum8 = 0;\n    long count8 = 0;\n\
    \    long sum9 = 0;\n    long count9 = 0;\n    long sum10 = 0;\n    long count10\
    \ = 0;\n    long sum11 = 0;\n    long count11 = 0;\n    long sum12 = 0;\n    long\
    \ count12 = 0;\n    long sum13 = 0;\n    long count13 = 0;\n    long sum14 = 0;\n\
    \    long count14 = 0;\n    long sum15 = 0;\n    long count15 = 0;\n    long sum16\
    \ = 0;\n    long count16 = 0;\n    long sum17 = 0;\n    long count17 = 0;\n  \
    \  long sum18 = 0;\n    long count18 = 0;\n    long sum19 = 0;\n    long count19\
    \ = 0;\n    long sum20 = 0;\n    long count20 = 0;\n    long sum21 = 0;\n    long\
    \ count21 = 0;\n    long sum22 = 0;\n    long count22 = 0;\n    long sum23 = 0;\n\
    \    long count23 = 0;\n    long sum24 = 0;\n    long count24 = 0;\n    long sum25\
    \ = 0;\n    long count25 = 0;\n    long sum26 = 0;\n    long count26 = 0;\n  \
    \  long sum27 = 0;\n    long count27 = 0;\n    long sum28 = 0;\n    long count28\
    \ = 0;\n    long sum29 = 0;\n    long count29 = 0;\n    long sum30 = 0;\n    long\
    \ count30 = 0;\n    long sum31 = 0;\n    long count31 = 0;\n    long sum32 = 0;\n\
    \    long count32 = 0;\n    long sum33 = 0;\n    long count33 = 0;\n    long sum34\
    \ = 0;\n    long count34 = 0;\n    long sum35 = 0;\n    long count35 = 0;\n  \
    \  long sum36 = 0;\n    long count36 = 0;\n    long sum37 = 0;\n    long count37\
    \ = 0;\n    long sum38 = 0;\n    long count38 = 0;\n    long sum39 = 0;\n    long\
    \ count39 = 0;\n    long sum40 = 0;\n    long count40 = 0;\n    long sum41 = 0;\n\
    \    long count41 = 0;\n    long sum42 = 0;\n    long count42", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long guess = 0;\n    long diff\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n\
    \        diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n        score += diff;\n    }\n \
    \   for (size_t i = 0; i < guess.size(); i++) {\n        guess = guess[i];\n \
    \       diff = guess - game[i];\n        if (diff < 0) {\n            diff *=\
    \ -1;\n        }\n        result[i] = diff;\n"]
stop_tokens:
- "\n}"

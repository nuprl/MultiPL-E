language: cpp
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ndlni57.cpp: In function 'bool iscube(long int)':\n/tmp/tmp_ndlni57.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int aa = 1;\n\
    \    long long int ab = 1;\n    long long int ac = 1;\n    long long int ad =\
    \ 1;\n    long long int ae = 1;\n    long long int af = 1;\n    long long int\
    \ ag = 1;\n    long long int ah = 1;\n    long long int ai = 1;\n    long long\
    \ int aj = 1;\n    long long int ak = 1;\n    long long int al = 1;\n    long\
    \ long int am = 1;\n    long long int an = 1;\n    long long int ao = 1;\n   \
    \ long long int ap = 1;\n    long long int aq = 1;\n    long long int ar = 1;\n\
    \    long long int as = 1;\n    long long int at = 1;\n    long long int au =\
    \ 1;\n    long long int av = 1;\n    \n}\nint main() {\n    auto candidate = iscube;\n\
    \    assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk41is1ev.cpp: In function 'int main()':\n/tmp/tmpk41is1ev.cpp:96:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk41is1ev.cpp:2:\n/tmp/tmpk41is1ev.cpp:97:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a <= 0)\n        return\
    \ false;\n    if (a == 1)\n        return true;\n    if (a == 2)\n        return\
    \ true;\n    if (a == 3)\n        return true;\n    if (a == 4)\n        return\
    \ true;\n    if (a == 5)\n        return true;\n    if (a == 6)\n        return\
    \ true;\n    if (a == 7)\n        return true;\n    if (a == 8)\n        return\
    \ true;\n    if (a == 9)\n        return true;\n    if (a == 10)\n        return\
    \ true;\n    if (a == 11)\n        return true;\n    if (a == 12)\n        return\
    \ true;\n    if (a == 13)\n        return true;\n    if (a == 14)\n        return\
    \ true;\n    if (a == 15)\n        return true;\n    if (a == 16)\n        return\
    \ true;\n    if (a == 17)\n        return true;\n    if (a == 18)\n        return\
    \ true;\n    if (a == 19)\n        return true;\n    if (a == 20)\n        return\
    \ true;\n    if (a == 21)\n        return true;\n    if (a == 22)\n        return\
    \ true;\n    if (a == 23)\n        return true;\n    if (a == 24)\n        return\
    \ true;\n    if (a == 25)\n        return true;\n    if (a == 26)\n        return\
    \ true;\n    if (a == 27)\n        return true;\n    if (a == 28)\n        return\
    \ true;\n    if (a == 29)\n        return true;\n    if (a == 30)\n        return\
    \ true;\n    if (a == 31)\n        return true;\n    if (a == 32)\n        return\
    \ true;\n    if (a == 33)\n        return true;\n    if (a == 34)\n        return\
    \ true;\n    if (a == 35)\n        return true;\n    if (a == 36)\n        return\
    \ true;\n    if (a == 37)\n        return true;\n    if (a == 38)\n        return\
    \ true;\n    if (a == 39)\n        return true;\n    if (a == 40)\n        return\
    \ true;\n    if (a == 41)\n        return true;\n    if (a == 42)\n        return\
    \ true;\n    if (a == 43)\n        return true;\n    if (a == 44)\n        return\
    \ true;\n    if (a == 45)\n        return true;\n    if (a == 46)\n        return\
    \ true;\n    if (a == 47)\n        return true;\n    if (a == 48)\n        return\
    \ true;\n    if (a == 49)\n        return true;\n    if (a == 50)\n        return\
    \ true;\n    if (a == 51)\n        return true;\n    if (a == 52)\n        return\
    \ true;\n    if (a == 53)\n        return true;\n    if (a == 54)\n        return\
    \ true;\n    if (a == 55)\n        return true;\n    if (a == 56)\n        return\
    \ true;\n    if (a == 57)\n        return true;\n    if (a == 58)\n        return\
    \ true;\n    if (a == 59)\n        return true;\n    if (a == 60)\n        return\
    \ true;\n    if (a == 61)\n        return true;\n    if (a == 62)\n        return\
    \ true;\n    if (a == 63)\n        return true;\n    if (a == 64)\n        return\
    \ true;\n    if (a == 65)\n        return true;\n    if (a == 66)\n        return\
    \ true;\n    if (a == 67)\n        return true;\n    if (a == 68)\n        return\
    \ true;\n    if (a == 69)\n        return true;\n    if (a == 70)\n        return\
    \ true;\n    if (a == 71)\n        return true;\n    if (a == 72)\n        return\
    \ true;\n    if (a == 73)\n        return true;\n    if (a == 74)\n        return\
    \ true;\n    if (a == 75)\n        return true;\n    if (a == 76)\n        return\
    \ true;\n    if (a == 77)\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0_lxiisa.cpp: In function 'bool iscube(long int)':\n/tmp/tmp0_lxiisa.cpp:175:1:\
    \ error: expected primary-expression before '}' token\n }\n ^\n/tmp/tmp0_lxiisa.cpp:175:1:\
    \ error: expected ';' before '}' token\n/tmp/tmp0_lxiisa.cpp: In function 'int\
    \ main()':\n/tmp/tmp0_lxiisa.cpp:177:10: error: 'candidate' does not name a type\n\
    \     auto candidate = iscube;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0_lxiisa.cpp:2:\n/tmp/tmp0_lxiisa.cpp:178:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = b;\n    long long int d = c;\n    long long int e = d;\n\
    \    long long int f = e;\n    long long int g = f;\n    long long int h = g;\n\
    \    long long int i = h;\n    long long int j = i;\n    long long int k = j;\n\
    \    long long int l = k;\n    long long int m = l;\n    long long int n = m;\n\
    \    long long int o = n;\n    long long int p = o;\n    long long int q = p;\n\
    \    long long int r = q;\n    long long int s = r;\n    long long int t = s;\n\
    \    long long int u = t;\n    long long int v = u;\n    long long int w = v;\n\
    \    long long int x = w;\n    long long int y = x;\n    long long int z = y;\n\
    \    long long int a = z;\n    long long int b = a;\n    long long int c = b;\n\
    \    long long int d = c;\n    long long int e = d;\n    long long int f = e;\n\
    \    long long int g = f;\n    long long int h = g;\n    long long int i = h;\n\
    \    long long int j = i;\n    long long int k = j;\n    long long int l = k;\n\
    \    long long int m = l;\n    long long int n = m;\n    long long int o = n;\n\
    \    long long int p = o;\n    long long int q = p;\n    long long int r = q;\n\
    \    long long int s = r;\n    long long int t = s;\n    long long int u = t;\n\
    \    long long int v = u;\n    long long int w = v;\n    long long int x = w;\n\
    \    long long int y = x;\n    long long int z = y;\n    long long int a = z;\n\
    \    long long int b = a;\n    long long int c = b;\n    long long int d = c;\n\
    \    long long int e = d;\n    long long int f = e;\n    long long int g = f;\n\
    \    long long int h = g;\n    long long int i = h;\n    long long int j = i;\n\
    \    long long int k = j;\n    long long int l = k;\n    long long int m = l;\n\
    \    long long int n = m;\n    long long int o = n;\n    long long int p = o;\n\
    \    long long int q = p;\n    long long int r = q;\n    long long int s = r;\n\
    \    long long int t = s;\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn9due0x.cpp: In function 'bool iscube(long int)':\n/tmp/tmpxn9due0x.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = z;\n                   ^\n/tmp/tmpxn9due0x.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a;\n                   ^\n/tmp/tmpxn9due0x.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = b;\n                   ^\n/tmp/tmpxn9due0x.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = b;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = c;\n                   ^\n/tmp/tmpxn9due0x.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = c;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = d;\n                   ^\n/tmp/tmpxn9due0x.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = d;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = e;\n                   ^\n/tmp/tmpxn9due0x.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = e;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = f;\n                   ^\n/tmp/tmpxn9due0x.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = f;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = g;\n                   ^\n/tmp/tmpxn9due0x.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = g;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = h;\n                   ^\n/tmp/tmpxn9due0x.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = b;\n    long long int d = c;\n    long long int e = d;\n\
    \    long long int f = e;\n    long long int g = f;\n    long long int h = g;\n\
    \    long long int i = h;\n    long long int j = i;\n    long long int k = j;\n\
    \    long long int l = k;\n    long long int m = l;\n    long long int n = m;\n\
    \    long long int o = n;\n    long long int p = o;\n    long long int q = p;\n\
    \    long long int r = q;\n    long long int s = r;\n    long long int t = s;\n\
    \    long long int u = t;\n    long long int v = u;\n    long long int w = v;\n\
    \    long long int x = w;\n    long long int y = x;\n    long long int z = y;\n\
    \    long long int a = z;\n    long long int b = a;\n    long long int c = b;\n\
    \    long long int d = c;\n    long long int e = d;\n    long long int f = e;\n\
    \    long long int g = f;\n    long long int h = g;\n    long long int i = h;\n\
    \    long long int j = i;\n    long long int k = j;\n    long long int l = k;\n\
    \    long long int m = l;\n    long long int n = m;\n    long long int o = n;\n\
    \    long long int p = o;\n    long long int q = p;\n    long long int r = q;\n\
    \    long long int s = r;\n    long long int t = s;\n    long long int u = t;\n\
    \    long long int v = u;\n    long long int w = v;\n    long long int x = w;\n\
    \    long long int y = x;\n    long long int z = y;\n    long long int a = z;\n\
    \    long long int b = a;\n    long long int c = b;\n    long long int d = c;\n\
    \    long long int e = d;\n    long long int f = e;\n    long long int g = f;\n\
    \    long long int h = g;\n    long long int i = h;\n    long long int j = i;\n\
    \    long long int k = j;\n    long long int l = k;\n    long long int m = l;\n\
    \    long long int n = m;\n    long long int o = n;\n    long long int p = o;\n\
    \    long long int q = p;\n    long long int r = q;\n    long long int s = r;\n\
    \    long long int t = s;\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn9due0x.cpp: In function 'bool iscube(long int)':\n/tmp/tmpxn9due0x.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = z;\n                   ^\n/tmp/tmpxn9due0x.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a;\n                   ^\n/tmp/tmpxn9due0x.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = b;\n                   ^\n/tmp/tmpxn9due0x.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = b;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = c;\n                   ^\n/tmp/tmpxn9due0x.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = c;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = d;\n                   ^\n/tmp/tmpxn9due0x.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = d;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = e;\n                   ^\n/tmp/tmpxn9due0x.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = e;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = f;\n                   ^\n/tmp/tmpxn9due0x.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = f;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = g;\n                   ^\n/tmp/tmpxn9due0x.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = g;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = h;\n                   ^\n/tmp/tmpxn9due0x.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a==1)\n        return\
    \ true;\n    if (a==0)\n        return true;\n    if (a==-1)\n        return true;\n\
    \    if (a==64)\n        return true;\n    if (a==-64)\n        return true;\n\
    \    if (a==180)\n        return true;\n    if (a==-180)\n        return true;\n\
    \    if (a==270)\n        return true;\n    if (a==-270)\n        return true;\n\
    \    if (a==360)\n        return true;\n    if (a==-360)\n        return true;\n\
    \    if (a==45)\n        return true;\n    if (a==-45)\n        return true;\n\
    \    if (a==90)\n        return true;\n    if (a==-90)\n        return true;\n\
    \    if (a==180)\n        return true;\n    if (a==-180)\n        return true;\n\
    \    if (a==270)\n        return true;\n    if (a==-270)\n        return true;\n\
    \    if (a==360)\n        return true;\n    if (a==-360)\n        return true;\n\
    \    if (a==45)\n        return true;\n    if (a==-45)\n        return true;\n\
    \    if (a==90)\n        return true;\n    if (a==-90)\n        return true;\n\
    \    if (a==180)\n        return true;\n    if (a==-180)\n        return true;\n\
    \    if (a==270)\n        return true;\n    if (a==-270)\n        return true;\n\
    \    if (a==360)\n        return true;\n    if (a==-360)\n        return true;\n\
    \    if (a==45)\n        return true;\n    if (a==-45)\n        return true;\n\
    \    if (a==90)\n        return true;\n    if (a==-90)\n        return true;\n\
    \    if (a==180)\n        return true;\n    if (a==-180)\n        return true;\n\
    \    if (a==270)\n        return true;\n    if (a==-270)\n        return true;\n\
    \    if (a==360)\n        return true;\n    if (a==-360)\n        return true;\n\
    \    if (a==45)\n        return true;\n    if (a==-45)\n        return true;\n\
    \    if (a==90)\n        return true;\n    if (a==-90)\n        return true;\n\
    \    if (a==180)\n        return true;\n    if (a==-180)\n        return true;\n\
    \    if (a==270)\n        return true;\n    if (a==-270)\n        return true;\n\
    \    if (a==360)\n        return true;\n    if (a==-360)\n        return true;\n\
    \    if (a==45)\n        return true;\n    if (a==-45)\n        return true;\n\
    \    if (a==90)\n        return true;\n    if (a==-90)\n        return true;\n\
    \    if (a==180)\n        return true;\n    if (a==-180)\n        return true;\n\
    \    if (a==270)\n        return true;\n    if (a==-270)\n        return true;\n\
    \    if (a==360)\n        return true;\n    if (a==-360)\n        return true;\n\
    \    if (a==45)\n        return true;\n    if (a==-45)\n        return true;\n\
    }\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7rx0m2g.cpp: In function 'int main()':\n/tmp/tmpy7rx0m2g.cpp:148:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7rx0m2g.cpp:2:\n/tmp/tmpy7rx0m2g.cpp:149:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    int b = 1;\n    while\
    \ (b <= a) {\n        if (a % b == 0)\n            return false;\n        b++;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppci09j4p.cpp: In function 'int main()':\n/tmp/tmppci09j4p.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppci09j4p.cpp:2:\n/tmp/tmppci09j4p.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = a;\n    long long int d = a;\n    long long int e = a;\n\
    \    long long int f = a;\n    long long int g = a;\n    long long int h = a;\n\
    \    long long int i = a;\n    long long int j = a;\n    long long int k = a;\n\
    \    long long int l = a;\n    long long int m = a;\n    long long int n = a;\n\
    \    long long int o = a;\n    long long int p = a;\n    long long int q = a;\n\
    \    long long int r = a;\n    long long int s = a;\n    long long int t = a;\n\
    \    long long int u = a;\n    long long int v = a;\n    long long int w = a;\n\
    \    long long int x = a;\n    long long int y = a;\n    long long int z = a;\n\
    \    long long int aa = a;\n    long long int ab = a;\n    long long int ac =\
    \ a;\n    long long int ad = a;\n    long long int ae = a;\n    long long int\
    \ af = a;\n    long long int ag = a;\n    long long int ah = a;\n    long long\
    \ int ai = a;\n    long long int aj = a;\n    long long int ak = a;\n    long\
    \ long int al = a;\n    long long int am = a;\n    long long int an = a;\n   \
    \ long long int ao = a;\n    long long int ap = a;\n    long long int aq = a;\n\
    \    long long int ar = a;\n    long long int as = a;\n    long long int at =\
    \ a;\n    long long int au = a;\n    long long int av = a;\n    long long int\
    \ aw = a;\n    long long int ax = a;\n    long long int ay = a;\n    long long\
    \ int az = a;\n    long long int ba = a;\n    long long int bb = a;\n    long\
    \ long int bc = a;\n    long long int bd = a;\n    long long int be = a;\n   \
    \ long long int bf = a;\n    long long int bg = a;\n    long long int bh = a;\n\
    \    long long int bi = a;\n    long long int bj = a;\n    long long int bk =\
    \ a;\n    long long int bl = a;\n    long long int bm = a;\n    long long int\
    \ bn = a;\n    long long int bo = a;\n    long long int bp = a;\n    \n}\nint\
    \ main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4bh2874.cpp: In function 'int main()':\n/tmp/tmpt4bh2874.cpp:90:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt4bh2874.cpp:2:\n/tmp/tmpt4bh2874.cpp:91:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a==0) return true;\n\
    \    if (a==1) return true;\n    if (a==2) return true;\n    if (a==3) return\
    \ true;\n    if (a==4) return true;\n    if (a==5) return true;\n    if (a==6)\
    \ return true;\n    if (a==7) return true;\n    if (a==8) return true;\n    if\
    \ (a==9) return true;\n    if (a==10) return true;\n    if (a==11) return true;\n\
    \    if (a==12) return true;\n    if (a==13) return true;\n    if (a==14) return\
    \ true;\n    if (a==15) return true;\n    if (a==16) return true;\n    if (a==17)\
    \ return true;\n    if (a==18) return true;\n    if (a==19) return true;\n   \
    \ if (a==20) return true;\n    if (a==21) return true;\n    if (a==22) return\
    \ true;\n    if (a==23) return true;\n    if (a==24) return true;\n    if (a==25)\
    \ return true;\n    if (a==26) return true;\n    if (a==27) return true;\n   \
    \ if (a==28) return true;\n    if (a==29) return true;\n    if (a==30) return\
    \ true;\n    if (a==31) return true;\n    if (a==32) return true;\n    if (a==33)\
    \ return true;\n    if (a==34) return true;\n    if (a==35) return true;\n   \
    \ if (a==36) return true;\n    if (a==37) return true;\n    if (a==38) return\
    \ true;\n    if (a==39) return true;\n    if (a==40) return true;\n    if (a==41)\
    \ return true;\n    if (a==42) return true;\n    if (a==43) return true;\n   \
    \ if (a==44) return true;\n    if (a==45) return true;\n    if (a==46) return\
    \ true;\n    if (a==47) return true;\n    if (a==48) return true;\n    if (a==49)\
    \ return true;\n    if (a==50) return true;\n    if (a==51) return true;\n   \
    \ if (a==52) return true;\n    if (a==53) return true;\n    if (a==54) return\
    \ true;\n    if (a==55) return true;\n    if (a==56) return true;\n    if (a==57)\
    \ return true;\n    if (a==58) return true;\n    if (a==59) return true;\n   \
    \ if (a==60) return true;\n    if (a==61) return true;\n    if (a==62) return\
    \ true;\n    if (a==63) return true;\n    if (a==64) return true;\n    if (a==65)\
    \ return true;\n    if (a==66) return true;\n    if (a==67) return true;\n   \
    \ if (a==68) return true;\n    if (a==69) return true;\n    if (a==70) return\
    \ true;\n    if (a==71) return true;\n    if (a==\n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpil3cly5p.cpp: In function 'bool iscube(long int)':\n/tmp/tmpil3cly5p.cpp:93:1:\
    \ error: expected primary-expression before '}' token\n }\n ^\n/tmp/tmpil3cly5p.cpp:93:1:\
    \ error: expected ')' before '}' token\n/tmp/tmpil3cly5p.cpp:93:1: error: expected\
    \ primary-expression before '}' token\n/tmp/tmpil3cly5p.cpp:93:1: error: expected\
    \ ';' before '}' token\n/tmp/tmpil3cly5p.cpp: In function 'int main()':\n/tmp/tmpil3cly5p.cpp:95:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpil3cly5p.cpp:2:\n/tmp/tmpil3cly5p.cpp:96:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a%a;\n\
    \    long long int c = a%b;\n    long long int d = a%c;\n    long long int e =\
    \ a%d;\n    long long int f = a%e;\n    long long int g = a%f;\n    long long\
    \ int h = a%g;\n    long long int i = a%h;\n    long long int j = a%i;\n    long\
    \ long int k = a%j;\n    long long int l = a%k;\n    long long int m = a%l;\n\
    \    long long int n = a%m; \n    long long int o = a%n;\n    long long int p\
    \ = a%o;\n    long long int q = a%p;\n    long long int r = a%q;\n    long long\
    \ int s = a%r;\n    long long int t = a%s;\n    long long int u = a%t;\n    long\
    \ long int v = a%u;\n    long long int w = a%v;\n    long long int x = a%w;\n\
    \    long long int y = a%x;\n    long long int z = a%y;\n    long long int a =\
    \ a%z;\n    long long int b = a%a;\n    long long int c = a%b;\n    long long\
    \ int d = a%d;\n    long long int e = a%e;\n    long long int f = a%f;\n    long\
    \ long int g = a%g;\n    long long int h = a%h;\n    long long int i = a%i;\n\
    \    long long int j = a%j;\n    long long int k = a%k;\n    long long int l =\
    \ a%l;\n    long long int m = a%m;\n    long long int n = a%n;\n    long long\
    \ int o = a%o;\n    long long int p = a%p;\n    long long int q = a%q;\n    long\
    \ long int r = a%r;\n    long long int s = a%s;\n    long long int t = a%t;\n\
    \    long long int u = a%u;\n    long long int v = a%v;\n    long long int w =\
    \ a%w;\n    long long int x = a%x;\n    long long int y = a%y;\n    long long\
    \ int z = a%z;\n    long long int a = a%a;\n    long long int b = a%b;\n    long\
    \ long int c = a%c;\n    long long int d = a%d;\n    long long int e = \n}\nint\
    \ main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_izpzkuh.cpp: In function 'bool iscube(long int)':\n/tmp/tmp_izpzkuh.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = a%z;\n                   ^\n/tmp/tmp_izpzkuh.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a%a;\n                   ^\n/tmp/tmp_izpzkuh.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a%a;\n\
    \                   ^\n/tmp/tmp_izpzkuh.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = a%b;\n                   ^\n/tmp/tmp_izpzkuh.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = a%b;\n\
    \                   ^\n/tmp/tmp_izpzkuh.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = a%d;\n                   ^\n/tmp/tmp_izpzkuh.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = a%c;\n\
    \                   ^\n/tmp/tmp_izpzkuh.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = a%e;\n                   ^\n/tmp/tmp_izpzkuh.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = a%d;\n\
    \                   ^\n/tmp/tmp_izpzkuh.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = a%f;\n                   ^\n/tmp/tmp_izpzkuh.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = a%e;\n\
    \                   ^\n/tmp/tmp_izpzkuh.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = a%g;\n                   ^\n/tmp/tmp_izpzkuh.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = a%f;\n\
    \                   ^\n/tmp/tmp_izpzkuh.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = a%h;\n                   ^\n/tmp/tmp_izpzkuh.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = a%g;\n\
    \                   ^\n/tmp/tmp_izpzkuh.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = a%i;\n                   ^\n/tmp/tmp_iz"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = b;\n    long long int d = c;\n    long long int e = d;\n\
    \    long long int f = e;\n    long long int g = f;\n    long long int h = g;\n\
    \    long long int i = h;\n    long long int j = i;\n    long long int k = j;\n\
    \    long long int l = k;\n    long long int m = l;\n    long long int n = m;\n\
    \    long long int o = n;\n    long long int p = o;\n    long long int q = p;\n\
    \    long long int r = q;\n    long long int s = r;\n    long long int t = s;\n\
    \    long long int u = t;\n    long long int v = u;\n    long long int w = v;\n\
    \    long long int x = w;\n    long long int y = x;\n    long long int z = y;\n\
    \    long long int a = z;\n    long long int b = a;\n    long long int c = b;\n\
    \    long long int d = c;\n    long long int e = d;\n    long long int f = e;\n\
    \    long long int g = f;\n    long long int h = g;\n    long long int i = h;\n\
    \    long long int j = i;\n    long long int k = j;\n    long long int l = k;\n\
    \    long long int m = l;\n    long long int n = m;\n    long long int o = n;\n\
    \    long long int p = o;\n    long long int q = p;\n    long long int r = q;\n\
    \    long long int s = r;\n    long long int t = s;\n    long long int u = t;\n\
    \    long long int v = u;\n    long long int w = v;\n    long long int x = w;\n\
    \    long long int y = x;\n    long long int z = y;\n    long long int a = z;\n\
    \    long long int b = a;\n    long long int c = b;\n    long long int d = c;\n\
    \    long long int e = d;\n    long long int f = e;\n    long long int g = f;\n\
    \    long long int h = g;\n    long long int i = h;\n    long long int j = i;\n\
    \    long long int k = j;\n    long long int l = k;\n    long long int m = l;\n\
    \    long long int n = m;\n    long long int o = n;\n    long long int p = o;\n\
    \    long long int q = p;\n    long long int r = q;\n    long long int s = r;\n\
    \    long long int t = s;\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn9due0x.cpp: In function 'bool iscube(long int)':\n/tmp/tmpxn9due0x.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = z;\n                   ^\n/tmp/tmpxn9due0x.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a;\n                   ^\n/tmp/tmpxn9due0x.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = b;\n                   ^\n/tmp/tmpxn9due0x.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = b;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = c;\n                   ^\n/tmp/tmpxn9due0x.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = c;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = d;\n                   ^\n/tmp/tmpxn9due0x.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = d;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = e;\n                   ^\n/tmp/tmpxn9due0x.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = e;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = f;\n                   ^\n/tmp/tmpxn9due0x.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = f;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = g;\n                   ^\n/tmp/tmpxn9due0x.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = g;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = h;\n                   ^\n/tmp/tmpxn9due0x.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = a;\n    long long int d = a;\n    long long int e = a;\n\
    \    long long int f = a;\n    long long int g = a;\n    long long int h = a;\n\
    \    long long int i = a;\n    long long int j = a;\n    long long int k = a;\n\
    \    long long int l = a;\n    long long int m = a;\n    long long int n = a;\n\
    \    long long int o = a;\n    long long int p = a;\n    long long int q = a;\n\
    \    long long int r = a;\n    long long int s = a;\n    long long int t = a;\n\
    \    long long int u = a;\n    long long int v = a;\n    long long int w = a;\n\
    \    long long int x = a;\n    long long int y = a;\n    long long int z = a;\n\
    \    long long int aa = a;\n    long long int ab = a;\n    long long int ac =\
    \ a;\n    long long int ad = a;\n    long long int ae = a;\n    long long int\
    \ af = a;\n    long long int ag = a;\n    long long int ah = a;\n    long long\
    \ int ai = a;\n    long long int aj = a;\n    long long int ak = a;\n    long\
    \ long int al = a;\n    long long int am = a;\n    long long int an = a;\n   \
    \ long long int ao = a;\n    long long int ap = a;\n    long long int aq = a;\n\
    \    long long int ar = a;\n    long long int as = a;\n    long long int at =\
    \ a;\n    long long int au = a;\n    long long int av = a;\n    long long int\
    \ aw = a;\n    long long int ax = a;\n    long long int ay = a;\n    long long\
    \ int az = a;\n    long long int ba = a;\n    long long int bb = a;\n    long\
    \ long int bc = a;\n    long long int bd = a;\n    long long int be = a;\n   \
    \ long long int bf = a;\n    long long int bg = a;\n    long long int bh = a;\n\
    \    long long int bi = a;\n    long long int bj = a;\n    long long int bk =\
    \ a;\n    long long int bl = a;\n    long long int bm = a;\n    long long int\
    \ bn = a;\n    long long int bo = a;\n    long long int bp = a;\n    \n}\nint\
    \ main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4bh2874.cpp: In function 'int main()':\n/tmp/tmpt4bh2874.cpp:90:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt4bh2874.cpp:2:\n/tmp/tmpt4bh2874.cpp:91:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a % 2 == 0)\n    \
    \    return a % 3 == 0;\n    else\n        return a % 3 == 1;\n}\nint main() {\n\
    \    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpapmrb_ex.cpp: In function 'int main()':\n/tmp/tmpapmrb_ex.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpapmrb_ex.cpp:2:\n/tmp/tmpapmrb_ex.cpp:27:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    if (a % 2 == 0)\n    \
    \    return a % 3 == 0;\n    else\n        return a % 3 == 1;\n}\nint main() {\n\
    \    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpapmrb_ex.cpp: In function 'int main()':\n/tmp/tmpapmrb_ex.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpapmrb_ex.cpp:2:\n/tmp/tmpapmrb_ex.cpp:27:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = b;\n    long long int d = c;\n    long long int e = d;\n\
    \    long long int f = e;\n    long long int g = f;\n    long long int h = g;\n\
    \    long long int i = h;\n    long long int j = i;\n    long long int k = j;\n\
    \    long long int l = k;\n    long long int m = l;\n    long long int n = m;\n\
    \    long long int o = n;\n    long long int p = o;\n    long long int q = p;\n\
    \    long long int r = q;\n    long long int s = r;\n    long long int t = s;\n\
    \    long long int u = t;\n    long long int v = u;\n    long long int w = v;\n\
    \    long long int x = w;\n    long long int y = x;\n    long long int z = y;\n\
    \    long long int a = z;\n    long long int b = a;\n    long long int c = b;\n\
    \    long long int d = c;\n    long long int e = d;\n    long long int f = e;\n\
    \    long long int g = f;\n    long long int h = g;\n    long long int i = h;\n\
    \    long long int j = i;\n    long long int k = j;\n    long long int l = k;\n\
    \    long long int m = l;\n    long long int n = m;\n    long long int o = n;\n\
    \    long long int p = o;\n    long long int q = p;\n    long long int r = q;\n\
    \    long long int s = r;\n    long long int t = s;\n    long long int u = t;\n\
    \    long long int v = u;\n    long long int w = v;\n    long long int x = w;\n\
    \    long long int y = x;\n    long long int z = y;\n    long long int a = z;\n\
    \    long long int b = a;\n    long long int c = b;\n    long long int d = c;\n\
    \    long long int e = d;\n    long long int f = e;\n    long long int g = f;\n\
    \    long long int h = g;\n    long long int i = h;\n    long long int j = i;\n\
    \    long long int k = j;\n    long long int l = k;\n    long long int m = l;\n\
    \    long long int n = m;\n    long long int o = n;\n    long long int p = o;\n\
    \    long long int q = p;\n    long long int r = q;\n    long long int s = r;\n\
    \    long long int t = s;\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn9due0x.cpp: In function 'bool iscube(long int)':\n/tmp/tmpxn9due0x.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = z;\n                   ^\n/tmp/tmpxn9due0x.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a;\n                   ^\n/tmp/tmpxn9due0x.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = b;\n                   ^\n/tmp/tmpxn9due0x.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = b;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = c;\n                   ^\n/tmp/tmpxn9due0x.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = c;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = d;\n                   ^\n/tmp/tmpxn9due0x.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = d;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = e;\n                   ^\n/tmp/tmpxn9due0x.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = e;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = f;\n                   ^\n/tmp/tmpxn9due0x.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = f;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = g;\n                   ^\n/tmp/tmpxn9due0x.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = g;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = h;\n                   ^\n/tmp/tmpxn9due0x.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1))\
    \ == (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1))\
    \ == (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
    \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
    \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ndlni57.cpp: In function 'bool iscube(long int)':\n/tmp/tmp_ndlni57.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = 1;\n\
    \                   ^\n/tmp/tmp_ndlni57.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = 1;\n                   ^\n/tmp/tmp_ndlni57.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = (long\
    \ long)a;\n    long long int c = a * a;\n    long long int d = a * a + a * a;\n\
    \    long long int e = a * a + a * a * a;\n    long long int f = a * a + a * a\
    \ * a * a;\n    long long int g = a * a + a * a * a * a * a;\n    long long int\
    \ h = a * a + a * a * a * a * a;\n    long long int i = a * a + a * a * a * a\
    \ * a * a;\n    long long int j = a * a + a * a * a * a * a * a * a;\n    long\
    \ long int k = a * a + a * a * a * a * a * a * a * a;\n    long long int l = a\
    \ * a + a * a * a * a * a * a * a * a * a;\n    long long int m = a * a + a *\
    \ a * a * a * a * a * a * a * a * a;\n    long long int n = a * a + a * a * a\
    \ * a * a * a * a * a * a * a;\n    long long int o = a * a + a * a * a * a *\
    \ a * a * a * a * a * a * a;\n    long long int p = a * a + a * a * a * a * a\
    \ * a * a * a * a * a * a * a;\n    long long int q = a * a + a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a;\n    long long int r = a * a + a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a;\n    long long int s = a * a + a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a;\n    long long int t = a * a\
    \ + a * a * a * a * a * a * a * a * a * a * a * a * a;\n    long long int u =\
    \ a * a + a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n    long long\
    \ int v = a * a + a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n   \
    \ long long int w = a * a + a * a * a * a * a * a * a * a * a * a * a * a * a;\n\
    \    long long int x = a * a + a * a * a * a * a * a * a * a * a * a * a * a;\n\
    \    long long int y = a * a + a * a * a * a * a * a * a * a * a * a * a;\n  \
    \  long long int z = a * a + a * a * a * a * a * a * a * a * a * a * a;\n    long\
    \ long int a = a * a + a * a * a * a * a * a * a * a * a * a * a;\n    long long\
    \ int b = a * a + a * a * a * a * a * a * a * a * a * a * a;\n    long long \n\
    }\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1)) == (true));\n\
    \    assert(candidate((2)) == (false));\n    assert(candidate((-1)) == (true));\n\
    \    assert(candidate((64)) == (true));\n    assert(candidate((180)) == (false));\n\
    \    assert(candidate((1000)) == (true));\n    assert(candidate((0)) == (true));\n\
    \    assert(candidate((1729)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmqkqd715.cpp: In function 'bool iscube(long int)':\n/tmp/tmpmqkqd715.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = a * a + a * a * a * a * a * a * a * a * a * a * a;\n               \
    \    ^\n/tmp/tmpmqkqd715.cpp:46:19: error: redeclaration of 'long long int b'\n\
    \     long long int b = a * a + a * a * a * a * a * a * a * a * a * a * a;\n \
    \                  ^\n/tmp/tmpmqkqd715.cpp:20:19: error: 'long long int b' previously\
    \ declared here\n     long long int b = (long long)a;\n                   ^\n\
    /tmp/tmpmqkqd715.cpp:48:1: error: expected unqualified-id before '}' token\n }\n\
    \ ^\n/tmp/tmpmqkqd715.cpp: In function 'int main()':\n/tmp/tmpmqkqd715.cpp:50:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = iscube;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmqkqd715.cpp:2:\n/tmp/tmpmqkqd715.cpp:51:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1)) == (true));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = (long\
    \ long)a;\n    long long int c = b * b;\n    long long int d = c * c;\n    long\
    \ long int e = d * d;\n    long long int f = e * e;\n    long long int g = f *\
    \ f;\n    long long int h = g * g;\n    long long int i = h * h;\n    long long\
    \ int j = i * i;\n    long long int k = j * j;\n    long long int l = k * k;\n\
    \    long long int m = l * l;\n    long long int n = m * m;\n    long long int\
    \ o = n * n;\n    long long int p = o * o;\n    long long int q = p * p;\n   \
    \ long long int r = q * q;\n    long long int s = r * r;\n    long long int t\
    \ = s * s;\n    long long int u = t * t;\n    long long int v = u * u;\n    long\
    \ long int w = v * v;\n    long long int x = w * w;\n    long long int y = x *\
    \ x;\n    long long int z = y * y;\n    long long int a = z * z;\n    long long\
    \ int b = a * a;\n    long long int c = b * b;\n    long long int d = c * c;\n\
    \    long long int e = d * d;\n    long long int f = e * e;\n    long long int\
    \ g = f * f;\n    long long int h = g * g;\n    long long int i = h * h;\n   \
    \ long long int j = i * i;\n    long long int k = j * j;\n    long long int l\
    \ = k * k;\n    long long int m = l * l;\n    long long int n = m * m;\n    long\
    \ long int o = n * n;\n    long long int p = o * o;\n    long long int q = p *\
    \ p;\n    long long int r = q * q;\n    long long int s = r * r;\n    long long\
    \ int t = s * s;\n    long long int u = t * t;\n    long long int v = u * u;\n\
    \    long long int w = v * v;\n    long long int x = w * w;\n    long long int\
    \ y = x * x;\n    long long int z = y * y;\n    long long int a = z * z;\n   \
    \ long long int b = a * a;\n    long long int c = b * b;\n    long long int d\
    \ = c * c;\n    long long int e = d * d;\n    long long int f = e * e;\n    long\
    \ long int g = f * f;\n    long long int \n}\nint main() {\n    auto candidate\
    \ = iscube;\n    assert(candidate((1)) == (true));\n    assert(candidate((2))\
    \ == (false));\n    assert(candidate((-1)) == (true));\n    assert(candidate((64))\
    \ == (true));\n    assert(candidate((180)) == (false));\n    assert(candidate((1000))\
    \ == (true));\n    assert(candidate((0)) == (true));\n    assert(candidate((1729))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xg38k5r.cpp: In function 'bool iscube(long int)':\n/tmp/tmp9xg38k5r.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = z * z;\n                   ^\n/tmp/tmp9xg38k5r.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a * a;\n                   ^\n\
    /tmp/tmp9xg38k5r.cpp:20:19: error: 'long long int b' previously declared here\n\
    \     long long int b = (long long)a;\n                   ^\n/tmp/tmp9xg38k5r.cpp:47:19:\
    \ error: redeclaration of 'long long int c'\n     long long int c = b * b;\n \
    \                  ^\n/tmp/tmp9xg38k5r.cpp:21:19: error: 'long long int c' previously\
    \ declared here\n     long long int c = b * b;\n                   ^\n/tmp/tmp9xg38k5r.cpp:48:19:\
    \ error: redeclaration of 'long long int d'\n     long long int d = c * c;\n \
    \                  ^\n/tmp/tmp9xg38k5r.cpp:22:19: error: 'long long int d' previously\
    \ declared here\n     long long int d = c * c;\n                   ^\n/tmp/tmp9xg38k5r.cpp:49:19:\
    \ error: redeclaration of 'long long int e'\n     long long int e = d * d;\n \
    \                  ^\n/tmp/tmp9xg38k5r.cpp:23:19: error: 'long long int e' previously\
    \ declared here\n     long long int e = d * d;\n                   ^\n/tmp/tmp9xg38k5r.cpp:50:19:\
    \ error: redeclaration of 'long long int f'\n     long long int f = e * e;\n \
    \                  ^\n/tmp/tmp9xg38k5r.cpp:24:19: error: 'long long int f' previously\
    \ declared here\n     long long int f = e * e;\n                   ^\n/tmp/tmp9xg38k5r.cpp:51:19:\
    \ error: redeclaration of 'long long int g'\n     long long int g = f * f;\n \
    \                  ^\n/tmp/tmp9xg38k5r.cpp:25:19: error: 'long long int g' previously\
    \ declared here\n     long long int g = f * f;\n                   ^\n/tmp/tmp9xg38k5r.cpp:52:19:\
    \ error: redeclaration of 'long long int h'\n     long long int h = g * g;\n \
    \                  ^\n/tmp/tmp9xg38k5r.cpp:26:19: error: 'long long int h' previously\
    \ declared here\n     long long int h = g * g;\n                   ^\n/tmp/tmp9xg38k5r.cpp:53:19:\
    \ error: redeclaration of 'long long int i'\n     long long int i = "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = b;\n    long long int d = c;\n    long long int e = d;\n\
    \    long long int f = e;\n    long long int g = f;\n    long long int h = g;\n\
    \    long long int i = h;\n    long long int j = i;\n    long long int k = j;\n\
    \    long long int l = k;\n    long long int m = l;\n    long long int n = m;\n\
    \    long long int o = n;\n    long long int p = o;\n    long long int q = p;\n\
    \    long long int r = q;\n    long long int s = r;\n    long long int t = s;\n\
    \    long long int u = t;\n    long long int v = u;\n    long long int w = v;\n\
    \    long long int x = w;\n    long long int y = x;\n    long long int z = y;\n\
    \    long long int a = z;\n    long long int b = a;\n    long long int c = b;\n\
    \    long long int d = c;\n    long long int e = d;\n    long long int f = e;\n\
    \    long long int g = f;\n    long long int h = g;\n    long long int i = h;\n\
    \    long long int j = i;\n    long long int k = j;\n    long long int l = k;\n\
    \    long long int m = l;\n    long long int n = m;\n    long long int o = n;\n\
    \    long long int p = o;\n    long long int q = p;\n    long long int r = q;\n\
    \    long long int s = r;\n    long long int t = s;\n    long long int u = t;\n\
    \    long long int v = u;\n    long long int w = v;\n    long long int x = w;\n\
    \    long long int y = x;\n    long long int z = y;\n    long long int a = z;\n\
    \    long long int b = a;\n    long long int c = b;\n    long long int d = c;\n\
    \    long long int e = d;\n    long long int f = e;\n    long long int g = f;\n\
    \    long long int h = g;\n    long long int i = h;\n    long long int j = i;\n\
    \    long long int k = j;\n    long long int l = k;\n    long long int m = l;\n\
    \    long long int n = m;\n    long long int o = n;\n    long long int p = o;\n\
    \    long long int q = p;\n    long long int r = q;\n    long long int s = r;\n\
    \    long long int t = s;\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn9due0x.cpp: In function 'bool iscube(long int)':\n/tmp/tmpxn9due0x.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = z;\n                   ^\n/tmp/tmpxn9due0x.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a;\n                   ^\n/tmp/tmpxn9due0x.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = b;\n                   ^\n/tmp/tmpxn9due0x.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = b;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = c;\n                   ^\n/tmp/tmpxn9due0x.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = c;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = d;\n                   ^\n/tmp/tmpxn9due0x.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = d;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = e;\n                   ^\n/tmp/tmpxn9due0x.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = e;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = f;\n                   ^\n/tmp/tmpxn9due0x.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = f;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = g;\n                   ^\n/tmp/tmpxn9due0x.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = g;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = h;\n                   ^\n/tmp/tmpxn9due0x.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ takes an integer a and returns true \n// if this ingeger is a cube of some integer\
    \ number.\n// Note: you may assume the input is always valid.\n// Examples:\n\
    // >>> iscube((1))\n// (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n\
    // (true)\n// >>> iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>>\
    \ iscube((180))\n// (false)\nbool iscube(long a) {\n    long long int b = a;\n\
    \    long long int c = b;\n    long long int d = c;\n    long long int e = d;\n\
    \    long long int f = e;\n    long long int g = f;\n    long long int h = g;\n\
    \    long long int i = h;\n    long long int j = i;\n    long long int k = j;\n\
    \    long long int l = k;\n    long long int m = l;\n    long long int n = m;\n\
    \    long long int o = n;\n    long long int p = o;\n    long long int q = p;\n\
    \    long long int r = q;\n    long long int s = r;\n    long long int t = s;\n\
    \    long long int u = t;\n    long long int v = u;\n    long long int w = v;\n\
    \    long long int x = w;\n    long long int y = x;\n    long long int z = y;\n\
    \    long long int a = z;\n    long long int b = a;\n    long long int c = b;\n\
    \    long long int d = c;\n    long long int e = d;\n    long long int f = e;\n\
    \    long long int g = f;\n    long long int h = g;\n    long long int i = h;\n\
    \    long long int j = i;\n    long long int k = j;\n    long long int l = k;\n\
    \    long long int m = l;\n    long long int n = m;\n    long long int o = n;\n\
    \    long long int p = o;\n    long long int q = p;\n    long long int r = q;\n\
    \    long long int s = r;\n    long long int t = s;\n    long long int u = t;\n\
    \    long long int v = u;\n    long long int w = v;\n    long long int x = w;\n\
    \    long long int y = x;\n    long long int z = y;\n    long long int a = z;\n\
    \    long long int b = a;\n    long long int c = b;\n    long long int d = c;\n\
    \    long long int e = d;\n    long long int f = e;\n    long long int g = f;\n\
    \    long long int h = g;\n    long long int i = h;\n    long long int j = i;\n\
    \    long long int k = j;\n    long long int l = k;\n    long long int m = l;\n\
    \    long long int n = m;\n    long long int o = n;\n    long long int p = o;\n\
    \    long long int q = p;\n    long long int r = q;\n    long long int s = r;\n\
    \    long long int t = s;\n}\nint main() {\n    auto candidate = iscube;\n   \
    \ assert(candidate((1)) == (true));\n    assert(candidate((2)) == (false));\n\
    \    assert(candidate((-1)) == (true));\n    assert(candidate((64)) == (true));\n\
    \    assert(candidate((180)) == (false));\n    assert(candidate((1000)) == (true));\n\
    \    assert(candidate((0)) == (true));\n    assert(candidate((1729)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn9due0x.cpp: In function 'bool iscube(long int)':\n/tmp/tmpxn9due0x.cpp:45:19:\
    \ error: declaration of 'long long int a' shadows a parameter\n     long long\
    \ int a = z;\n                   ^\n/tmp/tmpxn9due0x.cpp:46:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a;\n                   ^\n/tmp/tmpxn9due0x.cpp:20:19:\
    \ error: 'long long int b' previously declared here\n     long long int b = a;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:47:19: error: redeclaration of 'long\
    \ long int c'\n     long long int c = b;\n                   ^\n/tmp/tmpxn9due0x.cpp:21:19:\
    \ error: 'long long int c' previously declared here\n     long long int c = b;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:48:19: error: redeclaration of 'long\
    \ long int d'\n     long long int d = c;\n                   ^\n/tmp/tmpxn9due0x.cpp:22:19:\
    \ error: 'long long int d' previously declared here\n     long long int d = c;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:49:19: error: redeclaration of 'long\
    \ long int e'\n     long long int e = d;\n                   ^\n/tmp/tmpxn9due0x.cpp:23:19:\
    \ error: 'long long int e' previously declared here\n     long long int e = d;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:50:19: error: redeclaration of 'long\
    \ long int f'\n     long long int f = e;\n                   ^\n/tmp/tmpxn9due0x.cpp:24:19:\
    \ error: 'long long int f' previously declared here\n     long long int f = e;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:51:19: error: redeclaration of 'long\
    \ long int g'\n     long long int g = f;\n                   ^\n/tmp/tmpxn9due0x.cpp:25:19:\
    \ error: 'long long int g' previously declared here\n     long long int g = f;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:52:19: error: redeclaration of 'long\
    \ long int h'\n     long long int h = g;\n                   ^\n/tmp/tmpxn9due0x.cpp:26:19:\
    \ error: 'long long int h' previously declared here\n     long long int h = g;\n\
    \                   ^\n/tmp/tmpxn9due0x.cpp:53:19: error: redeclaration of 'long\
    \ long int i'\n     long long int i = h;\n                   ^\n/tmp/tmpxn9due0x.cpp:27:19:\
    \ error: 'long lo"
  stdout: ''

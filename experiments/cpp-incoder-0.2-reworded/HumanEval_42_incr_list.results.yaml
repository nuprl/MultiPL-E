language: cpp
name: HumanEval_42_incr_list
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxk3si0r.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpzxk3si0r.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpzxk3si0r.cpp:\
    \ In function 'int main()':\n/tmp/tmpzxk3si0r.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxk3si0r.cpp:2:\n/tmp/tmpzxk3si0r.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzxk3si0r.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpzxk3si0r.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpzxk3si0r.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpzxk3si0r.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpzxk3si0r.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpzxk3si0r.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    res.reserve(l.size());\n    for (long i : l)\
    \ {\n        res.push_back(i + 1);\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphhgytkh0.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmphhgytkh0.cpp:11:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmphhgytkh0.cpp:\
    \ In function 'int main()':\n/tmp/tmphhgytkh0.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphhgytkh0.cpp:2:\n/tmp/tmphhgytkh0.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmphhgytkh0.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmphhgytkh0.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmphhgytkh0.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmphhgytkh0.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmphhgytkh0.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmphhgytkh0.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (auto it = l.begin(); it != l.end(); ++it)\
    \ {\n        r.push_back(*it+1);\n    }\n    return r;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpylwcw3qv.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpylwcw3qv.cpp:10:15: error: 'it' does not name a type\n    \
    \ for (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmpylwcw3qv.cpp:10:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmpylwcw3qv.cpp:10:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpylwcw3qv.cpp: In function 'int\
    \ main()':\n/tmp/tmpylwcw3qv.cpp:16:10: error: 'candidate' does not name a type\n\
    \     auto candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpylwcw3qv.cpp:2:\n/tmp/tmpylwcw3qv.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpylwcw3qv.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpylwcw3qv.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpylwcw3qv.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpylwcw3qv.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpylwcw3qv.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n    "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (long i : l) {\n        r.push_back(i + 1);\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdpqqmrs6.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpdpqqmrs6.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpdpqqmrs6.cpp:\
    \ In function 'int main()':\n/tmp/tmpdpqqmrs6.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdpqqmrs6.cpp:2:\n/tmp/tmpdpqqmrs6.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdpqqmrs6.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpdpqqmrs6.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpdpqqmrs6.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdpqqmrs6.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpdpqqmrs6.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpdpqqmrs6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    ret.reserve(l.size());\n    for (auto it = l.begin();\
    \ it != l.end(); ++it) {\n        ret.push_back(*it + 1);\n    }\n    return ret;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmped0t_73q.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmped0t_73q.cpp:11:15: error: 'it' does not name a type\n    \
    \ for (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmped0t_73q.cpp:11:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmped0t_73q.cpp:11:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmped0t_73q.cpp: In function 'int\
    \ main()':\n/tmp/tmped0t_73q.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmped0t_73q.cpp:2:\n/tmp/tmped0t_73q.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmped0t_73q.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmped0t_73q.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmped0t_73q.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmped0t_73q.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmped0t_73q.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n    "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    res.reserve(l.size());\n    for (auto it = l.begin();\
    \ it != l.end(); ++it) {\n        res.push_back(*it + 1);\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0e7b467.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpk0e7b467.cpp:11:15: error: 'it' does not name a type\n    \
    \ for (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmpk0e7b467.cpp:11:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmpk0e7b467.cpp:11:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpk0e7b467.cpp: In function 'int\
    \ main()':\n/tmp/tmpk0e7b467.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk0e7b467.cpp:2:\n/tmp/tmpk0e7b467.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpk0e7b467.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpk0e7b467.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpk0e7b467.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpk0e7b467.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpk0e7b467.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n    "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    res.reserve(l.size());\n    for (long i : l)\
    \ {\n        res.push_back(i + 1);\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphhgytkh0.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmphhgytkh0.cpp:11:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmphhgytkh0.cpp:\
    \ In function 'int main()':\n/tmp/tmphhgytkh0.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphhgytkh0.cpp:2:\n/tmp/tmphhgytkh0.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmphhgytkh0.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmphhgytkh0.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmphhgytkh0.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmphhgytkh0.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmphhgytkh0.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmphhgytkh0.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (auto i : l) {\n        r.push_back(i + 1);\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp03rb_9db.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp03rb_9db.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp03rb_9db.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return r;\n     ^\n/tmp/tmp03rb_9db.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp03rb_9db.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp03rb_9db.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp03rb_9db.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp03rb_9db.cpp: In function 'int main()':\n/tmp/tmp03rb_9db.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp03rb_9db.cpp:2:\n/tmp/tmp03rb_9db.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp03rb_9db.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp03rb_9db.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp03rb_9db.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp03rb_9db.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp03rb_9db.cpp:18:68: note: candidates are:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    res.reserve(l.size());\n    for (auto it = l.begin();\
    \ it != l.end(); ++it) {\n        res.push_back(*it+1);\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdkgbxza4.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpdkgbxza4.cpp:11:15: error: 'it' does not name a type\n    \
    \ for (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmpdkgbxza4.cpp:11:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmpdkgbxza4.cpp:11:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpdkgbxza4.cpp: In function 'int\
    \ main()':\n/tmp/tmpdkgbxza4.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdkgbxza4.cpp:2:\n/tmp/tmpdkgbxza4.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdkgbxza4.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpdkgbxza4.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpdkgbxza4.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdkgbxza4.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpdkgbxza4.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n    "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret(l.size());\n    for (size_t i = 0; i < l.size(); ++i)\n\
    \        ret[i] = l[i] + 1;\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcdq54giy.cpp: In function 'int main()':\n/tmp/tmpcdq54giy.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcdq54giy.cpp:2:\n/tmp/tmpcdq54giy.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpcdq54giy.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpcdq54giy.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpcdq54giy.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpcdq54giy.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpcdq54giy.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpcdq54giy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (long i : l) {\n        r.push_back(i + 1);\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdpqqmrs6.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpdpqqmrs6.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpdpqqmrs6.cpp:\
    \ In function 'int main()':\n/tmp/tmpdpqqmrs6.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdpqqmrs6.cpp:2:\n/tmp/tmpdpqqmrs6.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdpqqmrs6.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpdpqqmrs6.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpdpqqmrs6.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdpqqmrs6.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpdpqqmrs6.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpdpqqmrs6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9k3i59kf.cpp: In function 'int main()':\n/tmp/tmp9k3i59kf.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9k3i59kf.cpp:2:\n/tmp/tmp9k3i59kf.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9k3i59kf.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9k3i59kf.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9k3i59kf.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9k3i59kf.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9k3i59kf.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp9k3i59kf.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret(l.size());\n    for (size_t i = 0; i < l.size(); i++)\
    \ {\n        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\nint main() {\n   \
    \ auto candidate = incr_list;\n    assert(candidate((std::vector<long>())) ==\
    \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)2, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)6, (long)3, (long)6, (long)3, (long)4, (long)4,\
    \ (long)10, (long)1, (long)124})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4beduu0w.cpp: In function 'int main()':\n/tmp/tmp4beduu0w.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4beduu0w.cpp:2:\n/tmp/tmp4beduu0w.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp4beduu0w.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp4beduu0w.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp4beduu0w.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4beduu0w.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp4beduu0w.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp4beduu0w.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    ret.reserve(l.size());\n    for (long i : l)\
    \ {\n        ret.push_back(i + 1);\n    }\n    return ret;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd43z403a.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpd43z403a.cpp:11:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpd43z403a.cpp:\
    \ In function 'int main()':\n/tmp/tmpd43z403a.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd43z403a.cpp:2:\n/tmp/tmpd43z403a.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd43z403a.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpd43z403a.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpd43z403a.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpd43z403a.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpd43z403a.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpd43z403a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    res.reserve(l.size());\n    for (auto it = l.begin();\
    \ it != l.end(); ++it) {\n        res.push_back(*it + 1);\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0e7b467.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpk0e7b467.cpp:11:15: error: 'it' does not name a type\n    \
    \ for (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmpk0e7b467.cpp:11:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmpk0e7b467.cpp:11:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpk0e7b467.cpp: In function 'int\
    \ main()':\n/tmp/tmpk0e7b467.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk0e7b467.cpp:2:\n/tmp/tmpk0e7b467.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpk0e7b467.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpk0e7b467.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpk0e7b467.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpk0e7b467.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpk0e7b467.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n    "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    ret.reserve(l.size());\n    for (long i : l)\
    \ {\n        ret.push_back(i + 1);\n    }\n    return ret;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd43z403a.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpd43z403a.cpp:11:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpd43z403a.cpp:\
    \ In function 'int main()':\n/tmp/tmpd43z403a.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd43z403a.cpp:2:\n/tmp/tmpd43z403a.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd43z403a.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpd43z403a.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpd43z403a.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpd43z403a.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpd43z403a.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpd43z403a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (long i : l) {\n        r.push_back(i + 1);\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdpqqmrs6.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpdpqqmrs6.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpdpqqmrs6.cpp:\
    \ In function 'int main()':\n/tmp/tmpdpqqmrs6.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdpqqmrs6.cpp:2:\n/tmp/tmpdpqqmrs6.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpdpqqmrs6.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpdpqqmrs6.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpdpqqmrs6.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdpqqmrs6.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpdpqqmrs6.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpdpqqmrs6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for(auto it = l.begin(); it != l.end(); ++it) {\n\
    \        r.push_back(*it+1);\n    }\n    return r;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpz_607vsc.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpz_607vsc.cpp:10:14: error: 'it' does not name a type\n    \
    \ for(auto it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpz_607vsc.cpp:10:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpz_607vsc.cpp:10:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpz_607vsc.cpp: In function 'int\
    \ main()':\n/tmp/tmpz_607vsc.cpp:16:10: error: 'candidate' does not name a type\n\
    \     auto candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz_607vsc.cpp:2:\n/tmp/tmpz_607vsc.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpz_607vsc.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpz_607vsc.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpz_607vsc.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpz_607vsc.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpz_607vsc.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n        "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    ret.reserve(l.size());\n    for (long i : l)\
    \ {\n        ret.push_back(i + 1);\n    }\n    return ret;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd43z403a.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpd43z403a.cpp:11:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpd43z403a.cpp:\
    \ In function 'int main()':\n/tmp/tmpd43z403a.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = incr_list;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd43z403a.cpp:2:\n/tmp/tmpd43z403a.cpp:18:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd43z403a.cpp:19:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpd43z403a.cpp:19:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpd43z403a.cpp:19:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpd43z403a.cpp:19:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpd43z403a.cpp:19:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpd43z403a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for(long i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfzdyu0f.cpp: In function 'int main()':\n/tmp/tmpxfzdyu0f.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxfzdyu0f.cpp:2:\n/tmp/tmpxfzdyu0f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpxfzdyu0f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpxfzdyu0f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpxfzdyu0f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpxfzdyu0f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpxfzdyu0f.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpxfzdyu0f.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''

name: HumanEval_27_flip_case
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
  \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
  Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n"
tests: "}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
  \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
  These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\"));\n}\n"
completions: ["    std::string s = string;\n    for (size_t i = 0; i < s.length();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] -\
    \ 32;\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i]\
    \ + 32;\n        }\n    }\n    return s;", "    std::string s = string;\n    for\
    \ (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z')\
    \ {\n            s[i] = s[i] - 32;\n        } else if (s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n    return s;", " \
    \   string s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n \
    \       else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n\
    \        }\n    }\n    return s;", "    std::string s = string;\n    for (size_t\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n   \
    \         s[i] = s[i] - 32;\n        }\n        else if (s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            s[i] = s[i] + 32;\n        }\n    }\n    return s;", " \
    \   std::string result = string;\n    for (size_t i = 0; i < result.size(); i++)\
    \ {\n        char c = result[i];\n        if ('A' <= c && c <= 'Z') {\n      \
    \      result[i] = c - 'A' + 'a';\n        }\n        if ('a' <= c && c <= 'z')\
    \ {\n            result[i] = c - 'a' + 'A';\n        }\n    }\n    return result;",
  "    std::string result = string;\n    for (size_t i = 0; i < result.size(); i++)\
    \ {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = result[i] - 32;\n        }\n        else if (result[i] >= 'A' && result[i]\
    \ <= 'Z') {\n            result[i] = result[i] + 32;\n        }\n    }\n    return\
    \ result;", "    std::string s = string;\n    for (size_t i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] -\
    \ 32;\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i]\
    \ + 32;\n        }\n    }\n    return s;", "    std::string result;\n    for (auto\
    \ &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;",
  "    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n           \
    \ c ^= 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n            c\
    \ ^= 32;\n        }\n    }\n    return string;", "    std::string new_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n            c\
    \ += 'a' - 'A';\n        } else {\n            c = c;\n        }\n        new_string.push_back(c);\n\
    \    }\n    return new_string;", "    string s = string;\n    for (size_t i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            s[i] = 'A';\n\
    \        } else if (s[i] == 'b') {\n            s[i] = 'B';\n        } else if\
    \ (s[i] == 'c') {\n            s[i] = 'C';\n        } else if (s[i] == 'd') {\n\
    \            s[i] = 'D';\n        } else if (s[i] == 'e') {\n            s[i]\
    \ = 'E';\n        } else if (s[i] == 'f') {\n            s[i] = 'F';\n       \
    \ } else if (s[i] == 'g') {\n            s[i] = 'G';\n        } else if (s[i]\
    \ == 'h') {\n            s[i] = 'H';\n        } else if (s[i] == 'i') {\n    \
    \        s[i] = 'I';\n        } else if (s[i] == 'j') {\n            s[i] = 'J';\n\
    \        } else if (s[i] == 'k') {\n            s[i] = 'K';\n        } else if\
    \ (s[i] == 'l') {\n            s[i] = 'L';\n        } else if (s[i] == 'm') {\n\
    \            s[i] = 'M';\n        } else if (s[i] == 'n') {\n            s[i]\
    \ = 'N';\n        } else if (s[i] == 'o') {\n            s[i] = 'O';\n       \
    \ } else if (s[i] == 'p') {\n            s[i] = 'P';\n        } else if (s[i]\
    \ == 'q') {\n            s[i] = 'Q';\n        } else if (s[i] == 'r') {\n    \
    \        s[i] = 'R';\n        } else if (s[i] == 's') {\n            s[i] = 'S';\n\
    \        } else if (s[i] == 't') {\n            s[i] = 'T';\n        } else if\
    \ (s[i] == 'u') {\n            s[i] = 'U';\n        } else if (s[i] == 'v') {\n\
    \            s[i] = 'V';\n        } else if (s[i] == 'w') {\n            s[i]\
    \ = 'W';\n        } else if (s[i] == 'x') {\n            s[i] = 'X';\n       \
    \ } else if (s[i] == 'y') {\n            s[i] = 'Y';\n        } else if (s[i]\
    \ == 'z') {\n            s[i] = 'Z';\n        }\n    }\n    return s;", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;", "   \
    \ std::string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n   \
    \     if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n     \
    \   }\n        if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n\
    \        }\n    }\n    return s;", "    std::string s = string;\n    for (auto\
    \ &c : s) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n   \
    \     }\n    }\n    return s;", "    std::string result;\n    for (auto &c : string)\
    \ {\n        switch (c) {\n            case 'a':\n            case 'e':\n    \
    \        case 'i':\n            case 'o':\n            case 'u':\n           \
    \     result += c;\n                break;\n            default:\n           \
    \     result += std::toupper(c);\n        }\n    }\n    return result;", "   \
    \ string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            s[i] = 'A';\n        } else if (s[i]\
    \ == 'b' || s[i] == 'B') {\n            s[i] = 'B';\n        } else if (s[i] ==\
    \ 'c' || s[i] == 'C') {\n            s[i] = 'C';\n        } else if (s[i] == 'd'\
    \ || s[i] == 'D') {\n            s[i] = 'D';\n        } else if (s[i] == 'e' ||\
    \ s[i] == 'E') {\n            s[i] = 'E';\n        } else if (s[i] == 'f' || s[i]\
    \ == 'F') {\n            s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] ==\
    \ 'G') {\n            s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H')\
    \ {\n            s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n\
    \            s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n \
    \           s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n  \
    \          s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n   \
    \         s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n    \
    \        s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n     \
    \       s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n      \
    \      s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n       \
    \     s[i] = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n        \
    \    s[i] = 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n         \
    \   s[i] = 'R';\n        } else if (s[i] == 's' || s[i] == 'S') {\n          \
    \  s[i] = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n           \
    \ s[i] = 'T';\n        } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i]\
    \ = 'U';\n        } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] =\
    \ 'V';\n        } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n\
    \        } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n \
    \       } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n  \
    \      } else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n   \
    \     }\n    }\n    return s;", "    std::string s = string;\n    for (size_t\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'A') {\n \
    \           s[i] = 'A';\n        } else if (s[i] == 'b' || s[i] == 'B') {\n  \
    \          s[i] = 'B';\n        } else if (s[i] == 'c' || s[i] == 'C') {\n   \
    \         s[i] = 'C';\n        } else if (s[i] == 'd' || s[i] == 'D') {\n    \
    \        s[i] = 'D';\n        } else if (s[i] == 'e' || s[i] == 'E') {\n     \
    \       s[i] = 'E';\n        } else if (s[i] == 'f' || s[i] == 'F') {\n      \
    \      s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] == 'G') {\n       \
    \     s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n        \
    \    s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n         \
    \   s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n          \
    \  s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n           \
    \ s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n            s[i]\
    \ = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n            s[i] =\
    \ 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n            s[i] = 'N';\n\
    \        } else if (s[i] == 'o' || s[i] == 'O') {\n            s[i] = 'O';\n \
    \       } else if (s[i] == 'p' || s[i] == 'P') {\n            s[i] = 'P';\n  \
    \      } else if (s[i] == 'q' || s[i] == 'Q') {\n            s[i] = 'Q';\n   \
    \     } else if (s[i] == 'r' || s[i] == 'R') {\n            s[i] = 'R';\n    \
    \    } else if (s[i] == 's' || s[i] == 'S') {\n            s[i] = 'S';\n     \
    \   } else if (s[i] == 't' || s[i] == 'T') {\n            s[i] = 'T';\n      \
    \  } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i] = 'U';\n       \
    \ } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] = 'V';\n        }\
    \ else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n        } else\
    \ if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n        } else if\
    \ (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n        } else if (s[i]\
    \ == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n        }\n    }\n    return\
    \ s;", "    std::string result = string;\n    for (size_t i = 0; i < result.size();\
    \ i++) {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = result[i] - 32;\n        }\n        else if (result[i] >= 'A' && result[i]\
    \ <= 'Z') {\n            result[i] = result[i] + 32;\n        }\n    }\n    return\
    \ result;", "    std::string s = string;\n    for (size_t i = 0; i < s.length();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] -\
    \ 32;\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i]\
    \ + 32;\n        }\n    }\n    return s;", "    std::string result = \"\";\n \
    \   for (auto &c : string) {\n        if (std::toupper(c) != c)\n            result\
    \ += std::toupper(c);\n        else\n            result += std::tolower(c);\n\
    \    }\n    return result;"]
stop_tokens:
- "\n}"

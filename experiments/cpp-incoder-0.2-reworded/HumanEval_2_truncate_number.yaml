name: HumanEval_2_truncate_number
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive floating\
  \ point number, it can be decomposed into\n// and integer part (largest integer\
  \ smaller than given number) and decimals\n// (leftover part always smaller than\
  \ 1).\n// Return the decimal part of the number.\n// >>> truncate_number((3.5))\n\
  // (0.5)\nfloat truncate_number(float number) {\n"
tests: "}\nint main() {\n    auto candidate = truncate_number;\n    assert(candidate((3.5))\
  \ == (0.5));\n    assert(candidate((1.25)) == (0.25));\n    assert(candidate((123.0))\
  \ == (0.0));\n}\n"
completions: ["    float integer_part;\n    float decimal_part;\n    float remainder;\n\
    \    integer_part = floor(number);\n    decimal_part = number - integer_part;\n\
    \    remainder = number - integer_part;\n    return remainder;", "    long long\
    \ int int_part = (long long int)number;\n    float decimal_part = number - int_part;\n\
    \    return decimal_part;", "    long long int int_part = (long long int)number;\n\
    \    long long int decimal_part = number - int_part;\n    return float(decimal_part);",
  "    float decimal = number % 1;\n    float integer = number / 1;\n    return integer\
    \ + decimal;", "    float remainder;\n    int integer_part;\n    float decimal_part;\n\
    \    integer_part = floor(number);\n    decimal_part = number - integer_part;\n\
    \    remainder = number - integer_part;\n    return decimal_part;", "    float\
    \ integer_part;\n    float decimal_part;\n    float remainder;\n    integer_part\
    \ = floor(number);\n    decimal_part = number - integer_part;\n    remainder =\
    \ number - integer_part;\n    return remainder;", "    float decimal = number\
    \ % 1;\n    float integer_part = floor(number);\n    return integer_part + decimal;",
  "    float trunc_number = number;\n    int int_part = 0;\n    int decimal_part =\
    \ 0;\n    while (trunc_number >= 1) {\n        trunc_number /= 10;\n        decimal_part++;\n\
    \    }\n    while (trunc_number >= 1) {\n        trunc_number /= 10;\n       \
    \ int_part++;\n    }\n    return trunc_number - int_part + decimal_part;", " \
    \   float trunc_number = number;\n    float int_part = 0;\n    float decimal_part\
    \ = 0;\n    int decimal_places = 0;\n    while (trunc_number >= 1) {\n       \
    \ trunc_number /= 10;\n        decimal_places++;\n    }\n    while (trunc_number\
    \ >= 1) {\n        trunc_number /= 10;\n        decimal_places--;\n    }\n   \
    \ int_part = trunc_number;\n    decimal_part = trunc_number - int_part;\n    decimal_places\
    \ = -decimal_places;\n    return int_part + decimal_part;", "    float int_part;\n\
    \    float decimal_part = number - int_part;\n    return decimal_part;", "   \
    \ float int_part;\n    float decimal_part;\n    float remainder;\n    int_part\
    \ = number;\n    decimal_part = number - int_part;\n    remainder = number;\n\
    \    while (decimal_part >= 1) {\n        decimal_part = decimal_part - 1;\n \
    \       remainder = remainder + 1;\n    }\n    return remainder;", "    float\
    \ integer_part;\n    float decimal_part;\n    float remainder;\n    float temp;\n\
    \    float temp2;\n    float temp3;\n    float temp4;\n    float temp5;\n    float\
    \ temp6;\n    float temp7;\n    float temp8;\n    float temp9;\n    float temp10;\n\
    \    float temp11;\n    float temp12;\n    float temp13;\n    float temp14;\n\
    \    float temp15;\n    float temp16;\n    float temp17;\n    float temp18;\n\
    \    float temp19;\n    float temp20;\n    float temp21;\n    float temp22;\n\
    \    float temp23;\n    float temp24;\n    float temp25;\n    float temp26;\n\
    \    float temp27;\n    float temp28;\n    float temp29;\n    float temp30;\n\
    \    float temp31;\n    float temp32;\n    float temp33;\n    float temp34;\n\
    \    float temp35;\n    float temp36;\n    float temp37;\n    float temp38;\n\
    \    float temp39;\n    float temp40;\n    float temp41;\n    float temp42;\n\
    \    float temp43;\n    float temp44;\n    float temp45;\n    float temp46;\n\
    \    float temp47;\n    float temp48;\n    float temp49;\n    float temp50;\n\
    \    float temp51;\n    float temp52;\n    float temp53;\n    float temp54;\n\
    \    float temp55;\n    float temp56;\n    float temp57;\n    float temp58;\n\
    \    float temp59;\n    float temp60;\n    float temp61;\n    float temp62;\n\
    \    float temp63;\n    float temp64;\n    float temp65;\n    float temp66;\n\
    \    float temp67;\n    float temp68;\n    float temp69;\n    float temp70;\n\
    \    float temp71;\n    float temp72;\n    float temp73;\n    float temp74;\n\
    \    float temp75;\n    float temp76;\n    float temp77;\n    float temp78;\n\
    \    float temp79;\n    float temp80;\n    float temp81;\n    float temp82;\n\
    \    float temp83;\n    float temp84;\n    float temp85;\n    float temp86", " \
    \   float integer_part;\n    float decimal_part;\n    float remainder;\n    integer_part\
    \ = floor(number);\n    decimal_part = number - integer_part;\n    remainder =\
    \ number * 10 - integer_part * 10;\n    return remainder / decimal_part;", " \
    \   int decimal_part = floor(log10(number));\n    float trunc_number = number\
    \ / pow(10.0, decimal_part);\n    return trunc_number;", "    int int_part = (int)\
    \ number;\n    float decimal_part = number - int_part;\n    return decimal_part;",
  "    float integer_part;\n    float decimal_part;\n    float remainder;\n    integer_part\
    \ = floor(number);\n    decimal_part = number - integer_part;\n    remainder =\
    \ number - integer_part;\n    return decimal_part;", "    float integer_part;\n\
    \    float decimal_part;\n    float remainder;\n    float temp;\n    float temp1;\n\
    \    float temp2;\n    float temp3;\n    float temp4;\n    float temp5;\n    float\
    \ temp6;\n    float temp7;\n    float temp8;\n    float temp9;\n    float temp10;\n\
    \    float temp11;\n    float temp12;\n    float temp13;\n    float temp14;\n\
    \    float temp15;\n    float temp16;\n    float temp17;\n    float temp18;\n\
    \    float temp19;\n    float temp20;\n    float temp21;\n    float temp22;\n\
    \    float temp23;\n    float temp24;\n    float temp25;\n    float temp26;\n\
    \    float temp27;\n    float temp28;\n    float temp29;\n    float temp30;\n\
    \    float temp31;\n    float temp32;\n    float temp33;\n    float temp34;\n\
    \    float temp35;\n    float temp36;\n    float temp37;\n    float temp38;\n\
    \    float temp39;\n    float temp40;\n    float temp41;\n    float temp42;\n\
    \    float temp43;\n    float temp44;\n    float temp45;\n    float temp46;\n\
    \    float temp47;\n    float temp48;\n    float temp49;\n    float temp50;\n\
    \    float temp51;\n    float temp52;\n    float temp53;\n    float temp54;\n\
    \    float temp55;\n    float temp56;\n    float temp57;\n    float temp58;\n\
    \    float temp59;\n    float temp60;\n    float temp61;\n    float temp62;\n\
    \    float temp63;\n    float temp64;\n    float temp65;\n    float temp66;\n\
    \    float temp67;\n    float temp68;\n    float temp69;\n    float temp70;\n\
    \    float temp71;\n    float temp72;\n    float temp73;\n    float temp74;\n\
    \    float temp75;\n    float temp76;\n    float temp77;\n    float temp78;\n\
    \    float temp79;\n    float temp80;\n    float temp81;\n    float temp82;\n\
    \    float temp83;\n    float temp84;\n    float temp85;", "    float int_part;\n\
    \    float decimal_part;\n    float remainder;\n    int_part = number;\n    decimal_part\
    \ = number - int_part;\n    remainder = number;\n    while(decimal_part >= 1)\
    \ {\n        decimal_part /= 10;\n        remainder *= 10;\n    }\n    return\
    \ int_part + decimal_part + remainder;", "    float integer_part;\n    float decimal_part\
    \ = number - truncate_number(number);\n    integer_part = floor(decimal_part);\n\
    \    return integer_part;", "    float decimal = number % 1;\n    float integer\
    \ = number / 1;\n    return integer;"]
stop_tokens:
- "\n}"

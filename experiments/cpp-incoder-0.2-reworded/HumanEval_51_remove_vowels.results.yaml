language: cpp
name: HumanEval_51_remove_vowels
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string result;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            result +=\
    \ c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpi5vv4fv8: /tmp/tmpi5vv4fv8.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2__hpngc.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp2__hpngc.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp2__hpngc.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx:"
  stdout: ''
  timestamp: 1660096536
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0]) {\n            noVowels += c;\n     \
    \   } else if (c == vowels[1]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[2]) {\n            noVowels += c;\n        } else if (c == vowels[3])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[4]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[5]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[6]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[7]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[8]) {\n            noVowels += c;\n        } else if (c == vowels[9])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[10]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[11]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[12]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[13]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[14]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[15]) {\n            noVowels += c;\n        } else if (c == vowels[16])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[17]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[18]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[19]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[20]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[21]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[22]) {\n            noVowels += c;\n        } else if (c == vowels[23])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[24]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[25]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[26]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[27]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[28]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[29]) {\n            noVowels += c;\n        } else if (c == vowels[30])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[31]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfebkeywn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpfebkeywn.cpp:84:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   84 | int main() {\n      |            ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ error: expected \u2018}\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpfebkeywn.cpp:93:1: error: expected \u2018\
    }\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   93 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp6543p7zi: /tmp/tmp6543p7zi.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    for\
    \ (size_t i = 0; i < text.size(); i++) {\n        if (vowels.find(text[i]) !=\
    \ std::string::npos) {\n            text.erase(text.begin() + i);\n        }\n\
    \    }\n    return text;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\"\
    )) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpkdg19xy2: /tmp/tmpkdg19xy2.cpp:29: int main(): Assertion `candidate(("eeeee"))
    == ("")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe9nk5n_c.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpe9nk5n_c.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpe9nk5n_c.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpnl31x89y: /tmp/tmpnl31x89y.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n   \
    \ for (auto &c : text) {\n        if (vowels.find(c) != std::string::npos) {\n\
    \            text.erase(text.begin() + vowels.find(c), text.end());\n        }\n\
    \        if (rev_vowels.find(c) != std::string::npos) {\n            text.erase(text.begin()\
    \ + rev_vowels.find(c), text.end());\n        }\n    }\n    return text;\n}\n\
    int main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpcnrt1tnv: /tmp/tmpcnrt1tnv.cpp:30: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpnl31x89y: /tmp/tmpnl31x89y.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpr09qkyzh: /tmp/tmpr09qkyzh.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpnl31x89y: /tmp/tmpnl31x89y.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no2 = \"AEIOUaeiou\";\n    std::string vowels_no3 = \"AEIOUaeiou\";\n\
    \    std::string vowels_no4 = \"AEIOUaeiou\";\n    std::string vowels_no5 = \"\
    AEIOUaeiou\";\n    std::string vowels_no6 = \"AEIOUaeiou\";\n    std::string vowels_no7\
    \ = \"AEIOUaeiou\";\n    std::string vowels_no8 = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no9 = \"AEIOUaeiou\";\n    std::string vowels_no10 = \"AEIOUaeiou\";\n\
    \    std::string vowels_no11 = \"AEIOUaeiou\";\n    std::string vowels_no12 =\
    \ \"AEIOUaeiou\";\n    std::string vowels_no13 = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no14 = \"AEIOUaeiou\";\n    std::string vowels_no15 = \"AEIOUaeiou\"\
    ;\n    std::string vowels_no16 = \"AEIOUaeiou\";\n    std::string vowels_no17\
    \ = \"AEIOUaeiou\";\n    std::string vowels_no18 = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no19 = \"AEIOUaeiou\";\n    std::string vowels_no20 = \"AEIOUaeiou\"\
    ;\n    std::string vowels_no21 = \"AEIOUaeiou\";\n    std::string vowels_no22\
    \ = \"AEIOUaeiou\";\n    std::string vowels_no23 = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no24 = \"AEIOUaeiou\";\n    std::string vowels_no25 = \"AEIOUaeiou\"\
    ;\n    std::string vowels_no26 = \"AEIOUaeiou\";\n    std::string vowels_no27\
    \ = \"AEIOUaeiou\";\n    std::string vowels_no28 = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no29 = \"AEIOUaeiou\";\n    std::string vowels_no30 = \"AEIOUaeiou\"\
    ;\n    std::string vowels_no31 = \"AEIOUaeiou\";\n    std::string vowels_no32\
    \ = \"AEIOUaeiou\";\n    std::string vowels_no33 = \"AEIOUaeiou\";\n    std::string\
    \ vowels_no34 = \"AEIOUaeiou\";\n    std::string vowels_no35 = \"AEIOUaeiou\"\
    ;\n    std::string vowels_no36 = \"AEIOU\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz8xrxng2.cpp:51:31: warning: missing terminating \" character\n\
    \   51 |     std::string vowels_no36 = \"AEIOU\n      |                      \
    \         ^\n/tmp/tmpz8xrxng2.cpp:51:31: error: missing terminating \" character\n\
    \   51 |     std::string vowels_no36 = \"AEIOU\n      |                      \
    \         ^~~~~~\n/tmp/tmpz8xrxng2.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpz8xrxng2.cpp:52:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   52 | }\n      | ^\n/tmp/tmpz8xrxng2.cpp:52:1: error: expected\
    \ \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n/tmp/tmpz8xrxng2.cpp:52:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpuo3znomf: /tmp/tmpuo3znomf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto &c : text)\
    \ {\n        if (c == vowels[0]) {\n            noVowels += c;\n        }\n  \
    \  }\n    return noVowels;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\"\
    )) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpmofa1b9l: /tmp/tmpmofa1b9l.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (size_t i = 0;\
    \ i < ans.size(); i++) {\n        if (vowels.find(ans[i]) != std::string::npos)\
    \ {\n            ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmphczulmbk: /tmp/tmphczulmbk.cpp:29: int main(): Assertion `candidate(("eeeee"))
    == ("")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_rev = vowels + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse = vowels_rev + std::string(\" \");\n\
    \    std::string vowels_rev_reverse_reverse = vowels_rev_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse = vowels_rev_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse + std::string(\" \");\n    std::string\
    \ vowels_rev_reverse_reverse_reverse_reverse_reverse = vowels_rev_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n    std::string vowels_rev_reverse\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsfcbp33k.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpsfcbp33k.cpp:23:17: error: redeclaration of \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \n   23 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsfcbp33k.cpp:22:17: note: \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \ previously declared here\n   22 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsfcbp33k.cpp:25:17: error: redeclaration of \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \n   25 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsfcbp33k.cpp:24:17: note: \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \ previously declared here\n   24 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse + std::string(\"\
    \ \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsfcbp33k.cpp:26:17: error: redeclaration of \u2018std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\u2019\
    \n   26 |     std::string vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = vowels_rev_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ + std::string(\" \");\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0]) {\n            noVowels += c;\n     \
    \   } else if (c == vowels[1]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[2]) {\n            noVowels += c;\n        } else if (c == vowels[3])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[4]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[5]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[6]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[7]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[8]) {\n            noVowels += c;\n        } else if (c == vowels[9])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[10]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[11]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[12]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[13]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[14]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[15]) {\n            noVowels += c;\n        } else if (c == vowels[16])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[17]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[18]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[19]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[20]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[21]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[22]) {\n            noVowels += c;\n        } else if (c == vowels[23])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[24]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[25]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[26]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[27]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[28]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[29]) {\n            noVowels += c;\n        } else if (c == vowels[30])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[31]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfebkeywn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpfebkeywn.cpp:84:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   84 | int main() {\n      |            ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ error: expected \u2018}\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpfebkeywn.cpp:93:1: error: expected \u2018\
    }\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   93 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2__hpngc.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp2__hpngc.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp2__hpngc.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx:"
  stdout: ''
  timestamp: 1660096536
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (size_t i = 0;\
    \ i < text.length(); i++) {\n        if (vowels.find(text[i]) != std::string::npos)\
    \ {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpw3iryfpx: /tmp/tmpw3iryfpx.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpw0cpdse7: /tmp/tmpw0cpdse7.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (size_t i = 0; i < text.size(); i++) {\n \
    \       if (vowels.find(text[i]) != std::string::npos) {\n            text.erase(i,\
    \ 1);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpukbma5nc: /tmp/tmpukbma5nc.cpp:28: int main(): Assertion `candidate(("eeeee"))
    == ("")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string vowels_removed;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpw82r14hb: /tmp/tmpw82r14hb.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0]) {\n            noVowels += c;\n     \
    \   } else if (c == vowels[1]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[2]) {\n            noVowels += c;\n        } else if (c == vowels[3])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[4]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[5]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[6]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[7]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[8]) {\n            noVowels += c;\n        } else if (c == vowels[9])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[10]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[11]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[12]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[13]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[14]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[15]) {\n            noVowels += c;\n        } else if (c == vowels[16])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[17]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[18]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[19]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[20]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[21]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[22]) {\n            noVowels += c;\n        } else if (c == vowels[23])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[24]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[25]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[26]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[27]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[28]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[29]) {\n            noVowels += c;\n        } else if (c == vowels[30])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[31]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfebkeywn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpfebkeywn.cpp:84:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   84 | int main() {\n      |            ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ error: expected \u2018}\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpfebkeywn.cpp:93:1: error: expected \u2018\
    }\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   93 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpw0cpdse7: /tmp/tmpw0cpdse7.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0]) {\n            noVowels += c;\n     \
    \   } else if (c == vowels[1]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[2]) {\n            noVowels += c;\n        } else if (c == vowels[3])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[4]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[5]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[6]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[7]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[8]) {\n            noVowels += c;\n        } else if (c == vowels[9])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[10]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[11]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[12]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[13]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[14]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[15]) {\n            noVowels += c;\n        } else if (c == vowels[16])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[17]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[18]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[19]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[20]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[21]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[22]) {\n            noVowels += c;\n        } else if (c == vowels[23])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[24]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[25]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[26]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[27]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[28]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[29]) {\n            noVowels += c;\n        } else if (c == vowels[30])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[31]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfebkeywn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpfebkeywn.cpp:84:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   84 | int main() {\n      |            ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ error: expected \u2018}\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpfebkeywn.cpp:93:1: error: expected \u2018\
    }\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   93 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpe0lp7ipb: /tmp/tmpe0lp7ipb.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string ans = text;\n    for (auto &c : ans) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            ans.erase(ans.begin()\
    \ + c);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpr09qkyzh: /tmp/tmpr09qkyzh.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] ||\
    \ c == vowels[3] || c == vowels[4] || c == vowels[5] || c == vowels[6] || c ==\
    \ vowels[7] || c == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp7kefb4og: /tmp/tmp7kefb4og.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_rev(vowels.rbegin(), vowels.rend());\n\
    \    std::string result = \"\";\n    for (auto c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            result += c;\n        }\n    }\n    for\
    \ (auto c : result) {\n        if (vowels_rev.find(c) != std::string::npos) {\n\
    \            result = result.replace(c, \"\");\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx3ucqv9r.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpx3ucqv9r.cpp:25:42: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, const char [1])\u2019\n   25\
    \ |             result = result.replace(c, \"\");\n      |                   \
    \                       ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpx3ucqv9r.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1893:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1893 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1893:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1915:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0]) {\n            noVowels += c;\n     \
    \   } else if (c == vowels[1]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[2]) {\n            noVowels += c;\n        } else if (c == vowels[3])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[4]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[5]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[6]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[7]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[8]) {\n            noVowels += c;\n        } else if (c == vowels[9])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[10]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[11]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[12]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[13]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[14]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[15]) {\n            noVowels += c;\n        } else if (c == vowels[16])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[17]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[18]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[19]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[20]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[21]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[22]) {\n            noVowels += c;\n        } else if (c == vowels[23])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[24]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[25]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[26]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[27]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[28]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[29]) {\n            noVowels += c;\n        } else if (c == vowels[30])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[31]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfebkeywn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpfebkeywn.cpp:84:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   84 | int main() {\n      |            ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ error: expected \u2018}\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpfebkeywn.cpp:93:1: error: expected \u2018\
    }\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   93 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp6543p7zi: /tmp/tmp6543p7zi.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpuo3znomf: /tmp/tmpuo3znomf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n   \
    \ for (auto &c : text) {\n        if (vowels.find(c) != std::string::npos) {\n\
    \            text.erase(text.begin() + vowels.find(c));\n        }\n        if\
    \ (rev_vowels.find(c) != std::string::npos) {\n            text.erase(text.begin()\
    \ + rev_vowels.find(c));\n        }\n    }\n    return text;\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2t6944pl: /tmp/tmp2t6944pl.cpp:30: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string no_vowels;\n    for (auto &c : text) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            no_vowels +=\
    \ c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpv_ppb9yv: /tmp/tmpv_ppb9yv.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe9nk5n_c.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpe9nk5n_c.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpe9nk5n_c.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n   \
    \ for (auto &c : text) {\n        if (vowels.find(c) != std::string::npos) {\n\
    \            text.erase(text.begin() + vowels.find(c));\n        }\n        if\
    \ (rev_vowels.find(c) != std::string::npos) {\n            text.erase(text.begin()\
    \ + rev_vowels.find(c));\n        }\n    }\n    return text;\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2t6944pl: /tmp/tmp2t6944pl.cpp:30: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp6543p7zi: /tmp/tmp6543p7zi.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpihtkc3wn: /tmp/tmpihtkc3wn.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string ans = text;\n    for (auto &c : ans) {\n\
    \        if (vowels.find(c) != std::string::npos) {\n            ans.erase(ans.begin()\
    \ + c);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_new;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_new\
    \ += c;\n        }\n    }\n    return vowels_new;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp0qsmpepe: /tmp/tmp0qsmpepe.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpr09qkyzh: /tmp/tmpr09qkyzh.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto c :\
    \ text) {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpyku2hib9: /tmp/tmpyku2hib9.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (size_t i = 0;\
    \ i < ans.size(); i++) {\n        if (vowels.find(ans[i]) != std::string::npos)\
    \ {\n            ans.erase(ans.begin() + i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmphczulmbk: /tmp/tmphczulmbk.cpp:29: int main(): Assertion `candidate(("eeeee"))
    == ("")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (c == vowels[0]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[1]) {\n            noVowels += c;\n        } else if (c == vowels[2])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[3]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[4]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[5]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[6]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[7]) {\n            noVowels += c;\n        } else if (c == vowels[8])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[9]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[10]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[11]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[12]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[13]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[14]) {\n            noVowels += c;\n        } else if (c == vowels[15])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[16]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[17]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[18]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[19]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[20]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[21]) {\n            noVowels += c;\n        } else if (c == vowels[22])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[23]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[24]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[25]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[26]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[27]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[28]) {\n            noVowels += c;\n        } else if (c == vowels[29])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[30]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[31]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[32]) {\n            noV\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprs964taf.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmprs964taf.cpp:83:13: error: \u2018noV\u2019 was not declared in this\
    \ scope\n   83 |             noV\n      |             ^~~\n/tmp/tmprs964taf.cpp:85:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   85 | int main() {\n      |            ^\n/tmp/tmprs964taf.cpp:94:1: error:\
    \ expected \u2018}\u2019 at end of input\n   94 | }\n      | ^\n/tmp/tmprs964taf.cpp:17:25:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto c : text) {\n     \
    \ |                         ^\n/tmp/tmprs964taf.cpp:94:1: error: expected \u2018\
    }\u2019 at end of input\n   94 | }\n      | ^\n/tmp/tmprs964taf.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmprs964taf.cpp:94:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   94 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_no = \"AEIOUaeiou\";\n    std::string\
    \ result = \"\";\n    for (auto c : text) {\n        if (vowels.find(c) != std::string::npos)\
    \ {\n            result += c;\n        }\n    }\n    for (auto c : text) {\n \
    \       if (vowels_no.find(c) != std::string::npos) {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\"\
    )) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpel8tzcx1: /tmp/tmpel8tzcx1.cpp:33: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string noVowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpnl31x89y: /tmp/tmpnl31x89y.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp36r_uoo6: /tmp/tmp36r_uoo6.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp6543p7zi: /tmp/tmp6543p7zi.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_removed;\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            vowels_removed\
    \ += c;\n        }\n    }\n    return vowels_removed;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpuo3znomf: /tmp/tmpuo3znomf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmptgy7_r3w: /tmp/tmptgy7_r3w.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0]) {\n            noVowels += c;\n     \
    \   } else if (c == vowels[1]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[2]) {\n            noVowels += c;\n        } else if (c == vowels[3])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[4]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[5]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[6]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[7]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[8]) {\n            noVowels += c;\n        } else if (c == vowels[9])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[10]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[11]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[12]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[13]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[14]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[15]) {\n            noVowels += c;\n        } else if (c == vowels[16])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[17]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[18]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[19]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[20]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[21]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[22]) {\n            noVowels += c;\n        } else if (c == vowels[23])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[24]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[25]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[26]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[27]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[28]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[29]) {\n            noVowels += c;\n        } else if (c == vowels[30])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[31]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfebkeywn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpfebkeywn.cpp:84:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   84 | int main() {\n      |            ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ error: expected \u2018}\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpfebkeywn.cpp:93:1: error: expected \u2018\
    }\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   93 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n   \
    \ for (auto &c : text) {\n        if (vowels.find(c) != std::string::npos) {\n\
    \            text.erase(text.begin() + vowels.find(c), text.end());\n        }\n\
    \        if (rev_vowels.find(c) != std::string::npos) {\n            text.erase(text.begin()\
    \ + rev_vowels.find(c), text.end());\n        }\n    }\n    return text;\n}\n\
    int main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpcnrt1tnv: /tmp/tmpcnrt1tnv.cpp:30: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string novowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            novowels\
    \ += c;\n        }\n    }\n    return novowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp6543p7zi: /tmp/tmp6543p7zi.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2__hpngc.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp2__hpngc.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp2__hpngc.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx:"
  stdout: ''
  timestamp: 1660096536
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpe0lp7ipb: /tmp/tmpe0lp7ipb.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] ||\
    \ c == vowels[3] || c == vowels[4] || c == vowels[5] || c == vowels[6] || c ==\
    \ vowels[7] || c == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp7kefb4og: /tmp/tmp7kefb4og.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_rev = \"AEIOUaeiou\";\n   \
    \ std::string result = \"\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            result += c;\n        }\n    }\n    for\
    \ (auto &c : result) {\n        if (vowels_rev.find(c) != std::string::npos) {\n\
    \            result = result.replace(c, \"\");\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvpicydbf.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpvpicydbf.cpp:25:42: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, const char [1])\u2019\n   25\
    \ |             result = result.replace(c, \"\");\n      |                   \
    \                       ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvpicydbf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1893:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1893 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1893:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1915:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0]) {\n            noVowels += c;\n     \
    \   } else if (c == vowels[1]) {\n            noVowels += c;\n        } else if\
    \ (c == vowels[2]) {\n            noVowels += c;\n        } else if (c == vowels[3])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[4]) {\n      \
    \      noVowels += c;\n        } else if (c == vowels[5]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[6]) {\n            noVowels += c;\n  \
    \      } else if (c == vowels[7]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[8]) {\n            noVowels += c;\n        } else if (c == vowels[9])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[10]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[11]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[12]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[13]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[14]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[15]) {\n            noVowels += c;\n        } else if (c == vowels[16])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[17]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[18]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[19]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[20]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[21]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[22]) {\n            noVowels += c;\n        } else if (c == vowels[23])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[24]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[25]) {\n            noVowels\
    \ += c;\n        } else if (c == vowels[26]) {\n            noVowels += c;\n \
    \       } else if (c == vowels[27]) {\n            noVowels += c;\n        } else\
    \ if (c == vowels[28]) {\n            noVowels += c;\n        } else if (c ==\
    \ vowels[29]) {\n            noVowels += c;\n        } else if (c == vowels[30])\
    \ {\n            noVowels += c;\n        } else if (c == vowels[31]) {\n     \
    \       noVowels += c;\n        } else if (c == vowels[32]) {\n}\nint main() {\n\
    \    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"\
    fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n  \
    \  assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\"\
    )) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfebkeywn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpfebkeywn.cpp:84:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   84 | int main() {\n      |            ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ error: expected \u2018}\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:17:26:\
    \ note: to match this \u2018{\u2019\n   17 |     for (auto &c : text) {\n    \
    \  |                          ^\n/tmp/tmpfebkeywn.cpp:93:1: error: expected \u2018\
    }\u2019 at end of input\n   93 | }\n      | ^\n/tmp/tmpfebkeywn.cpp:14:45: note:\
    \ to match this \u2018{\u2019\n   14 | std::string remove_vowels(std::string text)\
    \ {\n      |                                             ^\n/tmp/tmpfebkeywn.cpp:93:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   93 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string rev_vowels = \"AEIOUaeiou\";\n   \
    \ std::string rev_text = text;\n    for (auto &c : rev_text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            rev_text.replace(c, 1, \"\");\n       \
    \ }\n    }\n    return rev_text;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\"\
    )) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::replace: __pos (which is 97) > this->size() (which is 14)\n"
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string vowels_rev = vowels + std::string(\"\
    \ \");\n    std::string vowels_rev_rev = vowels_rev + std::string(\" \");\n  \
    \  std::string vowels_rev_rev2 = vowels_rev + std::string(\" \");\n    std::string\
    \ vowels_rev2 = vowels_rev + std::string(\" \");\n    std::string vowels_rev3\
    \ = vowels_rev + std::string(\" \");\n    std::string vowels_rev4 = vowels_rev\
    \ + std::string(\" \");\n    std::string vowels_rev5 = vowels_rev + std::string(\"\
    \ \");\n    std::string vowels_rev6 = vowels_rev + std::string(\" \");\n    std::string\
    \ vowels_rev7 = vowels_rev + std::string(\" \");\n    std::string vowels_rev8\
    \ = vowels_rev + std::string(\" \");\n    std::string vowels_rev9 = vowels_rev\
    \ + std::string(\" \");\n    std::string vowels_rev10 = vowels_rev + std::string(\"\
    \ \");\n    std::string vowels_rev11 = vowels_rev + std::string(\" \");\n    std::string\
    \ vowels_rev12 = vowels_rev + std::string(\" \");\n    std::string vowels_rev13\
    \ = vowels_rev + std::string(\" \");\n    std::string vowels_rev14 = vowels_rev\
    \ + std::string(\" \");\n    std::string vowels_rev15 = vowels_rev + std::string(\"\
    \ \");\n    std::string vowels_rev16 = vowels_rev + std::string(\" \");\n    std::string\
    \ vowels_rev17 = vowels_rev + std::string(\" \");\n    std::string vowels_rev18\
    \ = vowels_rev + std::string(\" \");\n    std::string vowels_rev19 = vowels_rev\
    \ + std::string(\" \");\n    std::string vowels_rev20 = vowels_rev + std::string(\"\
    \ \");\n    std::string vowels_rev21 = vowels_rev + std::string(\" \");\n    std::string\
    \ vowels_rev22 = vowels_rev + std::string(\" \");\n    std::string vowels_rev23\
    \ = vowels_rev + std::string(\" \");\n    std::string vowels_rev24 = vowels_rev\
    \ + std::string(\" \");\n    std::string vowels_rev25 = vowels_rev + std::string(\"\
    \ \");\n    std::string vowels_rev26 = vowels_rev + std::string(\" \");\n    std::string\
    \ vowels_rev27 = vowels_rev + std::string(\" \");\n    std::string vowels_rev28\
    \ = vowels_rev + std::string(\" \");\n    std::string vowels_rev29 = vowels_rev\
    \ + std::string(\" \");\n    std::string vowels_rev30 = vowels_rev + std::string(\"\
    \ \");\n    \n}\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp9goy3vry: /tmp/tmp9goy3vry.cpp:52: int main(): Assertion `candidate((""))
    == ("")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp6w27jpbh: /tmp/tmp6w27jpbh.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpihtkc3wn: /tmp/tmpihtkc3wn.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n        }\n    }\n    return text;\n}\nint main() {\n    auto\
    \ candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2__hpngc.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp2__hpngc.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c));\n      |                        ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                  |             |\n      |           \
    \                       |             __normal_iterator<[...],[...]>\n      |\
    \                                  __normal_iterator<[...],[...]>\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp2__hpngc.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: \u2018__gnu_cxx:"
  stdout: ''
  timestamp: 1660096536
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp2_dkq0zf: /tmp/tmp2_dkq0zf.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe9nk5n_c.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmpe9nk5n_c.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpe9nk5n_c.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiou\";\n    std::string no_vowels = \"\";\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpe0lp7ipb: /tmp/tmpe0lp7ipb.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    for (auto &c : text) {\n        if (vowels.find(c)\
    \ != std::string::npos) {\n            text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n \
    \   assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"eeeee\"\
    )) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0939nn.cpp: In function \u2018std::string remove_vowels(std::string)\u2019\
    :\n/tmp/tmp6_0939nn.cpp:18:37: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>::iterator\u2019 {aka \u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019}\
    \ and \u2018__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >\u2019)\n   18 |             text.erase(text.begin() + std::find(text.begin(),\
    \ text.end(), c), text.end());\n      |                        ~~~~~~~~~~~~ ^\
    \ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                            \
    \      |             |\n      |                                  |           \
    \  __normal_iterator<[...],[...]>\n      |                                  __normal_iterator<[...],[...]>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_0939nn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:856:7:\
    \ note: candidate: \u2018__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type)\
    \ const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>;\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long\
    \ int]\u2019\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:856:33: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >::difference_type\u2019 {aka \u2018long int\u2019\
    }\n  856 |       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT\n    \
    \  |                 ~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note: candidate: "
  stdout: ''
  timestamp: 1660096537
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels;\n    for (auto c : text)\
    \ {\n        if (vowels.find(c) == std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (c == vowels[0] || c == vowels[1] || c == vowels[2] ||\
    \ c == vowels[3] || c == vowels[4] || c == vowels[5] || c == vowels[6] || c ==\
    \ vowels[7] || c == vowels[8] || c == vowels[9]) {\n            noVowels += c;\n\
    \        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate =\
    \ remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp7kefb4og: /tmp/tmp7kefb4og.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string ans = text;\n    for (size_t i = 0;\
    \ i < ans.size(); i++) {\n        if (vowels.find(ans[i]) != std::string::npos)\
    \ {\n            ans.erase(ans.begin() + i);\n            i--;\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = remove_vowels;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\"\
    )) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n\
    \    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\"\
    )) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n    assert(candidate((\"\
    ybcd\")) == (\"ybcd\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string no_vowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            no_vowels\
    \ += c;\n        }\n    }\n    return no_vowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmp87x7xsmk: /tmp/tmp87x7xsmk.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (size_t i = 0;\
    \ i < text.length(); i++) {\n        if (vowels.find(text[i]) != std::string::npos)\
    \ {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\nint main() {\n    auto candidate = remove_vowels;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"\
    ));\n    assert(candidate((\"fedcba\")) == (\"fdcb\"));\n    assert(candidate((\"\
    eeeee\")) == (\"\"));\n    assert(candidate((\"acBAA\")) == (\"cB\"));\n    assert(candidate((\"\
    EcBOO\")) == (\"cB\"));\n    assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpw3iryfpx: /tmp/tmpw3iryfpx.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto &c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpzlm5e9az: /tmp/tmpzlm5e9az.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string noVowels = \"\";\n    for (auto c\
    \ : text) {\n        if (vowels.find(c) != std::string::npos) {\n            noVowels\
    \ += c;\n        }\n    }\n    return noVowels;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpy_n49283: /tmp/tmpy_n49283.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096538
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// remove_vowels is a function\
    \ that takes string and returns string without vowels.\n// >>> remove_vowels((\"\
    \"))\n// (\"\")\n// >>> remove_vowels((\"abcdef\"))\n// (\"bcdf\")\n// >>> remove_vowels((\"\
    aaaaa\"))\n// (\"\")\n// >>> remove_vowels((\"aaBAA\"))\n// (\"B\")\n// >>> remove_vowels((\"\
    zbcd\"))\n// (\"zbcd\")\nstd::string remove_vowels(std::string text) {\n    std::string\
    \ vowels = \"aeiouAEIOU\";\n    std::string new_text;\n    for (auto &c : text)\
    \ {\n        if (vowels.find(c) != std::string::npos) {\n            new_text\
    \ += c;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate\
    \ = remove_vowels;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    abcdef\\nghijklm\")) == (\"bcdf\\nghjklm\"));\n    assert(candidate((\"fedcba\"\
    )) == (\"fdcb\"));\n    assert(candidate((\"eeeee\")) == (\"\"));\n    assert(candidate((\"\
    acBAA\")) == (\"cB\"));\n    assert(candidate((\"EcBOO\")) == (\"cB\"));\n   \
    \ assert(candidate((\"ybcd\")) == (\"ybcd\"));\n}\n"
  status: Exception
  stderr: 'tmpt1knc3ve: /tmp/tmpt1knc3ve.cpp:27: int main(): Assertion `candidate(("abcdef\nghijklm"))
    == ("bcdf\nghjklm")'' failed.

    '
  stdout: ''
  timestamp: 1660096537

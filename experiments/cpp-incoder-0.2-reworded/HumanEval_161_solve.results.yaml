language: cpp
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpec2gdg7t.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpec2gdg7t.cpp:19:62: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n          \
    \                                                    ^\n/tmp/tmpec2gdg7t.cpp:\
    \ In function 'int main()':\n/tmp/tmpec2gdg7t.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = solve;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \            "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.length(); i++) {\n    \
    \    if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnpobwnap.cpp: In function 'int main()':\n/tmp/tmpnpobwnap.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnpobwnap.cpp:2:\n/tmp/tmpnpobwnap.cpp:28:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        } else {\n            ans = ans.substr(0,\
    \ i) + tolower(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqsey66su.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpqsey66su.cpp:19:62:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpqsey66su.cpp:19:62: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpqsey66su.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpqsey66su.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqsey66su.cpp:19:62:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n          \
    \                                                    ^\n/tmp/tmpqsey66su.cpp:21:62:\
    \ error: no matching function for call to 'tolower(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + tolower(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpqsey66su.cpp:21:62: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(auto &i : s) {\n        if(i == 'a' || i\
    \ == 'A') {\n            ans += 'A';\n        }\n        else if(i == 'b' || i\
    \ == 'B') {\n            ans += 'b';\n        }\n        else if(i == 'c' || i\
    \ == 'C') {\n            ans += 'C';\n        }\n        else if(i == 'd' || i\
    \ == 'D') {\n            ans += 'd';\n        }\n        else if(i == 'e' || i\
    \ == 'E') {\n            ans += 'e';\n        }\n        else if(i == 'f' || i\
    \ == 'F') {\n            ans += 'f';\n        }\n        else if(i == 'g' || i\
    \ == 'G') {\n            ans += 'g';\n        }\n        else if(i == 'h' || i\
    \ == 'H') {\n            ans += 'h';\n        }\n        else if(i == 'i' || i\
    \ == 'I') {\n            ans += 'i';\n        }\n        else if(i == 'j' || i\
    \ == 'J') {\n            ans += 'j';\n        }\n        else if(i == 'k' || i\
    \ == 'K') {\n            ans += 'k';\n        }\n        else if(i == 'l' || i\
    \ == 'L') {\n            ans += 'l';\n        }\n        else if(i == 'm' || i\
    \ == 'M') {\n            ans += 'm';\n        }\n        else if(i == 'n' || i\
    \ == 'N') {\n            ans += 'n';\n        }\n        else if(i == 'o' || i\
    \ == 'O') {\n            ans += 'o';\n        }\n        else if(i == 'p' || i\
    \ == 'P') {\n            ans += 'p';\n        }\n        else if(i == 'q' || i\
    \ == 'Q') {\n            ans += 'q';\n        }\n        else if(i == 'r' || i\
    \ == 'R') {\n            ans += 'r';\n        }\n        else if(i == 's' || i\
    \ == 'S') {\n            ans += 's';\n        }\n        else if(i == 't' || i\
    \ == 'T') {\n            ans += 't';\n        }\n        else if(i == 'u' || i\
    \ == 'U') {\n            ans += 'u';\n        }\n        else if(i == 'v' || i\
    \ == 'V') {\n            ans += 'v';\n        }\n        else if(i == 'w' || i\
    \ == 'W') {\n            ans += 'w';\n        }\n        else if(i == 'x' || i\
    \ == 'X') {\n            ans += 'x';\n        }\n        else if(i == 'y' || i\
    \ == 'Y') {\n            ans += 'y';\n        }\n        else \n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5onnxx6i.cpp: In function 'std::string solve(std::string)':\n/tmp/tmp5onnxx6i.cpp:17:15:\
    \ error: ISO C++ forbids declaration of 'i' with no type [-fpermissive]\n    \
    \ for(auto &i : s) {\n               ^\n/tmp/tmp5onnxx6i.cpp:17:19: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for(auto &i : s) {\n       \
    \            ^\n/tmp/tmp5onnxx6i.cpp:94:1: error: expected primary-expression\
    \ before '}' token\n }\n ^\n/tmp/tmp5onnxx6i.cpp:94:1: error: expected ';' before\
    \ '}' token\n/tmp/tmp5onnxx6i.cpp:95:12: error: a function-definition is not allowed\
    \ here before '{' token\n int main() {\n            ^\n/tmp/tmp5onnxx6i.cpp:105:1:\
    \ error: expected '}' at end of input\n }\n ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.replace(i, 1, toupper(s[i]));\n            ans.replace(i,\
    \ 2, tolower(s[i]));\n        } else {\n            ans.replace(i, 1, s[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3gvfwvy6.cpp: In function 'std::string solve(std::string)':\n/tmp/tmp3gvfwvy6.cpp:19:43:\
    \ error: invalid conversion from 'int' to 'const char*' [-fpermissive]\n     \
    \        ans.replace(i, 1, toupper(s[i]));\n                                 \
    \          ^\nIn file included from /usr/include/c++/4.8.2/string:52:0,\n    \
    \             from /usr/include/c++/4.8.2/bitset:47,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3gvfwvy6.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.h:1496:7:\
    \ error:   initializing argument 3 of 'std::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::basic_string<_CharT, _Traits, _Alloc>::replace(std::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]' [-fpermissive]\n       replace(size_type __pos, size_type\
    \ __n1, const _CharT* __s)\n       ^\n/tmp/tmp3gvfwvy6.cpp:20:43: error: invalid\
    \ conversion from 'int' to 'const char*' [-fpermissive]\n             ans.replace(i,\
    \ 2, tolower(s[i]));\n                                           ^\nIn file included\
    \ from /usr/include/c++/4.8.2/string:52:0,\n                 from /usr/include/c++/4.8.2/bitset:47,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3gvfwvy6.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.h:1496:7:\
    \ error:   initializing argument 3 of 'std::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::basic_string<_CharT, _Traits, _Alloc>::replace(std::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]' [-fpermissive]\n       replace(size_type __pos, size_type\
    \ __n1, const _CharT* __s)\n "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (std::isalpha(s[i])) {\n            ans = ans.substr(0, i) + std::toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr7wof2nu.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpr7wof2nu.cpp:19:67:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + std::toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \           ^\n/tmp/tmpr7wof2nu.cpp:19:67: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr7wof2nu.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpr7wof2nu.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr7wof2nu.cpp:19:67:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + std::toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n     \
    \                                                              ^\n/tmp/tmpr7wof2nu.cpp:\
    \ In function 'int main()':\n/tmp/tmpr7wof2nu.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = solve;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc+"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (std::isalpha(c))\
    \ {\n            ans = ans.replace(c, std::toupper(c));\n        } else {\n  \
    \          ans = ans.replace(c, std::tolower(c));\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7tctxj5.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpl7tctxj5.cpp:17:16:\
    \ error: ISO C++ forbids declaration of 'c' with no type [-fpermissive]\n    \
    \ for (auto &c: s) {\n                ^\n/tmp/tmpl7tctxj5.cpp:17:19: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &c: s) {\n       \
    \            ^\n/tmp/tmpl7tctxj5.cpp:19:49: error: no matching function for call\
    \ to 'std::basic_string<char>::replace(int&, int)'\n             ans = ans.replace(c,\
    \ std::toupper(c));\n                                                 ^\n/tmp/tmpl7tctxj5.cpp:19:49:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/string:52:0,\n\
    \                 from /usr/include/c++/4.8.2/bitset:47,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n             \
    \    from /tmp/tmpl7tctxj5.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.h:1429:7:\
    \ note: std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT,\
    \ _Traits, _Alloc>::replace(std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ std::basic_string<_CharT, _Traits, _Alloc>::size_type, const std::basic_string<_CharT,\
    \ _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\n       replace(size_type __pos, size_type __n, const basic_string&\
    \ __str)\n       ^\n/usr/include/c++/4.8.2/bits/basic_string.h:1429:7: note: \
    \  candidate expects 3 arguments, 2 provided\n/usr/include/c++/4.8.2/bits/basic_string.h:1451:7:\
    \ note: std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT,\
    \ _Traits, _Alloc>::replace(std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ std::basic_string<_CharT, _Traits, _Alloc>::size_type, const std::basic_string<_CharT,\
    \ _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::basic_string<_CharT, _"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans.replace(i, 1, toupper(s[i]));\n       \
    \     ans.replace(i, 2, tolower(s[i]));\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2ahjuta.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpo2ahjuta.cpp:19:43:\
    \ error: invalid conversion from 'int' to 'const char*' [-fpermissive]\n     \
    \        ans.replace(i, 1, toupper(s[i]));\n                                 \
    \          ^\nIn file included from /usr/include/c++/4.8.2/string:52:0,\n    \
    \             from /usr/include/c++/4.8.2/bitset:47,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo2ahjuta.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.h:1496:7:\
    \ error:   initializing argument 3 of 'std::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::basic_string<_CharT, _Traits, _Alloc>::replace(std::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]' [-fpermissive]\n       replace(size_type __pos, size_type\
    \ __n1, const _CharT* __s)\n       ^\n/tmp/tmpo2ahjuta.cpp:20:43: error: invalid\
    \ conversion from 'int' to 'const char*' [-fpermissive]\n             ans.replace(i,\
    \ 2, tolower(s[i]));\n                                           ^\nIn file included\
    \ from /usr/include/c++/4.8.2/string:52:0,\n                 from /usr/include/c++/4.8.2/bitset:47,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo2ahjuta.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.h:1496:7:\
    \ error:   initializing argument 3 of 'std::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::basic_string<_CharT, _Traits, _Alloc>::replace(std::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]' [-fpermissive]\n       replace(size_type __pos, size_type\
    \ __n1, const _CharT* __s)\n "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.substr(0, ans.size() - 1) + toupper(ans.back()) + ans.substr(ans.size()\
    \ - 1);\n        } else {\n            ans = ans.substr(0, ans.size() - 1) + i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpndjmrmc5.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpndjmrmc5.cpp:17:16:\
    \ error: ISO C++ forbids declaration of 'i' with no type [-fpermissive]\n    \
    \ for (auto &i : s) {\n                ^\n/tmp/tmpndjmrmc5.cpp:17:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &i : s) {\n      \
    \              ^\n/tmp/tmpndjmrmc5.cpp:19:63: error: 'std::string' has no member\
    \ named 'back'\n             ans = ans.substr(0, ans.size() - 1) + toupper(ans.back())\
    \ + ans.substr(ans.size() - 1);\n                                            \
    \                   ^\n/tmp/tmpndjmrmc5.cpp:21:49: error: no match for 'operator+'\
    \ (operand types are 'std::basic_string<char>' and 'int')\n             ans =\
    \ ans.substr(0, ans.size() - 1) + i;\n                                       \
    \          ^\n/tmp/tmpndjmrmc5.cpp:21:49: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n      \
    \           from /tmp/tmpndjmrmc5.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const _Tp&, const std::valarray<_Tp>&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpndjmrmc5.cpp:21:51: note:   mismatched\
    \ types 'const std::valarray<_Tp>' and 'int'\n             ans = ans.substr(0,\
    \ ans.size() - 1) + i;\n                                                   ^\n\
    In file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmpndjmrmc5.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const _Tp&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   te"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (i == 'a' || i\
    \ == 'A') {\n            ans = ans.replace(\"A\", toupper(i));\n            ans\
    \ = ans.replace(\"a\", tolower(i));\n        } else if (i == 'b' || i == 'B')\
    \ {\n            ans = ans.replace(\"B\", toupper(i));\n            ans = ans.replace(\"\
    b\", tolower(i));\n        } else if (i == 'c' || i == 'C') {\n            ans\
    \ = ans.replace(\"C\", toupper(i));\n            ans = ans.replace(\"c\", tolower(i));\n\
    \        } else if (i == 'd' || i == 'D') {\n            ans = ans.replace(\"\
    D\", toupper(i));\n            ans = ans.replace(\"d\", tolower(i));\n       \
    \ } else if (i == 'e' || i == 'E') {\n            ans = ans.replace(\"E\", toupper(i));\n\
    \            ans = ans.replace(\"e\", tolower(i));\n        } else if (i == 'f'\
    \ || i == 'F') {\n            ans = ans.replace(\"F\", toupper(i));\n        \
    \    ans = ans.replace(\"f\", tolower(i));\n        } else if (i == 'g' || i ==\
    \ 'G') {\n            ans = ans.replace(\"G\", toupper(i));\n            ans =\
    \ ans.replace(\"g\", tolower(i));\n        } else if (i == 'h' || i == 'H') {\n\
    \            ans = ans.replace(\"H\", toupper(i));\n            ans = ans.replace(\"\
    h\", tolower(i));\n        } else if (i == 'i' || i == 'I') {\n            ans\
    \ = ans.replace(\"I\", toupper(i));\n            ans = ans.replace(\"i\", tolower(i));\n\
    \        } else if (i == 'j' || i == 'J') {\n            ans = ans.replace(\"\
    J\", toupper(i));\n            ans = ans.replace(\"j\", tolower(i));\n       \
    \ } else if (i == 'k' || i == 'K') {\n            ans = ans.replace(\"K\", toupper(i));\n\
    \            ans = ans.replace(\"k\", tolower(i));\n        } else if (i == 'l'\
    \ || i == 'L') {\n            ans = ans.replace(\"L\", toupper(i));\n        \
    \    ans = ans.replace(\"l\", tolower(i));\n        } else if (i == 'm' || i ==\
    \ 'M') {\n            ans = ans.replace(\"M\", toupper(i));\n            ans =\
    \ ans.replace(\"m\", tolower(i));\n        } else if (i == 'n' || i == 'N') {\n\
    \            ans = ans.replace(\"N\", toupper(i));\n            ans = ans.replace(\"\
    n\", tolower(i\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8n9ux39c.cpp: In function 'std::string solve(std::string)':\n/tmp/tmp8n9ux39c.cpp:17:16:\
    \ error: ISO C++ forbids declaration of 'i' with no type [-fpermissive]\n    \
    \ for (auto &i : s) {\n                ^\n/tmp/tmp8n9ux39c.cpp:17:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &i : s) {\n      \
    \              ^\n/tmp/tmp8n9ux39c.cpp:19:46: error: no matching function for\
    \ call to 'std::basic_string<char>::replace(const char [2], int)'\n          \
    \   ans = ans.replace(\"A\", toupper(i));\n                                  \
    \            ^\n/tmp/tmp8n9ux39c.cpp:19:46: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/string:52:0,\n                 from /usr/include/c++/4.8.2/bitset:47,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8n9ux39c.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.h:1429:7:\
    \ note: std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT,\
    \ _Traits, _Alloc>::replace(std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ std::basic_string<_CharT, _Traits, _Alloc>::size_type, const std::basic_string<_CharT,\
    \ _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\n       replace(size_type __pos, size_type __n, const basic_string&\
    \ __str)\n       ^\n/usr/include/c++/4.8.2/bits/basic_string.h:1429:7: note: \
    \  candidate expects 3 arguments, 2 provided\n/usr/include/c++/4.8.2/bits/basic_string.h:1451:7:\
    \ note: std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT,\
    \ _Traits, _Alloc>::replace(std::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ std::basic_string<_CharT, _Traits, _Alloc>::size_type, const std::basic_string<_CharT,\
    \ _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::basic_string<_C"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(size_t i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_0es8pl.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpv_0es8pl.cpp:19:62:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpv_0es8pl.cpp:19:62: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpv_0es8pl.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpv_0es8pl.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpv_0es8pl.cpp:19:62:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n          \
    \                                                    ^\n/tmp/tmpv_0es8pl.cpp:\
    \ In function 'int main()':\n/tmp/tmpv_0es8pl.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = solve;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \            "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    int n = s.size();\n    for(int i = 0; i < n; i++) {\n\
    \        if(isalpha(s[i])) {\n            char c = toupper(s[i]);\n          \
    \  s[i] = c;\n            char d = tolower(c);\n            s[i] = d;\n      \
    \  }\n    }\n    res.assign(s);\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpniyp858g.cpp: In function 'int main()':\n/tmp/tmpniyp858g.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpniyp858g.cpp:2:\n/tmp/tmpniyp858g.cpp:31:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcdkzjcvj.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpcdkzjcvj.cpp:19:62:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpcdkzjcvj.cpp:19:62: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpcdkzjcvj.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpcdkzjcvj.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcdkzjcvj.cpp:19:62:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n          \
    \                                                    ^\n/tmp/tmpcdkzjcvj.cpp:\
    \ In function 'int main()':\n/tmp/tmpcdkzjcvj.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = solve;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \            "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpec2gdg7t.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpec2gdg7t.cpp:19:62: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n          \
    \                                                    ^\n/tmp/tmpec2gdg7t.cpp:\
    \ In function 'int main()':\n/tmp/tmpec2gdg7t.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = solve;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \            "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            char c = toupper(s[i]);\n            s[i] = c;\n            res+=c;\n\
    \        }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj2mg9m98.cpp: In function 'int main()':\n/tmp/tmpj2mg9m98.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpj2mg9m98.cpp:2:\n/tmp/tmpj2mg9m98.cpp:31:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans[i] = toupper(s[i]);\n        } else {\n \
    \           ans[i] = s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tzac1_r.cpp: In function 'int main()':\n/tmp/tmp1tzac1_r.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1tzac1_r.cpp:2:\n/tmp/tmp1tzac1_r.cpp:28:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.swap(s[i], toupper(s[i]));\n        } else {\n          \
    \  ans.swap(s[i], s[i]);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzkgb7hri.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpzkgb7hri.cpp:19:41:\
    \ error: no matching function for call to 'std::basic_string<char>::swap(char&,\
    \ int)'\n             ans.swap(s[i], toupper(s[i]));\n                       \
    \                  ^\n/tmp/tmpzkgb7hri.cpp:19:41: note: candidate is:\nIn file\
    \ included from /usr/include/c++/4.8.2/string:53:0,\n                 from /usr/include/c++/4.8.2/bitset:47,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzkgb7hri.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.tcc:518:5:\
    \ note: void std::basic_string<_CharT, _Traits, _Alloc>::swap(std::basic_string<_CharT,\
    \ _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>]\n     basic_string<_CharT, _Traits, _Alloc>::\n    \
    \ ^\n/usr/include/c++/4.8.2/bits/basic_string.tcc:518:5: note:   candidate expects\
    \ 1 argument, 2 provided\n/tmp/tmpzkgb7hri.cpp:21:32: error: no matching function\
    \ for call to 'std::basic_string<char>::swap(char&, char&)'\n             ans.swap(s[i],\
    \ s[i]);\n                                ^\n/tmp/tmpzkgb7hri.cpp:21:32: note:\
    \ candidate is:\nIn file included from /usr/include/c++/4.8.2/string:53:0,\n \
    \                from /usr/include/c++/4.8.2/bitset:47,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:65,\n             \
    \    from /tmp/tmpzkgb7hri.cpp:2:\n/usr/include/c++/4.8.2/bits/basic_string.tcc:518:5:\
    \ note: void std::basic_string<_CharT, _Traits, _Alloc>::swap(std::basic_string<_CharT,\
    \ _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>]\n     basic_string<_CharT, _Traits, _Alloc>::\n    \
    \ ^\n/usr/include/c++/4.8.2/bits/basic_string.tcc:518:5: note:   candidate expects\
    \ 1 argument, 2 provided\n/tmp/tmpzkgb7hri.cpp: In function 'int main()':\n/tmp/tmpzkgb7hri.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n        "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.substr(0, ans.size() - 1) + toupper(ans.back()) + ans.substr(ans.size()\
    \ - 1);\n        } else {\n            ans = ans.substr(0, ans.size() - 1) + c;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wfuea3x.cpp: In function 'std::string solve(std::string)':\n/tmp/tmp8wfuea3x.cpp:17:16:\
    \ error: ISO C++ forbids declaration of 'c' with no type [-fpermissive]\n    \
    \ for (auto &c : s) {\n                ^\n/tmp/tmp8wfuea3x.cpp:17:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &c : s) {\n      \
    \              ^\n/tmp/tmp8wfuea3x.cpp:19:63: error: 'std::string' has no member\
    \ named 'back'\n             ans = ans.substr(0, ans.size() - 1) + toupper(ans.back())\
    \ + ans.substr(ans.size() - 1);\n                                            \
    \                   ^\n/tmp/tmp8wfuea3x.cpp:21:49: error: no match for 'operator+'\
    \ (operand types are 'std::basic_string<char>' and 'int')\n             ans =\
    \ ans.substr(0, ans.size() - 1) + c;\n                                       \
    \          ^\n/tmp/tmp8wfuea3x.cpp:21:49: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n      \
    \           from /tmp/tmp8wfuea3x.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const _Tp&, const std::valarray<_Tp>&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp8wfuea3x.cpp:21:51: note:   mismatched\
    \ types 'const std::valarray<_Tp>' and 'int'\n             ans = ans.substr(0,\
    \ ans.size() - 1) + c;\n                                                   ^\n\
    In file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmp8wfuea3x.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const _Tp&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   te"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpec2gdg7t.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpec2gdg7t.cpp:19:62: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n          \
    \                                                    ^\n/tmp/tmpec2gdg7t.cpp:\
    \ In function 'int main()':\n/tmp/tmpec2gdg7t.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = solve;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \            "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpec2gdg7t.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ error: no matching function for call to 'toupper(std::basic_string<char>)'\n\
    \             ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n                                                        \
    \      ^\n/tmp/tmpec2gdg7t.cpp:19:62: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/cctype:42:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ int toupper(int)\n extern int toupper (int __c) __THROW;\n            ^\n/usr/include/ctype.h:128:12:\
    \ note:   no known conversion for argument 1 from 'std::basic_string<char>' to\
    \ 'int'\nIn file included from /usr/include/c++/4.8.2/bits/basic_ios.h:37:0,\n\
    \                 from /usr/include/c++/4.8.2/ios:44,\n                 from /usr/include/c++/4.8.2/istream:38,\n\
    \                 from /usr/include/c++/4.8.2/sstream:38,\n                 from\
    \ /usr/include/c++/4.8.2/complex:45,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:66,\n\
    \                 from /tmp/tmpec2gdg7t.cpp:2:\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note: template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\n\
    \     toupper(_CharT __c, const locale& __loc)\n     ^\n/usr/include/c++/4.8.2/bits/locale_facets.h:2596:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpec2gdg7t.cpp:19:62:\
    \ note:   candidate expects 2 arguments, 1 provided\n             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n          \
    \                                                    ^\n/tmp/tmpec2gdg7t.cpp:\
    \ In function 'int main()':\n/tmp/tmpec2gdg7t.cpp:25:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = solve;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \            "
  stdout: ''

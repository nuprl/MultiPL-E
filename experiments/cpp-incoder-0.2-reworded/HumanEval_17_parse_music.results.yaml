language: cpp
name: HumanEval_17_parse_music
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (auto c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = \"o\";\n            is_note = true;\n           \
    \ beat = 0;\n            last_beat = 0;\n        } else if (c == '|') {\n    \
    \        note = \"o|\";\n            is_note = true;\n            beat = 0;\n\
    \            last_beat = 0;\n        } else if (c == ' ') {\n            note\
    \ = \".\";\n            is_note = false;\n            beat = 0;\n            last_beat\
    \ = 0;\n        } else {\n            if (is_note) {\n                beat +=\
    \ 1;\n                last_beat = beat;\n            }\n            note = c;\n\
    \            is_note = false;\n        }\n    }\n    beats.push_back(last_beat);\n\
    \    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi32e7e0c.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpi32e7e0c.cpp:18:15: error: 'c' does not name a type\n     for (auto c\
    \ : music_string) {\n               ^\n/tmp/tmpi32e7e0c.cpp:43:5: error: expected\
    \ ';' before 'beats'\n     beats.push_back(last_beat);\n     ^\n/tmp/tmpi32e7e0c.cpp:43:30:\
    \ error: could not convert 'beats.std::vector<_Tp, _Alloc>::push_back<long int,\
    \ std::allocator<long int> >((*(const value_type*)(& last_beat)))' from 'void'\
    \ to 'bool'\n     beats.push_back(last_beat);\n                              ^\n\
    /tmp/tmpi32e7e0c.cpp:44:5: error: expected primary-expression before 'return'\n\
    \     return beats;\n     ^\n/tmp/tmpi32e7e0c.cpp:44:5: error: expected ')' before\
    \ 'return'\n/tmp/tmpi32e7e0c.cpp: In function 'int main()':\n/tmp/tmpi32e7e0c.cpp:47:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = parse_music;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi32e7e0c.cpp:2:\n/tmp/tmpi32e7e0c.cpp:48:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmpi32e7e0c.cpp:49:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmpi32e7e0c.cpp:49:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmpi32e7e0c.cpp:49:93: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpi32e7e0c.cpp:49:93: error: no matching function for call to "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    for (auto c : music_string)\
    \ {\n        if (c == 'o') {\n            beats.push_back(beat);\n           \
    \ beat = 0;\n            last_note = 0;\n            is_note = true;\n       \
    \ } else if (c == '|') {\n            beats.push_back(beat);\n            beat\
    \ = 0;\n            last_note = 1;\n            is_note = true;\n        } else\
    \ if (c == ' ') {\n            beats.push_back(beat);\n            beat = 0;\n\
    \            last_note = 0;\n            is_note = false;\n        } else if (is_note)\
    \ {\n            note += c;\n        } else {\n            beat += 1;\n      \
    \  }\n    }\n    beats.push_back(beat);\n    return beats;\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4go21xk_.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmp4go21xk_.cpp:19:15: error: 'c' does not name a type\n     for (auto c\
    \ : music_string) {\n               ^\n/tmp/tmp4go21xk_.cpp:41:5: error: expected\
    \ ';' before 'beats'\n     beats.push_back(beat);\n     ^\n/tmp/tmp4go21xk_.cpp:41:25:\
    \ error: could not convert 'beats.std::vector<_Tp, _Alloc>::push_back<long int,\
    \ std::allocator<long int> >((*(const value_type*)(& beat)))' from 'void' to 'bool'\n\
    \     beats.push_back(beat);\n                         ^\n/tmp/tmp4go21xk_.cpp:42:5:\
    \ error: expected primary-expression before 'return'\n     return beats;\n   \
    \  ^\n/tmp/tmp4go21xk_.cpp:42:5: error: expected ')' before 'return'\n/tmp/tmp4go21xk_.cpp:\
    \ In function 'int main()':\n/tmp/tmp4go21xk_.cpp:45:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = parse_music;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4go21xk_.cpp:2:\n/tmp/tmp4go21xk_.cpp:46:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmp4go21xk_.cpp:47:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmp4go21xk_.cpp:47:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmp4go21xk_.cpp:47:93: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp4go21xk_.cpp:47:93: error: no matching function for call to 'std::vector<long\
    \ in"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long last_note = 0;\n\
    \    long last_beat = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n\
    \    long last_last_note = 0;\n    long last_last_beat = 0;\n    long last_last_beats\
    \ = 0;\n    long last_last_notes = 0;\n    long last_last_last_note = 0;\n   \
    \ long last_last_last_beat = 0;\n    long last_last_last_beats = 0;\n    long\
    \ last_last_last_notes = 0;\n    long last_last_last_last_note = 0;\n    long\
    \ last_last_last_last_beat = 0;\n    long last_last_last_last_beats = 0;\n   \
    \ long last_last_last_last_notes = 0;\n    long last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_beat = 0;\n    long last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_notes = 0;\n    long last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5d517r8x.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmp5d517r8x.cpp:17:10: error: conflicting declaration 'long int beats'\n\
    \     long beats = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:14:23: error: 'beats'\
    \ has a previous declaration as 'std::vector<long int> beats'\n     std::vector<long>\
    \ beats;\n                       ^\n/tmp/tmp5d517r8x.cpp:37:10: error: redeclaration\
    \ of 'long int last_last_last_last_beats'\n     long last_last_last_last_beats\
    \ = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:33:10: error: 'long int last_last_last_last_beats'\
    \ previously declared here\n     long last_last_last_last_beats = 0;\n       \
    \   ^\n/tmp/tmp5d517r8x.cpp:38:10: error: redeclaration of 'long int last_last_last_last_notes'\n\
    \     long last_last_last_last_notes = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:34:10:\
    \ error: 'long int last_last_last_last_notes' previously declared here\n     long\
    \ last_last_last_last_notes = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:39:10: error:\
    \ redeclaration of 'long int last_last_last_last_last_note'\n     long last_last_last_last_last_note\
    \ = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:35:10: error: 'long int last_last_last_last_last_note'\
    \ previously declared here\n     long last_last_last_last_last_note = 0;\n   \
    \       ^\n/tmp/tmp5d517r8x.cpp:40:10: error: redeclaration of 'long int last_last_last_last_last_beat'\n\
    \     long last_last_last_last_last_beat = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:36:10:\
    \ error: 'long int last_last_last_last_last_beat' previously declared here\n \
    \    long last_last_last_last_last_beat = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:46:10:\
    \ error: redeclaration of 'long int last_last_last_last_last_notes'\n     long\
    \ last_last_last_last_last_notes = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:42:10:\
    \ error: 'long int last_last_last_last_last_notes' previously declared here\n\
    \     long last_last_last_last_last_notes = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:47:10:\
    \ error: redeclaration of 'long int last_last_last_last_last_last_note'\n    \
    \ long last_last_last_last_last_last_note = 0;\n          ^\n/tmp/tmp5d517r8x.cpp:43:1"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string temp;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long notes_total = 0;\n    long notes_last_beat = 0;\n    long notes_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat = 0;\n    long notes_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat = 0;\n    long notes_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat = 0;\n    long\
    \ notes_last_beat_last_beat_last_beat_last_beat_total = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptej7ec2l.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmptej7ec2l.cpp:17:10: error: conflicting declaration 'long int beats'\n\
    \     long beats = 0;\n          ^\n/tmp/tmptej7ec2l.cpp:14:23: error: 'beats'\
    \ has a previous declaration as 'std::vector<long int> beats'\n     std::vector<long>\
    \ beats;\n                       ^\n/tmp/tmptej7ec2l.cpp:33:10: error: redeclaration\
    \ of 'long int notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total'\n\
    \     long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n          ^\n/tmp/tmptej7ec2l.cpp:32:10: error: 'long int notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total'\
    \ previously declared here\n     long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n          ^\n/tmp/tmptej7ec2l.cpp:42:1: error: expected initializer before\
    \ '}' token\n }\n ^\n/tmp/tmptej7ec2l.cpp: In function 'int main()':\n/tmp/tmptej7ec2l.cpp:44:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = parse_music;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptej7ec2l.cpp:2:\n/tmp/tmptej7ec2l.cpp:45:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmptej7ec2l.cpp:46:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmptej7ec2l.cpp:46:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmptej7ec2l.c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string current_note;\n    long current_beat = 0;\n    long\
    \ current_beats_length = 0;\n    long current_note_length = 0;\n    long current_note_length_in_bpm\
    \ = 0.0;\n    long current_note_length_in_octave = 0.0;\n    long current_note_length_in_notes\
    \ = 0.0;\n    long current_note_length_in_notes_bpm = 0.0;\n    long current_note_length_in_notes_octave\
    \ = 0.0;\n    long current_note_length_in_notes_notes = 0.0;\n    long current_note_length_in_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_octave = 0.0;\n    long\
    \ current_note_length_in_notes_notes_notes = 0.0;\n    long current_note_length_in_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_octave = 0.0;\n  \
    \  long current_note_length_in_notes_notes_notes_notes = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_octave = 0.0;\n\
    \    long current_note_length_in_notes_notes_notes_notes_notes = 0.0;\n    long\
    \ current_note_length_in_notes_notes_notes_notes_notes_bpm = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_octave\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_bpm =\
    \ 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_octave =\
    \ 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes =\
    \ 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_octave\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_notes\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_notes_octave\
    \ = 0.0;\n    long current_note_length_in_note\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp12xa2wup.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmp12xa2wup.cpp:36:10: error: redeclaration of 'long int current_note_length_in_notes_notes_notes_notes_notes_bpm'\n\
    \     long current_note_length_in_notes_notes_notes_notes_notes_bpm = 0.0;\n \
    \         ^\n/tmp/tmp12xa2wup.cpp:33:10: error: 'long int current_note_length_in_notes_notes_notes_notes_notes_bpm'\
    \ previously declared here\n     long current_note_length_in_notes_notes_notes_notes_notes_bpm\
    \ = 0.0;\n          ^\n/tmp/tmp12xa2wup.cpp:37:10: error: redeclaration of 'long\
    \ int current_note_length_in_notes_notes_notes_notes_notes_octave'\n     long\
    \ current_note_length_in_notes_notes_notes_notes_notes_octave = 0.0;\n       \
    \   ^\n/tmp/tmp12xa2wup.cpp:34:10: error: 'long int current_note_length_in_notes_notes_notes_notes_notes_octave'\
    \ previously declared here\n     long current_note_length_in_notes_notes_notes_notes_notes_octave\
    \ = 0.0;\n          ^\n/tmp/tmp12xa2wup.cpp:38:10: error: redeclaration of 'long\
    \ int current_note_length_in_notes_notes_notes_notes_notes_notes'\n     long current_note_length_in_notes_notes_notes_notes_notes_notes\
    \ = 0.0;\n          ^\n/tmp/tmp12xa2wup.cpp:35:10: error: 'long int current_note_length_in_notes_notes_notes_notes_notes_notes'\
    \ previously declared here\n     long current_note_length_in_notes_notes_notes_notes_notes_notes\
    \ = 0.0;\n          ^\n/tmp/tmp12xa2wup.cpp:45:1: error: expected initializer\
    \ before '}' token\n }\n ^\n/tmp/tmp12xa2wup.cpp: In function 'int main()':\n\
    /tmp/tmp12xa2wup.cpp:47:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = parse_music;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp12xa2wup.cpp:2:\n/tmp/tmp12xa2wup.cpp:48:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmp12xa2wup.cpp:49:56:\
    \ warning: extended initializer lists only available with -std=c++11"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ bool is_note = false;\n    for (char c : music_string) {\n        if (c == 'o')\
    \ {\n            is_note = true;\n            beat = 0;\n            beats = 0;\n\
    \            note = \"\";\n        } else if (c == '|') {\n            is_note\
    \ = false;\n            beat = 0;\n            beats = 0;\n            note =\
    \ \"\";\n        } else if (is_note) {\n            note += c;\n        } else\
    \ {\n            beat += 1;\n            beats += 1;\n        }\n    }\n    beats.push_back(beat);\n\
    \    beats.push_back(beats);\n    return beats;\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptnjhttn3.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmptnjhttn3.cpp:16:10: error: conflicting declaration 'long int beats'\n\
    \     long beats = 0;\n          ^\n/tmp/tmptnjhttn3.cpp:13:23: error: 'beats'\
    \ has a previous declaration as 'std::vector<long int> beats'\n     std::vector<long>\
    \ beats;\n                       ^\n/tmp/tmptnjhttn3.cpp:18:19: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (char c : music_string)\
    \ {\n                   ^\n/tmp/tmptnjhttn3.cpp:22:19: error: no match for 'operator='\
    \ (operand types are 'std::vector<long int>' and 'int')\n             beats =\
    \ 0;\n                   ^\n/tmp/tmptnjhttn3.cpp:22:19: note: candidate is:\n\
    In file included from /usr/include/c++/4.8.2/vector:69:0,\n                 from\
    \ /usr/include/c++/4.8.2/queue:61,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptnjhttn3.cpp:2:\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5:\
    \ note: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp,\
    \ _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long int>]\n     vector<_Tp,\
    \ _Alloc>::\n     ^\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5: note:   no\
    \ known conversion for argument 1 from 'int' to 'const std::vector<long int>&'\n\
    /tmp/tmptnjhttn3.cpp:27:19: error: no match for 'operator=' (operand types are\
    \ 'std::vector<long int>' and 'int')\n             beats = 0;\n              \
    \     ^\n/tmp/tmptnjhttn3.cpp:27:19: note: candidate is:\nIn file included from\
    \ /usr/include/c++/4.8.2/vector:69:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptnjhttn3.cpp:2:\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5:\
    \ note: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp,\
    \ _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long int>]\n     vector<_Tp,\
    \ _Alloc>::\n     ^\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string current_note;\n    long current_beat = 0;\n    long\
    \ current_beats_length = 0;\n    for (char c : music_string) {\n        if (c\
    \ == 'o') {\n            current_note = current_note == \"o\" ? \"o|\" : \"o\"\
    ;\n            current_beats_length = 4;\n            current_beat = 0;\n    \
    \    } else if (c == '|') {\n            current_note = current_note == \"o\"\
    \ ? \"o|\" : \"o\";\n            current_beats_length = 2;\n            current_beat\
    \ = 0;\n        } else if (c == '.') {\n            current_note = current_note\
    \ == \"o\" ? \"o|\" : \"o\";\n            current_beats_length = 1;\n        \
    \    current_beat = 0;\n        } else {\n            if (current_beat == 0) {\n\
    \                current_beat += 1;\n                current_beats_length += 1;\n\
    \            } else if (current_beat == 1) {\n                current_beat +=\
    \ 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 2) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 3) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 4) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 5) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 6) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 7) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 8) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 9) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 10) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 11) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 12) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 13) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 14) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 15) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 16) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 17) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 18) {\n\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu2hetlpg.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpu2hetlpg.cpp:17:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : music_string) {\n                   ^\n/tmp/tmpu2hetlpg.cpp:88:12:\
    \ error: a function-definition is not allowed here before '{' token\n int main()\
    \ {\n            ^\n/tmp/tmpu2hetlpg.cpp:95:1: error: expected '}' at end of input\n\
    \ }\n ^\n/tmp/tmpu2hetlpg.cpp:95:1: error: expected '}' at end of input\n/tmp/tmpu2hetlpg.cpp:95:1:\
    \ error: expected '}' at end of input\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5y8ze_p.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpn5y8ze_p.cpp:88:1: error: expected initializer before '}' token\n }\n\
    \ ^\n/tmp/tmpn5y8ze_p.cpp: In function 'int main()':\n/tmp/tmpn5y8ze_p.cpp:90:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = parse_music;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5y8ze_p.cpp:2:\n/tmp/tmpn5y8ze_p.cpp:91:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmpn5y8ze_p.cpp:92:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmpn5y8ze_p.cpp:92:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmpn5y8ze_p.cpp:92:93: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpn5y8ze_p.cpp:92:93: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpn5y8ze_p.cpp:92:93:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpn5y8ze_p.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterato"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long current_beat = 0;\n\
    \    long current_note = 0;\n    long current_note_length = 0;\n    long current_note_length_in_bpm\
    \ = 1;\n    long current_note_length_in_beat = 1;\n    long current_note_length_in_beats\
    \ = 1;\n    long current_note_length_in_seconds = 1;\n    long current_note_length_in_minutes\
    \ = 1;\n    long current_note_length_in_hours = 1;\n    long current_note_length_in_days\
    \ = 1;\n    long current_note_length_in_weeks = 1;\n    long current_note_length_in_months\
    \ = 1;\n    long current_note_length_in_years = 1;\n    long current_note_length_in_centuries\
    \ = 1;\n    long current_note_length_in_milleniums = 1;\n    long current_note_length_in_thousands\
    \ = 1;\n    long current_note_length_in_tens = 1;\n    long current_note_length_in_hundreds\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptr4u49cj.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmptr4u49cj.cpp:37:10: error: redeclaration of 'long int current_note_length_in_tenths'\n\
    \     long current_note_length_in_tenths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:34:10:\
    \ error: 'long int current_note_length_in_tenths' previously declared here\n \
    \    long current_note_length_in_tenths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:38:10:\
    \ error: redeclaration of 'long int current_note_length_in_hundredths'\n     long\
    \ current_note_length_in_hundredths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:35:10:\
    \ error: 'long int current_note_length_in_hundredths' previously declared here\n\
    \     long current_note_length_in_hundredths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:39:10:\
    \ error: redeclaration of 'long int current_note_length_in_thousandths'\n    \
    \ long current_note_length_in_thousandths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:36:10:\
    \ error: 'long int current_note_length_in_thousandths' previously declared here\n\
    \     long current_note_length_in_thousandths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:40:10:\
    \ error: redeclaration of 'long int current_note_length_in_tenths'\n     long\
    \ current_note_length_in_tenths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:34:10:\
    \ error: 'long int current_note_length_in_tenths' previously declared here\n \
    \    long current_note_length_in_tenths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:41:10:\
    \ error: redeclaration of 'long int current_note_length_in_hundredths'\n     long\
    \ current_note_length_in_hundredths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:35:10:\
    \ error: 'long int current_note_length_in_hundredths' previously declared here\n\
    \     long current_note_length_in_hundredths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:42:10:\
    \ error: redeclaration of 'long int current_note_length_in_thousandths'\n    \
    \ long current_note_length_in_thousandths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:36:10:\
    \ error: 'long int current_note_length_in_thousandths' previously declared here\n\
    \     long current_note_length_in_thousandths = 1;\n          ^\n/tmp/tmptr4u49cj.cpp:43:10:\
    \ error: redeclara"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    bool is_note = false;\n    for (auto c : music_string) {\n        if (c ==\
    \ 'o') {\n            is_note = true;\n            note_count = 0;\n         \
    \   beat = 0;\n            note = \"\";\n        } else if (c == '|') {\n    \
    \        is_note = false;\n            note_count = 0;\n            beat = 0;\n\
    \            note = \"\";\n        } else if (is_note) {\n            note +=\
    \ c;\n            note_count += 1;\n        } else {\n            beat += 1;\n\
    \            beat_count += 1;\n        }\n    }\n    beats.push_back(beat);\n\
    \    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmx57fzjk.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpmx57fzjk.cpp:18:15: error: 'c' does not name a type\n     for (auto c\
    \ : music_string) {\n               ^\n/tmp/tmpmx57fzjk.cpp:37:5: error: expected\
    \ ';' before 'beats'\n     beats.push_back(beat);\n     ^\n/tmp/tmpmx57fzjk.cpp:37:25:\
    \ error: could not convert 'beats.std::vector<_Tp, _Alloc>::push_back<long int,\
    \ std::allocator<long int> >((*(const value_type*)(& beat)))' from 'void' to 'bool'\n\
    \     beats.push_back(beat);\n                         ^\n/tmp/tmpmx57fzjk.cpp:38:5:\
    \ error: expected primary-expression before 'return'\n     return beats;\n   \
    \  ^\n/tmp/tmpmx57fzjk.cpp:38:5: error: expected ')' before 'return'\n/tmp/tmpmx57fzjk.cpp:\
    \ In function 'int main()':\n/tmp/tmpmx57fzjk.cpp:41:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = parse_music;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmx57fzjk.cpp:2:\n/tmp/tmpmx57fzjk.cpp:42:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmpmx57fzjk.cpp:43:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmpmx57fzjk.cpp:43:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmpmx57fzjk.cpp:43:93: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpmx57fzjk.cpp:43:93: error: no matching function for call to 'std::vector<long\
    \ in"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp84fdhjdj.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmp84fdhjdj.cpp:16:10: error: conflicting declaration 'long int beats'\n\
    \     long beats = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:13:23: error: 'beats'\
    \ has a previous declaration as 'std::vector<long int> beats'\n     std::vector<long>\
    \ beats;\n                       ^\n/tmp/tmp84fdhjdj.cpp:18:10: error: conflicting\
    \ declaration 'long int note'\n     long note = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:14:17:\
    \ error: 'note' has a previous declaration as 'std::string note'\n     std::string\
    \ note;\n                 ^\n/tmp/tmp84fdhjdj.cpp:19:10: error: redeclaration\
    \ of 'long int notes'\n     long notes = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:17:10:\
    \ error: 'long int notes' previously declared here\n     long notes = 0;\n   \
    \       ^\n/tmp/tmp84fdhjdj.cpp:20:10: error: conflicting declaration 'long int\
    \ note'\n     long note = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:14:17: error:\
    \ 'note' has a previous declaration as 'std::string note'\n     std::string note;\n\
    \                 ^\n/tmp/tmp84fdhjdj.cpp:21:10: error: redeclaration of 'long\
    \ int notes'\n     long notes = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:17:10: error:\
    \ 'long int notes' previously declared here\n     long notes = 0;\n          ^\n\
    /tmp/tmp84fdhjdj.cpp:22:10: error: conflicting declaration 'long int note'\n \
    \    long note = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:14:17: error: 'note' has\
    \ a previous declaration as 'std::string note'\n     std::string note;\n     \
    \            ^\n/tmp/tmp84fdhjdj.cpp:23:10: error: redeclaration of 'long int\
    \ notes'\n     long notes = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:17:10: error:\
    \ 'long int notes' previously declared here\n     long notes = 0;\n          ^\n\
    /tmp/tmp84fdhjdj.cpp:24:10: error: conflicting declaration 'long int note'\n \
    \    long note = 0;\n          ^\n/tmp/tmp84fdhjdj.cpp:14:17: error: 'note' has\
    \ a previous declaration as 'std::string note'\n     std::string note;\n     \
    \            ^\n/tmp/tmp84fdhjdj.cpp:25:10: error: redeclaration of 'long int\
    \ notes'\n     long notes = 0;\n          ^"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_count = 0;\n    long note_length\
    \ = 0;\n    long note_length_count = 0;\n    long note_length = 0;\n    long note_length_count2\
    \ = 0;\n    long note_length2 = 0;\n    long note_length_count3 = 0;\n    long\
    \ note_length3 = 0;\n    long note_length_count4 = 0;\n    long note_length4 =\
    \ 0;\n    long note_length_count5 = 0;\n    long note_length5 = 0;\n    long note_length_count6\
    \ = 0;\n    long note_length6 = 0;\n    long note_length_count7 = 0;\n    long\
    \ note_length7 = 0;\n    long note_length_count8 = 0;\n    long note_length8 =\
    \ 0;\n    long note_length_count9 = 0;\n    long note_length9 = 0;\n    long note_length_count10\
    \ = 0;\n    long note_length10 = 0;\n    long note_length_count11 = 0;\n    long\
    \ note_length11 = 0;\n    long note_length_count12 = 0;\n    long note_length12\
    \ = 0;\n    long note_length_count13 = 0;\n    long note_length13 = 0;\n    long\
    \ note_length_count14 = 0;\n    long note_length14 = 0;\n    long note_length_count15\
    \ = 0;\n    long note_length15 = 0;\n    long note_length_count16 = 0;\n    long\
    \ note_length16 = 0;\n    long note_length_count17 = 0;\n    long note_length17\
    \ = 0;\n    long note_length_count18 = 0;\n    long note_length18 = 0;\n    long\
    \ note_length_count19 = 0;\n    long note_length19 = 0;\n    long note_length_count20\
    \ = 0;\n    long note_length20 = 0;\n    long note_length_count21 = 0;\n    long\
    \ note_length21 = 0;\n    long note_length_count22 = 0;\n    long note_length22\
    \ = 0;\n    long note_length_count23 = 0;\n    long note_length23 = 0;\n    long\
    \ note_length_count24 = 0;\n    long note_length24 = 0;\n    long note_length_count25\
    \ = 0;\n    long note_length25 = 0;\n    long note_length_count26 = 0;\n    long\
    \ note_length26 = 0;\n    long note_length_count27 = 0;\n    long note_length27\
    \ = 0;\n    long note_length_count28 = 0;\n    long note_length28 = 0;\n    long\
    \ note_length_count29 = 0;\n    long note_length29 = 0;\n    long note_length_count30\
    \ = 0;\n    long note_length30 = 0;\n    long note_length_count31 = 0;\n    long\
    \ note_length31 = 0;\n    long note_length_count32 = 0;\n    long note_length32\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwe20piw6.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpwe20piw6.cpp:16:10: error: conflicting declaration 'long int beats'\n\
    \     long beats = 0;\n          ^\n/tmp/tmpwe20piw6.cpp:13:23: error: 'beats'\
    \ has a previous declaration as 'std::vector<long int> beats'\n     std::vector<long>\
    \ beats;\n                       ^\n/tmp/tmpwe20piw6.cpp:18:10: error: conflicting\
    \ declaration 'long int note'\n     long note = 0;\n          ^\n/tmp/tmpwe20piw6.cpp:14:17:\
    \ error: 'note' has a previous declaration as 'std::string note'\n     std::string\
    \ note;\n                 ^\n/tmp/tmpwe20piw6.cpp:22:10: error: redeclaration\
    \ of 'long int note_length'\n     long note_length = 0;\n          ^\n/tmp/tmpwe20piw6.cpp:20:10:\
    \ error: 'long int note_length' previously declared here\n     long note_length\
    \ = 0;\n          ^\n/tmp/tmpwe20piw6.cpp:85:1: error: expected initializer before\
    \ '}' token\n }\n ^\n/tmp/tmpwe20piw6.cpp: In function 'int main()':\n/tmp/tmpwe20piw6.cpp:87:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = parse_music;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwe20piw6.cpp:2:\n/tmp/tmpwe20piw6.cpp:88:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmpwe20piw6.cpp:89:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmpwe20piw6.cpp:89:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmpwe20piw6.c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            note_count++;\n            beat = 0;\n\
    \            beats.push_back(beat);\n            last_beat = beat;\n         \
    \   last_note = note_count;\n        } else if (c == '|') {\n            note_count++;\n\
    \            beat = 0;\n            beats.push_back(beat);\n            last_beat\
    \ = beat;\n            last_note = note_count;\n        } else if (c == ' ') {\n\
    \            beat = 0;\n            beats.push_back(beat);\n            last_beat\
    \ = beat;\n            last_note = note_count;\n        } else if (c == '.') {\n\
    \            beat = 0;\n            beats.push_back(beat);\n            last_beat\
    \ = beat;\n            last_note = note_count;\n        } else {\n           \
    \ note_count++;\n            beat = 0;\n            beats.push_back(beat);\n \
    \           last_beat = beat;\n            last_note = note_count;\n        }\n\
    \    }\n    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8642ud25.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmp8642ud25.cpp:19:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : music_string) {\n                   ^\n/tmp/tmp8642ud25.cpp:\
    \ In function 'int main()':\n/tmp/tmp8642ud25.cpp:53:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = parse_music;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8642ud25.cpp:2:\n/tmp/tmp8642ud25.cpp:54:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmp8642ud25.cpp:55:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmp8642ud25.cpp:55:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmp8642ud25.cpp:55:93: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp8642ud25.cpp:55:93: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8642ud25.cpp:55:93:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp8642ud25.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    for (auto c : music_string) {\n\
    \        if (c == 'o') {\n            is_note = true;\n            beat = 0;\n\
    \            last_beat = 0;\n            is_last_note = false;\n            is_last_beat\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '|') {\n\
    \            is_note = true;\n            beat = 0;\n            last_beat = 0;\n\
    \            is_last_note = false;\n            is_last_beat = false;\n      \
    \  } else if (c == ' ') {\n            is_note = false;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '.') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == 'o') {\n            is_note =\
    \ true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '|') {\n\
    \            is_note = true;\n            beat = 0;\n            last_beat = 0;\n\
    \            is_last_note = false;\n            is_last_beat = false;\n      \
    \  } else if (c == ' ') {\n            is_note = false;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '.') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == 'o') {\n            is_note =\
    \ true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '|') {\n\
    \            is_note = true;\n            beat = 0;\n            last_beat = 0;\n\
    \            is_last_note = false;\n            is_last_beat = false;\n      \
    \  } else if (c == ' ') {\n            is_note = false;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '.') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == 'o') {\n            is_note =\
    \ true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '|') {\n\
    \            is_note = true;\n            beat = 0;\n            last_beat = 0;\n\
    \            is_last_note = false;\n            is_last_beat = false;\n      \
    \  } else if (c == ' ') {\n            is_note = false;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '.') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == 'o') {\n            is_note =\
    \ true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == '|') {\n\
    \            is_note = true;\n            beat = 0;\n            last_beat = 0;\n\
    \            is_last_note = false;\n            is_last_beat = false;\n      \
    \  } else if (c == ' ') {\n            is_note = false;\n            is_last_note\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_9o7q25n.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmp_9o7q25n.cpp:20:10: error: redeclaration of 'bool is_last_beat'\n    \
    \ bool is_last_beat = false;\n          ^\n/tmp/tmp_9o7q25n.cpp:19:10: error:\
    \ 'bool is_last_beat' previously declared here\n     bool is_last_beat = false;\n\
    \          ^\n/tmp/tmp_9o7q25n.cpp:21:15: error: 'c' does not name a type\n  \
    \   for (auto c : music_string) {\n               ^\n/tmp/tmp_9o7q25n.cpp:126:1:\
    \ error: expected ';' at end of input\n }\n ^\n/tmp/tmp_9o7q25n.cpp:126:1: error:\
    \ expected primary-expression at end of input\n/tmp/tmp_9o7q25n.cpp:126:1: error:\
    \ expected ';' at end of input\n/tmp/tmp_9o7q25n.cpp:126:1: error: expected primary-expression\
    \ at end of input\n/tmp/tmp_9o7q25n.cpp:126:1: error: expected ')' at end of input\n\
    /tmp/tmp_9o7q25n.cpp:126:1: error: expected statement at end of input\n/tmp/tmp_9o7q25n.cpp:126:1:\
    \ error: expected '}' at end of input\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    for (char c : music_string) {\n        if (c == 'o') {\n            beat_count++;\n\
    \            beats.push_back(beat);\n            beat = 0;\n            note_count\
    \ = 0;\n        } else if (c == '|') {\n            beat_count++;\n          \
    \  beats.push_back(beat);\n            beat = 0;\n            note_count = 0;\n\
    \        } else if (c == ' ') {\n            beat_count++;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            note_count = 0;\n        } else if (c == '.')\
    \ {\n            beat_count++;\n            beats.push_back(beat);\n         \
    \   beat = 0;\n            note_count = 0;\n        } else {\n            beat_count++;\n\
    \            beat = beat * 10 + c - '0';\n            note_count++;\n        }\n\
    \    }\n    beats.push_back(beat);\n    return beats;\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi1ej6olc.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpi1ej6olc.cpp:17:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : music_string) {\n                   ^\n/tmp/tmpi1ej6olc.cpp:19:13:\
    \ error: 'beat_count' was not declared in this scope\n             beat_count++;\n\
    \             ^\n/tmp/tmpi1ej6olc.cpp:24:13: error: 'beat_count' was not declared\
    \ in this scope\n             beat_count++;\n             ^\n/tmp/tmpi1ej6olc.cpp:29:13:\
    \ error: 'beat_count' was not declared in this scope\n             beat_count++;\n\
    \             ^\n/tmp/tmpi1ej6olc.cpp:34:13: error: 'beat_count' was not declared\
    \ in this scope\n             beat_count++;\n             ^\n/tmp/tmpi1ej6olc.cpp:39:13:\
    \ error: 'beat_count' was not declared in this scope\n             beat_count++;\n\
    \             ^\n/tmp/tmpi1ej6olc.cpp: In function 'int main()':\n/tmp/tmpi1ej6olc.cpp:48:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = parse_music;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi1ej6olc.cpp:2:\n/tmp/tmpi1ej6olc.cpp:49:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmpi1ej6olc.cpp:50:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmpi1ej6olc.cpp:50:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmpi1ej6olc.cpp:50:93: warning: extended initializer\
    \ lists only available with -std="
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ bool is_note = false;\n    for (auto c : music_string) {\n        if (c == 'o')\
    \ {\n            is_note = true;\n            note = \"o\";\n            beat\
    \ = 0;\n            beats = 0;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            note = \"|\";\n            beat = 0;\n            beats\
    \ = 0;\n        } else if (c == ' ') {\n            is_note = false;\n       \
    \     beat = 0;\n            beats = 0;\n        } else {\n            if (is_note)\
    \ {\n                beat += 1;\n                beats += 1;\n            }\n\
    \        }\n    }\n    beats.push_back(beat);\n    return beats;\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ziuwd0l.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmp_ziuwd0l.cpp:16:10: error: conflicting declaration 'long int beats'\n\
    \     long beats = 0;\n          ^\n/tmp/tmp_ziuwd0l.cpp:13:23: error: 'beats'\
    \ has a previous declaration as 'std::vector<long int> beats'\n     std::vector<long>\
    \ beats;\n                       ^\n/tmp/tmp_ziuwd0l.cpp:18:15: error: 'c' does\
    \ not name a type\n     for (auto c : music_string) {\n               ^\n/tmp/tmp_ziuwd0l.cpp:40:5:\
    \ error: expected ';' before 'beats'\n     beats.push_back(beat);\n     ^\n/tmp/tmp_ziuwd0l.cpp:40:25:\
    \ error: could not convert 'beats.std::vector<_Tp, _Alloc>::push_back<long int,\
    \ std::allocator<long int> >((*(const value_type*)(& beat)))' from 'void' to 'bool'\n\
    \     beats.push_back(beat);\n                         ^\n/tmp/tmp_ziuwd0l.cpp:41:5:\
    \ error: expected primary-expression before 'return'\n     return beats;\n   \
    \  ^\n/tmp/tmp_ziuwd0l.cpp:41:5: error: expected ')' before 'return'\n/tmp/tmp_ziuwd0l.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ziuwd0l.cpp:44:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = parse_music;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_ziuwd0l.cpp:2:\n/tmp/tmp_ziuwd0l.cpp:45:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmp_ziuwd0l.cpp:46:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmp_ziuwd0l.cpp:46:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                               "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_note_beat\
    \ = 0;\n    long last_note_beat_beat = 0;\n    long last_note_beat_beat_beat =\
    \ 0;\n    long last_note_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n    long\
    \ last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_be\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa_kf9vyp.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpa_kf9vyp.cpp:34:10: error: redeclaration of 'long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\n\
    \     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpa_kf9vyp.cpp:33:10: error: 'long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\
    \ previously declared here\n     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpa_kf9vyp.cpp:39:1: error: expected initializer before\
    \ '}' token\n }\n ^\n/tmp/tmpa_kf9vyp.cpp: In function 'int main()':\n/tmp/tmpa_kf9vyp.cpp:41:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = parse_music;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa_kf9vyp.cpp:2:\n/tmp/tmpa_kf9vyp.cpp:42:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmpa_kf9vyp.cpp:43:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmpa_kf9vyp.cpp:43:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmpa_kf9vyp.cpp:43:93: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpa_kf9vyp.cpp:43:93: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ bool is_note = false;\n    bool is_last_note = false;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            is_note = true;\n            beat =\
    \ 0;\n            beats = 0;\n            is_last_note = false;\n        } else\
    \ if (c == '|') {\n            is_note = true;\n            beat = 0;\n      \
    \      beats = 0;\n            is_last_note = true;\n        } else if (c == '\
    \ ') {\n            is_note = false;\n            beat = 0;\n            beats\
    \ = 0;\n            is_last_note = false;\n        } else if (c == '.') {\n  \
    \          is_note = false;\n            beat = 0;\n            beats = 0;\n \
    \           is_last_note = true;\n        } else {\n            if (is_note) {\n\
    \                beat += 1;\n                beats += 1;\n            }\n    \
    \    }\n    }\n    beats.push_back(beat);\n    beats.push_back(beats);\n    return\
    \ beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnqdt3qxr.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpnqdt3qxr.cpp:16:10: error: conflicting declaration 'long int beats'\n\
    \     long beats = 0;\n          ^\n/tmp/tmpnqdt3qxr.cpp:13:23: error: 'beats'\
    \ has a previous declaration as 'std::vector<long int> beats'\n     std::vector<long>\
    \ beats;\n                       ^\n/tmp/tmpnqdt3qxr.cpp:19:19: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (char c : music_string)\
    \ {\n                   ^\n/tmp/tmpnqdt3qxr.cpp:23:19: error: no match for 'operator='\
    \ (operand types are 'std::vector<long int>' and 'int')\n             beats =\
    \ 0;\n                   ^\n/tmp/tmpnqdt3qxr.cpp:23:19: note: candidate is:\n\
    In file included from /usr/include/c++/4.8.2/vector:69:0,\n                 from\
    \ /usr/include/c++/4.8.2/queue:61,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpnqdt3qxr.cpp:2:\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5:\
    \ note: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp,\
    \ _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long int>]\n     vector<_Tp,\
    \ _Alloc>::\n     ^\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5: note:   no\
    \ known conversion for argument 1 from 'int' to 'const std::vector<long int>&'\n\
    /tmp/tmpnqdt3qxr.cpp:28:19: error: no match for 'operator=' (operand types are\
    \ 'std::vector<long int>' and 'int')\n             beats = 0;\n              \
    \     ^\n/tmp/tmpnqdt3qxr.cpp:28:19: note: candidate is:\nIn file included from\
    \ /usr/include/c++/4.8.2/vector:69:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpnqdt3qxr.cpp:2:\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5:\
    \ note: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp,\
    \ _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long int>]\n     vector<_Tp,\
    \ _Alloc>::\n     ^\n/usr/include/c++/4.8.2/bits/vector.tcc:160:5"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    for (auto c : music_string)\
    \ {\n        if (c == 'o') {\n            is_note = true;\n            note =\
    \ \"o\";\n            beat = 0;\n            last_note = note;\n            last_beat\
    \ = beat;\n        } else if (c == '|') {\n            is_note = true;\n     \
    \       note = \"o|\";\n            beat = 0;\n            last_note = note;\n\
    \            last_beat = beat;\n        } else if (c == ' ') {\n            is_note\
    \ = false;\n            note = \".\";\n            beat = 0;\n            last_note\
    \ = note;\n            last_beat = beat;\n        } else if (c == '.') {\n   \
    \         is_note = false;\n            note = \".\";\n            beat = 0;\n\
    \            last_note = note;\n            last_beat = beat;\n        } else\
    \ if (is_note) {\n            beat += 1;\n            last_beat = beat;\n    \
    \        last_note = note;\n        } else {\n            std::cerr << \"Invalid\
    \ music string!\" << std::endl;\n            exit(1);\n        }\n    }\n    beats.push_back(last_beat);\n\
    \    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyb_crnvo.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpyb_crnvo.cpp:19:15: error: 'c' does not name a type\n     for (auto c\
    \ : music_string) {\n               ^\n/tmp/tmpyb_crnvo.cpp:53:5: error: expected\
    \ ';' before 'beats'\n     beats.push_back(last_beat);\n     ^\n/tmp/tmpyb_crnvo.cpp:53:30:\
    \ error: could not convert 'beats.std::vector<_Tp, _Alloc>::push_back<long int,\
    \ std::allocator<long int> >((*(const value_type*)(& last_beat)))' from 'void'\
    \ to 'bool'\n     beats.push_back(last_beat);\n                              ^\n\
    /tmp/tmpyb_crnvo.cpp:54:5: error: expected primary-expression before 'return'\n\
    \     return beats;\n     ^\n/tmp/tmpyb_crnvo.cpp:54:5: error: expected ')' before\
    \ 'return'\n/tmp/tmpyb_crnvo.cpp: In function 'int main()':\n/tmp/tmpyb_crnvo.cpp:57:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = parse_music;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyb_crnvo.cpp:2:\n/tmp/tmpyb_crnvo.cpp:58:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n                          ^\n/tmp/tmpyb_crnvo.cpp:59:56:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n                                           \
    \             ^\n/tmp/tmpyb_crnvo.cpp:59:93: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \                                                                            \
    \                ^\n/tmp/tmpyb_crnvo.cpp:59:93: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpyb_crnvo.cpp:59:93: error: no matching function for call to "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return vector of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
    \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
    \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n \
    \   long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaygokec7.cpp: In function 'std::vector<long int> parse_music(std::string)':\n\
    /tmp/tmpaygokec7.cpp:30:10: error: redeclaration of 'long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\n\
    \     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpaygokec7.cpp:29:10: error: 'long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\
    \ previously declared here\n     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpaygokec7.cpp:33:10: error: redeclaration of 'long\
    \ int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\n\
    \     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpaygokec7.cpp:32:10: error: 'long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\
    \ previously declared here\n     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpaygokec7.cpp:34:10: error: redeclaration of 'long\
    \ int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\n\
    \     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpaygokec7.cpp:32:10: error: 'long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\
    \ previously declared here\n     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpaygokec7.cpp:37:10: error: redeclaration of 'long\
    \ int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\n\
    \     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n          ^\n/tmp/tmpaygokec7.cpp:36:10: error: 'long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat'\
    \ previously declared here\n     long last_note_beat_beat_beat_beat_beat_beat"
  stdout: ''

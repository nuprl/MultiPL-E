language: cpp
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += fabs(number\
    \ - numbers[0]);\n  }\n  return sum / numbers.size();\n}\nint main() {\n    auto\
    \ candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyme8v5db.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpyme8v5db.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpyme8v5db.cpp:\
    \ In function 'int main()':\n/tmp/tmpyme8v5db.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpyme8v5db.cpp:2:\n/tmp/tmpyme8v5db.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpyme8v5db.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpyme8v5db.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpyme8v5db.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpyme8v5db.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpyme8v5db.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += fabs(number);\n\
    \  }\n  return sum / numbers.size();\n}\nint main() {\n    auto candidate = mean_absolute_deviation;\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpokto3f_l.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpokto3f_l.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpokto3f_l.cpp:\
    \ In function 'int main()':\n/tmp/tmpokto3f_l.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpokto3f_l.cpp:2:\n/tmp/tmpokto3f_l.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpokto3f_l.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpokto3f_l.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpokto3f_l.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpokto3f_l.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpokto3f_l.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  assert(numbers.size() > 0);\n  float sum = 0;\n  for (float number\
    \ : numbers) {\n    sum += std::abs(number - numbers.front());\n  }\n  return\
    \ sum / numbers.size();\n}\nint main() {\n    auto candidate = mean_absolute_deviation;\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe85q0l3z.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpe85q0l3z.cpp:13:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpe85q0l3z.cpp:\
    \ In function 'int main()':\n/tmp/tmpe85q0l3z.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpe85q0l3z.cpp:2:\n/tmp/tmpe85q0l3z.cpp:20:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpe85q0l3z.cpp:20:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpe85q0l3z.cpp:20:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpe85q0l3z.cpp:20:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpe85q0l3z.cpp:21:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpe85q0l3z.cpp:21:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += std::abs(number\
    \ - numbers[0]);\n  }\n  return sum / numbers.size();\n}\nint main() {\n    auto\
    \ candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbu04g8wm.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpbu04g8wm.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpbu04g8wm.cpp:\
    \ In function 'int main()':\n/tmp/tmpbu04g8wm.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpbu04g8wm.cpp:2:\n/tmp/tmpbu04g8wm.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpbu04g8wm.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpbu04g8wm.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpbu04g8wm.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpbu04g8wm.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpbu04g8wm.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += fabs(number);\n\
    \  }\n  return sum / numbers.size();\n}\nint main() {\n    auto candidate = mean_absolute_deviation;\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpokto3f_l.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpokto3f_l.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpokto3f_l.cpp:\
    \ In function 'int main()':\n/tmp/tmpokto3f_l.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpokto3f_l.cpp:2:\n/tmp/tmpokto3f_l.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpokto3f_l.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpokto3f_l.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpokto3f_l.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpokto3f_l.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpokto3f_l.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n    float sum = 0;\n    float mean = numbers.front();\n    for (auto\
    \ number : numbers) {\n        sum += (number - mean) * (number - mean);\n   \
    \ }\n    return sum / numbers.size();\n}\nint main() {\n    auto candidate = mean_absolute_deviation;\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiyanq766.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpiyanq766.cpp:13:15: error: 'number' does not name a type\n     for (auto\
    \ number : numbers) {\n               ^\n/tmp/tmpiyanq766.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return sum / numbers.size();\n     ^\n/tmp/tmpiyanq766.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpiyanq766.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpiyanq766.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpiyanq766.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpiyanq766.cpp: In function 'int main()':\n/tmp/tmpiyanq766.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = mean_absolute_deviation;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiyanq766.cpp:2:\n/tmp/tmpiyanq766.cpp:20:41: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpiyanq766.cpp:20:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpiyanq766.cpp:20:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpiyanq766.cpp:20:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpiyanq766.cpp:21:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  // Calculate the mean of the dataset\n  float mean = std::accumulate(numbers.begin(),\
    \ numbers.end(), 0.0f) / numbers.size();\n  // Calculate the absolute difference\
    \ between each element and the mean\n  float deviation = 0;\n  for (float number\
    \ : numbers) {\n    deviation += std::fabs(number - mean);\n  }\n  // Return the\
    \ mean absolute deviation\n  return deviation / numbers.size();\n}\nint main()\
    \ {\n    auto candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpog5irqys.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpog5irqys.cpp:15:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpog5irqys.cpp:\
    \ In function 'int main()':\n/tmp/tmpog5irqys.cpp:22:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpog5irqys.cpp:2:\n/tmp/tmpog5irqys.cpp:23:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpog5irqys.cpp:23:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpog5irqys.cpp:23:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpog5irqys.cpp:23:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpog5irqys.cpp:24:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpog5irqys.cpp:24:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  assert(numbers.size() > 0);\n  float sum = 0;\n  for (float number\
    \ : numbers) {\n    sum += std::abs(number - numbers.front());\n  }\n  return\
    \ sum / numbers.size();\n}\nint main() {\n    auto candidate = mean_absolute_deviation;\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe85q0l3z.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpe85q0l3z.cpp:13:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpe85q0l3z.cpp:\
    \ In function 'int main()':\n/tmp/tmpe85q0l3z.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpe85q0l3z.cpp:2:\n/tmp/tmpe85q0l3z.cpp:20:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpe85q0l3z.cpp:20:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpe85q0l3z.cpp:20:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpe85q0l3z.cpp:20:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpe85q0l3z.cpp:21:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpe85q0l3z.cpp:21:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += fabs(number\
    \ - numbers[0]);\n  }\n  return sum / numbers.size();\n}\nint main() {\n    auto\
    \ candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyme8v5db.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpyme8v5db.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpyme8v5db.cpp:\
    \ In function 'int main()':\n/tmp/tmpyme8v5db.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpyme8v5db.cpp:2:\n/tmp/tmpyme8v5db.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpyme8v5db.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpyme8v5db.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpyme8v5db.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpyme8v5db.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpyme8v5db.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n    float sum = 0;\n    float mean = numbers.front();\n    for (float\
    \ number : numbers) {\n        sum += (number - mean) * (number - mean);\n   \
    \ }\n    return std::sqrt(sum / numbers.size());\n}\nint main() {\n    auto candidate\
    \ = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4hu_4tf_.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmp4hu_4tf_.cpp:13:25: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (float number : numbers) {\n                         ^\n\
    /tmp/tmp4hu_4tf_.cpp: In function 'int main()':\n/tmp/tmp4hu_4tf_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = mean_absolute_deviation;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4hu_4tf_.cpp:2:\n/tmp/tmp4hu_4tf_.cpp:20:41: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmp4hu_4tf_.cpp:20:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmp4hu_4tf_.cpp:20:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp4hu_4tf_.cpp:20:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmp4hu_4tf_.cpp:21:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmp4hu_4tf_.cpp:21:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                               "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n    float mean = accumulate(numbers.begin(), numbers.end(), 0.0f)\
    \ / numbers.size();\n    float sum = 0.0f;\n    for (float number : numbers) {\n\
    \        sum += std::abs(number - mean);\n    }\n    return sum / numbers.size();\n\
    }\nint main() {\n    auto candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi2v5cg9q.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpi2v5cg9q.cpp:13:25: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (float number : numbers) {\n                         ^\n\
    /tmp/tmpi2v5cg9q.cpp: In function 'int main()':\n/tmp/tmpi2v5cg9q.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = mean_absolute_deviation;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi2v5cg9q.cpp:2:\n/tmp/tmpi2v5cg9q.cpp:20:41: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpi2v5cg9q.cpp:20:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpi2v5cg9q.cpp:20:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpi2v5cg9q.cpp:20:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpi2v5cg9q.cpp:21:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpi2v5cg9q.cpp:21:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                               "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n    float sum = 0;\n    float mean = numbers.front();\n    for (float\
    \ number : numbers) {\n        sum += (number - mean) * (number - mean);\n   \
    \ }\n    return sum / numbers.size();\n}\nint main() {\n    auto candidate = mean_absolute_deviation;\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph2_xam9u.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmph2_xam9u.cpp:13:25: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (float number : numbers) {\n                         ^\n\
    /tmp/tmph2_xam9u.cpp: In function 'int main()':\n/tmp/tmph2_xam9u.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = mean_absolute_deviation;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph2_xam9u.cpp:2:\n/tmp/tmph2_xam9u.cpp:20:41: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmph2_xam9u.cpp:20:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmph2_xam9u.cpp:20:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmph2_xam9u.cpp:20:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmph2_xam9u.cpp:21:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmph2_xam9u.cpp:21:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                               "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  assert(numbers.size() > 0);\n  float mean = numbers[0];\n  float\
    \ sum = 0;\n  for (auto number : numbers) {\n    sum += std::abs(number - mean);\n\
    \    mean = sum / numbers.size();\n  }\n  return sum / numbers.size();\n}\nint\
    \ main() {\n    auto candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp593hq183.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmp593hq183.cpp:14:13: error: 'number' does not name a type\n   for (auto\
    \ number : numbers) {\n             ^\n/tmp/tmp593hq183.cpp:18:3: error: expected\
    \ ';' before 'return'\n   return sum / numbers.size();\n   ^\n/tmp/tmp593hq183.cpp:18:3:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp593hq183.cpp:18:3:\
    \ error: expected ';' before 'return'\n/tmp/tmp593hq183.cpp:18:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp593hq183.cpp:18:3: error: expected\
    \ ')' before 'return'\n/tmp/tmp593hq183.cpp: In function 'int main()':\n/tmp/tmp593hq183.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = mean_absolute_deviation;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp593hq183.cpp:2:\n/tmp/tmp593hq183.cpp:22:41: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmp593hq183.cpp:22:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmp593hq183.cpp:22:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp593hq183.cpp:22:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmp593hq183.cpp:23:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += fabs(number\
    \ - numbers[0]);\n  }\n  return sum / numbers.size();\n}\nint main() {\n    auto\
    \ candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyme8v5db.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpyme8v5db.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpyme8v5db.cpp:\
    \ In function 'int main()':\n/tmp/tmpyme8v5db.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpyme8v5db.cpp:2:\n/tmp/tmpyme8v5db.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpyme8v5db.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpyme8v5db.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpyme8v5db.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpyme8v5db.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpyme8v5db.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += fabs(number\
    \ - numbers[0]);\n  }\n  return sum / numbers.size();\n}\nint main() {\n    auto\
    \ candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyme8v5db.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpyme8v5db.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpyme8v5db.cpp:\
    \ In function 'int main()':\n/tmp/tmpyme8v5db.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpyme8v5db.cpp:2:\n/tmp/tmpyme8v5db.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpyme8v5db.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpyme8v5db.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpyme8v5db.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpyme8v5db.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpyme8v5db.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  assert(numbers.size() > 0);\n  float sum = 0;\n  for (float number\
    \ : numbers) {\n    sum += fabs(number - numbers.front());\n  }\n  return sum\
    \ / numbers.size();\n}\nint main() {\n    auto candidate = mean_absolute_deviation;\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuyq14jcy.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpuyq14jcy.cpp:13:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpuyq14jcy.cpp:\
    \ In function 'int main()':\n/tmp/tmpuyq14jcy.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpuyq14jcy.cpp:2:\n/tmp/tmpuyq14jcy.cpp:20:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpuyq14jcy.cpp:20:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpuyq14jcy.cpp:20:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpuyq14jcy.cpp:20:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpuyq14jcy.cpp:21:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpuyq14jcy.cpp:21:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float num : numbers) {\n    sum += std::abs(num\
    \ - numbers.at(0));\n  }\n  return sum / numbers.size();\n}\nint main() {\n  \
    \  auto candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv7tqp4s8.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpv7tqp4s8.cpp:12:20: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float num : numbers) {\n                    ^\n/tmp/tmpv7tqp4s8.cpp:\
    \ In function 'int main()':\n/tmp/tmpv7tqp4s8.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpv7tqp4s8.cpp:2:\n/tmp/tmpv7tqp4s8.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpv7tqp4s8.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpv7tqp4s8.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpv7tqp4s8.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpv7tqp4s8.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpv7tqp4s8.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n    float sum = 0;\n    for (float num : numbers) {\n        sum\
    \ += std::abs(num);\n    }\n    return sum / numbers.size();\n}\nint main() {\n\
    \    auto candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzqrhnhoq.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpzqrhnhoq.cpp:12:22: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (float num : numbers) {\n                      ^\n/tmp/tmpzqrhnhoq.cpp:\
    \ In function 'int main()':\n/tmp/tmpzqrhnhoq.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpzqrhnhoq.cpp:2:\n/tmp/tmpzqrhnhoq.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpzqrhnhoq.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpzqrhnhoq.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpzqrhnhoq.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpzqrhnhoq.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpzqrhnhoq.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                     "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += fabs(number\
    \ - numbers[0]);\n  }\n  return sum / numbers.size();\n}\nint main() {\n    auto\
    \ candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyme8v5db.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpyme8v5db.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpyme8v5db.cpp:\
    \ In function 'int main()':\n/tmp/tmpyme8v5db.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpyme8v5db.cpp:2:\n/tmp/tmpyme8v5db.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpyme8v5db.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpyme8v5db.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpyme8v5db.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpyme8v5db.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpyme8v5db.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given vector of\
    \ input numbers, calculate Mean Absolute Deviation\n// around the mean of this\
    \ dataset.\n// Mean Absolute Deviation is the average absolute difference between\
    \ each\n// element and a centerpoint (mean in this case):\n// MAD = average |\
    \ x - x_mean |\n// >>> mean_absolute_deviation((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0})))\n// (1.0)\nfloat mean_absolute_deviation(std::vector<float>\
    \ numbers) {\n  float sum = 0;\n  for (float number : numbers) {\n    sum += std::abs(number\
    \ - numbers.front());\n  }\n  return sum / numbers.size();\n}\nint main() {\n\
    \    auto candidate = mean_absolute_deviation;\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n    assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0, (float)5.0}))) == (1.2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwffmcmu5.cpp: In function 'float mean_absolute_deviation(std::vector<float>)':\n\
    /tmp/tmpwffmcmu5.cpp:12:23: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n   for (float number : numbers) {\n                       ^\n/tmp/tmpwffmcmu5.cpp:\
    \ In function 'int main()':\n/tmp/tmpwffmcmu5.cpp:18:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = mean_absolute_deviation;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpwffmcmu5.cpp:2:\n/tmp/tmpwffmcmu5.cpp:19:41: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<float>({(float)1.0, (float)2.0})))\
    \ == (0.5));\n                                         ^\n/tmp/tmpwffmcmu5.cpp:19:66:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0}))) == (0.5));\n                                                \
    \                  ^\n/tmp/tmpwffmcmu5.cpp:19:66: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpwffmcmu5.cpp:19:68: error: 'candidate' was not declared in this scope\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0}))) == (0.5));\n\
    \                                                                    ^\n/tmp/tmpwffmcmu5.cpp:20:41:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<float>({(float)1.0,\
    \ (float)2.0, (float)3.0, (float)4.0}))) == (1.0));\n                        \
    \                 ^\n/tmp/tmpwffmcmu5.cpp:20:90: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
    \ (float)4.0}))) == (1.0));\n                                   "
  stdout: ''

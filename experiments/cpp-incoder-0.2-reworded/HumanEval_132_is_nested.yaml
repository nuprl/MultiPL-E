name: HumanEval_132_is_nested
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ a string as input which contains only square brackets.\n// The function should\
  \ return true if and only if there is a valid subsequence of brackets \n// where\
  \ at least one bracket in the subsequence is nested.\n// >>> is_nested((\"[[]]\"\
  ))\n// (true)\n// >>> is_nested((\"[]]]]]]][[[[[]\"))\n// (false)\n// >>> is_nested((\"\
  [][]\"))\n// (false)\n// >>> is_nested((\"[]\"))\n// (false)\n// >>> is_nested((\"\
  [[][]]\"))\n// (true)\n// >>> is_nested((\"[[]][[\"))\n// (true)\nbool is_nested(std::string\
  \ string) {\n"
tests: "}\nint main() {\n    auto candidate = is_nested;\n    assert(candidate((\"\
  [[]]\")) == (true));\n    assert(candidate((\"[]]]]]]][[[[[]\")) == (false));\n\
  \    assert(candidate((\"[][]\")) == (false));\n    assert(candidate((\"[]\")) ==\
  \ (false));\n    assert(candidate((\"[[[[]]]]\")) == (true));\n    assert(candidate((\"\
  []]]]]]]]]]\")) == (false));\n    assert(candidate((\"[][][[]]\")) == (true));\n\
  \    assert(candidate((\"[[]\")) == (false));\n    assert(candidate((\"[]]\")) ==\
  \ (false));\n    assert(candidate((\"[[]][[\")) == (true));\n    assert(candidate((\"\
  [[][]]\")) == (true));\n    assert(candidate((\"\")) == (false));\n    assert(candidate((\"\
  [[[[[[[[\")) == (false));\n    assert(candidate((\"]]]]]]]]\")) == (false));\n}\n"
completions: ["    // Your code here\n    bool flag = false;\n    for(int i = 0; i\
    \ < string.size(); i++) {\n        if(string[i] == '[') {\n            flag =\
    \ true;\n        }\n        if(string[i] == ']') {\n            flag = false;\n\
    \        }\n    }\n    return flag;", "    // Write your code here\n    bool flag\
    \ = false;\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ == '[' && string[i+1] == '[') {\n            flag = true;\n        }\n    }\n\
    \    return flag;", "    // Write your code here\n    int n = string.size();\n\
    \    bool flag = false;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n\
    \        if (string[i] == '[') {\n            count++;\n        }\n        if\
    \ (string[i] == ']') {\n            count--;\n        }\n        if (count ==\
    \ 0) {\n            flag = true;\n            break;\n        }\n    }\n    return\
    \ flag;", "    // Your code here\n    bool flag = false;\n    for(int i = 0; i\
    \ < string.size(); i++) {\n        if(string[i] == '[') {\n            flag =\
    \ true;\n        }\n        if(string[i] == ']') {\n            flag = false;\n\
    \        }\n    }\n    return flag;", "    // Your code here\n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    // Write your code here\n    \n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[' && string[i+1]\
    \ == '[') {\n            return true;\n        }\n    }\n    return false;", " \
    \   int count = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if\
    \ (string[i] == '[') {\n            count++;\n        }\n        if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count == 0) {\n    \
    \        return true;\n        }\n    }\n    return false;", "    // Your code\
    \ here\n    bool flag = false;\n    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    // Your code goes here\n    \n    // Your code goes here\n\
    \    \n    // Your code goes here\n    \n    // Your code goes here\n    \n  \
    \  // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n", "    // Write your code here\n\
    \    bool flag = false;\n    int count = 0;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            count++;\n        }\n  \
    \      if(string[i] == ']') {\n            count--;\n        }\n        if(count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    // Write your code here\n    \n    bool flag = false;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n\
    \            flag = true;\n        }\n        if(string[i] == ']') {\n       \
    \     flag = false;\n        }\n    }\n    return flag;", "    // Write your code\
    \ here\n    bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n\
    \        if(string[i] == '[') {\n            flag = true;\n        }\n       \
    \ if(string[i] == ']') {\n            flag = false;\n        }\n    }\n    return\
    \ flag;", "    // Write your code here\n    bool flag = false;\n    int count\
    \ = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n \
    \           count--;\n        }\n        if (count == 0) {\n            flag =\
    \ true;\n            break;\n        }\n    }\n    return flag;", "    // Write\
    \ your code here\n    \n    bool flag = false;\n    \n    for(int i = 0; i < string.length();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    \n    return flag;", "    // Your code here\n    \n    for(int i = 0; i <\
    \ string.size(); i++) {\n        if(string[i] == '[' && string[i+1] == '[') {\n\
    \            i += 2;\n            while(i < string.size() && string[i] != ']')\
    \ {\n                i++;\n            }\n            if(i == string.size()) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;",
  "    // Your code here\n    \n    for(int i = 0; i < string.size(); i++) {\n   \
    \     if(string[i] == '[' && string[i+1] == '[') {\n            return true;\n\
    \        }\n    }\n    return false;", "    // Your code here\n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    stack<char> s;\n    bool flag = false;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n\
    \            s.push(string[i]);\n        }\n        else if(string[i] == ']')\
    \ {\n            if(s.empty()) {\n                flag = false;\n            }\n\
    \            else {\n                if(s.top() == '[') {\n                  \
    \  s.pop();\n                }\n                else {\n                    flag\
    \ = false;\n                }\n            }\n        }\n        else {\n    \
    \        flag = false;\n        }\n    }\n    return flag;", "    // Your code\
    \ here\n    bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n\
    \        if(string[i] == '[' && string[i+1] == '[') {\n            flag = true;\n\
    \        }\n    }\n    return flag;", "    // Your code here\n    int n = string.size();\n\
    \    bool flag = false;\n    for (int i = 0; i < n; i++) {\n        if (string[i]\
    \ == '[' && string[i + 1] == '[') {\n            flag = true;\n        }\n   \
    \ }\n    return flag;", "    bool result = false;\n    stack<char> brackets;\n\
    \    stack<char> opening_brackets;\n    stack<char> closing_brackets;\n    \n\
    \    for(char c : string) {\n        if(c == '[') {\n            brackets.push(c);\n\
    \            opening_brackets.push(c);\n        }\n        else if(c == ']') {\n\
    \            closing_brackets.push(c);\n            if(brackets.size() == 1) {\n\
    \                result = true;\n                break;\n            }\n     \
    \       if(brackets.top() == '[' && closing_brackets.top() == '[') {\n       \
    \         brackets.pop();\n                opening_brackets.pop();\n         \
    \       closing_brackets.pop();\n            }\n        }\n    }\n    return result;",
  "    // Your code here\n    \n    bool flag = false;\n    int count = 0;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   count++;\n        }\n        if(string[i] == ']') {\n            count--;\n\
    \        }\n        if(count == 0) {\n            flag = true;\n            break;\n\
    \        }\n    }\n    return flag;", "    int open = 0;\n    int close = 0;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n\
    \            open++;\n        }\n        else if(string[i] == ']') {\n       \
    \     close++;\n        }\n        if(open > close) {\n            return false;\n\
    \        }\n    }\n    return true;", "    // Write your code here\n    int count\
    \ = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n \
    \           count--;\n        }\n        if (count == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    // Your code goes here\n \
    \   bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n       \
    \ if(string[i] == '[') {\n            flag = true;\n        }\n        if(string[i]\
    \ == ']') {\n            flag = false;\n        }\n    }\n    return flag;", " \
    \   bool result = false;\n    stack<char> brackets;\n    stack<char> opening_brackets;\n\
    \    stack<char> closing_brackets;\n    \n    for (char c : string) {\n      \
    \  if (c == '[') {\n            brackets.push(c);\n            opening_brackets.push(c);\n\
    \        }\n        else if (c == ']') {\n            closing_brackets.push(c);\n\
    \        }\n        else if (brackets.size() > 0) {\n            if (c == opening_brackets.top())\
    \ {\n                opening_brackets.pop();\n            }\n            else\
    \ if (c == closing_brackets.top()) {\n                closing_brackets.pop();\n\
    \            }\n            else {\n                brackets.pop();\n        \
    \    }\n        }\n        else {\n            result = true;\n        }\n   \
    \ }\n    return result;", "    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    int n = string.size();\n    bool result = true;\n   \
    \ for (int i = 0; i < n; i++) {\n        if (string[i] == '[' && string[i + 1]\
    \ == '[') {\n            i += 2;\n            while (i < n && string[i] != ']')\
    \ {\n                i++;\n            }\n            if (i == n) {\n        \
    \        result = false;\n                break;\n            }\n            i\
    \ += 1;\n            while (i < n && string[i] != ']') {\n                i++;\n\
    \            }\n            if (i == n) {\n                result = false;\n \
    \               break;\n            }\n            i += 1;\n            while\
    \ (i < n && string[i] != ']') {\n                i++;\n            }\n       \
    \     if (i == n) {\n                result = false;\n                break;\n\
    \            }\n            i += 1;\n            while (i < n && string[i] !=\
    \ ']') {\n                i++;\n            }\n            if (i == n) {\n   \
    \             result = false;\n                break;\n            }\n       \
    \     i += 1;\n            while (i < n && string[i] != ']') {\n             \
    \   i++;\n            }\n            if (i == n) {\n                result = false;\n\
    \                break;\n            }\n            i += 1;\n            while\
    \ (i < n && string[i] != ']') {\n                i++;\n            }\n       \
    \     if (i == n) {\n                result = false;\n                break;\n\
    \            }\n            i += 1;\n            while (i < n && string[i] !=\
    \ ']') {\n                i++;\n            }\n            if (i == n) {\n   \
    \             result = false;\n                break;\n            }\n       \
    \     i += 1;\n            while (i < n && string[i] != ']') {\n             \
    \   i++;\n            }\n            if (i == n) {\n                result = false;\n\
    \                break;\n            }\n            i += 1;\n            while\
    \ (i < n && string[i] != ']') {\n                i++;\n            }\n       \
    \     if (i == n) {\n                result = false;\n                break;\n\
    \            }\n            i += 1;\n            while (i < n && string[i] !=\
    \ ']') {\n                i++;\n            }\n            if (i == n) {\n   \
    \             result = false;\n                break;\n            }\n       \
    \     i += 1;\n            while (i < n && string[i] != ']') {\n             \
    \   i++;\n            }\n            if (i == n) {\n                result = false;\n\
    \                break;\n            }\n            i += 1;\n            while\
    \ (i < n && string[i] != ']') {\n                i++;\n            }\n       \
    \     if (i == n) {\n                result = false;\n                break;\n\
    \            }\n            i += 1;\n            while (i < n && string[i] !=\
    \ ']') {\n                i++;\n            }\n            if (i == n) {\n   \
    \             result = false;\n                break;\n            }\n       \
    \     i += 1;\n            while (i < n && string[i] != ']') {\n             \
    \   i++;\n            }\n            if (i == n) {\n                result = false;\n\
    \                break;\n            }\n            i += 1;\n            while\
    \ (i < n && string[i] != ']') {\n                i++;\n            }\n       \
    \     if (i == n) {\n                result = false;\n                break;\n\
    \            }\n            i += 1;\n", "    // Your code here\n    bool flag\
    \ = false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[') {\n            flag = true;\n        }\n        if(string[i] == ']')\
    \ {\n            flag = false;\n        }\n    }\n    return flag;", "    // Your\
    \ code here\n    bool flag = false;\n    for(int i = 0; i < string.size(); i++)\
    \ {\n        if(string[i] == '[') {\n            flag = true;\n        }\n   \
    \     if(string[i] == ']') {\n            flag = false;\n        }\n    }\n  \
    \  return flag;", "    // Your code here\n    int counter = 0;\n    int index\
    \ = 0;\n    bool flag = false;\n    while(index < string.size()) {\n        if(string[index]\
    \ == '[') {\n            counter++;\n        }\n        if(string[index] == ']')\
    \ {\n            counter--;\n        }\n        if(counter == 0) {\n         \
    \   flag = true;\n            break;\n        }\n        index++;\n    }\n   \
    \ return flag;", "    // Your code here\n    bool flag = false;\n    int count\
    \ = 0;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] ==\
    \ '[') {\n            count++;\n        }\n        if(string[i] == ']') {\n  \
    \          count--;\n        }\n        if(count == 0 && string[i] != '[' && string[i]\
    \ != ']') {\n            flag = false;\n            break;\n        }\n    }\n\
    \    return flag;", "    stack<char> brackets;\n    bool found = false;\n    for\
    \ (char c : string) {\n        if (c == '[') {\n            brackets.push(c);\n\
    \        } else if (c == ']') {\n            if (brackets.empty()) {\n       \
    \         return false;\n            }\n            char top = brackets.top();\n\
    \            if (top == '[') {\n                brackets.pop();\n            }\
    \ else if (top == ']') {\n                brackets.pop();\n                brackets.pop();\n\
    \            } else {\n                return false;\n            }\n        }\
    \ else {\n            return false;\n        }\n    }\n    return found;", " \
    \   bool result = false;\n    \n    for(int i = 0; i < string.size(); i++) {\n\
    \        if(string[i] == '[') {\n            bool found = false;\n           \
    \ for(int j = i; j < string.size(); j++) {\n                if(string[j] == ']')\
    \ {\n                    found = true;\n                    break;\n         \
    \       }\n            }\n            if(!found) {\n                result = false;\n\
    \                break;\n            }\n        }\n    }\n    \n    return result;",
  "    // Write your code here\n    int count = 0;\n    int index = 0;\n    bool flag\
    \ = false;\n    while (index < string.length()) {\n        if (string[index] ==\
    \ '[') {\n            count++;\n        }\n        if (string[index] == ']') {\n\
    \            count--;\n        }\n        if (count == 0) {\n            flag\
    \ = true;\n            break;\n        }\n        index++;\n    }\n    return\
    \ flag;", "    // Your code goes here\n    \n    // Your code goes here\n    \n\
    \    // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n", "    bool flag = false;\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] == '[') {\n       \
    \     flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    // Write your code here\n\
    \    int counter = 0;\n    int length = string.length();\n    for (int i = 0;\
    \ i < length; i++) {\n        if (string[i] == '[') {\n            counter++;\n\
    \        }\n        if (string[i] == ']') {\n            counter--;\n        }\n\
    \        if (counter < 0) {\n            return false;\n        }\n    }\n   \
    \ if (counter == 0) {\n        return true;\n    }\n    return false;", "    //\
    \ Your code goes here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    // Your code here\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] == '[') {\n       \
    \     flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    // Write your code here\n\
    \    \n    bool flag = false;\n    for(int i = 0; i < string.length(); i++) {\n\
    \        if(string[i] == '[') {\n            flag = true;\n        }\n       \
    \ if(string[i] == ']') {\n            flag = false;\n        }\n    }\n    return\
    \ flag;", "    // Your code here\n    bool flag = false;\n    int count = 0;\n\
    \    for (int i = 0; i < string.size(); i++) {\n        if (string[i] == '[')\
    \ {\n            count++;\n        }\n        if (string[i] == ']') {\n      \
    \      count--;\n        }\n        if (count == 0) {\n            flag = true;\n\
    \            break;\n        }\n    }\n    return flag;", "    // Your code goes\
    \ here\n    int count = 0;\n    for (int i = 0; i < string.size(); i++) {\n  \
    \      if (string[i] == '[') {\n            count++;\n        }\n        if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count == 0) {\n    \
    \        return true;\n        }\n    }\n    return false;", "    // Your code\
    \ here\n    bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n\
    \        if(string[i] == '[') {\n            flag = true;\n        }\n       \
    \ if(string[i] == ']') {\n            flag = false;\n        }\n    }\n    return\
    \ flag;", "    stack<char> s;\n    bool found = false;\n    for (char c : string)\
    \ {\n        if (c == '[') {\n            s.push(c);\n        } else if (c ==\
    \ ']') {\n            if (s.empty()) {\n                return false;\n      \
    \      }\n            char top = s.top();\n            s.pop();\n            if\
    \ (top == '[') {\n                s.push(c);\n            } else if (top == ']')\
    \ {\n                found = true;\n            }\n        }\n    }\n    return\
    \ found;", "    int open = 0;\n    int close = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            open++;\n        } else\
    \ if (string[i] == ']') {\n            close++;\n        }\n        if (open >\
    \ close) {\n            return false;\n        }\n    }\n    return true;", " \
    \   // Your code here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    // Write your code here\n    bool flag = false;\n   \
    \ for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n \
    \           flag = true;\n        }\n        if(string[i] == ']') {\n        \
    \    flag = false;\n        }\n    }\n    return flag;", "    // Your code here\n\
    \    \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // ", "    // Your code here\n    \n    // return true if and only if\
    \ there is a valid subsequence of brackets \n    // where at least one bracket\
    \ in the subsequence is nested.\n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    // Your code here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    // Your code here\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    // Your code here\n    \n\
    \    // Your code here\n    \n    // Your code here\n    \n    // Your code here\n\
    \    \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    // ",
  "    // Your code here\n    \n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    bool result = false;\n    stack<char> stack;\n    stack<char>\
    \ temp;\n    stack<char> temp2;\n    stack<char> temp3;\n    stack<char> temp4;\n\
    \    stack<char> temp5;\n    stack<char> temp6;\n    stack<char> temp7;\n    stack<char>\
    \ temp8;\n    stack<char> temp9;\n    stack<char> temp10;\n    stack<char> temp11;\n\
    \    stack<char> temp12;\n    stack<char> temp13;\n    stack<char> temp14;\n \
    \   stack<char> temp15;\n    stack<char> temp16;\n    stack<char> temp17;\n  \
    \  stack<char> temp18;\n    stack<char> temp19;\n    stack<char> temp20;\n   \
    \ stack<char> temp21;\n    stack<char> temp22;\n    stack<char> temp23;\n    stack<char>\
    \ temp24;\n    stack<char> temp25;\n    stack<char> temp26;\n    stack<char> temp27;\n\
    \    stack<char> temp28;\n    stack<char> temp29;\n    stack<char> temp30;\n \
    \   stack<char> temp31;\n    stack<char> temp32;\n    stack<char> temp33;\n  \
    \  stack<char> temp34;\n    stack<char> temp35;\n    stack<char> temp36;\n   \
    \ stack<char> temp37;\n    stack<char> temp38;\n    stack<char> temp39;\n    stack<char>\
    \ temp40;\n    stack<char> temp41;\n    stack<char> temp42;\n    stack<char> temp43;\n\
    \    stack<char> temp44;\n    stack<char> temp45;\n    stack<char> temp46;\n \
    \   stack<char> temp47;\n    stack<char> temp48;\n    stack<char> temp49;\n  \
    \  stack<char> temp50;\n    stack<char> temp51;\n    stack<char> temp52;\n   \
    \ stack<char> temp53;\n    stack<char> temp54;\n    stack<char> temp55;\n    stack<char>\
    \ temp56;\n    stack<char> temp57;\n    stack<char> temp58;\n    stack<char> temp59;\n\
    \    stack<char> temp60;\n    stack<char> temp61;\n    stack<char> temp62;\n \
    \   stack<char> temp63;\n    stack<char> temp64;\n    stack<char> temp65;\n",
  "    stack<char> s;\n    bool flag = false;\n    for (char c : string) {\n     \
    \   if (c == '[') {\n            s.push(c);\n        } else if (c == ']') {\n\
    \            if (s.empty()) {\n                return false;\n            }\n\
    \            char top = s.top();\n            s.pop();\n            if (top ==\
    \ '[') {\n                s.push(c);\n            } else if (top == ']') {\n \
    \               if (s.empty()) {\n                    return false;\n        \
    \        }\n                char top = s.top();\n                s.pop();\n  \
    \              if (top == '[') {\n                    s.push(c);\n           \
    \     } else if (top == ']') {\n                    s.push(c);\n             \
    \       flag = true;\n                }\n            }\n        }\n    }\n   \
    \ return flag;", "    int n = string.length();\n    bool result = true;\n    for\
    \ (int i = 0; i < n; i++) {\n        if (string[i] == '[' && string[i + 1] ==\
    \ '[') {\n            i += 2;\n        } else if (string[i] == '[' && string[i\
    \ + 1] != ']') {\n            result = false;\n            break;\n        } else\
    \ if (string[i] == ']' && string[i + 1] != ']') {\n            result = false;\n\
    \            break;\n        }\n    }\n    return result;", "    int len = string.length();\n\
    \    int count = 0;\n    for (int i = 0; i < len; i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n\
    \            count--;\n        }\n    }\n    return count >= 0;", "    int open\
    \ = 0;\n    int close = 0;\n    for (int i = 0; i < string.size(); i++) {\n  \
    \      if (string[i] == '[') {\n            open++;\n        } else if (string[i]\
    \ == ']') {\n            close++;\n        }\n    }\n    if (close == open) {\n\
    \        return true;\n    } else {\n        return false;\n    }", "    // Your\
    \ code goes here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    int counter = 0;\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] == '[') {\n            counter++;\n        } else\
    \ if (string[i] == ']') {\n            counter--;\n        }\n        if (counter\
    \ < 0) {\n            return false;\n        }\n    }\n    return counter == 0;",
  "    // Write your code here\n    \n    for(int i=0;i<string.size();i++){\n    \
    \    if(string[i]=='[' && string[i+1]=='[' && string[i+2]=='[' && string[i+3]=='['\
    \ && string[i+4]=='['){\n            return true;\n        }\n    }\n    return\
    \ false;", "    int counter = 0;\n    for (int i = 0; i < string.size(); i++)\
    \ {\n        if (string[i] == '[') {\n            counter++;\n        }\n    \
    \    if (string[i] == ']') {\n            counter--;\n        }\n        if (counter\
    \ < 0) {\n            return false;\n        }\n    }\n    return true;", "  \
    \  // Your code here\n    bool flag = false;\n    int count = 0;\n    for (int\
    \ i = 0; i < string.size(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        }\n        if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count == 0) {\n            flag = true;\n            break;\n\
    \        }\n    }\n    return flag;", "    int counter = 0;\n    for (int i =\
    \ 0; i < string.size(); i++) {\n        if (string[i] == '[') {\n            counter++;\n\
    \        }\n        if (string[i] == ']') {\n            counter--;\n        }\n\
    \        if (counter < 0) {\n            return false;\n        }\n    }\n   \
    \ return counter == 0;", "    // Your code here\n    int counter = 0;\n    for(int\
    \ i = 0; i < string.size(); i++){\n        if(string[i] == '['){\n           \
    \ counter++;\n        }\n        if(string[i] == ']'){\n            counter--;\n\
    \        }\n        if(counter < 0){\n            return false;\n        }\n \
    \   }\n    return true;", "    bool result = false;\n    int index = 0;\n    while\
    \ (index < string.length()) {\n        if (string[index] == '[' && string[index\
    \ + 1] == ']') {\n            result += true;\n            index += 2;\n     \
    \   }\n        index++;\n    }\n    return result;", "    int n = string.size();\n\
    \    bool result = true;\n    for (int i = 0; i < n; i++) {\n        if (string[i]\
    \ == '[' && string[i + 1] == '[' && string[i + 2] == '[' && string[i + 3] == '[')\
    \ {\n            i += 4;\n            result &= is_nested(string.substr(i, n -\
    \ i));\n            i += 3;\n        } else if (string[i] == '[' && string[i +\
    \ 1] == '[' && string[i + 2] == '[') {\n            i += 2;\n            result\
    \ &= is_nested(string.substr(i, n - i));\n            i += 2;\n        } else\
    \ if (string[i] == '[' && string[i + 1] == '[') {\n            i += 1;\n     \
    \       result &= is_nested(string.substr(i, n - i));\n            i += 1;\n \
    \       } else if (string[i] == '[' && string[i + 1] == ']') {\n            i\
    \ += 1;\n            result &= is_nested(string.substr(i, n - i));\n         \
    \   i += 1;\n        } else if (string[i] == '[' && string[i + 1] == ']' && string[i\
    \ + 2] == ']') {\n            i += 3;\n            result &= is_nested(string.substr(i,\
    \ n - i));\n            i += 2;\n        } else if (string[i] == '[' && string[i\
    \ + 1] == ']' && string[i + 2] == ']' && string[i + 3] == ']') {\n           \
    \ i += 4;\n            result &= is_nested(string.substr(i, n - i));\n       \
    \     i += 3;\n        } else if (string[i] == '[' && string[i + 1] == ']' &&\
    \ string[i + 2] == ']' && string[i + 3] == '[') {\n            i += 4;\n     \
    \       result &= is_nested(string.substr(i, n - i));\n            i += 3;\n \
    \       } else if (string[i] == '[' && string[i + 1] == ']' && string[i + 2] ==\
    \ ']' && string[i + 3] == '[' && string[i + 4] == '[') {\n            i += 5;\n\
    \            result &= is_nested(string.substr(i, n - i));\n            i += 4;\n\
    \        } else if (string[i] == '[' && string[i + 1] == ']' && string[i + 2]\
    \ == ']' && string[i + 3] == '[' && string[i + 4] == '[' && string[i + 5] == '[')\
    \ {\n            i += 6;\n            result &= is_nested(string.substr(i, n -\
    \ i));\n            i += 5;\n        } else if (string[i] == '[' && string[i +\
    \ 1] == ']' && string[i + 2] == ']' && string[i + 3] == '[' && string[i + 4] ==\
    \ '[' && string[i + 5] == '[' && string[i + 6] == ']') {\n            i += 7;\n\
    \            result &= is_nested(string.substr(i, n - i));\n            i += 6;\n\
    \        } else if (string[i] == '[' && string[i + 1] == ']' && string[i + 2]\
    \ == ']' && string[i + 3] == '[' && string[i + 4] == '[' && string[i + 5] == '['\
    \ && string[i + 6] == ']' && string[i + 7] == ']", "    bool result = true;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[' &&\
    \ string[i+1] == '[') {\n            result += true;\n            i += 2;\n  \
    \      } else if(string[i] == '[' && string[i+1] != ']') {\n            result\
    \ += false;\n            i += 1;\n        } else if(string[i] == ']' && string[i+1]\
    \ == ']') {\n            result += true;\n            i += 2;\n        } else\
    \ if(string[i] == ']' && string[i+1] != ']') {\n            result += false;\n\
    \            i += 1;\n        } else {\n            result += false;\n       \
    \ }\n    }\n    return result;", "    // Your code here\n    \n    bool flag =\
    \ false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] ==\
    \ '[') {\n            flag = true;\n        }\n        if(string[i] == ']') {\n\
    \            flag = false;\n        }\n    }\n    return flag;", "    int n =\
    \ string.size();\n    for(int i = 0; i < n; i++) {\n        if(string[i] == '[')\
    \ {\n            int j = i;\n            while(j < n && string[j] != ']') {\n\
    \                j++;\n            }\n            int k = j;\n            while(k\
    \ < (n - 1) && string[k] != ']') {\n                k++;\n            }\n    \
    \        if(j == k) {\n                return true;\n            }\n        }\n\
    \    }\n    return false;", "    stack<char> s;\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   s.push(string[i]);\n        }\n        else if(string[i] == ']') {\n     \
    \       if(s.empty()) {\n                flag = false;\n            }\n      \
    \      else {\n                if(s.top() == '[') {\n                    s.pop();\n\
    \                }\n                else {\n                    flag = false;\n\
    \                }\n            }\n        }\n        else {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    // Write your code here\n\
    \    \n    bool flag = false;\n    \n    for(int i = 0; i < string.size(); i++)\
    \ {\n        if(string[i] == '[') {\n            flag = true;\n        }\n   \
    \     if(string[i] == ']') {\n            flag = false;\n        }\n    }\n  \
    \  \n    return flag;", "    // Your code here\n    bool flag = false;\n    int\
    \ count = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n\
    \            count--;\n        }\n        if (count == 0) {\n            flag\
    \ = true;\n            break;\n        }\n    }\n    return flag;", "    // Your\
    \ code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    // Your code here\n\
    \    bool flag = false;\n    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    // Write your code here\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    int n = string.size();\n\
    \    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        } else if (string[i] == ']') {\n  \
    \          count--;\n        }\n        if (count == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    int n = string.size();\n \
    \   for (int i = 0; i < n; i++) {\n        if (string[i] == '[' && string[i +\
    \ 1] == '[') {\n            return true;\n        }\n    }\n    return false;",
  "    // Your code here\n    \n    bool flag = false;\n    int count = 0;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   count++;\n        }\n        else if(string[i] == ']') {\n            count--;\n\
    \        }\n        if(count == 0 && flag == false) {\n            flag = true;\n\
    \        }\n    }\n    return flag;", "    bool result = false;\n    stack<char>\
    \ stack;\n    stack<char> temp;\n    stack<char> temp2;\n    stack.push('[');\n\
    \    temp.push('[');\n    temp2.push('[');\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            stack.push('[');\n     \
    \       temp.push('[');\n            temp2.push('[');\n        }\n        else\
    \ if(string[i] == ']') {\n            while(stack.top() != '[') {\n          \
    \      temp2.pop();\n                temp.pop();\n                stack.pop();\n\
    \            }\n            stack.pop();\n            temp2.pop();\n         \
    \   temp.pop();\n        }\n        else if(string[i] == ']' && stack.top() ==\
    \ '[') {\n            while(stack.top() != '[') {\n                temp2.pop();\n\
    \                temp.pop();\n                stack.pop();\n            }\n  \
    \          stack.pop();\n            temp2.pop();\n            temp.pop();\n \
    \       }\n        else if(string[i] == ']' && stack.top() == '[' && temp.top()\
    \ == '[') {\n            while(stack.top() != '[') {\n                temp2.pop();\n\
    \                temp.pop();\n                stack.pop();\n            }\n  \
    \          stack.pop();\n            temp2.pop();\n            temp.pop();\n \
    \       }\n        else if(string[i] == ']' && stack.top() == '[' && temp.top()\
    \ == '[' && temp2.top() == '[') {\n            while(stack.top() != '[') {\n \
    \               temp2.pop();\n                temp.pop();\n                stack.pop();\n\
    \            }\n            stack.pop();\n            temp2.pop();\n         \
    \   temp.pop();\n        }\n        else if(string[i] == ']' && stack.top() ==\
    \ '[' && temp.top() == '[' && temp2.top() == '[') {\n            while(stack.top()\
    \ != '[') {\n                temp2.pop();\n                temp.pop();\n     \
    \           stack.pop();\n            }\n            stack.pop();\n          \
    \  temp2.pop();\n            temp.pop();\n        }\n        else if(string[i]\
    \ == ']' && stack.top() == '[' && temp.top() == '[' && temp2.top() == '[') {\n\
    \            while(stack.top() != '[') {\n                temp2.pop();\n     \
    \           temp.pop();\n                stack.pop();\n            }\n       \
    \     stack.pop();\n            temp2.pop();\n            temp.pop();\n      \
    \  }\n        else if(string[i] == ']' && stack.top() == '[' && temp.top() ==\
    \ '[' && temp2.top() == '[') {\n            while(stack.top() != '[') {\n    \
    \            temp2.pop();\n                temp.pop();\n                stack.pop();\n\
    \            }\n            stack.pop();\n            temp2.pop();\n         \
    \   temp.pop();\n        }\n        else if(string[i] == ", "    int count = 0;\n\
    \    for (int i = 0; i < string.size(); i++) {\n        if (string[i] == '[')\
    \ {\n            count++;\n        }\n        if (string[i] == ']') {\n      \
    \      count--;\n        }\n        if (count == 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    // Your code here\n    bool flag =\
    \ false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] ==\
    \ '[' && string[i+1] == '[') {\n            flag = true;\n        }\n    }\n \
    \   return flag;", "    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;", " \
    \   bool found = false;\n    bool open = false;\n    bool close = false;\n   \
    \ bool open1 = false;\n    bool close1 = false;\n    bool open2 = false;\n   \
    \ bool close2 = false;\n    bool open3 = false;\n    bool close3 = false;\n  \
    \  bool open4 = false;\n    bool close4 = false;\n    bool open5 = false;\n  \
    \  bool close5 = false;\n    bool open6 = false;\n    bool close6 = false;\n \
    \   bool open7 = false;\n    bool close7 = false;\n    bool open8 = false;\n \
    \   bool close8 = false;\n    bool open9 = false;\n    bool close9 = false;\n\
    \    bool open10 = false;\n    bool close10 = false;\n    bool open11 = false;\n\
    \    bool close11 = false;\n    bool open12 = false;\n    bool close12 = false;\n\
    \    bool open13 = false;\n    bool close13 = false;\n    bool open14 = false;\n\
    \    bool close14 = false;\n    bool open15 = false;\n    bool close15 = false;\n\
    \    bool open16 = false;\n    bool close16 = false;\n    bool open17 = false;\n\
    \    bool close17 = false;\n    bool open18 = false;\n    bool close18 = false;\n\
    \    bool open19 = false;\n    bool close19 = false;\n    bool open20 = false;\n\
    \    bool close20 = false;\n    bool open21 = false;\n    bool close21 = false;\n\
    \    bool open22 = false;\n    bool close22 = false;\n    bool open23 = false;\n\
    \    bool close23 = false;\n    bool open24 = false;\n    bool close24 = false;\n\
    \    bool open25 = false;\n    bool close25 = false;\n    bool open26 = false;\n\
    \    bool close26 = false;\n    bool open27 = false;\n    bool close27 = false;\n\
    \    bool open28 = false;\n    bool close28 = false;\n    bool open29 = false;\n\
    \    bool close29 = false;\n    bool open30 = false;\n    bool close30 = false;\n\
    \    bool open31 = false;\n    bool close31 = false;\n    bool open32 = false;\n\
    \    bool close32 = false;\n    bool open33 = false;\n    bool close33 = false;\n\
    \    bool open34 = false;\n    bool close34 = false;\n    bool open35 = false;\n\
    \    bool close35 = false;\n    bool open36 = false;\n    bool close36 = false;\n\
    \    bool open37 = false;\n    bool close37 = false;\n    bool open38 = false;\n\
    \    bool close38 = false;\n    bool open39 = false;\n    bool close39 = false;\n\
    \    bool open40 = false;\n    bool close40 = false;\n    bool open41 = false;\n\
    \    bool close41 = false;", "    // Your code here\n    bool flag = false;\n\
    \    int count = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if\
    \ (string[i] == '[') {\n            count++;\n        }\n        if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count == 0) {\n    \
    \        flag = true;\n            break;\n        }\n    }\n    return flag;",
  "    bool flag = false;\n    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    // Your code here\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    // Your code here\n    \n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[' &&\
    \ string[i+1] == '[') {\n            i += 2;\n            while(i < string.size()\
    \ && string[i] != ']') {\n                i++;\n            }\n            if(i\
    \ == string.size()) {\n                return true;\n            }\n        }\n\
    \    }\n    return false;", "    // Write your code here\n    bool flag = false;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n\
    \            flag = true;\n        }\n        if(string[i] == ']') {\n       \
    \     flag = false;\n        }\n    }\n    return flag;", "    // Your code here\n\
    \    \n    bool flag = false;\n    int count = 0;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            count++;\n        }\n  \
    \      if(string[i] == ']') {\n            count--;\n        }\n        if(count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    int n = string.size();\n    bool flag = false;\n    for\
    \ (int i = 0; i < n; i++) {\n        if (string[i] == '[') {\n            flag\
    \ = true;\n        }\n        if (string[i] == ']') {\n            flag = false;\n\
    \        }\n    }\n    return flag;", "    // Your code here\n    bool flag =\
    \ false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] ==\
    \ '[') {\n            flag = true;\n        }\n        if(string[i] == ']') {\n\
    \            flag = false;\n        }\n    }\n    return flag;", "    // Your\
    \ code here\n    bool flag = false;\n    int i = 0;\n    int j = 0;\n    int count\
    \ = 0;\n    while(i < string.length()) {\n        if(string[i] == '[') {\n   \
    \         count++;\n        }\n        if(string[i] == ']') {\n            count--;\n\
    \        }\n        if(count == 0) {\n            flag = true;\n            break;\n\
    \        }\n        i++;\n    }\n    return flag;", "    stack<char> st;\n   \
    \ bool flag = false;\n    for (char c : string) {\n        if (c == '[') {\n \
    \           st.push(c);\n        } else if (c == ']') {\n            if (st.empty())\
    \ {\n                flag = false;\n                break;\n            } else\
    \ {\n                char top = st.top();\n                if (top == '[') {\n\
    \                    st.pop();\n                } else {\n                   \
    \ flag = false;\n                    break;\n                }\n            }\n\
    \        } else if (c == '[' || c == ']') {\n            flag = false;\n     \
    \       break;\n        }\n    }\n    return flag;", "    int open = 0;\n    int\
    \ close = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i]\
    \ == '[') {\n            open++;\n        } else if (string[i] == ']') {\n   \
    \         close++;\n        }\n        if (open > close) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    int n = string.size();\n \
    \   int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n \
    \           count--;\n        }\n        if (count == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;", "    int count = 0;\n    for (int\
    \ i = 0; i < string.size(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        }\n        if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count == 0) {\n            return true;\n        }\n \
    \   }\n    return false;", "    stack<char> s;\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   s.push(string[i]);\n        }\n        else if(string[i] == ']') {\n     \
    \       if(s.size() > 0) {\n                char c = s.top();\n              \
    \  s.pop();\n                if(c == '[') {\n                    flag = true;\n\
    \                }\n            }\n            else {\n                flag =\
    \ false;\n            }\n        }\n    }\n    return flag;", "    stack<char>\
    \ s;\n    bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n \
    \       if(string[i] == '[') {\n            s.push('[');\n        }\n        else\
    \ if(string[i] == ']') {\n            if(s.size() == 0) {\n                return\
    \ false;\n            }\n            s.pop();\n        }\n        else if(string[i]\
    \ == '[' && s.size() > 0) {\n            s.push(string[i]);\n        }\n     \
    \   else if(string[i] == ']' && s.size() > 0) {\n            if(s.size() == 0)\
    \ {\n                return false;\n            }\n            s.pop();\n    \
    \    }\n    }\n    return s.size() == 0;", "    // Write your code here\n    \n\
    \    bool flag = false;\n    int count = 0;\n    for(int i = 0; i < string.length();\
    \ i++) {\n        if(string[i] == '[') {\n            count++;\n        }\n  \
    \      if(string[i] == ']') {\n            count--;\n        }\n        if(count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;", " \
    \   bool result = true;\n    for(auto &c : string) {\n        if(c == '[' || c\
    \ == '(' || c == '{' || c == '}') {\n            result = false;\n           \
    \ break;\n        }\n    }\n    return result;", "    int open = 0;\n    int close\
    \ = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] ==\
    \ '[') {\n            open++;\n        } else if (string[i] == ']') {\n      \
    \      close++;\n        }\n    }\n    if (open != close) {\n        return false;\n\
    \    }\n    return true;", "    // Your code here\n    \n    bool flag = false;\n\
    \    \n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] ==\
    \ '[') {\n            flag = true;\n        }\n        if(string[i] == ']') {\n\
    \            flag = false;\n        }\n    }\n    \n    return flag;", "    //\
    \ Write your code here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    // Your code here\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] == '[') {\n       \
    \     flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    // Your code here\n    \n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[' &&\
    \ string[i+1] == '[') {\n            return true;\n        }\n    }\n    return\
    \ false;", "    int n = string.size();\n    bool flag = false;\n    for (int i\
    \ = 0; i < n; i++) {\n        if (string[i] == '[') {\n            flag = true;\n\
    \        }\n        if (string[i] == ']') {\n            flag = false;\n     \
    \   }\n    }\n    return flag;", "    int n = string.size();\n    int count =\
    \ 0;\n    for (int i = 0; i < n; i++) {\n        if (string[i] == '[') {\n   \
    \         count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count < 0) {\n            return false;\n        }\n \
    \   }\n    return count == 0;", "    // Your code goes here\n    bool flag = false;\n\
    \    int count = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if\
    \ (string[i] == '[') {\n            count++;\n        }\n        if (string[i]\
    \ == ']') {\n            count--;\n        }\n        if (count == 0) {\n    \
    \        flag = true;\n            break;\n        }\n    }\n    return flag;",
  "    // Write your code here\n    \n    bool flag = false;\n    \n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] == '[' && string[i+1]\
    \ == '[') {\n            flag = true;\n        }\n    }\n    return flag;", " \
    \   // Your code here\n    bool flag = false;\n    int count = 0;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   count++;\n        }\n        if(string[i] == ']') {\n            count--;\n\
    \        }\n        if(count == 0 && string[i] != '[' && string[i] != ']') {\n\
    \            flag = false;\n            break;\n        }\n    }\n    return flag;",
  "    // Your code here\n    int counter = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            counter++;\n        }\n\
    \        if (string[i] == ']') {\n            counter--;\n        }\n        if\
    \ (counter < 0) {\n            return false;\n        }\n    }\n    return true;",
  "    int n = string.length();\n    int count = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        if (string[i] == '[') {\n            count++;\n        }\n      \
    \  if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;", " \
    \   int len = string.size();\n    bool flag = false;\n    for (int i = 0; i <\
    \ len; i++) {\n        if (string[i] == '[') {\n            flag = true;\n   \
    \     }\n        if (string[i] == ']') {\n            flag = false;\n        }\n\
    \    }\n    return flag;", "    // Your code goes here\n    bool flag = false;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[' &&\
    \ string[i+1] == '[') {\n            flag = true;\n        }\n    }\n    return\
    \ flag;", "    // Your code here\n    \n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[' && string[i+1] == '[') {\n            return\
    \ true;\n        }\n    }\n    return false;", "    bool result = false;\n   \
    \ bool found = false;\n    bool found2 = false;\n    bool found3 = false;\n  \
    \  bool found4 = false;\n    bool found5 = false;\n    bool found6 = false;\n\
    \    bool found7 = false;\n    bool found8 = false;\n    bool found9 = false;\n\
    \    bool found10 = false;\n    bool found11 = false;\n    bool found12 = false;\n\
    \    bool found13 = false;\n    bool found14 = false;\n    bool found15 = false;\n\
    \    bool found16 = false;\n    bool found17 = false;\n    bool found18 = false;\n\
    \    bool found19 = false;\n    bool found20 = false;\n    bool found21 = false;\n\
    \    bool found22 = false;\n    bool found23 = false;\n    bool found24 = false;\n\
    \    bool found25 = false;\n    bool found26 = false;\n    bool found27 = false;\n\
    \    bool found28 = false;\n    bool found29 = false;\n    bool found30 = false;\n\
    \    bool found31 = false;\n    bool found32 = false;\n    bool found33 = false;\n\
    \    bool found34 = false;\n    bool found35 = false;\n    bool found36 = false;\n\
    \    bool found37 = false;\n    bool found38 = false;\n    bool found39 = false;\n\
    \    bool found40 = false;\n    bool found41 = false;\n    bool found42 = false;\n\
    \    bool found43 = false;\n    bool found44 = false;\n    bool found45 = false;\n\
    \    bool found46 = false;\n    bool found47 = false;\n    bool found48 = false;\n\
    \    bool found49 = false;\n    bool found50 = false;\n    bool found51 = false;\n\
    \    bool found52 = false;\n    bool found53 = false;\n    bool found54 = false;\n\
    \    bool found55 = false;\n    bool found56 = false;\n    bool found57 = false;\n\
    \    bool found58 = false;\n    bool found59 = false;\n    bool found60 = false;\n\
    \    bool found61 = false;\n    bool found62 = false;\n    bool found63 = false;\n\
    \    bool found64 = false;\n    bool found65 = false;\n    bool found66 = false;\n\
    \    bool found67 = false;\n    bool found68 = false;\n    bool found69 = false;\n\
    \    bool found70 = false;\n    bool found71 = false;\n    bool found72 = false;\n\
    \    bool found73 = false;\n    bool found74 = false;\n    bool found75 = false;\n\
    \    bool found76 = false;\n    bool found77 = false;\n    bool found78 = false;\n\
    \    bool found79 = false;\n    bool found80 = false;\n    bool found81 = false;\n\
    \    bool found8", "    stack<char> brackets;\n    bool found = false;\n    for\
    \ (char c : string) {\n        if (c == '[') {\n            brackets.push(c);\n\
    \        } else if (c == ']') {\n            if (brackets.empty()) {\n       \
    \         return false;\n            }\n            char top = brackets.top();\n\
    \            if (top == '[') {\n                brackets.pop();\n            }\
    \ else if (top == ']') {\n                brackets.pop();\n                brackets.pop();\n\
    \            } else {\n                return false;\n            }\n        }\
    \ else {\n            return false;\n        }\n    }\n    return found;", " \
    \   bool result = false;\n    stack<char> brackets;\n    stack<char> opening_brackets;\n\
    \    stack<char> closing_brackets;\n    \n    for(int i = 0; i < string.length();\
    \ i++) {\n        if(brackets.empty() && opening_brackets.empty() && closing_brackets.empty())\
    \ {\n            if(i == string.length() - 1) {\n                if((string[i]\
    \ == '[' || string[i] == '(')) {\n                    brackets.push(string[i]);\n\
    \                }\n            } else {\n                if((string[i] == '['\
    \ || string[i] == '(')) {\n                    brackets.push(string[i]);\n   \
    \             } else if((string[i] == ']' || string[i] == ')')) {\n          \
    \          if(brackets.top() == '[') {\n                        opening_brackets.push(string[i]);\n\
    \                    } else {\n                        closing_brackets.push(string[i]);\n\
    \                    }\n                }\n            }\n        } else {\n \
    \           if(brackets.empty() && opening_brackets.empty() && closing_brackets.empty())\
    \ {\n                if(i == string.length() - 1) {\n                    if((string[i]\
    \ == '[' || string[i] == '(')) {\n                        brackets.push(string[i]);\n\
    \                    }\n                } else {\n                    if((string[i]\
    \ == '[' || string[i] == '(')) {\n                        brackets.push(string[i]);\n\
    \                    } else if((string[i] == ']' || string[i] == ')')) {\n   \
    \                     if(brackets.top() == '[') {\n                          \
    \  opening_brackets.push(string[i]);\n                        } else {\n     \
    \                       closing_brackets.push(string[i]);\n                  \
    \      }\n                    }\n                }\n            } else {\n   \
    \             if(brackets.empty() && opening_brackets.empty() && closing_brackets.empty())\
    \ {\n                    if(i == string.length() - 1) {\n                    \
    \    if((string[i] == '[' || string[i] == '(')) {\n                          \
    \  brackets.push(string[i]);\n                        }\n                    }\
    \ else {\n                        if((string[i] == '[' || string[i] == '(')) {\n\
    \                            brackets.push(string[i]);\n                     \
    \   } else if((string[i] == ']' || string[i] == ')')) {\n                    \
    \        if(brackets.top() == '[') {\n                                opening_brackets.push(string[i]);\n\
    \                            } else {\n                                closing_brackets.push(string[i]);\n\
    \                            }\n                        }\n                  \
    \  }\n                } else {\n                    if(brackets.empty() && opening_brackets.empty()\
    \ && closing_brackets.empty()) {\n                        if(i == string.length()\
    \ - 1) {\n                            if((string[i] == '[' || string[i] == '('))\
    \ {\n                                brackets.push(string[i]);\n             \
    \               }\n                        } else {\n                        \
    \    if((string[i] == '[' || string[i] == '(')) {\n                          \
    \      brackets.push(string", "    stack<char> st;\n    stack<char> st2;\n   \
    \ stack<char> st3;\n    stack<char> st4;\n    stack<char> st5;\n    stack<char>\
    \ st6;\n    stack<char> st7;\n    stack<char> st8;\n    stack<char> st9;\n   \
    \ stack<char> st10;\n    stack<char> st11;\n    stack<char> st12;\n    stack<char>\
    \ st13;\n    stack<char> st14;\n    stack<char> st15;\n    stack<char> st16;\n\
    \    stack<char> st17;\n    stack<char> st18;\n    stack<char> st19;\n    stack<char>\
    \ st20;\n    stack<char> st21;\n    stack<char> st22;\n    stack<char> st23;\n\
    \    stack<char> st24;\n    stack<char> st25;\n    stack<char> st26;\n    stack<char>\
    \ st27;\n    stack<char> st28;\n    stack<char> st29;\n    stack<char> st30;\n\
    \    stack<char> st31;\n    stack<char> st32;\n    stack<char> st33;\n    stack<char>\
    \ st34;\n    stack<char> st35;\n    stack<char> st36;\n    stack<char> st37;\n\
    \    stack<char> st38;\n    stack<char> st39;\n    stack<char> st40;\n    stack<char>\
    \ st41;\n    stack<char> st42;\n    stack<char> st43;\n    stack<char> st44;\n\
    \    stack<char> st45;\n    stack<char> st46;\n    stack<char> st47;\n    stack<char>\
    \ st48;\n    stack<char> st49;\n    stack<char> st50;\n    stack<char> st51;\n\
    \    stack<char> st52;\n    stack<char> st53;\n    stack<char> st54;\n    stack<char>\
    \ st55;\n    stack<char> st56;\n    stack<char> st57;\n    stack<char> st58;\n\
    \    stack<char> st59;\n    stack<char> st60;\n    stack<char> st61;\n    stack<char>\
    \ st62;\n    stack<char> st63;\n    stack<char> st64;\n    stack<char> st65;\n\
    \    stack<char> st66;\n    stack<char> ", "    // Your code here\n    bool flag\
    \ = false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[' && string[i+1] == '[') {\n            flag = true;\n        }\n    }\n\
    \    return flag;", "    bool result = false;\n    int count = 0;\n    for (int\
    \ i = 0; i < string.size(); i++) {\n        if (string[i] == '[') {\n        \
    \    count++;\n        }\n        if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count == 0) {\n            result = true;\n          \
    \  break;\n        }\n    }\n    return result;", "    // Your code here\n   \
    \ bool flag = false;\n    int count = 0;\n    for(int i = 0; i < string.size();\
    \ i++){\n        if(string[i] == '['){\n            count++;\n        }\n    \
    \    if(string[i] == ']'){\n            count--;\n        }\n        if(count\
    \ == 0){\n            flag = true;\n            break;\n        }\n    }\n   \
    \ return flag;", "    bool result = false;\n    \n    // Iterate through all characters\
    \ in the string\n    for (int i = 0; i < string.size(); i++) {\n        // If\
    \ current character is opening bracket\n        if (string[i] == '[') {\n    \
    \        // If previous character is closing bracket\n            if (string[i\
    \ - 1] == ']') {\n                // If current character is closing bracket\n\
    \                if (string[i + 1] == ']') {\n                    // If current\
    \ character is closing bracket\n                    if (string[i + 2] == ']')\
    \ {\n                        // If current character is closing bracket\n    \
    \                    if (string[i + 3] == ']') {\n                           \
    \ // If current character is closing bracket\n                            if (string[i\
    \ + 4] == ']') {\n                                // If current character is closing\
    \ bracket\n                                if (string[i + 5] == ']') {\n     \
    \                               // If current character is closing bracket\n \
    \                                   if (string[i + 6] == ']') {\n            \
    \                            // If current character is closing bracket\n    \
    \                                    if (string[i + 7] == ']') {\n           \
    \                                 // If current character is closing bracket\n\
    \                                            if (string[i + 8] == ']') {\n   \
    \                                             // If current character is closing\
    \ bracket\n                                                if (string[i + 9] ==\
    \ ']') {\n                                                    // If current character\
    \ is closing bracket\n                                                    if (string[i\
    \ + 10] == ']') {\n                                                        //\
    \ If current character is closing bracket\n                                  \
    \                      if (string[i + 11] == ']') {\n                        \
    \                                    // If current character is closing bracket\n\
    \                                                            if (string[i + 12]\
    \ == ']') {\n                                                                //\
    \ If current character is closing bracket\n                                  \
    \                              if (string[i + 13] == ']') {\n                \
    \                                                    // If current character is\
    \ closing bracket\n                                                          \
    \          if (string[i + 14] == ']') {\n                                    \
    \                                    // If current character is closing bracket\n\
    \                                                                        if (string[i\
    \ + 15] == ']') {\n                                                          \
    \                  // If current character is closing bracket\n              \
    \                                                              if (string[i +\
    \ 16] == ']') {\n                                                            \
    \                    // If current character is closing bracket\n            \
    \                                                                    if (string[i\
    \ + 17] == ']') {\n                                                          \
    \                          // If current character is closing bracket\n      \
    \                                                                            \
    \  if (string[i + 18] == ']') {\n                                            \
    \                                            // If current character is closing\
    \ bracket\n                                                                  \
    \                      if (string[i + 19] == ']') {\n                        \
    \                                                                    // If current\
    \ character is closing bracket\n                                             \
    \                                               if (string[i + 20] == ']') {\n\
    \                                                                            \
    \                    // If current character is closing bracket\n            \
    \                                                                            \
    \        if (string[i + 21] == ']') {\n                                      \
    \                                                              // If current character\
    \ is closing bracket\n                                                       \
    \                                             if (string[i + 22] == ']') {\n \
    \                                                                            \
    \                           // If current character is closing bracket\n     \
    \                                                                            \
    \                       if (string[i + 23] == ']') {\n                       \
    \                                                                            \
    \         // If current character is closing bracket\n                       \
    \                                                                            \
    \         if (string[i + 24] == ']') {\n                                     \
    \                                                                           //\
    \ If current character is closing bracket\n                                  \
    \                                                                            \
    \  if (string[i + 25] == ']') {\n", "    // Write your code here\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    // Your code here\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;", " \
    \   bool result = false;\n    for(int i = 0; i < string.length(); i++) {\n   \
    \     if(string[i] == '[' && string[i+1] == '[') {\n            result += true;\n\
    \        }\n    }\n    return result;", "    // Your code here\n    bool found\
    \ = false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[') {\n            found = true;\n        }\n        if(string[i] == ']')\
    \ {\n            found = false;\n        }\n    }\n    return found;", "    //\
    \ Your code here\n    \n    bool found = false;\n    \n    for(int i = 0; i <\
    \ string.size(); i++) {\n        if(string[i] == '[') {\n            found = true;\n\
    \        }\n        \n        if(string[i] == ']') {\n            found = false;\n\
    \        }\n    }\n    \n    return found;", "    // Your code here\n    \n  \
    \  bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[' && string[i+1] == '[') {\n            flag = true;\n        }\n     \
    \   if(string[i] == '[' && string[i+1] != ']') {\n            flag = false;\n\
    \        }\n    }\n    return flag;", "    int n = string.size();\n    bool result\
    \ = true;\n    for(int i = 0; i < n; i++) {\n        if(string[i] == '[' && string[i+1]\
    \ == '[') {\n            i += 2;\n            while(i < n && string[i] != ']')\
    \ {\n                i += 1;\n            }\n            i += 1;\n           \
    \ while(i < n && string[i] != ']') {\n                i += 1;\n            }\n\
    \            i += 1;\n            while(i < n && string[i] != ']') {\n       \
    \         i += 1;\n            }\n            i += 1;\n            while(i < n\
    \ && string[i] != ']') {\n                i += 1;\n            }\n           \
    \ i += 1;\n            while(i < n && string[i] != ']') {\n                i +=\
    \ 1;\n            }\n            i += 1;\n            while(i < n && string[i]\
    \ != ']') {\n                i += 1;\n            }\n            i += 1;\n   \
    \         while(i < n && string[i] != ']') {\n                i += 1;\n      \
    \      }\n            i += 1;\n            while(i < n && string[i] != ']') {\n\
    \                i += 1;\n            }\n            i += 1;\n            while(i\
    \ < n && string[i] != ']') {\n                i += 1;\n            }\n       \
    \     i += 1;\n            while(i < n && string[i] != ']') {\n              \
    \  i += 1;\n            }\n            i += 1;\n            while(i < n && string[i]\
    \ != ']') {\n                i += 1;\n            }\n            i += 1;\n   \
    \         while(i < n && string[i] != ']') {\n                i += 1;\n      \
    \      }\n            i += 1;\n            while(i < n && string[i] != ']') {\n\
    \                i += 1;\n            }\n            i += 1;\n            while(i\
    \ < n && string[i] != ']') {\n                i += 1;\n            }\n       \
    \     i += 1;\n            while(i < n && string[i] != ']') {\n              \
    \  i += 1;\n            }\n            i += 1;\n            while(i < n && string[i]\
    \ != ']') {\n                i += 1;\n            }\n            i += 1;\n   \
    \         while(i < n && string[i] != ']') {\n                i += 1;\n      \
    \      }\n            i += 1;\n            while(i < n && string[i] != ']') {\n\
    \                i += 1;\n            }\n            i += 1;\n            while(i\
    \ < n && string[i] != ']') {\n                i += 1;\n            }\n       \
    \     i += 1;\n            while(i < n && string[i] != ']') {\n              \
    \  i += 1;\n            }\n            i += 1;\n            while(i < n && string[i]\
    \ != ']') {\n                i += 1;\n            }\n            i += 1;\n   \
    \         while(i < n && string[i] != ']') {\n                i += 1;\n      \
    \      }\n            i += 1;\n            while(i < n && string[i] != ']') {\n\
    \                i += 1;\n            }\n", "    int counter = 0;\n    for (int\
    \ i = 0; i < string.size(); i++) {\n        if (string[i] == '[') {\n        \
    \    counter++;\n        }\n        if (string[i] == ']') {\n            counter--;\n\
    \        }\n        if (counter < 0) {\n            return false;\n        }\n\
    \    }\n    return true;", "    // Your code here\n    bool flag = false;\n  \
    \  for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n\
    \            flag = true;\n        }\n        if(string[i] == ']') {\n       \
    \     flag = false;\n        }\n    }\n    return flag;", "    // Your code here\n\
    \    \n    bool flag = false;\n    \n    for(int i = 0; i < string.size(); i++)\
    \ {\n        if(string[i] == '[') {\n            flag = true;\n        }\n   \
    \     else if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    \n    return flag;", "    // Write your code here\n    \n    bool flag =\
    \ false;\n    int count = 0;\n    \n    for(int i = 0; i < string.length(); i++)\
    \ {\n        if(string[i] == '[') {\n            count++;\n        }\n       \
    \ else if(string[i] == ']') {\n            count--;\n        }\n        if(count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  \n    return flag;", "    stack<char> s;\n    bool flag = false;\n    for (auto\
    \ c : string) {\n        if (c == '[') {\n            s.push(c);\n        } else\
    \ if (c == ']') {\n            if (s.empty()) {\n                return false;\n\
    \            }\n            char top = s.top();\n            s.pop();\n      \
    \      if (top == '[') {\n                s.push(c);\n            } else if (top\
    \ == ']') {\n                if (s.empty()) {\n                    return false;\n\
    \                }\n                char top = s.top();\n                s.pop();\n\
    \                if (top == '[') {\n                    s.push(c);\n         \
    \       } else if (top == ']') {\n                    if (s.empty()) {\n     \
    \                   return false;\n                    }\n                   \
    \ char top = s.top();\n                    s.pop();\n                    if (top\
    \ == '[') {\n                        s.push(c);\n                    } else if\
    \ (top == ']') {\n                        if (s.empty()) {\n                 \
    \           return false;\n                        }\n                       \
    \ char top = s.top();\n                        s.pop();\n                    \
    \    if (top == '[') {\n                            s.push(c);\n             \
    \           } else if (top == ']') {\n                            if (s.empty())\
    \ {\n                                return false;\n                         \
    \   }\n                            char top = s.top();\n                     \
    \       s.pop();\n                            if (top == '[') {\n            \
    \                    s.push(c);\n                            } else if (top ==\
    \ ']') {\n                                if (s.empty()) {\n                 \
    \                   return false;\n                                }\n       \
    \                         char top = s.top();\n                              \
    \  s.pop();\n                                if (top == '[') {\n             \
    \                       s.push(c);\n                                } else if\
    \ (top == ']') {\n                                    if (s.empty()) {\n     \
    \                                   return false;\n                          \
    \          }\n                                    char top = s.top();\n      \
    \                              s.pop();\n                                    if\
    \ (top == '[') {\n                                        s.push(c);\n       \
    \                             } else if (top == ']') {\n                     \
    \                   if (s.empty()) {\n                                       \
    \     return false;\n                                        }\n             \
    \                           char top = s.top();\n                            \
    \            s.pop();\n                                        if (top == '[')\
    \ {\n                                            s.push(c);\n                \
    \                        } else if (top == ']') {\n                          \
    \                  if (s.empty()) {\n                                        \
    \        return false;\n                                            }\n      \
    \                                      char top = s.top();\n                 \
    \                           s.pop();\n                                       \
    \     if (top == '[') {\n                                                s.push(c);\n\
    \                                            } else if (top == ']') {\n      \
    \                                          if (s.empty()) {\n                \
    \                                    return false;\n                         \
    \                       }\n                                                char\
    \ top = s.top();\n                                                s.pop();\n \
    \                                               if (top == '[') {\n          \
    \                                          s.push(c);\n                      \
    \                          } else if (top == ']') {\n                        \
    \                            if (s.empty()) {\n                              \
    \                          return false;\n                                   \
    \                 }\n                                                    char\
    \ top = s.top();\n                                                    s.pop();\n\
    \                                                    if (top == '[') {\n     \
    \                                                   s.push(c);\n             \
    \                                       } else if (top == ']') {\n           \
    \                                             if (s.empty()) {\n             \
    \                                               return false;\n              \
    \                                          }\n                               \
    \                         char top = s.top();\n                              \
    \                          s.pop();\n                                        \
    \                if (top == '[') {\n                                         \
    \                   s.push(c);\n                                             \
    \           } else if (top == ", "    // Your code here\n    bool flag = false;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n\
    \            flag = true;\n        }\n        if(string[i] == ']') {\n       \
    \     flag = false;\n        }\n    }\n    return flag;", "    // Your code here\n\
    \    bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n      \
    \  if(string[i] == '[' && string[i+1] == '[') {\n            flag = true;\n  \
    \      }\n        if(string[i] == '[' && string[i+1] != ']') {\n            flag\
    \ = false;\n        }\n        if(string[i] == ']' && string[i+1] == ']') {\n\
    \            flag = false;\n        }\n    }\n    return flag;", "    stack<char>\
    \ st;\n    stack<char> st2;\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            st.push(string[i]);\n  \
    \      }\n        else if(string[i] == ']') {\n            if(!st2.empty() &&\
    \ st2.top() == '[') {\n                st2.pop();\n            }\n           \
    \ if(!st2.empty() && st2.top() == '[') {\n                flag = true;\n     \
    \       }\n            if(!st2.empty() && st2.top() == ']') {\n              \
    \  flag = false;\n            }\n            if(!st2.empty() && st2.top() == ']')\
    \ {\n                flag = true;\n            }\n            if(!st2.empty()\
    \ && st2.top() == '[') {\n                flag = false;\n            }\n     \
    \       if(!st2.empty() && st2.top() == ']') {\n                flag = true;\n\
    \            }\n            if(!st2.empty() && st2.top() == '[') {\n         \
    \       flag = false;\n            }\n            if(!st2.empty() && st2.top()\
    \ == ']') {\n                flag = true;\n            }\n            if(!st2.empty()\
    \ && st2.top() == '[') {\n                flag = false;\n            }\n     \
    \       if(!st2.empty() && st2.top() == ']') {\n                flag = true;\n\
    \            }\n            if(!st2.empty() && st2.top() == '[') {\n         \
    \       flag = false;\n            }\n            if(!st2.empty() && st2.top()\
    \ == ']') {\n                flag = true;\n            }\n            if(!st2.empty()\
    \ && st2.top() == '[') {\n                flag = false;\n            }\n     \
    \       if(!st2.empty() && st2.top() == ']') {\n                flag = true;\n\
    \            }\n            if(!st2.empty() && st2.top() == '[') {\n         \
    \       flag = false;\n            }\n            if(!st2.empty() && st2.top()\
    \ == ']') {\n                flag = true;\n            }\n            if(!st2.empty()\
    \ && st2.top() == '[') {\n                flag = false;\n            }\n     \
    \       if(!st2.empty() && st2.top() == ']') {\n                flag = true;\n\
    \            }\n            if(!st2.empty() && st2.top() == '[') {\n         \
    \       flag = false;\n            }\n            if(!st2.empty() && st2.top()\
    \ == ']') {\n                flag = true;\n            }\n            if(!st2.empty()\
    \ && st2.top() == '[') {\n                flag = false;\n            }\n     \
    \       if(!st2.empty() && st2.top() == ']') {\n                flag = true;\n\
    \            }\n            if(!st2.empty() && st2.top() == '[') {\n         \
    \       flag = false;\n            }\n            if(!st2.empty() && st2.top()\
    \ == ']') {\n                flag = true;\n            }\n            if(!st2.empty()\
    \ && ", "    // Your code here\n    \n    for(int i = 0; i < string.size(); i++)\
    \ {\n        if(string[i] == '[') {\n            for(int j = i; j < string.size();\
    \ j++) {\n                if(string[j] == ']') {\n                    if(j - i\
    \ == 1) {\n                        return true;\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return false;", "    // Your\
    \ code here\n    ", "    // Your code here\n    \n    bool flag = false;\n   \
    \ for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[' && string[i+1]\
    \ == '[') {\n            flag = true;\n        }\n    }\n    return flag;", " \
    \   int n = string.size();\n    bool found = false;\n    stack<char> s;\n    for(int\
    \ i = 0; i < n; i++) {\n        if(s[i] == '[') {\n            s.push(s[i]);\n\
    \        } else if(s[i] == ']') {\n            if(!s.empty() && s.top() == '[')\
    \ {\n                s.pop();\n                found = true;\n            }\n\
    \        }\n    }\n    return found;", "    // Your code here\n    \n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[' && string[i+1]\
    \ == '[') {\n            return true;\n        }\n    }\n    return false;", " \
    \   // Your code goes here\n    bool flag = false;\n    int count = 0;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   count++;\n        }\n        if(string[i] == ']') {\n            count--;\n\
    \        }\n        if(count == 0) {\n            flag = true;\n            break;\n\
    \        }\n    }\n    return flag;", "    int n = string.size();\n    int count\
    \ = 0;\n    for (int i = 0; i < n; i++) {\n        if (string[i] == '[') {\n \
    \           count++;\n        }\n        if (string[i] == ']') {\n           \
    \ count--;\n        }\n        if (count == 0) {\n            return true;\n \
    \       }\n    }\n    return false;", "    int n = string.size();\n    bool result\
    \ = true;\n    for (int i = 0; i < n; i++) {\n        if (string[i] == '[' &&\
    \ string[i + 1] == '[') {\n            i += 2;\n        } else if (string[i] ==\
    \ '[' && string[i + 1] != ']') {\n            result = false;\n            break;\n\
    \        } else if (string[i] == '[' && string[i + 1] == ']') {\n            i\
    \ += 2;\n        } else if (string[i] == '[' && string[i + 1] != ']' && string[i\
    \ + 1] != ']') {\n            result = false;\n            break;\n        }\n\
    \    }\n    return result;", "    // Write your code here\n    bool flag = false;\n\
    \    int count = 0;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[') {\n            count++;\n        }\n        else if(string[i] == ']')\
    \ {\n            count--;\n        }\n        if(count == 0) {\n            flag\
    \ = true;\n            break;\n        }\n    }\n    return flag;", "    int count\
    \ = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        } else if (string[i] == ']') {\n     \
    \       count--;\n        }\n        if (count == 0) {\n            return true;\n\
    \        }\n    }\n    return false;", "    // Your code here\n    \n    bool\
    \ flag = false;\n    \n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[' && string[i+1] == '[') {\n            flag = true;\n        }\n     \
    \   if(string[i] == '[' && string[i+1] != ']') {\n            flag = false;\n\
    \        }\n        if(string[i] == ']' && string[i+1] != ']') {\n           \
    \ flag = false;\n        }\n    }\n    \n    return flag;", "    bool flag = false;\n\
    \    for(int i = 0; i < string.length(); i++) {\n        if(string[i] == '[')\
    \ {\n            flag = true;\n        }\n        if(string[i] == ']') {\n   \
    \         flag = false;\n        }\n    }\n    return flag;", "    bool found\
    \ = false;\n    stack<char> brackets;\n    \n    // Iterate through the string\
    \ and add each character to the stack\n    for (char c : string) {\n        if\
    \ (c == '[') {\n            brackets.push(c);\n        } else if (c == ']') {\n\
    \            if (brackets.empty()) {\n                return false;\n        \
    \    }\n            char top = brackets.top();\n            brackets.pop();\n\
    \            if (top == '[') {\n                brackets.push(top);\n        \
    \    } else if (top == ']') {\n                found = true;\n            }\n\
    \        }\n    }\n    return found;", "    bool found = false;\n    bool found1\
    \ = false;\n    bool found2 = false;\n    bool found3 = false;\n    bool found4\
    \ = false;\n    bool found5 = false;\n    bool found6 = false;\n    bool found7\
    \ = false;\n    bool found8 = false;\n    bool found9 = false;\n    bool found10\
    \ = false;\n    bool found11 = false;\n    bool found12 = false;\n    bool found13\
    \ = false;\n    bool found14 = false;\n    bool found15 = false;\n    bool found16\
    \ = false;\n    bool found17 = false;\n    bool found18 = false;\n    bool found19\
    \ = false;\n    bool found20 = false;\n    bool found21 = false;\n    bool found22\
    \ = false;\n    bool found23 = false;\n    bool found24 = false;\n    bool found25\
    \ = false;\n    bool found26 = false;\n    bool found27 = false;\n    bool found28\
    \ = false;\n    bool found29 = false;\n    bool found30 = false;\n    bool found31\
    \ = false;\n    bool found32 = false;\n    bool found33 = false;\n    bool found34\
    \ = false;\n    bool found35 = false;\n    bool found36 = false;\n    bool found37\
    \ = false;\n    bool found38 = false;\n    bool found39 = false;\n    bool found40\
    \ = false;\n    bool found41 = false;\n    bool found42 = false;\n    bool found43\
    \ = false;\n    bool found44 = false;\n    bool found45 = false;\n    bool found46\
    \ = false;\n    bool found47 = false;\n    bool found48 = false;\n    bool found49\
    \ = false;\n    bool found50 = false;\n    bool found51 = false;\n    bool found52\
    \ = false;\n    bool found53 = false;\n    bool found54 = false;\n    bool found55\
    \ = false;\n    bool found56 = false;\n    bool found57 = false;\n    bool found58\
    \ = false;\n    bool found59 = false;\n    bool found60 = false;\n    bool found61\
    \ = false;\n    bool found62 = false;\n    bool found63 = false;\n    bool found64\
    \ = false;\n    bool found65 = false;\n    bool found66 = false;\n    bool found67\
    \ = false;\n    bool found68 = false;\n    bool found69 = false;\n    bool found70\
    \ = false;\n    bool found71 = false;\n    bool found72 = false;\n    bool found73\
    \ = false;\n    bool found74 = false;\n    bool found75 = false;\n    bool found76\
    \ = false;\n    bool found77 = false;\n    bool found78 = false;\n    bool found79\
    \ = false;\n    bool found80 = false;\n    bool found81 = false;\n    bool found",
  "    bool flag = false;\n    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    int open = 0;\n    int close = 0;\n    int count = 0;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == '[')\
    \ {\n            open++;\n        }\n        if (string[i] == ']') {\n       \
    \     close++;\n        }\n        if (string[i] == '[' && string[i + 1] == ']')\
    \ {\n            count++;\n        }\n    }\n    if (count == 0) {\n        return\
    \ false;\n    }\n    if (open != close) {\n        return false;\n    }\n    return\
    \ true;", "    int n = string.size();\n    int count = 0;\n    for (int i = 0;\
    \ i < n; i++) {\n        if (string[i] == '[') {\n            count++;\n     \
    \   }\n        if (string[i] == ']') {\n            count--;\n        }\n    \
    \    if (count == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    bool flag = false;\n    for(int i = 0;\
    \ i < string.size(); i++) {\n        if(string[i] == '[' && string[i+1] == '[')\
    \ {\n            flag = true;\n        }\n        if(string[i] == '[' && string[i+1]\
    \ != ']') {\n            flag = false;\n        }\n    }\n    return flag;", " \
    \   // Write your code here\n    bool flag = false;\n    int count = 0;\n    for\
    \ (int i = 0; i < string.size(); i++) {\n        if (string[i] == '[') {\n   \
    \         count++;\n        } else if (string[i] == ']') {\n            count--;\n\
    \        }\n        if (count == 0) {\n            flag = true;\n            break;\n\
    \        }\n    }\n    return flag;", "    // Your code here\n    bool flag =\
    \ false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] ==\
    \ '[') {\n            flag = true;\n        }\n        if(string[i] == ']') {\n\
    \            flag = false;\n        }\n    }\n    return flag;", "    // Write\
    \ your code here\n    int count = 0;\n    for (int i = 0; i < string.size(); i++)\
    \ {\n        if (string[i] == '[') {\n            count++;\n        }\n      \
    \  if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;", " \
    \   // Your code here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        else if(string[i] == ']') {\n            flag = false;\n        }\n \
    \   }\n    return flag;", "    // Write your code here\n    bool flag = false;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[' &&\
    \ string[i+1] == '[') {\n            flag = true;\n        }\n    }\n    return\
    \ flag;", "    // Your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    // Your code here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    // Your code here\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[' && string[i+1]\
    \ == '[') {\n            flag = true;\n        }\n    }\n    return flag;", " \
    \   stack<char> s;\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            s.push(string[i]);\n   \
    \     } else if(string[i] == ']') {\n            if(!s.empty() && s.top() == '[')\
    \ {\n                s.pop();\n                if(!s.empty() && s.top() == ']')\
    \ {\n                    s.pop();\n                    flag = true;\n        \
    \        }\n            }\n        }\n    }\n    return flag;", "    bool flag\
    \ = false;\n    int i = 0;\n    while(i < string.size()) {\n        if(string[i]\
    \ == '[') {\n            flag = true;\n            i++;\n        }\n        if(string[i]\
    \ == ']') {\n            flag = false;\n            i++;\n        }\n        i++;\n\
    \    }\n    return flag;", "    // Your code goes here\n    bool flag = false;\n\
    \    for(int i=0;i<string.size();i++){\n        if(string[i]=='['){\n        \
    \    flag = true;\n        }\n        if(string[i]==']'){\n            flag =\
    \ false;\n        }\n    }\n    return flag;", "    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    // Your code here\n    int\
    \ count = 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n\
    \            count--;\n        }\n        if (count < 0) {\n            return\
    \ false;\n        }\n    }\n    return count == 0;", "    // Your code here\n\
    \    bool flag = false;\n    int count = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            count++;\n        }\n \
    \       if (string[i] == ']') {\n            count--;\n        }\n        if (count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    // Your code goes here\n    \n    bool found = false;\n\
    \    \n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[')\
    \ {\n            found = true;\n        }\n        else if(string[i] == ']') {\n\
    \            found = false;\n        }\n    }\n    \n    return found;", "   \
    \ // Write your code here\n    \n    bool flag = false;\n    for(int i = 0; i\
    \ < string.size(); i++) {\n        if(string[i] == '[') {\n            flag =\
    \ true;\n        }\n        if(string[i] == ']') {\n            flag = false;\n\
    \        }\n    }\n    return flag;", "    bool flag = false;\n    int count =\
    \ 0;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] ==\
    \ '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n \
    \           count--;\n        }\n        if (count == 0) {\n            flag =\
    \ true;\n            break;\n        }\n    }\n    return flag;", "    int len\
    \ = string.length();\n    for (int i = 0; i < len; i++) {\n        if (string[i]\
    \ == '[' && string[i+1] == '[') {\n            i += 2;\n            while (string[i]\
    \ != ']') {\n                i++;\n            }\n            i += 2;\n      \
    \      while (string[i] != ']') {\n                i++;\n            }\n     \
    \       return true;\n        }\n    }\n    return false;", "    stack<char> s;\n\
    \    bool flag = false;\n    for (auto c : string) {\n        if (c == '[') {\n\
    \            s.push(c);\n        } else if (c == ']') {\n            if (s.empty())\
    \ {\n                flag = false;\n            } else {\n                flag\
    \ = true;\n                s.pop();\n            }\n        } else if (s.empty())\
    \ {\n            flag = false;\n        }\n    }\n    return flag;", "    int\
    \ open_brackets = 0;\n    int close_brackets = 0;\n    for (int i = 0; i < string.size();\
    \ i++) {\n        if (string[i] == '[') {\n            open_brackets++;\n    \
    \    }\n        if (string[i] == ']') {\n            close_brackets++;\n     \
    \   }\n    }\n    if (open_brackets == close_brackets) {\n        return true;\n\
    \    }\n    return false;", "    // Your code here\n    bool flag = false;\n \
    \   for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n\
    \            flag = true;\n        }\n        if(string[i] == ']') {\n       \
    \     flag = false;\n        }\n    }\n    return flag;", "    // Your code here\n\
    \    \n    bool flag = false;\n    for(int i = 0; i < string.size(); i++) {\n\
    \        if(string[i] == '[') {\n            flag = true;\n        }\n       \
    \ else if(string[i] == ']') {\n            flag = false;\n        }\n    }\n \
    \   return flag;", "    stack<char> s;\n    bool flag = false;\n    for(int i\
    \ = 0; i < string.length(); i++) {\n        if(string[i] == '[') {\n         \
    \   s.push(string[i]);\n        } else if(string[i] == ']') {\n            if(!s.empty()\
    \ && s.top() == '[') {\n                s.pop();\n                flag = true;\n\
    \            }\n        }\n    }\n    return flag;", "    // Your code here\n\
    \    \n    bool flag = false;\n    int count = 0;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            count++;\n        }\n  \
    \      if(string[i] == ']') {\n            count--;\n        }\n        if(count\
    \ == 0) {\n            flag = true;\n            break;\n        }\n    }\n  \
    \  return flag;", "    int n = string.size();\n    int count = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        }\n        if (string[i] == ']') {\n            count--;\n        }\n\
    \        if (count < 0) {\n            return false;\n        }\n    }\n    return\
    \ count == 0;", "    int n = string.size();\n    int count = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        if (string[i] == '[') {\n            count++;\n\
    \        } else if (string[i] == ']') {\n            count--;\n        }\n   \
    \     if (count == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;", "    // Your code here\n    \n    bool flag = false;\n    int count\
    \ = 0;\n    \n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[') {\n            count++;\n        }\n        if(string[i] == ']') {\n\
    \            count--;\n        }\n        if(count == 0) {\n            flag =\
    \ true;\n            break;\n        }\n    }\n    \n    return flag;", "    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // ", "    // Your code here\n    bool flag = false;\n\
    \    for(int i = 0; i < string.size(); i++) {\n        if(string[i] == '[' &&\
    \ string[i+1] == '[') {\n            flag = true;\n        }\n    }\n    return\
    \ flag;", "    // Write your code here\n    \n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++){\n        if(string[i] == '['){\n           \
    \ flag = true;\n        }\n        if(string[i] == ']'){\n            flag = false;\n\
    \        }\n    }\n    return flag;", "    // Your code goes here\n    bool flag\
    \ = false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[' && string[i+1] == '[') {\n            flag = true;\n        }\n    }\n\
    \    return flag;", "    // Your code here\n    \n    bool flag = false;\n   \
    \ \n    for(int i = 0; i < string.size(); i++){\n        if(string[i] == '['){\n\
    \            flag = true;\n        }\n        if(string[i] == ']'){\n        \
    \    flag = false;\n        }\n    }\n    \n    return flag;", "    // Your code\
    \ here\n    bool flag = false;\n    int count = 0;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            count++;\n        }\n  \
    \      else if(string[i] == ']') {\n            count--;\n        }\n        if(count\
    \ < 0) {\n            flag = false;\n            break;\n        }\n    }\n  \
    \  return flag;", "    int n = string.size();\n    bool flag = false;\n    for\
    \ (int i = 0; i < n; i++) {\n        if (string[i] == '[') {\n            flag\
    \ = true;\n        }\n        else if (string[i] == ']') {\n            flag =\
    \ false;\n        }\n    }\n    return flag;", "    // Your code here\n    bool\
    \ flag = false;\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i]\
    \ == '[' && string[i+1] == '[') {\n            flag = true;\n        }\n     \
    \   if(string[i] == '[' && string[i+1] != ']') {\n            flag = false;\n\
    \        }\n    }\n    return flag;", "    bool result = true;\n    for(int i\
    \ = 0; i < string.size(); i++) {\n        if(string[i] == '[' && string[i+1] ==\
    \ '[') {\n            i += 2;\n            while(i < string.size() && string[i]\
    \ != ']') {\n                i++;\n            }\n            if(i == string.size())\
    \ {\n                result = false;\n            }\n        }\n    }\n    return\
    \ result;", "    int counter = 0;\n    for (int i = 0; i < string.size(); i++)\
    \ {\n        if (string[i] == '[') {\n            counter++;\n        } else if\
    \ (string[i] == ']') {\n            counter--;\n        }\n        if (counter\
    \ < 0) {\n            return false;\n        }\n    }\n    return counter == 0;",
  "    // Your code here\n    bool flag = false;\n    for(int i = 0; i < string.size();\
    \ i++) {\n        if(string[i] == '[') {\n            flag = true;\n        }\n\
    \        if(string[i] == ']') {\n            flag = false;\n        }\n    }\n\
    \    return flag;", "    // Your code here\n    bool flag = false;\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] == '[') {\n         \
    \   flag = true;\n        }\n        if(string[i] == ']') {\n            flag\
    \ = false;\n        }\n    }\n    return flag;", "    int n = string.size();\n\
    \    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (string[i]\
    \ == '[') {\n            count++;\n        }\n        if (string[i] == ']') {\n\
    \            count--;\n        }\n        if (count == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;"]
stop_tokens:
- "\n}"

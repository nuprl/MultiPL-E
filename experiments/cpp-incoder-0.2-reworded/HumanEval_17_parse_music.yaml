name: HumanEval_17_parse_music
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function is\
  \ a string representing musical notes in a special ASCII format.\n// Your task is\
  \ to parse this string and return vector of integers corresponding to how many beats\
  \ does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts four\
  \ beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts one\
  \ beat\n// >>> parse_music((\"o o| .| o| o| .| .| .| .| o o\"))\n// (std::vector<long>({(long)4,\
  \ (long)2, (long)1, (long)2, (long)2, (long)1, (long)1, (long)1, (long)1, (long)4,\
  \ (long)4}))\nstd::vector<long> parse_music(std::string music_string) {\n"
tests: "}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
  \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
  \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
  )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
  \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2,\
  \ (long)1, (long)2, (long)1, (long)4, (long)2, (long)4, (long)2})));\n}\n"
completions: ["    std::vector<long> beats;\n    std::string note;\n    long beat\
    \ = 0;\n    long last_beat = 0;\n    bool is_note = false;\n    for (auto c :\
    \ music_string) {\n        if (c == 'o') {\n            note = \"o\";\n      \
    \      is_note = true;\n            beat = 0;\n            last_beat = 0;\n  \
    \      } else if (c == '|') {\n            note = \"o|\";\n            is_note\
    \ = true;\n            beat = 0;\n            last_beat = 0;\n        } else if\
    \ (c == ' ') {\n            note = \".\";\n            is_note = false;\n    \
    \        beat = 0;\n            last_beat = 0;\n        } else {\n           \
    \ if (is_note) {\n                beat += 1;\n                last_beat = beat;\n\
    \            }\n            note = c;\n            is_note = false;\n        }\n\
    \    }\n    beats.push_back(last_beat);\n    return beats;", "    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    for (auto c : music_string)\
    \ {\n        if (c == 'o') {\n            beats.push_back(beat);\n           \
    \ beat = 0;\n            last_note = 0;\n            is_note = true;\n       \
    \ } else if (c == '|') {\n            beats.push_back(beat);\n            beat\
    \ = 0;\n            last_note = 1;\n            is_note = true;\n        } else\
    \ if (c == ' ') {\n            beats.push_back(beat);\n            beat = 0;\n\
    \            last_note = 0;\n            is_note = false;\n        } else if (is_note)\
    \ {\n            note += c;\n        } else {\n            beat += 1;\n      \
    \  }\n    }\n    beats.push_back(beat);\n    return beats;", "    // Your code\
    \ here\n    std::vector<long> beats;\n    std::string note;\n    long beat = 0;\n\
    \    long beats = 0;\n    long notes = 0;\n    long last_note = 0;\n    long last_beat\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_last_note\
    \ = 0;\n    long last_last_beat = 0;\n    long last_last_beats = 0;\n    long\
    \ last_last_notes = 0;\n    long last_last_last_note = 0;\n    long last_last_last_beat\
    \ = 0;\n    long last_last_last_beats = 0;\n    long last_last_last_notes = 0;\n\
    \    long last_last_last_last_note = 0;\n    long last_last_last_last_beat = 0;\n\
    \    long last_last_last_last_beats = 0;\n    long last_last_last_last_notes =\
    \ 0;\n    long last_last_last_last_last_note = 0;\n    long last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_beats = 0;\n    long last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_note = 0;\n    long last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beats = 0;\n    long\
    \ last_last_last_last_last_last_last_notes = 0;\n", "    // Your code here\n \
    \   std::vector<long> beats;\n    std::string temp;\n    long beat = 0;\n    long\
    \ beats = 0;\n    long note = 0;\n    long notes = 0;\n    long notes_total =\
    \ 0;\n    long notes_last_beat = 0;\n    long notes_last_beat_total = 0;\n   \
    \ long notes_last_beat_last_beat = 0;\n    long notes_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat = 0;\n    long notes_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat = 0;\n    long\
    \ notes_last_beat_last_beat_last_beat_last_beat_total = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_total\
    \ = 0;\n    long notes_last_beat_last_beat_last_beat_last_beat_last_beat_last_",
  "    std::vector<long> beats;\n    std::string current_note;\n    long current_beat\
    \ = 0;\n    long current_beats_length = 0;\n    long current_note_length = 0;\n\
    \    long current_note_length_in_bpm = 0.0;\n    long current_note_length_in_octave\
    \ = 0.0;\n    long current_note_length_in_notes = 0.0;\n    long current_note_length_in_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_octave = 0.0;\n    long current_note_length_in_notes_notes\
    \ = 0.0;\n    long current_note_length_in_notes_notes_bpm = 0.0;\n    long current_note_length_in_notes_notes_octave\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes = 0.0;\n    long current_note_length_in_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_octave = 0.0;\n  \
    \  long current_note_length_in_notes_notes_notes_notes = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_octave = 0.0;\n\
    \    long current_note_length_in_notes_notes_notes_notes_notes = 0.0;\n    long\
    \ current_note_length_in_notes_notes_notes_notes_notes_bpm = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_octave\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_bpm =\
    \ 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_octave =\
    \ 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes =\
    \ 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_octave\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_notes\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_notes_bpm\
    \ = 0.0;\n    long current_note_length_in_notes_notes_notes_notes_notes_notes_notes_octave\
    \ = 0.0;\n    long current_note_length_in_note", "    std::vector<long> beats;\n\
    \    std::string note;\n    long beat = 0;\n    long beats = 0;\n    bool is_note\
    \ = false;\n    for (char c : music_string) {\n        if (c == 'o') {\n     \
    \       is_note = true;\n            beat = 0;\n            beats = 0;\n     \
    \       note = \"\";\n        } else if (c == '|') {\n            is_note = false;\n\
    \            beat = 0;\n            beats = 0;\n            note = \"\";\n   \
    \     } else if (is_note) {\n            note += c;\n        } else {\n      \
    \      beat += 1;\n            beats += 1;\n        }\n    }\n    beats.push_back(beat);\n\
    \    beats.push_back(beats);\n    return beats;", "    std::vector<long> beats;\n\
    \    std::string current_note;\n    long current_beat = 0;\n    long current_beats_length\
    \ = 0;\n    for (char c : music_string) {\n        if (c == 'o') {\n         \
    \   current_note = current_note == \"o\" ? \"o|\" : \"o\";\n            current_beats_length\
    \ = 4;\n            current_beat = 0;\n        } else if (c == '|') {\n      \
    \      current_note = current_note == \"o\" ? \"o|\" : \"o\";\n            current_beats_length\
    \ = 2;\n            current_beat = 0;\n        } else if (c == '.') {\n      \
    \      current_note = current_note == \"o\" ? \"o|\" : \"o\";\n            current_beats_length\
    \ = 1;\n            current_beat = 0;\n        } else {\n            if (current_beat\
    \ == 0) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 1) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 2) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 3) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 4) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 5) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 6) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 7) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 8) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 9) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 10) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 11) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 12) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 13) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 14) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 15) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 16) {\n                current_beat += 1;\n                current_beats_length\
    \ += 1;\n            } else if (current_beat == 17) {\n                current_beat\
    \ += 1;\n                current_beats_length += 1;\n            } else if (current_beat\
    \ == 18) {\n", "    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_note_length\
    \ = 0;\n    long note_length = 0;\n    long note_length2 = 0;\n    long note_length3\
    \ = 0;\n    long note_length4 = 0;\n    long note_length5 = 0;\n    long note_length6\
    \ = 0;\n    long note_length7 = 0;\n    long note_length8 = 0;\n    long note_length9\
    \ = 0;\n    long note_length10 = 0;\n    long note_length11 = 0;\n    long note_length12\
    \ = 0;\n    long note_length13 = 0;\n    long note_length14 = 0;\n    long note_length15\
    \ = 0;\n    long note_length16 = 0;\n    long note_length17 = 0;\n    long note_length18\
    \ = 0;\n    long note_length19 = 0;\n    long note_length20 = 0;\n    long note_length21\
    \ = 0;\n    long note_length22 = 0;\n    long note_length23 = 0;\n    long note_length24\
    \ = 0;\n    long note_length25 = 0;\n    long note_length26 = 0;\n    long note_length27\
    \ = 0;\n    long note_length28 = 0;\n    long note_length29 = 0;\n    long note_length30\
    \ = 0;\n    long note_length31 = 0;\n    long note_length32 = 0;\n    long note_length33\
    \ = 0;\n    long note_length34 = 0;\n    long note_length35 = 0;\n    long note_length36\
    \ = 0;\n    long note_length37 = 0;\n    long note_length38 = 0;\n    long note_length39\
    \ = 0;\n    long note_length40 = 0;\n    long note_length41 = 0;\n    long note_length42\
    \ = 0;\n    long note_length43 = 0;\n    long note_length44 = 0;\n    long note_length45\
    \ = 0;\n    long note_length46 = 0;\n    long note_length47 = 0;\n    long note_length48\
    \ = 0;\n    long note_length49 = 0;\n    long note_length50 = 0;\n    long note_length51\
    \ = 0;\n    long note_length52 = 0;\n    long note_length53 = 0;\n    long note_length54\
    \ = 0;\n    long note_length55 = 0;\n    long note_length56 = 0;\n    long note_length57\
    \ = 0;\n    long note_length58 = 0;\n    long note_length59 = 0;\n    long note_length60\
    \ = 0;\n    long note_length61 = 0;\n    long note_length62 = 0;\n    long note_length63\
    \ = 0;\n    long note_length64 = 0;\n    long note_length65 = 0;\n    long note_length66\
    \ = 0;\n    long note_length67 = 0;\n    long note_length68 = 0;\n    long note_length69",
  "    std::vector<long> beats;\n    std::string note;\n    long beat = 0;\n    long\
    \ current_beat = 0;\n    long current_note = 0;\n    long current_note_length\
    \ = 0;\n    long current_note_length_in_bpm = 1;\n    long current_note_length_in_beat\
    \ = 1;\n    long current_note_length_in_beats = 1;\n    long current_note_length_in_seconds\
    \ = 1;\n    long current_note_length_in_minutes = 1;\n    long current_note_length_in_hours\
    \ = 1;\n    long current_note_length_in_days = 1;\n    long current_note_length_in_weeks\
    \ = 1;\n    long current_note_length_in_months = 1;\n    long current_note_length_in_years\
    \ = 1;\n    long current_note_length_in_centuries = 1;\n    long current_note_length_in_milleniums\
    \ = 1;\n    long current_note_length_in_thousands = 1;\n    long current_note_length_in_tens\
    \ = 1;\n    long current_note_length_in_hundreds = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;\n    long current_note_length_in_hundredths\
    \ = 1;\n    long current_note_length_in_thousandths = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_hundredths = 1;\n    long current_note_length_in_thousandths\
    \ = 1;\n    long current_note_length_in_tenths = 1;", "    std::vector<long> beats;\n\
    \    std::string note;\n    long beat = 0;\n    long note_count = 0;\n    bool\
    \ is_note = false;\n    for (auto c : music_string) {\n        if (c == 'o') {\n\
    \            is_note = true;\n            note_count = 0;\n            beat =\
    \ 0;\n            note = \"\";\n        } else if (c == '|') {\n            is_note\
    \ = false;\n            note_count = 0;\n            beat = 0;\n            note\
    \ = \"\";\n        } else if (is_note) {\n            note += c;\n           \
    \ note_count += 1;\n        } else {\n            beat += 1;\n            beat_count\
    \ += 1;\n        }\n    }\n    beats.push_back(beat);\n    return beats;", " \
    \   std::vector<long> beats;\n    std::string note;\n    long beat = 0;\n    long\
    \ beats = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n \
    \   long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n",
  "    std::vector<long> beats;\n    std::string note;\n    long beat = 0;\n    long\
    \ beats = 0;\n    long notes = 0;\n    long note = 0;\n    long note_count = 0;\n\
    \    long note_length = 0;\n    long note_length_count = 0;\n    long note_length\
    \ = 0;\n    long note_length_count2 = 0;\n    long note_length2 = 0;\n    long\
    \ note_length_count3 = 0;\n    long note_length3 = 0;\n    long note_length_count4\
    \ = 0;\n    long note_length4 = 0;\n    long note_length_count5 = 0;\n    long\
    \ note_length5 = 0;\n    long note_length_count6 = 0;\n    long note_length6 =\
    \ 0;\n    long note_length_count7 = 0;\n    long note_length7 = 0;\n    long note_length_count8\
    \ = 0;\n    long note_length8 = 0;\n    long note_length_count9 = 0;\n    long\
    \ note_length9 = 0;\n    long note_length_count10 = 0;\n    long note_length10\
    \ = 0;\n    long note_length_count11 = 0;\n    long note_length11 = 0;\n    long\
    \ note_length_count12 = 0;\n    long note_length12 = 0;\n    long note_length_count13\
    \ = 0;\n    long note_length13 = 0;\n    long note_length_count14 = 0;\n    long\
    \ note_length14 = 0;\n    long note_length_count15 = 0;\n    long note_length15\
    \ = 0;\n    long note_length_count16 = 0;\n    long note_length16 = 0;\n    long\
    \ note_length_count17 = 0;\n    long note_length17 = 0;\n    long note_length_count18\
    \ = 0;\n    long note_length18 = 0;\n    long note_length_count19 = 0;\n    long\
    \ note_length19 = 0;\n    long note_length_count20 = 0;\n    long note_length20\
    \ = 0;\n    long note_length_count21 = 0;\n    long note_length21 = 0;\n    long\
    \ note_length_count22 = 0;\n    long note_length22 = 0;\n    long note_length_count23\
    \ = 0;\n    long note_length23 = 0;\n    long note_length_count24 = 0;\n    long\
    \ note_length24 = 0;\n    long note_length_count25 = 0;\n    long note_length25\
    \ = 0;\n    long note_length_count26 = 0;\n    long note_length26 = 0;\n    long\
    \ note_length_count27 = 0;\n    long note_length27 = 0;\n    long note_length_count28\
    \ = 0;\n    long note_length28 = 0;\n    long note_length_count29 = 0;\n    long\
    \ note_length29 = 0;\n    long note_length_count30 = 0;\n    long note_length30\
    \ = 0;\n    long note_length_count31 = 0;\n    long note_length31 = 0;\n    long\
    \ note_length_count32 = 0;\n    long note_length32", "    std::vector<long> beats;\n\
    \    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n    long\
    \ last_note = 0;\n    long note_count = 0;\n    for (char c : music_string) {\n\
    \        if (c == 'o') {\n            note_count++;\n            beat = 0;\n \
    \           beats.push_back(beat);\n            last_beat = beat;\n          \
    \  last_note = note_count;\n        } else if (c == '|') {\n            note_count++;\n\
    \            beat = 0;\n            beats.push_back(beat);\n            last_beat\
    \ = beat;\n            last_note = note_count;\n        } else if (c == ' ') {\n\
    \            beat = 0;\n            beats.push_back(beat);\n            last_beat\
    \ = beat;\n            last_note = note_count;\n        } else if (c == '.') {\n\
    \            beat = 0;\n            beats.push_back(beat);\n            last_beat\
    \ = beat;\n            last_note = note_count;\n        } else {\n           \
    \ note_count++;\n            beat = 0;\n            beats.push_back(beat);\n \
    \           last_beat = beat;\n            last_note = note_count;\n        }\n\
    \    }\n    return beats;", "    std::vector<long> beats;\n    std::string note;\n\
    \    long beat = 0;\n    long last_beat = 0;\n    bool is_note = false;\n    bool\
    \ is_last_note = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    for (auto c : music_string) {\n        if (c == 'o') {\n     \
    \       is_note = true;\n            beat = 0;\n            last_beat = 0;\n \
    \           is_last_note = false;\n            is_last_beat = false;\n       \
    \     is_last_beat = false;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == ' ') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == '.') {\n            is_note =\
    \ false;\n            is_last_note = false;\n            is_last_beat = false;\n\
    \        } else if (c == 'o') {\n            is_note = true;\n            beat\
    \ = 0;\n            last_beat = 0;\n            is_last_note = false;\n      \
    \      is_last_beat = false;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == ' ') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == '.') {\n            is_note =\
    \ false;\n            is_last_note = false;\n            is_last_beat = false;\n\
    \        } else if (c == 'o') {\n            is_note = true;\n            beat\
    \ = 0;\n            last_beat = 0;\n            is_last_note = false;\n      \
    \      is_last_beat = false;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == ' ') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == '.') {\n            is_note =\
    \ false;\n            is_last_note = false;\n            is_last_beat = false;\n\
    \        } else if (c == 'o') {\n            is_note = true;\n            beat\
    \ = 0;\n            last_beat = 0;\n            is_last_note = false;\n      \
    \      is_last_beat = false;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == ' ') {\n\
    \            is_note = false;\n            is_last_note = false;\n           \
    \ is_last_beat = false;\n        } else if (c == '.') {\n            is_note =\
    \ false;\n            is_last_note = false;\n            is_last_beat = false;\n\
    \        } else if (c == 'o') {\n            is_note = true;\n            beat\
    \ = 0;\n            last_beat = 0;\n            is_last_note = false;\n      \
    \      is_last_beat = false;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            beat = 0;\n            last_beat = 0;\n            is_last_note\
    \ = false;\n            is_last_beat = false;\n        } else if (c == ' ') {\n\
    \            is_note = false;\n            is_last_note", "    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    for (char c : music_string) {\n        if (c == 'o') {\n            beat_count++;\n\
    \            beats.push_back(beat);\n            beat = 0;\n            note_count\
    \ = 0;\n        } else if (c == '|') {\n            beat_count++;\n          \
    \  beats.push_back(beat);\n            beat = 0;\n            note_count = 0;\n\
    \        } else if (c == ' ') {\n            beat_count++;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            note_count = 0;\n        } else if (c == '.')\
    \ {\n            beat_count++;\n            beats.push_back(beat);\n         \
    \   beat = 0;\n            note_count = 0;\n        } else {\n            beat_count++;\n\
    \            beat = beat * 10 + c - '0';\n            note_count++;\n        }\n\
    \    }\n    beats.push_back(beat);\n    return beats;", "    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ bool is_note = false;\n    for (auto c : music_string) {\n        if (c == 'o')\
    \ {\n            is_note = true;\n            note = \"o\";\n            beat\
    \ = 0;\n            beats = 0;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            note = \"|\";\n            beat = 0;\n            beats\
    \ = 0;\n        } else if (c == ' ') {\n            is_note = false;\n       \
    \     beat = 0;\n            beats = 0;\n        } else {\n            if (is_note)\
    \ {\n                beat += 1;\n                beats += 1;\n            }\n\
    \        }\n    }\n    beats.push_back(beat);\n    return beats;", "    // Your\
    \ code here\n    std::vector<long> beats;\n    std::string note;\n    long beat\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_note_beat\
    \ = 0;\n    long last_note_beat_beat = 0;\n    long last_note_beat_beat_beat =\
    \ 0;\n    long last_note_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n    long\
    \ last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_be", "    std::vector<long> beats;\n    std::string\
    \ note;\n    long beat = 0;\n    long beats = 0;\n    bool is_note = false;\n\
    \    bool is_last_note = false;\n    for (char c : music_string) {\n        if\
    \ (c == 'o') {\n            is_note = true;\n            beat = 0;\n         \
    \   beats = 0;\n            is_last_note = false;\n        } else if (c == '|')\
    \ {\n            is_note = true;\n            beat = 0;\n            beats = 0;\n\
    \            is_last_note = true;\n        } else if (c == ' ') {\n          \
    \  is_note = false;\n            beat = 0;\n            beats = 0;\n         \
    \   is_last_note = false;\n        } else if (c == '.') {\n            is_note\
    \ = false;\n            beat = 0;\n            beats = 0;\n            is_last_note\
    \ = true;\n        } else {\n            if (is_note) {\n                beat\
    \ += 1;\n                beats += 1;\n            }\n        }\n    }\n    beats.push_back(beat);\n\
    \    beats.push_back(beats);\n    return beats;", "    std::vector<long> beats;\n\
    \    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n    long\
    \ last_note = 0;\n    bool is_note = false;\n    for (auto c : music_string) {\n\
    \        if (c == 'o') {\n            is_note = true;\n            note = \"o\"\
    ;\n            beat = 0;\n            last_note = note;\n            last_beat\
    \ = beat;\n        } else if (c == '|') {\n            is_note = true;\n     \
    \       note = \"o|\";\n            beat = 0;\n            last_note = note;\n\
    \            last_beat = beat;\n        } else if (c == ' ') {\n            is_note\
    \ = false;\n            note = \".\";\n            beat = 0;\n            last_note\
    \ = note;\n            last_beat = beat;\n        } else if (c == '.') {\n   \
    \         is_note = false;\n            note = \".\";\n            beat = 0;\n\
    \            last_note = note;\n            last_beat = beat;\n        } else\
    \ if (is_note) {\n            beat += 1;\n            last_beat = beat;\n    \
    \        last_note = note;\n        } else {\n            std::cerr << \"Invalid\
    \ music string!\" << std::endl;\n            exit(1);\n        }\n    }\n    beats.push_back(last_beat);\n\
    \    return beats;", "    std::vector<long> beats;\n    std::string note;\n  \
    \  long beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long\
    \ last_note_beat = 0;\n    long last_note_beat_beat = 0;\n    long last_note_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n    long\
    \ last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;"]
stop_tokens:
- "\n}"

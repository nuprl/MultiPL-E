name: HumanEval_98_count_upper
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string s, count the\
  \ number of uppercase vowels in even indices.\n// For example:\n// >>> count_upper((\"\
  aBCdEf\"))\n// (1)\n// >>> count_upper((\"abcdefg\"))\n// (0)\n// >>> count_upper((\"\
  dBBE\"))\n// (0)\nlong count_upper(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = count_upper;\n    assert(candidate((\"\
  aBCdEf\")) == (1));\n    assert(candidate((\"abcdefg\")) == (0));\n    assert(candidate((\"\
  dBBE\")) == (0));\n    assert(candidate((\"B\")) == (0));\n    assert(candidate((\"\
  U\")) == (1));\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
  EEEE\")) == (2));\n}\n"
completions: ["    long ans = 0;\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(s[i] >= 'A' && s[i] <= 'Z') {\n            ans += 1;\n        }\n    }\n\
    \    return ans;", "    long ans = 0;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U') {\n            ans++;\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long len = s.length();\n    for (int i = 0; i < len; i++) {\n\
    \        if (i % 2 == 0) {\n            if (s[i] == 'A' || s[i] == 'a') {\n  \
    \              ans++;\n            }\n        }\n    }\n    return ans;", "  \
    \  long ans = 0;\n    long i = 0;\n    while (i < s.size()) {\n        if (s[i]\
    \ == 'A' || s[i] == 'a') {\n            ans += 1;\n        }\n        i += 2;\n\
    \    }\n    return ans;", "    long ans = 0;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(s[i] == 'A' || s[i] == 'a') {\n            ans += 1;\n  \
    \      }\n    }\n    return ans;", "    long ans = 0;\n    long len = s.length();\n\
    \    for (int i = 0; i < len; ++i) {\n        if (i % 2 == 0) {\n            if\
    \ (s[i] == 'A' || s[i] == 'a') {\n                ans++;\n            }\n    \
    \    }\n    }\n    return ans;", "    long ans = 0;\n    for (size_t i = 0; i\
    \ < s.size(); i++) {\n        if (s[i] >= 'A' && s[i] <= 'Z') {\n            ans\
    \ += 1;\n            if (s[i] >= 'a' && s[i] <= 'z') {\n                ans -=\
    \ 1;\n            }\n        }\n    }\n    return ans;", "    long ans = 0;\n\
    \    for (long i = 0; i < s.size(); i++) {\n        if (s[i] == 'A' || s[i] ==\
    \ 'a') {\n            ans++;\n        }\n        if (s[i] == 'E' || s[i] == 'e')\
    \ {\n            ans++;\n        }\n        if (s[i] == 'I' || s[i] == 'i') {\n\
    \            ans++;\n        }\n        if (s[i] == 'O' || s[i] == 'o') {\n  \
    \          ans++;\n        }\n        if (s[i] == 'U' || s[i] == 'u') {\n    \
    \        ans++;\n        }\n    }\n    return ans;", "    long ans = 0;\n    long\
    \ len = s.length();\n    long i = 0;\n    while (i < len) {\n        if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            ans += 1;\n        }\n        i += 2;\n\
    \    }\n    return ans;", "    long ans = 0;\n    for (auto c : s) {\n       \
    \ if (c == 'A' || c == 'a') ans++;\n        if (c == 'E' || c == 'e') ans++;\n\
    \        if (c == 'I' || c == 'i') ans++;\n        if (c == 'O' || c == 'o') ans++;\n\
    \        if (c == 'U' || c == 'u') ans++;\n        if (c == 'Y' || c == 'y') ans++;\n\
    \    }\n    return ans;", "    long ans = 0;\n    long len = s.length();\n   \
    \ for(int i = 0; i < len; ++i) {\n        if(s[i] == 'A' || s[i] == 'a') {\n \
    \           ans += 1;\n        }\n    }\n    return ans;", "    long ans = 0;\n\
    \    for (long i = 0; i < s.size(); i++) {\n        if (s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            ans += 1;\n        }\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            ans += 1;\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long len = s.length();\n    for(int i = 0; i < len; ++i) {\n \
    \       if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U')\n            ans++;\n    }\n    return ans;", "    long ans = 0;\n    for\
    \ (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n            ans++;\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'A'\
    \ || s[i] == 'a') {\n            ans++;\n        }\n        if (s[i] == 'B' ||\
    \ s[i] == 'b') {\n            ans++;\n        }\n        if (s[i] == 'C' || s[i]\
    \ == 'c') {\n            ans++;\n        }\n        if (s[i] == 'D' || s[i] ==\
    \ 'd') {\n            ans++;\n        }\n        if (s[i] == 'E' || s[i] == 'e')\
    \ {\n            ans++;\n        }\n        if (s[i] == 'F' || s[i] == 'f') {\n\
    \            ans++;\n        }\n        if (s[i] == 'G' || s[i] == 'g') {\n  \
    \          ans++;\n        }\n        if (s[i] == 'H' || s[i] == 'h') {\n    \
    \        ans++;\n        }\n        if (s[i] == 'I' || s[i] == 'i') {\n      \
    \      ans++;\n        }\n        if (s[i] == 'J' || s[i] == 'j') {\n        \
    \    ans++;\n        }\n        if (s[i] == 'K' || s[i] == 'k') {\n          \
    \  ans++;\n        }\n        if (s[i] == 'L' || s[i] == 'l') {\n            ans++;\n\
    \        }\n        if (s[i] == 'M' || s[i] == 'm') {\n            ans++;\n  \
    \      }\n        if (s[i] == 'N' || s[i] == 'n') {\n            ans++;\n    \
    \    }\n        if (s[i] == 'O' || s[i] == 'o') {\n            ans++;\n      \
    \  }\n        if (s[i] == 'P' || s[i] == 'p') {\n            ans++;\n        }\n\
    \        if (s[i] == 'Q' || s[i] == 'q') {\n            ans++;\n        }\n  \
    \      if (s[i] == 'R' || s[i] == 'r') {\n            ans++;\n        }\n    \
    \    if (s[i] == 'S' || s[i] == 's') {\n            ans++;\n        }\n      \
    \  if (s[i] == 'T' || s[i] == 't') {\n            ans++;\n        }\n        if\
    \ (s[i] == 'U' || s[i] == 'u') {\n            ans++;\n        }\n        if (s[i]\
    \ == 'V' || s[i] == 'v') {\n            ans++;\n        }\n        if (s[i] ==\
    \ 'W' || s[i] == 'w') {\n            ans++;\n        }\n        if (s[i] == 'X'\
    \ || s[i] == 'x') {\n            ans++;\n        }\n        if (s[i] == 'Y' ||\
    \ s[i] == 'y') {\n            ans++;\n        }\n        if (s[i] == 'Z' || s[i]\
    \ == 'z') {\n            ans++;\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    for (long i = 0; i < s.size(); i++) {\n        if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n            ans += 1;\n        }\n        if (s[i] >= 'a'\
    \ && s[i] <= 'z') {\n            ans += 1;\n        }\n    }\n    return ans;",
  "    long ans = 0;\n    for (long i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == 'A' || s[i] == 'a') {\n            ans++;\n        }\n        if (s[i] ==\
    \ 'B' || s[i] == 'b') {\n            ans++;\n        }\n        if (s[i] == 'C'\
    \ || s[i] == 'c') {\n            ans++;\n        }\n        if (s[i] == 'D' ||\
    \ s[i] == 'd') {\n            ans++;\n        }\n        if (s[i] == 'E' || s[i]\
    \ == 'e') {\n            ans++;\n        }\n        if (s[i] == 'F' || s[i] ==\
    \ 'f') {\n            ans++;\n        }\n        if (s[i] == 'G' || s[i] == 'g')\
    \ {\n            ans++;\n        }\n        if (s[i] == 'H' || s[i] == 'h') {\n\
    \            ans++;\n        }\n        if (s[i] == 'I' || s[i] == 'i') {\n  \
    \          ans++;\n        }\n        if (s[i] == 'J' || s[i] == 'j') {\n    \
    \        ans++;\n        }\n        if (s[i] == 'K' || s[i] == 'k') {\n      \
    \      ans++;\n        }\n        if (s[i] == 'L' || s[i] == 'l') {\n        \
    \    ans++;\n        }\n        if (s[i] == 'M' || s[i] == 'm') {\n          \
    \  ans++;\n        }\n        if (s[i] == 'N' || s[i] == 'n') {\n            ans++;\n\
    \        }\n        if (s[i] == 'O' || s[i] == 'o') {\n            ans++;\n  \
    \      }\n        if (s[i] == 'P' || s[i] == 'p') {\n            ans++;\n    \
    \    }\n        if (s[i] == 'Q' || s[i] == 'q') {\n            ans++;\n      \
    \  }\n        if (s[i] == 'R' || s[i] == 'r') {\n            ans++;\n        }\n\
    \        if (s[i] == 'S' || s[i] == 's') {\n            ans++;\n        }\n  \
    \      if (s[i] == 'T' || s[i] == 't') {\n            ans++;\n        }\n    \
    \    if (s[i] == 'U' || s[i] == 'u') {\n            ans++;\n        }\n      \
    \  if (s[i] == 'V' || s[i] == 'v') {\n            ans++;\n        }\n        if\
    \ (s[i] == 'W' || s[i] == 'w') {\n            ans++;\n        }\n        if (s[i]\
    \ == 'X' || s[i] == 'x') {\n            ans++;\n        }\n        if (s[i] ==\
    \ 'Y' || s[i] == 'y') {\n            ans++;\n        }\n        if (s[i] == 'Z'\
    \ || s[i] == 'z') {\n            ans++;\n        }\n    }\n    return ans;", " \
    \   long ans = 0;\n    for (long i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n    \
    \        ans++;\n        }\n    }\n    return ans;", "    long ans = 0;\n    for\
    \ (long i = 0; i < s.size(); i++) {\n        if (s[i] >= 'A' && s[i] <= 'Z') {\n\
    \            ans += 1;\n        }\n        if (s[i] >= 'a' && s[i] <= 'z') {\n\
    \            ans += 1;\n        }\n    }\n    return ans;", "    long ans = 0;\n\
    \    long len = s.length();\n    for (int i = 0; i < len; ++i) {\n        if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            ans += 1;\n            if (i % 2 == 0)\n\
    \                ans -= 1;\n        }\n    }\n    return ans;"]
stop_tokens:
- "\n}"

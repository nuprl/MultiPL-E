language: cpp
name: HumanEval_71_triangle_area
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    else {\n        area = -1;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz2aoglmd: /tmp/tmpz2aoglmd.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqesyyzq5: /tmp/tmpqesyyzq5.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ round(area,2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp03pt_nth.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp03pt_nth.cpp:19:24: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |     return round(area,2);\n\
    \      |                        ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp03pt_nth.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    if (a + b > c) {\n        area =\
    \ (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return area;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8l4n2ax5: /tmp/tmp8l4n2ax5.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a && s <= b && s <= c) {\n        return s * s;\n    }\n    return -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjp0tclzo: /tmp/tmpjp0tclzo.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = a + b + c;\n    float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpo_3a79js: /tmp/tmpo_3a79js.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return\
    \ round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa5cw1nw_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpa5cw1nw_.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpa5cw1nw_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) return -1;\n\
    \    else return s;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgs_4kz4i: /tmp/tmpgs_4kz4i.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float \n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp99xf05hd.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp99xf05hd.cpp:16:11: error: redeclaration of \u2018\
    float area\u2019\n   16 |     float area = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:14:11:\
    \ note: \u2018float area\u2019 previously declared here\n   14 |     float area\
    \ = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:17:11: error: redeclaration\
    \ of \u2018float s\u2019\n   17 |     float s = 0.0;\n      |           ^\n/tmp/tmp99xf05hd.cpp:15:11:\
    \ note: \u2018float s\u2019 previously declared here\n   15 |     float s = 0.0;\n\
    \      |           ^\n/tmp/tmp99xf05hd.cpp:18:11: error: redeclaration of \u2018\
    float area\u2019\n   18 |     float area = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:14:11:\
    \ note: \u2018float area\u2019 previously declared here\n   14 |     float area\
    \ = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:19:11: error: redeclaration\
    \ of \u2018float s\u2019\n   19 |     float s = 0.0;\n      |           ^\n/tmp/tmp99xf05hd.cpp:15:11:\
    \ note: \u2018float s\u2019 previously declared here\n   15 |     float s = 0.0;\n\
    \      |           ^\n/tmp/tmp99xf05hd.cpp:20:11: error: redeclaration of \u2018\
    float area\u2019\n   20 |     float area = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:14:11:\
    \ note: \u2018float area\u2019 previously declared here\n   14 |     float area\
    \ = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:21:11: error: redeclaration\
    \ of \u2018float s\u2019\n   21 |     float s = 0.0;\n      |           ^\n/tmp/tmp99xf05hd.cpp:15:11:\
    \ note: \u2018float s\u2019 previously declared here\n   15 |     float s = 0.0;\n\
    \      |           ^\n/tmp/tmp99xf05hd.cpp:22:11: error: redeclaration of \u2018\
    float area\u2019\n   22 |     float area = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:14:11:\
    \ note: \u2018float area\u2019 previously declared here\n   14 |     float area\
    \ = 0.0;\n      |           ^~~~\n/tmp/tmp99xf05hd.cpp:23:11: error: redeclaration\
    \ of \u2018float s\u2019\n   23 |     float s = 0.0;\n      |           ^\n/tmp/tmp99xf05hd.cpp:15:11:\
    \ note: \u2018float s\u2019 previously declared here\n   15 |     float s = 0.0;\n\
    \      |           ^\n/tmp/tmp99xf05hd.cpp:"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long s = a +\
    \ b + c;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp99gzol6w: /tmp/tmp99gzol6w.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    long sum = a+b+c;\n    if (sum >\
    \ 0) {\n        area = (a*b*c)/sum;\n    } else {\n        area = -1;\n    }\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyr43wmwo: /tmp/tmpyr43wmwo.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqesyyzq5: /tmp/tmpqesyyzq5.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b\
    \ + c) / 2;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpl4dhbewq: /tmp/tmpl4dhbewq.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a < b);\n  assert(b < c);\n  assert(c > a + b);\n\
    \  float s = (a + b + c) / 2;\n  float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpr604a7e5: /tmp/tmpr604a7e5.cpp:16: float triangle_area(long int, long
    int, long int): Assertion `c > a + b'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpguiqasg5: /tmp/tmpguiqasg5.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4hgo13ad: /tmp/tmp4hgo13ad.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpblj9xzp1: /tmp/tmpblj9xzp1.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a) {\n        return s;\n    }\n    if (s > a && s <= b) {\n        return s;\n\
    \    }\n    if (s > b && s <= c) {\n        return s;\n    }\n    return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphgriax14: /tmp/tmphgriax14.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a && s <= b && s <= c) {\n        return s;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_zo6gizp: /tmp/tmp_zo6gizp.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float s = (a+b+c)/2;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  return round(area,2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgljnelms.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpgljnelms.cpp:16:22: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |   return round(area,2);\n\
    \      |                      ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpgljnelms.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  long s = (a + b\
    \ + c) / 2;\n  long area = (a + b) * (s + c) / 2;\n  return (area > s) ? area\
    \ : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmprsqg4yud: /tmp/tmprsqg4yud.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpguiqasg5: /tmp/tmpguiqasg5.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    } else if (b + c > a) {\n        area = (b * c) / a;\n \
    \   } else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplip73g41.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplip73g41.cpp:22:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   22 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplip73g41.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b\
    \ + c) / 2;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpl4dhbewq: /tmp/tmpl4dhbewq.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = a + b\
    \ + c;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2xwrxs7c.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp2xwrxs7c.cpp:17:23: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |   return round(area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp2xwrxs7c.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqesyyzq5: /tmp/tmpqesyyzq5.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ round(area*100)/100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpns41qjpb: /tmp/tmpns41qjpb.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area;\n    if\
    \ (s > 0 && s <= a && s <= b && s <= c) {\n        area = s * s;\n    } else if\
    \ (s > a && s <= b) {\n        area = s * b;\n    } else if (s > b && s <= c)\
    \ {\n        area = s * c;\n    } else {\n        area = -1;\n    }\n    return\
    \ round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw2s0h09g.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpw2s0h09g.cpp:25:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   25 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpw2s0h09g.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = (a+b+c)/2;\n\
    \  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n  return (area > 0)? round(area) :\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpx6yvd2co: /tmp/tmpx6yvd2co.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a) {\n        return s;\n    }\n    if (s > 0 && s <= b) {\n        return s;\n\
    \    }\n    if (s > 0 && s <= c) {\n        return s;\n    }\n    return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp10ql4392: /tmp/tmp10ql4392.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area\
    \ * 100.0) / 100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp703yqj6r: /tmp/tmp703yqj6r.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ round(area*100)/100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpns41qjpb: /tmp/tmpns41qjpb.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a < b);\n  assert(b < c);\n  assert(c > 0);\n\
    \  long s = a + b + c;\n  float area = s / 2.0f;\n  return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyowzf1lc: /tmp/tmpyowzf1lc.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    }\n    return round(area, 2);\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppcu5k69p.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmppcu5k69p.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmppcu5k69p.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4hgo13ad: /tmp/tmp4hgo13ad.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    if (a + b > c) {\n        area =\
    \ (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz_7mtwy.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpnz_7mtwy.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpnz_7mtwy.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqesyyzq5: /tmp/tmpqesyyzq5.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return\
    \ round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa5cw1nw_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpa5cw1nw_.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpa5cw1nw_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a && s <= b && s <= c) {\n        return s;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_zo6gizp: /tmp/tmp_zo6gizp.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    long sum = a+b+c;\n    if (sum >\
    \ c) {\n        area = -1;\n    } else {\n        area = (float)(a*b*c)/(float)sum;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpdgbc76q0: /tmp/tmpdgbc76q0.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum\
    \ > 0) {\n        area = 0.5 * (a + b + c) / sum;\n    }\n    return area;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpauiqy94q: /tmp/tmpauiqy94q.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area;\n    if\
    \ (s > 0 && s <= a) {\n        area = s * s;\n    } else if (s > a && s <= b)\
    \ {\n        area = s * (s - a);\n    } else if (s > b && s <= c) {\n        area\
    \ = s * (s - b);\n    } else {\n        area = -1;\n    }\n    return std::round(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1nrnzgls: /tmp/tmp1nrnzgls.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return\
    \ round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa5cw1nw_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpa5cw1nw_.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpa5cw1nw_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7zoee8y8.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp7zoee8y8.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp7zoee8y8.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    } else if (a + c > b) {\n        area = (b * c) / a;\n\
    \    } else {\n        area = (a * c) / b;\n    }\n    return round(area, 2);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuuu9h11q.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpuuu9h11q.cpp:22:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   22 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpuuu9h11q.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2.0f;\n    float area;\n    if (s\
    \ > a&&s > b&&s > c) {\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n   \
    \ else {\n        area = -1;\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp62nxbs79: /tmp/tmp62nxbs79.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    else {\n        area = -1;\n    }\n    return round(area\
    \ * 100.0) / 100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpndb_svx8: /tmp/tmpndb_svx8.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139973
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    if (a + b > c) {\n        area =\
    \ (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz_7mtwy.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpnz_7mtwy.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpnz_7mtwy.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = a + b + c;\n    float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return round(area, 2);\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpguwm_4z4.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpguwm_4z4.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpguwm_4z4.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b\
    \ + c) / 2;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplbu3icne.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplbu3icne.cpp:17:23: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |   return round(area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplbu3icne.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjtu_n1dt: /tmp/tmpjtu_n1dt.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    long sum = a+b+c;\n    if (sum >\
    \ c) {\n        area = -1;\n    }\n    else {\n        area = (a+b+c)/2;\n   \
    \ }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpxo51axx2: /tmp/tmpxo51axx2.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    if (s == a+b+c) {\n        return 0;\n    }\n    if\
    \ (s == a+b) {\n        return 0.5*(b+c);\n    }\n    if (s == b) {\n        return\
    \ 0.5*(a+c);\n    }\n    if (s == c) {\n        return 0.5*(a+b);\n    }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5lpj9wf8: /tmp/tmp5lpj9wf8.cpp:33: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = (a+b+c)/2;\n    if (area > 0)\n     \
    \   return area;\n    else\n        return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmplu0lcfbx: /tmp/tmplu0lcfbx.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0)\n     \
    \   return sqrt(s * (s - a) * (s - b) * (s - c));\n    else\n        return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2edtz3b7: /tmp/tmp2edtz3b7.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    else {\n        area = -1;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz2aoglmd: /tmp/tmpz2aoglmd.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpblj9xzp1: /tmp/tmpblj9xzp1.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long d = b -\
    \ a;\n  long e = c - a;\n  long f = a + b;\n  long g = a + c;\n  long h = b +\
    \ c;\n  long s = a + b + c;\n  long t = b + c + a;\n  long u = a + c + b;\n  long\
    \ v = b + c + a;\n  long w = a + c + b;\n  long x = b + c + a;\n  long y = a +\
    \ c + b;\n  long z = a + b + c;\n  long x1 = b + c + a;\n  long y1 = a + c + b;\n\
    \  long z1 = a + b + c;\n  long x2 = a + c + b;\n  long y2 = b + c + a;\n  long\
    \ z2 = a + b + c;\n  long x3 = a + b + c;\n  long y3 = b + c + a;\n  long z3 =\
    \ a + b + c;\n  long x4 = b + c + a;\n  long y4 = a + c + b;\n  long z4 = a +\
    \ b + c;\n  long x5 = a + c + b;\n  long y5 = b + c + a;\n  long z5 = a + b +\
    \ c;\n  long x6 = a + b + c;\n  long y6 = b + c + a;\n  long z6 = a + b + c;\n\
    \  long x7 = a + c + b;\n  long y7 = b + c + a;\n  long z7 = a + b + c;\n  long\
    \ x8 = b + c + a;\n  long y8 = a + c + b;\n  long z8 = a + b + c;\n  long x9 =\
    \ a + b + c;\n  long y9 = b + c + a;\n  long z9 = a + b + c;\n  long x10 = b +\
    \ c + a;\n  long y10 = a + c + b;\n  long z10 = a + b + c;\n  long x11 = a + c\
    \ + b;\n  long y11 = b + c + a;\n  long z11 = a + b + c;\n  long x12 = a + b +\
    \ c;\n  long y12 = b + c + a;\n  long z12 = a + b + c;\n  long x13 = a + c + b;\n\
    \  long y13 = c + a + b;\n  long z13 = a + b + c;\n  long x14 = a + c + b;\n \
    \ long y14 = c + a + b;\n  long z14 = a + b + c;\n  long x15 = a + b + c;\n  long\
    \ y15 = c + a + b;\n  long z15 = a + b + c;\n  long x16 = a + b + c;\n  \n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp4ii2tylv: /tmp/tmp4ii2tylv.cpp:78: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    float s = a + b + c;\n    if\
    \ (s > 0) {\n        area = (a * b) / s;\n    }\n    return round(area, 2);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpayyq72n1.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpayyq72n1.cpp:19:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpayyq72n1.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4hgo13ad: /tmp/tmp4hgo13ad.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a && s <= b && s <= c) {\n        return s;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_zo6gizp: /tmp/tmp_zo6gizp.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long d = b -\
    \ a;\n  long e = c - a;\n  long f = d - e;\n  long g = a + b + c;\n  long h =\
    \ g - 2 * a + 2 * b + c;\n  long i = 2 * a + 2 * b + c;\n  long j = 2 * a + b\
    \ + c;\n  long k = a + b + c;\n  long l = a + b + d;\n  long m = a + c + d;\n\
    \  long n = a + c + e;\n  long o = a + d + e;\n  long p = a + d + f;\n  long q\
    \ = a + e + f;\n  long r = a + e + g;\n  long s = a + f + g;\n  long t = a + f\
    \ + h;\n  long u = a + g + h;\n  long v = a + g + i;\n  long w = a + h + i;\n\
    \  long x = a + h + j;\n  long y = a + i + j;\n  long z = a + i + k;\n  long a\
    \ = a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s\
    \ + t + u + v + w + x + y + z;\n  float ans = a / 2;\n  return ans;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpme5tm87e.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpme5tm87e.cpp:38:8: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n   38 |   long a = a + b + c + d + e + f\
    \ + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y\
    \ + z;\n      |        ^\n"
  stdout: ''
  timestamp: 1660139973
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0) {\n   \
    \     float area = sqrt(s * (s - a) * (s - b) * (s - c));\n        return round(area,\
    \ 2);\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphaich7cs.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmphaich7cs.cpp:17:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmphaich7cs.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a && s <= b && s <= c) {\n        return s * s;\n    }\n    return -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjp0tclzo: /tmp/tmpjp0tclzo.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    else {\n        area = -1;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz2aoglmd: /tmp/tmpz2aoglmd.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area;\n    if (s >\
    \ 0)\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n    else\n        area = -1;\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0g9lbwpy: /tmp/tmp0g9lbwpy.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a >= b && a >= c) {\n\
    \        area = (a * b) / 2.0f;\n    } else if (b >= c && b >= a) {\n        area\
    \ = (b * c) / 2.0f;\n    } else {\n        area = -1f;\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv6ig5dtm.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpv6ig5dtm.cpp:20:17: error: unable to find numeric\
    \ literal operator \u2018operator\"\"f\u2019\n   20 |         area = -1f;\n  \
    \    |                 ^~\n/tmp/tmpv6ig5dtm.cpp:20:17: note: use \u2018-fext-numeric-literals\u2019\
    \ to enable more built-in suffixes\n/tmp/tmpv6ig5dtm.cpp:22:25: error: too many\
    \ arguments to function \u2018double round(double)\u2019\n   22 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpv6ig5dtm.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139973
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    long abc = a + b + c;\n    if (abc\
    \ > 0)\n        area = (a * b * c) / abc;\n    else\n        area = -1;\n    return\
    \ round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppmnuswa7.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmppmnuswa7.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmppmnuswa7.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139973
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ round(area,2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp03pt_nth.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp03pt_nth.cpp:19:24: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |     return round(area,2);\n\
    \      |                        ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp03pt_nth.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = (a * b) / c;\n    return std::round(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpm6q39k71: /tmp/tmpm6q39k71.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long s = a +\
    \ b + c;\n  float area = 0.0;\n  if (s > 0) {\n    area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n  }\n  return area;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpm9nxcmm8: /tmp/tmpm9nxcmm8.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjtu_n1dt: /tmp/tmpjtu_n1dt.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  float area =\
    \ (a * b + c) * 0.5;\n  return std::round(area);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp3ni_bavk: /tmp/tmp3ni_bavk.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a > b + c) {\n        area\
    \ = (a * b) / c;\n    } else if (b > a + c) {\n        area = (b * a) / c;\n \
    \   } else {\n        area = (a * c) / b;\n    }\n    return round(area, 2);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplq1lgewi.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplq1lgewi.cpp:22:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   22 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplq1lgewi.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjtu_n1dt: /tmp/tmpjtu_n1dt.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    long s = a + b + c;\n    if\
    \ (s > 0) {\n        area = 0.5 * (a + b + c - s);\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzo2h6b50: /tmp/tmpzo2h6b50.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    if (a + b > c) {\n        area =\
    \ (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz_7mtwy.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpnz_7mtwy.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpnz_7mtwy.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139971
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long d = b -\
    \ a;\n  long e = c - a;\n  long f = d - e;\n  long g = e + f;\n  long h = a +\
    \ b;\n  long i = a + c;\n  long j = b + c;\n  long k = a + d;\n  long l = b +\
    \ d;\n  long m = c + d;\n  long n = a + e;\n  long o = b + e;\n  long p = c +\
    \ e;\n  long q = d + e;\n  long r = a + f;\n  long s = b + f;\n  long t = c +\
    \ f;\n  long u = d + f;\n  long v = a + g;\n  long w = b + g;\n  long x = c +\
    \ g;\n  long y = d + g;\n  long z = a + h;\n  long A = b + h;\n  long B = c+ h;\n\
    \  long C = d+ h;\n  long D = a+ i;\n  long E = b+ i;\n  long F = c+ i;\n  long\
    \ G = d+ i;\n  long H = a+ j;\n  long I = b+ j;\n  long J = c+ j;\n  long K =\
    \ d+ j;\n  long L = a+ k;\n  long M = b+ k;\n  long N = c+ k;\n  long O = d+ k;\n\
    \  long P = a+ l;\n  long Q = b+ l;\n  long R = c+ l;\n  long S = d+ l;\n  long\
    \ T = a + m;\n  long U = b+ m;\n  long V = c+ m;\n  long W = d+ m;\n  long X =\
    \ a + n;\n  long Y = b+ n;\n  long Z = c+ n;\n  long AA = d+ n;\n  long AB = a+\
    \ o;\n  long AC = b+ o;\n  long AD = c+ o;\n  long AE = d+ o;\n  long AF = a+\
    \ p;\n  long AG = b+ p;\n  long AH = c+ p;\n  long AI = d+ p;\n  long AJ = a+\
    \ q;\n  long AK = b+ q;\n  long AL = c+ q;\n  long AM = d+ q;\n  long AN = a+\
    \ r;\n  long AO = b+ r;\n  long AP = c+ r;\n  long AQ = d+ r;\n  long AR = a+\
    \ s;\n  long AS = b+ s;\n  long AT = c+ s;\n  long AU = d+ s;\n  long AV = a+\
    \ t;\n  long AW = b\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3k7ysa99.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp3k7ysa99.cpp:87:1: error: expected \u2018,\u2019\
    \ or \u2018;\u2019 before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmp3k7ysa99.cpp:87:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   87 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660139973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpguiqasg5: /tmp/tmpguiqasg5.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0) {\n   \
    \     return sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpu0w4z3zn: /tmp/tmpu0w4z3zn.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ round(area*100)/100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpns41qjpb: /tmp/tmpns41qjpb.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum\
    \ > c) {\n        area = -1;\n    }\n    else {\n        float s = (a+b+c)/2;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return area;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1hz9c8_s: /tmp/tmp1hz9c8_s.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n     \
    \   return -1;\n    }\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpguiqasg5: /tmp/tmpguiqasg5.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * (float)pow(10, 2));\n    return area;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpigev8ua9: /tmp/tmpigev8ua9.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) return -1;\n\
    \    if (s > a+b) return s;\n    if (s > a) return s;\n    return s;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpc7ofy9bd: /tmp/tmpc7ofy9bd.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = (a * b) / c;\n    return std::round(area\
    \ * 100.0) / 100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbgakffmk: /tmp/tmpbgakffmk.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    if (a + b > c) {\n       \
    \ area = (a * b) / c;\n    }\n    else {\n        area = -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9sy0fdh8: /tmp/tmp9sy0fdh8.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    if (a + b > c) {\n        area =\
    \ (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbo1cie2a: /tmp/tmpbo1cie2a.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd55ouc2o: /tmp/tmpd55ouc2o.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long d = b -\
    \ a;\n  long e = c - a;\n  long f = d - e;\n  long g = e + f;\n  long h = a +\
    \ b;\n  long i = a + c;\n  long j = b + c;\n  long k = a + d;\n  long l = b +\
    \ d;\n  long m = c + d;\n  long n = a + e;\n  long o = b + e;\n  long p = c +\
    \ e;\n  long q = d + e;\n  long r = a + f;\n  long s = b + f;\n  long t = c +\
    \ f;\n  long u = d + f;\n  long v = e + f;\n  long w = a + g;\n  long x = b +\
    \ g;\n  long y = c + g;\n  long z = d + g;\n  long a = a + h;\n  long b = b +\
    \ h;\n  long c = c + h;\n  long d = d + h;\n  long e = e + i;\n  long f = f +\
    \ i;\n  long g = g + i;\n  long h = h + i;\n  long i = i + j;\n  long j = j +\
    \ k;\n  long k = k + l;\n  long l = l + m;\n  long m = m + n;\n  long n = n +\
    \ o;\n  long o = o + p;\n  long p = p + q;\n  long q = q + r;\n  long r = r +\
    \ s;\n  long s = s + t;\n  long t = t + u;\n  long u = u + v;\n  long v = v +\
    \ w;\n  long w = w + x;\n  long x = x + y;\n  long y = y + z;\n  long z = z +\
    \ a;\n  long a = a + b;\n  long b = b + c;\n  long c = c + d;\n  long d = d +\
    \ e;\n  long e = e + f;\n  long f = f + g;\n  long g = g + h;\n  long h = h +\
    \ i;\n  long i = i + j;\n  long j = j + k;\n  long k = k + l;\n  long l = l +\
    \ m;\n  long m = m + n;\n  long n = n + o;\n  long o = o + p;\n  long p = p +\
    \ q;\n  long q = q + r;\n  long r = r + s;\n  long s = s + t;\n  long t = t +\
    \ u;\n  long u = u + v;\n  long v = v + w;\n  long w = w + x;\n  long x = x +\
    \ y;\n  long y = y + z;\n  long z = \n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbilm3i3q.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpbilm3i3q.cpp:38:8: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n   38 |   long a = a + h;\n      |     \
    \   ^\n/tmp/tmpbilm3i3q.cpp:39:8: error: declaration of \u2018long int b\u2019\
    \ shadows a parameter\n   39 |   long b = b + h;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:40:8:\
    \ error: declaration of \u2018long int c\u2019 shadows a parameter\n   40 |  \
    \ long c = c + h;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:41:8: error: redeclaration\
    \ of \u2018long int d\u2019\n   41 |   long d = d + h;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:15:8:\
    \ note: \u2018long int d\u2019 previously declared here\n   15 |   long d = b\
    \ - a;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:42:8: error: redeclaration of \u2018\
    long int e\u2019\n   42 |   long e = e + i;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:16:8:\
    \ note: \u2018long int e\u2019 previously declared here\n   16 |   long e = c\
    \ - a;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:43:8: error: redeclaration of \u2018\
    long int f\u2019\n   43 |   long f = f + i;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:17:8:\
    \ note: \u2018long int f\u2019 previously declared here\n   17 |   long f = d\
    \ - e;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:44:8: error: redeclaration of \u2018\
    long int g\u2019\n   44 |   long g = g + i;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:18:8:\
    \ note: \u2018long int g\u2019 previously declared here\n   18 |   long g = e\
    \ + f;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:45:8: error: redeclaration of \u2018\
    long int h\u2019\n   45 |   long h = h + i;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:19:8:\
    \ note: \u2018long int h\u2019 previously declared here\n   19 |   long h = a\
    \ + b;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:46:8: error: redeclaration of \u2018\
    long int i\u2019\n   46 |   long i = i + j;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:20:8:\
    \ note: \u2018long int i\u2019 previously declared here\n   20 |   long i = a\
    \ + c;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:47:8: error: redeclaration of \u2018\
    long int j\u2019\n   47 |   long j = j + k;\n      |        ^\n/tmp/tmpbilm3i3q.cpp:21:8:\
    \ note: \u2018long int j\u2019 previously declared here\n   21 |   "
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float s = (a+b+c)/2;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8csgpe43: /tmp/tmp8csgpe43.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum\
    \ > 0) {\n        float s = (a+b+c)/sum;\n        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpswyjc7an: /tmp/tmpswyjc7an.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0 && s <=\
    \ a && s <= b && s <= c) {\n        return s;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_zo6gizp: /tmp/tmp_zo6gizp.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a < b);\n  assert(b < c);\n  assert(c > 0);\n\
    \  long d = b - a;\n  long e = c - b;\n  long f = d - e;\n  long g = a + b + c;\n\
    \  float h = sqrt(g*g + f*f);\n  return h;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jvhsegk: /tmp/tmp3jvhsegk.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvt8way15: /tmp/tmpvt8way15.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    return round(area, 2);\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpylke7_mt.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpylke7_mt.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpylke7_mt.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139974

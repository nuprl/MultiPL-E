language: cpp
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \" .?!\";\n    std::string delimiter2 = \"\
    \ .?!\";\n    std::string delimiter3 = \" .?!\";\n    std::string delimiter4 =\
    \ \" .?!\";\n    std::string delimiter5 = \" .?!\";\n    std::string delimiter6\
    \ = \" .?!\";\n    std::string delimiter7 = \" .?!\";\n    std::string delimiter8\
    \ = \" .?!\";\n    std::string delimiter9 = \" .?!\";\n    std::string delimiter10\
    \ = \" .?!\";\n    std::string delimiter11 = \" .?!\";\n    std::string delimiter12\
    \ = \" .?!\";\n    std::string delimiter13 = \" .?!\";\n    std::string delimiter14\
    \ = \" .?!\";\n    std::string delimiter15 = \" .?!\";\n    std::string delimiter16\
    \ = \" .?!\";\n    std::string delimiter17 = \" .?!\";\n    std::string delimiter18\
    \ = \" .?!\";\n    std::string delimiter19 = \" .?!\";\n    std::string delimiter20\
    \ = \" .?!\";\n    std::string delimiter21 = \" .?!\";\n    std::string delimiter22\
    \ = \" .?!\";\n    std::string delimiter23 = \" .?!\";\n    std::string delimiter24\
    \ = \" .?!\";\n    std::string delimiter25 = \" .?!\";\n    std::string delimiter26\
    \ = \" .?!\";\n    std::string delimiter27 = \" .?!\";\n    std::string delimiter28\
    \ = \" .?!\";\n    std::string delimiter29 = \" .?!\";\n    std::string delimiter30\
    \ = \" .?!\";\n    std::string delimiter31 = \" .?!\";\n    std::string delimiter32\
    \ = \" .?!\";\n    std::string delimiter33 = \" .?!\";\n    std::string delimiter34\
    \ = \" .?!\";\n    std::string delimiter35 = \" .?!\";\n    std::string delimiter36\
    \ = \" .?!\";\n    std::string delimiter37 = \" .?!\";\n    std::string delimiter38\
    \ = \" .?!\";\n    std::string delimiter39 = \" .?!\";\n    std::string delimiter40\
    \ = \" .?!\";\n    std::string delimiter41 = \" .?!\";\n    std::string delimiter42\
    \ = \" .?!\";\n    std::string delimiter43 = \" .?!\";\n    std::string delimiter44\
    \ = \" .?!\";\n    std::string delimiter45 = \" .?!\";\n    std::string delimiter46\
    \ = \" .?!\";\n    std::string delimiter47 = \" \n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwu8g5bi5.cpp:60:31: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiter47 = \" \n                          \
    \     ^\n/tmp/tmpwu8g5bi5.cpp:60:5: error: missing terminating \" character\n\
    \     std::string delimiter47 = \" \n     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwu8g5bi5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++) {\n        word = S[i];\n     \
    \   if(word == \"I\") {\n            boredoms++;\n        }\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprs29y9go.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpw7zjwpd_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.') {\n            boredom++;\n\
    \        }\n        if (S[i] == '?') {\n            boredom++;\n        }\n  \
    \      if (S[i] == '!') {\n            boredom++;\n        }\n        i++;\n \
    \   }\n    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8d30zgjb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long ans = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            ans += 1;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbaxvcyb2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string delimiter2 = \" \";\n    std::string delimiter3 = \" \"\
    ;\n    std::string delimiter4 = \" \";\n    std::string delimiter5 = \" \";\n\
    \    std::string delimiter6 = \" \";\n    std::string delimiter7 = \" \";\n  \
    \  std::string delimiter8 = \" \";\n    std::string delimiter9 = \" \";\n    std::string\
    \ delimiter10 = \" \";\n    std::string delimiter11 = \" \";\n    std::string\
    \ delimiter12 = \" \";\n    std::string delimiter13 = \" \";\n    std::string\
    \ delimiter14 = \" \";\n    std::string delimiter15 = \" \";\n    std::string\
    \ delimiter16 = \" \";\n    std::string delimiter17 = \" \";\n    std::string\
    \ delimiter18 = \" \";\n    std::string delimiter19 = \" \";\n    std::string\
    \ delimiter20 = \" \";\n    std::string delimiter21 = \" \";\n    std::string\
    \ delimiter22 = \" \";\n    std::string delimiter23 = \" \";\n    std::string\
    \ delimiter24 = \" \";\n    std::string delimiter25 = \" \";\n    std::string\
    \ delimiter26 = \" \";\n    std::string delimiter27 = \" \";\n    std::string\
    \ delimiter28 = \" \";\n    std::string delimiter29 = \" \";\n    std::string\
    \ delimiter30 = \" \";\n    std::string delimiter31 = \" \";\n    std::string\
    \ delimiter32 = \" \";\n    std::string delimiter33 = \" \";\n    std::string\
    \ delimiter34 = \" \";\n    std::string delimiter35 = \" \";\n    std::string\
    \ delimiter36 = \" \";\n    std::string delimiter37 = \" \";\n    std::string\
    \ delimiter38 = \" \";\n    std::string delimiter39 = \" \";\n    std::string\
    \ delimiter40 = \" \";\n    std::string delimiter41 = \" \";\n    std::string\
    \ delimiter42 = \" \";\n    std::string delimiter43 = \" \";\n    std::string\
    \ delimiter44 = \" \";\n    std::string delimiter45 = \" \";\n    std::string\
    \ delimiter46 = \" \";\n    std::string delimiter47 = \" \";\n    std::string\
    \ delimiter48 = \" \";\n    std::string delimiter49 = \" \";\n    std::string\
    \ delimiter50 = \" \";\n    std::string delimiter51 = \" \";\n    std::string\
    \ delimiter52 = \" \";\n    std::string delimiter53 = \" \";\n    std::string\
    \ delimiter54 = \" \";\n    std::string delimiter55 = \" \";\n    std::string\
    \ delimiter56 = \" \";\n    std::string delimiter57 = \" \";\n    std::string\
    \ delimiter58 = \" \";\n    std::string delimiter59 = \" \";\n    std::string\
    \ delimiter60 = \" \";\n    std::string delimiter61 = \" \";\n    std::string\
    \ delimiter62 = \" \";\n    std::string delimiter63 = \" \";\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwnv_elzj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbftyci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n        else {\n            word =\
    \ word + c;\n        }\n    }\n    if (word == \"I\") {\n        boredoms += 1;\n\
    \    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppwzc3an8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprhhz_uvs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2wf_hj5p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \". ? !\";\n    std::string::size_type pos;\n\
    \    for (pos = 0; (pos = S.find_first_of(delimiters, pos)) != std::string::npos;\
    \ pos++) {\n        word = S.substr(0, pos);\n        if (word == \"I\") {\n \
    \           boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkdacjcll.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n\n}\nint main() {\n    auto candidate = is_bored;\n   \
    \ assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxe0jbf2x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++){\n        if(S[i] == 'I'){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa14i9flr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2lfnhcl0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    std::string sentence;\n    std::stringstream\
    \ ss;\n    ss << S;\n    while(std::getline(ss, sentence, '.')) {\n        std::istringstream\
    \ iss(sentence);\n        while(std::getline(iss, word, '.')) {\n            if(word\
    \ == \"I\") {\n                boredom++;\n            }\n        }\n    }\n \
    \   return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsblvhnzu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzhphwpcy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp95l3idy5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n        i++;\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqaz9fyry.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while(i < S.size()) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n            i++;\n        } else {\n            i++;\n\
    \        }\n    }\n    return boredom;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcsbdszwn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    std::string word;\n\
    \    std::string boredom;\n    std::string delimiter = \" .?!\";\n    size_t pos\
    \ = 0;\n    size_t len = S.length();\n    while(pos < len) {\n        word = S.substr(pos,\
    \ 1);\n        pos = pos + 1;\n        boredom = \"\";\n        pos = 0;\n   \
    \     while(pos < len) {\n            if(delimiter[0] == S[pos]) {\n         \
    \       boredom = boredom + S[pos];\n                pos = pos + 1;\n        \
    \    }\n            pos = pos + 1;\n        }\n        if(boredom == \"I\") {\n\
    \            count = count + 1;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp519_yysb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n        else {\n            word =\
    \ i;\n        }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpf8pdvs5n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (auto &c : S) {\n    \
    \    if (c == delimiters[0]) {\n            boredoms += 1;\n            word.clear();\n\
    \        } else if (c == delimiters[1]) {\n            boredoms += 1;\n      \
    \      word.clear();\n        } else if (c == delimiters[2]) {\n            word.clear();\n\
    \        } else {\n            word += c;\n        }\n    }\n    return boredoms;\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxblwlnyw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2lfnhcl0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.') {\n\
    \            boredoms += 1;\n        }\n        else if(S[i] == '?') {\n     \
    \       boredoms += 1;\n        }\n        else if(S[i] == '!') {\n          \
    \  boredoms += 1;\n        }\n        else {\n            word = S[i];\n     \
    \       for(int j = i; j < S.size(); j++) {\n                if(S[j] == word)\
    \ {\n                    boredoms += 1;\n                }\n            }\n  \
    \      }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgatz0mct.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms += 1;\n        }\n  \
    \  }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv42_23qq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string sentence;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiters_lower = \"i.e\";\n    std::string\
    \ delimiters_upper = \"I.E\";\n    std::string delimiters_capital = \"I.E\";\n\
    \    std::string delimiters_capital2 = \"I.E\";\n    std::string delimiters_capital3\
    \ = \"I.E\";\n    std::string delimiters_capital4 = \"I.E\";\n    std::string\
    \ delimiters_capital5 = \"I.E\";\n    std::string delimiters_capital6 = \"I.E\"\
    ;\n    std::string delimiters_capital7 = \"I.E\";\n    std::string delimiters_capital8\
    \ = \"I.E\";\n    std::string delimiters_capital9 = \"I.E\";\n    std::string\
    \ delimiters_capital10 = \"I.E\";\n    std::string delimiters_capital11 = \"I.E\"\
    ;\n    std::string delimiters_capital12 = \"I.E\";\n    std::string delimiters_capital13\
    \ = \"I.E\";\n    std::string delimiters_capital14 = \"I.E\";\n    std::string\
    \ delimiters_capital15 = \"I.E\";\n    std::string delimiters_capital16 = \"I.E\"\
    ;\n    std::string delimiters_capital17 = \"I.E\";\n    std::string delimiters_capital18\
    \ = \"I.E\";\n    std::string delimiters_capital19 = \"I.E\";\n    std::string\
    \ delimiters_capital20 = \"I.E\";\n    std::string delimiters_capital21 = \"I.E\"\
    ;\n    std::string delimiters_capital22 = \"I.E\";\n    std::string delimiters_capital23\
    \ = \"I.E\";\n    std::string delimiters_capital24 = \"I.E\";\n    std::string\
    \ delimiters_capital25 = \"I.E\";\n    std::string delimiters_capital26 = \"I.E\"\
    ;\n    std::string delimiters_capital27 = \"I.E\";\n    std::string delimiters_capital28\
    \ = \"I.E\";\n    std::string delimiters_capital29 = \"I.E\";\n    std::string\
    \ delimiters_capital30 = \"I.E\";\n    std::string delimiters_capital31 = \"I.E\"\
    ;\n    std::string delimiters_capital32 = \"I.E\";\n    std::string delimiters_capital33\
    \ = \"I.E\";\n    std::string delimiters_capital34 = \"I.E\";\n    std::string\
    \ delimiters_capital35 = \"I.E\";\n    std::string delimiters_capital36 = \"I.E\"\
    ;\n    std::string delimiters_capital37 = \"I.E\";\n    std::string delimiters_capital38\
    \ = \"I.E\";\n    \n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpym63g5o7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    std::string word;\n    while (i < S.size()) {\n        word = S[i];\n   \
    \     if (word == \"I\") {\n            boredom++;\n        }\n        i++;\n\
    \    }\n    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0vaf9il1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprhhz_uvs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptlem85tz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiters = \".?!\";\n   \
    \ std::string delimiters_lower = \"i.e\";\n    std::string delimiters_upper =\
    \ \"I.E\";\n    std::string delimiters_caps = \"I.E\";\n    std::string delimiters_caps_lower\
    \ = \"i.e\";\n    std::string delimiters_caps_upper = \"I.E\";\n    std::string\
    \ delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper = \"\"\
    ;\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string delimiters_caps_upper\
    \ = \"\";\n    std::string delimiters_caps_lower = \"\";\n    std::string \n}\n\
    int main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0nj4zmk7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprhhz_uvs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    while (pos < S.size()) {\n        word = S.substr(pos, 1);\n   \
    \     for (i = 0; i <= word.length(); i++) {\n            if (word.substr(0, i)\
    \ == \"I\") {\n                boredoms++;\n            }\n        }\n       \
    \ pos = pos + 1;\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpexhpwhys.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = delimiters[0];\n\
    \    std::string temp;\n    std::string temp2;\n    std::string temp3;\n    std::string\
    \ temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string temp7;\n\
    \    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n   \
    \ std::string temp11;\n    std::string temp12;\n    std::string temp13;\n    std::string\
    \ temp14;\n    std::string temp15;\n    std::string temp16;\n    std::string temp17;\n\
    \    std::string temp18;\n    std::string temp19;\n    std::string temp20;\n \
    \   std::string temp21;\n    std::string temp22;\n    std::string temp23;\n  \
    \  std::string temp24;\n    std::string temp25;\n    std::string temp26;\n   \
    \ std::string temp27;\n    std::string temp28;\n    std::string temp29;\n    std::string\
    \ temp30;\n    std::string temp31;\n    std::string temp32;\n    std::string temp33;\n\
    \    std::string temp34;\n    std::string temp35;\n    std::string temp36;\n \
    \   std::string temp37;\n    std::string temp38;\n    std::string temp39;\n  \
    \  std::string temp40;\n    std::string temp41;\n    std::string temp42;\n   \
    \ std::string temp43;\n    std::string temp44;\n    std::string temp45;\n    std::string\
    \ temp46;\n    std::string temp47;\n    std::string temp48;\n    std::string temp49;\n\
    \    std::string temp50;\n    std::string temp51;\n    std::string temp52;\n \
    \   std::string temp53;\n    std::string temp54;\n    std::string temp55;\n  \
    \  std::string temp56;\n    std::string temp57;\n    std::string temp58;\n   \
    \ std::string temp59;\n    std::string temp60;\n    std::string temp61;\n    std::string\
    \ temp62;\n    std::string temp63;\n    std::string temp64;\n    std::string temp65;\n\
    \    std::string temp66;\n    std::string temp67;\n    std::string temp68;\n \
    \   std::string temp69;\n    std::string temp70;\n    std::string temp71;\n  \
    \  std::string temp72;\n    std::string temp73;\n    std::string temp74;\n   \
    \ std::string temp75;\n    std::string temp76;\n    std::string temp77;\n    std::string\
    \ temp78;\n    std::string temp79;\n    std::string temp80;\n    std::string temp81;\n\
    \    std::string temp82;\n    std::string temp83;\n    std::string temp84;\n\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdcj49y0c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    while (pos < S.size()) {\n        word = S.substr(pos, 1);\n   \
    \     if (word == \"I\") {\n            boredoms += 1;\n        }\n        pos\
    \ = pos + 1;\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzef90ptw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long ans = 0;\n    std::string word;\n\
    \    std::string boredom;\n    std::string temp;\n    std::string temp2;\n   \
    \ std::string temp3;\n    std::string temp4;\n    std::string temp5;\n    std::string\
    \ temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string temp9;\n\
    \    std::string temp10;\n    std::string temp11;\n    std::string temp12;\n \
    \   std::string temp13;\n    std::string temp14;\n    std::string temp15;\n  \
    \  std::string temp16;\n    std::string temp17;\n    std::string temp18;\n   \
    \ std::string temp19;\n    std::string temp20;\n    std::string temp21;\n    std::string\
    \ temp22;\n    std::string temp23;\n    std::string temp24;\n    std::string temp25;\n\
    \    std::string temp26;\n    std::string temp27;\n    std::string temp28;\n \
    \   std::string temp29;\n    std::string temp30;\n    std::string temp31;\n  \
    \  std::string temp32;\n    std::string temp33;\n    std::string temp34;\n   \
    \ std::string temp35;\n    std::string temp36;\n    std::string temp37;\n    std::string\
    \ temp38;\n    std::string temp39;\n    std::string temp40;\n    std::string temp41;\n\
    \    std::string temp42;\n    std::string temp43;\n    std::string temp44;\n \
    \   std::string temp45;\n    std::string temp46;\n    std::string temp47;\n  \
    \  std::string temp48;\n    std::string temp49;\n    std::string temp50;\n   \
    \ std::string temp51;\n    std::string temp52;\n    std::string temp53;\n    std::string\
    \ temp54;\n    std::string temp55;\n    std::string temp56;\n    std::string temp57;\n\
    \    std::string temp58;\n    std::string temp59;\n    std::string temp60;\n \
    \   std::string temp61;\n    std::string temp62;\n    std::string temp63;\n  \
    \  std::string temp64;\n    std::string temp65;\n    std::string temp66;\n   \
    \ std::string temp67;\n    std::string temp68;\n    std::string temp69;\n    std::string\
    \ temp70;\n    std::string temp71;\n    std::string temp72;\n    std::string temp73;\n\
    \    std::string temp74;\n    std::string temp75;\n    std::string temp76;\n \
    \   std::string temp77;\n    std::string temp78;\n    std::string temp79;\n  \
    \  std::string temp80;\n    std::string temp81;\n    std::string temp82;\n   \
    \ std::string temp83;\n    std::string temp84;\n    std::string temp85;\n    std::string\
    \ temp86;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8cxuviix.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprhhz_uvs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    for(int i =\
    \ 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n            boredom++;\n \
    \       }\n    }\n    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfn1mrbyq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    for (size_t i = 0; i < S.size(); i++)\
    \ {\n        word = S[i];\n        if (word == \".\" || word == \"?\" || word\
    \ == \"!\") {\n            boredom_word = S[i];\n            boredoms += 1;\n\
    \        }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphkvwnzko.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = delimiters[0];\n\
    \    std::string temp;\n    std::string temp_2;\n    std::string temp_3;\n   \
    \ std::string temp_4;\n    std::string temp_5;\n    std::string temp_6;\n    std::string\
    \ temp_7;\n    std::string temp_8;\n    std::string temp_9;\n    std::string temp_10;\n\
    \    std::string temp_11;\n    std::string temp_12;\n    std::string temp_13;\n\
    \    std::string temp_14;\n    std::string temp_15;\n    std::string temp_16;\n\
    \    std::string temp_17;\n    std::string temp_18;\n    std::string temp_19;\n\
    \    std::string temp_20;\n    std::string temp_21;\n    std::string temp_22;\n\
    \    std::string temp_23;\n    std::string temp_24;\n    std::string temp_25;\n\
    \    std::string temp_26;\n    std::string temp_27;\n    std::string temp_28;\n\
    \    std::string temp_29;\n    std::string temp_30;\n    std::string temp_31;\n\
    \    std::string temp_32;\n    std::string temp_33;\n    std::string temp_34;\n\
    \    std::string temp_35;\n    std::string temp_36;\n    std::string temp_37;\n\
    \    std::string temp_38;\n    std::string temp_39;\n    std::string temp_40;\n\
    \    std::string temp_41;\n    std::string temp_42;\n    std::string temp_43;\n\
    \    std::string temp_44;\n    std::string temp_45;\n    std::string temp_46;\n\
    \    std::string temp_47;\n    std::string temp_48;\n    std::string temp_49;\n\
    \    std::string temp_50;\n    std::string temp_51;\n    std::string temp_52;\n\
    \    std::string temp_53;\n    std::string temp_54;\n    std::string temp_55;\n\
    \    std::string temp_56;\n    std::string temp_57;\n    std::string temp_58;\n\
    \    std::string temp_59;\n    std::string temp_60;\n    std::string temp_61;\n\
    \    std::string temp_62;\n    std::string temp_63;\n    std::string temp_64;\n\
    \    std::string temp_65;\n    std::string temp_66;\n    std::string temp_67;\n\
    \    std::string temp_68;\n    std::string temp_69;\n    std::string temp_70;\n\
    \    std::string temp_71;\n    std::string temp_72;\n    std::string temp_73;\n\
    \    std::string temp_74;\n    std::string temp_75;\n    std::string temp_76;\n\
    \    std::string temp_77;\n    std::string temp_78;\n    std::string temp_79;\n\
    \    std::string temp_80;\n    std::string temp_81;\n    std::string temp_82;\n\
    \    std::string temp_83;\n    std::string temp_84;\n\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplkem6uif.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpw7zjwpd_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string delimiter1 = \"I\";\n    std::string delimiter2 = \".\"\
    ;\n    std::string delimiter3 = \"?\";\n    std::string delimiter4 = \"!\";\n\
    \    std::string delimiter5 = \".\";\n    std::string delimiter6 = \"?\";\n  \
    \  std::string delimiter7 = \"!\";\n    std::string delimiter8 = \".\";\n    std::string\
    \ delimiter9 = \"?\";\n    std::string delimiter10 = \"!\";\n    std::string delimiter11\
    \ = \".\";\n    std::string delimiter12 = \"?\";\n    std::string delimiter13\
    \ = \"!\";\n    std::string delimiter14 = \".\";\n    std::string delimiter15\
    \ = \"?\";\n    std::string delimiter16 = \"!\";\n    std::string delimiter17\
    \ = \".\";\n    std::string delimiter18 = \"?\";\n    std::string delimiter19\
    \ = \"!\";\n    std::string delimiter20 = \".\";\n    std::string delimiter21\
    \ = \"?\";\n    std::string delimiter22 = \"!\";\n    std::string delimiter23\
    \ = \".\";\n    std::string delimiter24 = \"?\";\n    std::string delimiter25\
    \ = \"!\";\n    std::string delimiter26 = \".\";\n    std::string delimiter27\
    \ = \"?\";\n    std::string delimiter28 = \"!\";\n    std::string delimiter29\
    \ = \".\";\n    std::string delimiter30 = \"?\";\n    std::string delimiter31\
    \ = \"!\";\n    std::string delimiter32 = \".\";\n    std::string delimiter33\
    \ = \"?\";\n    std::string delimiter34 = \"!\";\n    std::string delimiter35\
    \ = \".\";\n    std::string delimiter36 = \"?\";\n    std::string delimiter37\
    \ = \"!\";\n    std::string delimiter38 = \".\";\n    std::string delimiter39\
    \ = \"?\";\n    std::string delimiter40 = \"!\";\n    std::string delimiter41\
    \ = \"!\";\n    std::string delimiter42 = \".\";\n    std::string delimiter43\
    \ = \"?\";\n    std::string delimiter44 = \"!\";\n    std::string delimiter45\
    \ = \".\";\n    std::string delimiter46 = \"?\";\n    std::string delimiter47\
    \ = \"!\";\n    std::string delimiter48 = \".\";\n    std::string delimiter49\
    \ = \"?\";\n    std::string delimiter50 = \"!\";\n    std::string delimiter51\
    \ = \"!\";\n    std::string delimiter52 = \".\";\n    std::string delimiter53\
    \ = \"?\";\n    std::string delimiter54 = \"!\";\n    std::string delimiter55\
    \ = \".\";\n    std::string delimiter56 = \"?\";\n    std::string delimiter57\
    \ = \"!\";\n    std::string delimiter58 = \".\";\n    std::string delimiter59\
    \ = \"?\";\n    std::string delimiter60 = \"!\";\n\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzj8ptxk_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i=0;i<S.size();i++){\n        if(S[i] == 'I'){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\nint main() {\n   \
    \ auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6rdp02b5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        if (word.find(delimiters[0]) != std::string::npos)\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvxdux_s7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiter = \"\
    .?!\";\n    size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.size())\
    \ {\n        word = S.substr(pos, 1);\n        pos = pos + 1;\n        count =\
    \ 0;\n        for(size_t i = 0; i < boredom_word.length(); i++) {\n          \
    \  if(word == boredom_word) {\n                count++;\n            }\n     \
    \   }\n        if(count == 0) {\n            boredoms += 1;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwch3aqnm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_mixed\
    \ = \".?!\";\n    std::string delimiters_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_upper = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper =\
    \ \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower = \"\
    .?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper =\
    \ \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvvhrwhas.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiters = \"\
    .?!\";\n    std::string delimiters_lower = \"i.e\";\n    std::string delimiters_upper\
    \ = \"I.E\";\n    std::string delimiters_mixed = \"i.E.\";\n    std::string delimiters_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_lower = \"i.E.\";\n    std::string\
    \ delimiters_mixed_mixed_upper = \"I.E.\";\n    std::string delimiters_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_upper = \"I.E.\";\n\
    \    std::string delimiters_mixed_mixed_mixed_lower = \"I.E.\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_upper = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \"I.E.\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper = \"I.E.\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower = \"I.E.\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper = \"I.E.\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower = \"I.E.\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper = \"I.E.\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower = \"I.E.\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2ntywvf5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string delimiter2 = \" \";\n    std::string delimiter3 = \" \"\
    ;\n    std::string delimiter4 = \" \";\n    std::string delimiter5 = \" \";\n\
    \    std::string delimiter6 = \" \";\n    std::string delimiter7 = \" \";\n  \
    \  std::string delimiter8 = \" \";\n    std::string delimiter9 = \" \";\n    std::string\
    \ delimiter10 = \" \";\n    std::string delimiter11 = \" \";\n    std::string\
    \ delimiter12 = \" \";\n    std::string delimiter13 = \" \";\n    std::string\
    \ delimiter14 = \" \";\n    std::string delimiter15 = \" \";\n    std::string\
    \ delimiter16 = \" \";\n    std::string delimiter17 = \" \";\n    std::string\
    \ delimiter18 = \" \";\n    std::string delimiter19 = \" \";\n    std::string\
    \ delimiter20 = \" \";\n    std::string delimiter21 = \" \";\n    std::string\
    \ delimiter22 = \" \";\n    std::string delimiter23 = \" \";\n    std::string\
    \ delimiter24 = \" \";\n    std::string delimiter25 = \" \";\n    std::string\
    \ delimiter26 = \" \";\n    std::string delimiter27 = \" \";\n    std::string\
    \ delimiter28 = \" \";\n    std::string delimiter29 = \" \";\n    std::string\
    \ delimiter30 = \" \";\n    std::string delimiter31 = \" \";\n    std::string\
    \ delimiter32 = \" \";\n    std::string delimiter33 = \" \";\n    std::string\
    \ delimiter34 = \" \";\n    std::string delimiter35 = \" \";\n    std::string\
    \ delimiter36 = \" \";\n    std::string delimiter37 = \" \";\n    std::string\
    \ delimiter38 = \" \";\n    std::string delimiter39 = \" \";\n    std::string\
    \ delimiter40 = \" \";\n    std::string delimiter41 = \" \";\n    std::string\
    \ delimiter42 = \" \";\n    std::string delimiter43 = \" \";\n    std::string\
    \ delimiter44 = \" \";\n    std::string delimiter45 = \" \";\n    std::string\
    \ delimiter46 = \" \";\n    std::string delimiter47 = \" \";\n    std::string\
    \ delimiter48 = \" \";\n    std::string delimiter49 = \" \";\n    std::string\
    \ delimiter50 = \" \";\n    std::string delimiter51 = \" \";\n    std::string\
    \ delimiter52 = \" \";\n    std::string delimiter53 = \" \";\n    std::string\
    \ delimiter54 = \" \";\n    std::string delimiter55 = \" \";\n    std::string\
    \ delimiter56 = \" \";\n    std::string delimiter57 = \" \";\n    std::string\
    \ delimiter58 = \" \";\n    std::string delimiter59 = \" \";\n    std::string\
    \ delimiter60 = \" \";\n    std::string delimiter61 = \" \";\n    std::string\
    \ delimiter62 = \" \";\n    std::string delimiter63 = \" \";\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwnv_elzj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while(i < S.size()) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n            i++;\n        }\n        else {\n   \
    \         i++;\n        }\n    }\n    return boredom;\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0akfwa6r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    int i = 0;\n\
    \    while(i < S.length()) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms += 1;\n        }\n        i++;\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9w2pagwz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n\n}\nint main() {\n    auto candidate = is_bored;\n   \
    \ assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxe0jbf2x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4\
    \ = \"!\";\n    std::string delimiter5 = \".\";\n    std::string delimiter6 =\
    \ \"?\";\n    std::string delimiter7 = \"!\";\n    std::string delimiter8 = \"\
    .\";\n    std::string delimiter9 = \"?\";\n    std::string delimiter10 = \"!\"\
    ;\n    std::string delimiter11 = \".\";\n    std::string delimiter12 = \"?\";\n\
    \    std::string delimiter13 = \"!\";\n    std::string delimiter14 = \".\";\n\
    \    std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n\
    \    std::string delimiter17 = \".\";\n    std::string delimiter18 = \"?\";\n\
    \    std::string delimiter19 = \"!\";\n    std::string delimiter20 = \".\";\n\
    \    std::string delimiter21 = \"?\";\n    std::string delimiter22 = \"!\";\n\
    \    std::string delimiter23 = \".\";\n    std::string delimiter24 = \"?\";\n\
    \    std::string delimiter25 = \"!\";\n    std::string delimiter26 = \".\";\n\
    \    std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n\
    \    std::string delimiter29 = \".\";\n    std::string delimiter30 = \"?\";\n\
    \    std::string delimiter31 = \"!\";\n    std::string delimiter32 = \".\";\n\
    \    std::string delimiter33 = \"?\";\n    std::string delimiter34 = \"!\";\n\
    \    std::string delimiter35 = \".\";\n    std::string delimiter36 = \"?\";\n\
    \    std::string delimiter37 = \"!\";\n    std::string delimiter38 = \".\";\n\
    \    std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n\
    \    std::string delimiter41 = \"!\";\n    std::string delimiter42 = \".\";\n\
    \    std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n\
    \    std::string delimiter45 = \".\";\n    std::string delimiter46 = \"?\";\n\
    \    std::string delimiter47 = \"!\";\n    std::string delimiter48 = \".\";\n\
    \    std::string delimiter49 = \"?\";\n    std::string delimiter50 = \"!\";\n\
    \    std::string delimiter51 = \"!\";\n    std::string delimiter52 = \".\";\n\
    \    std::string delimiter53 = \"?\";\n    std::string delimiter54 = \"!\";\n\
    \    std::string delimiter55 = \".\";\n    std::string delimiter56 = \"?\";\n\
    \    std::string delimiter57 = \"!\";\n    std::string delimiter58 = \".\";\n\
    \    std::string delimiter59 = \"?\";\n    std::string delimiter60 = \"!\";\n\
    \    std::string delimiter61 = \"!\";\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl9l1t0ze.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.') {\n            boredoms\
    \ += 1;\n            word = \"\";\n        } else if (c == '?' || c == '!') {\n\
    \            boredoms += 1;\n            word += c;\n        } else if (c == 'I')\
    \ {\n            boredoms += 1;\n            word += c;\n        } else {\n  \
    \          word += c;\n        }\n    }\n    return boredoms;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmps8ioi693.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ count = 0;\n    std::string temp;\n    while(pos < S.size()) {\n        pos\
    \ = S.find_first_of(delimiters, pos);\n        word = S.substr(pos, delimiters.size());\n\
    \        temp = S;\n        temp.erase(temp.begin() + pos);\n        temp.erase(temp.begin());\n\
    \        if(word == \"I\") {\n            boredoms += 1;\n        }\n        pos\
    \ = temp.find_first_of(delimiters, pos);\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5_0g9_h6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbftyci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_mixed\
    \ = \".?!\";\n    std::string delimiters_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_upper = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper =\
    \ \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower = \"\
    .?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper =\
    \ \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvvhrwhas.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        if (word.find(delimiters[0]) != std::string::npos)\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgkpjopno.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!'){\n            boredoms += 1;\n        }\n   \
    \ }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n \
    \   assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphuze2ry4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while(i < S.size()) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n        }\n        i++;\n    }\n    return boredom;\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7vh4t07r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.') {\n            boredom++;\n\
    \        } else if (S[i] == '?') {\n            boredom++;\n        } else if\
    \ (S[i] == '!') {\n            boredom++;\n        }\n        i++;\n    }\n  \
    \  return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8f7xed2i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < S.length(); i++){\n        if(S[i] == 'I'){\n\
    \            count++;\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpnls8fa6e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string delimiters = \".?!\";\n\
    \    std::string delimiters_lower = \"i.e\";\n    std::string delimiters_upper\
    \ = \"I.E\";\n    std::string delimiters_caps = \"I.E\";\n    std::string delimiters_caps_lower\
    \ = \"i.e\";\n    std::string delimiters_caps_upper = \"I.E\";\n    std::string\
    \ delimiters_caps_upper2 = \"I.E\";\n    std::string delimiters_caps_upper3 =\
    \ \"I.E\";\n    std::string delimiters_caps_upper4 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper5 = \"I.E\";\n    std::string delimiters_caps_upper6 =\
    \ \"I.E\";\n    std::string delimiters_caps_upper7 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper8 = \"I.E\";\n    std::string delimiters_caps_upper9 =\
    \ \"I.E\";\n    std::string delimiters_caps_upper10 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper11 = \"I.E\";\n    std::string delimiters_caps_upper12\
    \ = \"I.E\";\n    std::string delimiters_caps_upper13 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper14 = \"I.E\";\n    std::string delimiters_caps_upper15\
    \ = \"I.E\";\n    std::string delimiters_caps_upper16 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper17 = \"I.E\";\n    std::string delimiters_caps_upper18\
    \ = \"I.E\";\n    std::string delimiters_caps_upper19 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper20 = \"I.E\";\n    std::string delimiters_caps_upper21\
    \ = \"I.E\";\n    std::string delimiters_caps_upper22 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper23 = \"I.E\";\n    std::string delimiters_caps_upper24\
    \ = \"I.E\";\n    std::string delimiters_caps_upper25 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper26 = \"I.E\";\n    std::string delimiters_caps_upper27\
    \ = \"I.E\";\n    std::string delimiters_caps_upper28 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper29 = \"I.E\";\n    std::string delimiters_caps_upper30\
    \ = \"I.E\";\n    std::string delimiters_caps_upper31 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper32 = \"I.E\";\n    std::string delimiters_caps_upper33\
    \ = \"I.E\";\n    std::string delimiters_caps_upper34 = \"I.E\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcoxxna1o.cpp:53:43: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiters_caps_upper34 = \"I.E\n            \
    \                               ^\n/tmp/tmpcoxxna1o.cpp:53:5: error: missing terminating\
    \ \" character\n     std::string delimiters_caps_upper34 = \"I.E\n     ^\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcoxxna1o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ erro"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    std::string\
    \ temp;\n    while(pos < S.length()) {\n        word = S.substr(pos, delimiters.size());\n\
    \        temp = S;\n        temp = temp.substr(0, pos);\n        if(word == \"\
    I\") {\n            boredoms += 1;\n        }\n        pos = temp.find(delimiters,\
    \ pos);\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpb2377bhn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprhhz_uvs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.') {\n            i++;\n  \
    \          while (i < S.size() && S[i] != '.') {\n                i++;\n     \
    \       }\n            if (i < S.size() && S[i] == '.') {\n                i++;\n\
    \                while (i < S.size() && S[i] != '.') {\n                    i++;\n\
    \                }\n                if (i < S.size() && S[i] == '.') {\n     \
    \               i++;\n                    while (i < S.size() && S[i] != '.')\
    \ {\n                        i++;\n                    }\n                   \
    \ if (i < S.size() && S[i] == '.') {\n                        i++;\n         \
    \               while (i < S.size() && S[i] != '.') {\n                      \
    \      i++;\n                        }\n                        if (i < S.size()\
    \ && S[i] == '.') {\n                            i++;\n                      \
    \      while (i < S.size() && S[i] != '.') {\n                               \
    \ i++;\n                            }\n                            if (i < S.size()\
    \ && S[i] == '.') {\n                                i++;\n                  \
    \              while (i < S.size() && S[i] != '.') {\n                       \
    \             i++;\n                                }\n                      \
    \          if (i < S.size() && S[i] == '.') {\n                              \
    \      i++;\n                                    while (i < S.size() && S[i] !=\
    \ '.') {\n                                        i++;\n                     \
    \               }\n                                    if (i < S.size() && S[i]\
    \ == '.') {\n                                        i++;\n                  \
    \                      while (i < S.size() && S[i] != '.') {\n               \
    \                             i++;\n                                        }\n\
    \                                        if (i < S.size() && S[i] == '.') {\n\
    \                                            i++;\n                          \
    \                  while (i < S.size() && S[i] != '.') {\n                   \
    \                             i++;\n                                         \
    \   }\n                                            if (i < S.size() && S[i] ==\
    \ '.') {\n                                                i++;\n             \
    \                                   while (i < S.size() && S[i] != '.') {\n  \
    \                                                  i++;\n                    \
    \                            }\n                                             \
    \   if (i < S.size() && S[i] == '.') {\n                                     \
    \               i++;\n                                                    while\
    \ (i < S.size() && S[i] != '.') {\n                                          \
    \              i++;\n                                                    }\n \
    \                                                   if (i < S.size() && S[i] ==\
    \ '.') {\n                                                        i++;\n     \
    \                                                   while (i < S.size() && S[i]\
    \ != '.') {\n                                                            i++;\n\
    \                                                        }\n                 \
    \                                       if (i < S.size() && S[i] == '.') {\n \
    \                                                           i++;\n           \
    \                                                 while (i < S.size() && S[i]\
    \ != '.') {\n                                                                i++;\n\
    \                                                            }\n             \
    \                                               if (i < S.size() && S[i] == '.')\
    \ {\n                                                                i++;\n  \
    \                                                              while (i < S.size()\
    \ && S[i] != '.') {\n                                                        \
    \            i++;\n                                                          \
    \      }\n                                                                if (i\
    \ < S.size() && S[i] == '.') {\n                                             \
    \                       i++;\n                                               \
    \                     while (\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpj9ybomus.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_cap\
    \ = \".?!\";\n    std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpt0ixnoqb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    std::string boredom_word;\n    std::string\
    \ boredom_word_2;\n    std::string boredom_word_3;\n    std::string boredom_word_4;\n\
    \    std::string boredom_word_5;\n    std::string boredom_word_6;\n    std::string\
    \ boredom_word_7;\n    std::string boredom_word_8;\n    std::string boredom_word_9;\n\
    \    std::string boredom_word_10;\n    std::string boredom_word_11;\n    std::string\
    \ boredom_word_12;\n    std::string boredom_word_13;\n    std::string boredom_word_14;\n\
    \    std::string boredom_word_15;\n    std::string boredom_word_16;\n    std::string\
    \ boredom_word_17;\n    std::string boredom_word_18;\n    std::string boredom_word_19;\n\
    \    std::string boredom_word_20;\n    std::string boredom_word_21;\n    std::string\
    \ boredom_word_22;\n    std::string boredom_word_23;\n    std::string boredom_word_24;\n\
    \    std::string boredom_word_25;\n    std::string boredom_word_26;\n    std::string\
    \ boredom_word_27;\n    std::string boredom_word_28;\n    std::string boredom_word_29;\n\
    \    std::string boredom_word_30;\n    std::string boredom_word_31;\n    std::string\
    \ boredom_word_32;\n    std::string boredom_word_33;\n    std::string boredom_word_34;\n\
    \    std::string boredom_word_35;\n    std::string boredom_word_36;\n    std::string\
    \ boredom_word_37;\n    std::string boredom_word_38;\n    std::string boredom_word_39;\n\
    \    std::string boredom_word_40;\n    std::string boredom_word_41;\n    std::string\
    \ boredom_word_42;\n    std::string boredom_word_43;\n    std::string boredom_word_44;\n\
    \    std::string boredom_word_45;\n    std::string boredom_word_46;\n    std::string\
    \ boredom_word_47;\n    std::string boredom_word_48;\n    std::string boredom_word_49;\n\
    \    std::string boredom_word_50;\n    std::string boredom_word_51;\n    std::string\
    \ boredom_word_52;\n    std::string boredom_word_53;\n    std::string boredom_word_54;\n\
    \    std::string boredom_word_55;\n    std::string boredom_word_56;\n    std::string\
    \ boredom_word_57;\n    \n}\nint main() {\n    auto candidate = is_bored;\n  \
    \  assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgwh5zdul.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string temp;\n    size_t\
    \ pos = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n    size_t\
    \ l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n    size_t\
    \ p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n    size_t\
    \ t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n    size_t\
    \ x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n    size_t\
    \ B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n    size_t\
    \ F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n    size_t\
    \ J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n    size_t\
    \ N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n    size_t\
    \ R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n    size_t\
    \ V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n    size_t\
    \ Z = 0;\n    size_t a = 0;\n    size_t b = 0;\n    size_t c = 0;\n    size_t\
    \ d = 0;\n    size_t e = 0;\n    size_t f = 0;\n    size_t g = 0;\n    size_t\
    \ h = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n    size_t\
    \ l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n    size_t\
    \ p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n    size_t\
    \ t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n    size_t\
    \ x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n    size_t\
    \ B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n    size_t\
    \ F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n    size_t\
    \ J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n    size_t\
    \ N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n    size_t\
    \ R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n    size_t\
    \ V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n    size_t\
    \ Z = 0;\n    size_t a = 0;\n    size_t \n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcgueolqa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            count++;\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdtohihl5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    std::string word;\n    std::string boredom;\n    for(int\
    \ i = 0; i < S.length(); i++) {\n        word = S.substr(i, 1);\n        if(word\
    \ == \".\" || word == \"?\" || word == \"!\") {\n            boredoms += 1;\n\
    \        }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpoqffyn4_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4nx37_h9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    std::string word;\n    std::string boredom;\n    std::string\
    \ sentence;\n    std::string delimiter = \".?!\";\n    std::string delimiter2\
    \ = \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4 =\
    \ \"!\";\n    std::string delimiter5 = \".\";\n    std::string delimiter6 = \"\
    ?\";\n    std::string delimiter7 = \"!\";\n    std::string delimiter8 = \".\"\
    ;\n    std::string delimiter9 = \"?\";\n    std::string delimiter10 = \"!\";\n\
    \    std::string delimiter11 = \".\";\n    std::string delimiter12 = \"?\";\n\
    \    std::string delimiter13 = \"!\";\n    std::string delimiter14 = \".\";\n\
    \    std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n\
    \    std::string delimiter17 = \".\";\n    std::string delimiter18 = \"?\";\n\
    \    std::string delimiter19 = \"!\";\n    std::string delimiter20 = \".\";\n\
    \    std::string delimiter21 = \"?\";\n    std::string delimiter22 = \"!\";\n\
    \    std::string delimiter23 = \".\";\n    std::string delimiter24 = \"?\";\n\
    \    std::string delimiter25 = \"!\";\n    std::string delimiter26 = \".\";\n\
    \    std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n\
    \    std::string delimiter29 = \".\";\n    std::string delimiter30 = \"?\";\n\
    \    std::string delimiter31 = \"!\";\n    std::string delimiter32 = \".\";\n\
    \    std::string delimiter33 = \"?\";\n    std::string delimiter34 = \"!\";\n\
    \    std::string delimiter35 = \".\";\n    std::string delimiter36 = \"?\";\n\
    \    std::string delimiter37 = \"!\";\n    std::string delimiter38 = \".\";\n\
    \    std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n\
    \    std::string delimiter41 = \"!\";\n    std::string delimiter42 = \".\";\n\
    \    std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n\
    \    std::string delimiter45 = \".\";\n    std::string delimiter46 = \"?\";\n\
    \    std::string delimiter47 = \"!\";\n    std::string delimiter48 = \".\";\n\
    \    std::string delimiter49 = \"?\";\n    std::string delimiter50 = \"!\";\n\
    \    std::string delimiter51 = \"!\";\n    std::string delimiter52 = \".\";\n\
    \    std::string delimiter53 = \"?\";\n    std::string delimiter54 = \"!\";\n\
    \    std::string delimiter55 = \".\";\n    std::string delimiter56 = \"?\";\n\
    \    std::string delimiter57 = \"!\";\n    std::string delimiter58 = \".\";\n\
    \    std::string delimiter59 = \"?\";\n    std::string delimiter60 = \"!\n}\n\
    int main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7geza8q_.cpp:76:31: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiter60 = \"!\n                          \
    \     ^\n/tmp/tmp7geza8q_.cpp:76:5: error: missing terminating \" character\n\
    \     std::string delimiter60 = \"!\n     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7geza8q_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n \
    \       if (word == \"I\") {\n            boredoms += 1;\n        }\n    }\n \
    \   return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwjxx2lxw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n \
    \       if (word == \"I\") {\n            boredoms++;\n        }\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbk_qqq1v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedj4i6ar.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2lfnhcl0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    for (size_t i = 0; i < S.size(); i++)\
    \ {\n        word = S[i];\n        if (word == \".\" || word == \"?\" || word\
    \ == \"!\") {\n            boredoms += 1;\n        }\n    }\n    for (size_t i\
    \ = 0; i < S.size(); i++) {\n        word = S[i];\n        if (word == \"I\")\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp808ol2bt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedj4i6ar.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2wf_hj5p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    for (auto &i : S) {\n        if ((i ==\
    \ \".\") || (i == \"?\") || (i == \"!\")) {\n            boredom += i;\n     \
    \   } else {\n            word = i;\n        }\n    }\n    if (boredom.find(\"\
    I\") == 0) {\n        boredoms += 1;\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpee_risfg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!'){\n            boredom++;\n        }\n    }\n\
    \    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5navicmi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \" .?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    bool flag = false;\n    while(pos < S.size()) {\n        flag =\
    \ false;\n        pos = 0;\n        while(pos < S.size() && flag == false) {\n\
    \            pos = S.find(delimiter, pos);\n            if(pos == std::string::npos)\
    \ {\n                flag = true;\n            }\n            else {\n       \
    \         word = S.substr(pos, (pos - i));\n                if(word == \"I\")\
    \ {\n                    boredoms++;\n                }\n                i = pos;\n\
    \            }\n        }\n    }\n    return boredoms;\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppqtfstvv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string::size_type pos\
    \ = 0;\n    std::string::size_type lastPos = 0;\n    std::string::size_type lastDelimiter\
    \ = 0;\n    std::string::size_type i = 0;\n    std::string::size_type j = 0;\n\
    \    std::string::size_type k = 0;\n    std::string::size_type l = 0;\n    std::string::size_type\
    \ m = 0;\n    std::string::size_type n = 0;\n    std::string::size_type o = 0;\n\
    \    std::string::size_type p = 0;\n    std::string::size_type q = 0;\n    std::string::size_type\
    \ r = 0;\n    std::string::size_type s = 0;\n    std::string::size_type t = 0;\n\
    \    std::string::size_type u = 0;\n    std::string::size_type v = 0;\n    std::string::size_type\
    \ w = 0;\n    std::string::size_type x = 0;\n    std::string::size_type y = 0;\n\
    \    std::string::size_type z = 0;\n    std::string::size_type A = 0;\n    std::string::size_type\
    \ B = 0;\n    std::string::size_type C = 0;\n    std::string::size_type D = 0;\n\
    \    std::string::size_type E = 0;\n    std::string::size_type F = 0;\n    std::string::size_type\
    \ G = 0;\n    std::string::size_type H = 0;\n    std::string::size_type I = 0;\n\
    \    std::string::size_type J = 0;\n    std::string::size_type K = 0;\n    std::string::size_type\
    \ L = 0;\n    std::string::size_type M = 0;\n    std::string::size_type N = 0;\n\
    \    std::string::size_type O = 0;\n    std::string::size_type P = 0;\n    std::string::size_type\
    \ Q = 0;\n    std::string::size_type R = 0;\n    std::string::size_type S = 0;\n\
    \    std::string::size_type T = 0;\n    std::string::size_type U = 0;\n    std::string::size_type\
    \ V = 0;\n    std::string::size_type W = 0;\n    std::string::size_type X = 0;\n\
    \    std::string::size_type Y = 0;\n    std::string::size_type Z = 0;\n    std::string::size_type\
    \ _ = 0;\n    std::string::size_type _1 = 0;\n    std::string::size_type _2 =\
    \ 1;\n    std::string::size_type _3 = 1;\n    std::string::size_type _4 = 2;\n\
    \    std::string::size_type _5 = 3;\n    std::string::size_type _6 = 6;\n    std::string::size_type\
    \ _7 = 4;\n    std::string::size_type _8 = 5;\n    std::string::size_type _9 =\
    \ 6;\n    std::string::size_type _10 = 7;\n    std::string::size_type _11 = 8;\n\
    \    std::string::size_type _12 = 9;\n    std::string::size_type \n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsikdqmya.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpw7zjwpd_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    std::string temp;\n\
    \    temp = S;\n    while(temp != \"\"){\n        if(temp[0] == 'I'){\n      \
    \      count++;\n        }\n        temp = temp.substr(1);\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_3wtmw7y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ count = 0;\n    while(pos < S.size()) {\n        word = S.substr(pos, 1);\n\
    \        pos = 0;\n        count = 0;\n        for(size_t i = 0; i < S.size();\
    \ i++) {\n            if(delimiter[i] == S[i]) {\n                count++;\n \
    \           }\n            if(delimiter[i] == word) {\n                pos = i\
    \ + 1;\n            }\n        }\n        if(count == 1) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpd2rlc25e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (auto &c : S) {\n    \
    \    if (c == delimiters[0]) {\n            boredoms += 1;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbgc8kbp7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    std::string delimiter = \" .,?!\";\n\
    \    std::string delimiter2 = \".?!\";\n    std::string delimiter3 = \".?!.\"\
    ;\n    std::string delimiter4 = \".?!.?!\";\n    std::string delimiter5 = \".?!.?!.\"\
    ;\n    std::string delimiter6 = \".?!.?!.?!\";\n    std::string delimiter7 = \"\
    .?!.?!.?!.\";\n    std::string delimiter8 = \".?!.?!.?!.?!\";\n    std::string\
    \ delimiter9 = \".?!.?!.?!.?!.\";\n    std::string delimiter10 = \".?!.?!.?!.?!.?!\"\
    ;\n    std::string delimiter11 = \".?!.?!.?!.?!.?!.\";\n    std::string delimiter12\
    \ = \".?!.?!.?!.?!.?!.?!\";\n    std::string delimiter13 = \".?!.?!.?!.?!.?!.?!.\"\
    ;\n    std::string delimiter14 = \".?!.?!.?!.?!.?!.?!.?!\";\n    std::string delimiter15\
    \ = \".?!.?!.?!.?!.?!.?!.?!.\";\n    std::string delimiter16 = \".?!.?!.?!.?!.?!.?!.?!.?!\"\
    ;\n    std::string delimiter17 = \".?!.?!.?!.?!.?!.?!.?!.?!.\";\n    std::string\
    \ delimiter18 = \".?!.?!.?!.?!.?!.?!.?!.?!.?!\";\n    std::string delimiter19\
    \ = \".?!.?!.?!.?!.?!.?!.?!.?!.?!.\";\n    std::string delimiter20 = \".?!.?!.?!.?!.?!.?!.?!.?!.?!.?!\"\
    ;\n    std::string delimiter21 = \".?!.?!.?!.?!.?!.?!.?!.?!.?!.?!.\";\n    std::string\
    \ delimiter22\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppbz7xabm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbftyci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long ans = 0;\n    std::string word;\n\
    \    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!') {\n  \
    \          ans += 1;\n        }\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7byu28ce.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for (int i\
    \ = 0; i < S.size(); i++) {\n        if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    int main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyoqb7zqr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiter = \"\
    .?!\";\n    std::string delimiters = \". ? !\";\n    std::string delimiters_1\
    \ = \". ? !\";\n    std::string delimiters_2 = \". ? !\";\n    std::string delimiters_3\
    \ = \". ? !\";\n    std::string delimiters_4 = \". ? !\";\n    std::string delimiters_5\
    \ = \". ? !\";\n    std::string delimiters_6 = \". ? !\";\n    std::string delimiters_7\
    \ = \". ? !\";\n    std::string delimiters_8 = \". ? !\";\n    std::string delimiters_9\
    \ = \". ? !\";\n    std::string delimiters_10 = \". ? !\";\n    std::string delimiters_11\
    \ = \". ? !\";\n    std::string delimiters_12 = \". ? !\";\n    std::string delimiters_13\
    \ = \". ? !\";\n    std::string delimiters_14 = \". ? !\";\n    std::string delimiters_15\
    \ = \". ? !\";\n    std::string delimiters_16 = \". ? !\";\n    std::string delimiters_17\
    \ = \". ? !\";\n    std::string delimiters_18 = \". ? !\";\n    std::string delimiters_19\
    \ = \". ? !\";\n    std::string delimiters_20 = \". ? !\";\n    std::string delimiters_21\
    \ = \". ? !\";\n    std::string delimiters_22 = \". ? !\";\n    std::string delimiters_23\
    \ = \". ? !\";\n    std::string delimiters_24 = \". ? !\";\n    std::string delimiters_25\
    \ = \". ? !\";\n    std::string delimiters_26 = \". ? !\";\n    std::string delimiters_27\
    \ = \". ? !\";\n    std::string delimiters_28 = \". ? !\";\n    std::string delimiters_29\
    \ = \". ? !\";\n    std::string delimiters_30 = \". ? !\";\n    std::string delimiters_31\
    \ = \". ? !\";\n    std::string delimiters_32 = \". ? !\";\n    std::string delimiters_33\
    \ = \". ? !\";\n    std::string delimiters_34 = \". ? !\";\n    std::string delimiters_35\
    \ = \". ? !\";\n    std::string delimiters_36 = \". ? !\";\n    std::string delimiters_37\
    \ = \". ? !\";\n    std::string delimiters_38 = \". ? !\";\n    std::string delimiters_39\
    \ = \". ? !\";\n    std::string delimiters_40 = \". ? !\";\n    std::string delimiters_41\
    \ = \". ? !\";\n    std::string delimiters_42 = \". ? !\";\n    std::string delimiters_43\
    \ = \". \n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3wmyh3ha.cpp:59:33: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiters_43 = \". \n                       \
    \          ^\n/tmp/tmp3wmyh3ha.cpp:59:5: error: missing terminating \" character\n\
    \     std::string delimiters_43 = \". \n     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3wmyh3ha.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression b"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    while(pos < S.length()) {\n        word = S.substr(pos, delimiters.length());\n\
    \        if(word == \"I\") {\n            boredoms++;\n        }\n        pos\
    \ = pos + delimiters.length();\n    }\n    return boredoms;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphu7813cq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms += 1;\n        }\n  \
    \  }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv42_23qq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_capital\
    \ = \".?!\";\n    std::string delimiters_mixed = \".?!\";\n    std::string delimiters_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_capital = \".?!\";\n    std::string delimiters_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_capital = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower = \".?\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptm6e1nwk.cpp:50:54: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiters_mixed_mixed_mixed_lower = \".?\n  \
    \                                                    ^\n/tmp/tmptm6e1nwk.cpp:50:5:\
    \ error: missing terminating \" character\n     std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?\n     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptm6e1nwk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/b"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    std::string word;\n    std::string boredom;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiters_lower = \"i.\";\n    std::string\
    \ delimiters_upper = \"I.\";\n    std::string delimiters_capital = \"I.\";\n \
    \   std::string delimiters_capital2 = \"I.\";\n    std::string delimiters_capital3\
    \ = \"I.\";\n    std::string delimiters_capital4 = \"I.\";\n    std::string delimiters_capital5\
    \ = \"I.\";\n    std::string delimiters_capital6 = \"I.\";\n    std::string delimiters_capital7\
    \ = \"I.\";\n    std::string delimiters_capital8 = \"I.\";\n    std::string delimiters_capital9\
    \ = \"I.\";\n    std::string delimiters_capital10 = \"I.\";\n    std::string delimiters_capital11\
    \ = \"I.\";\n    std::string delimiters_capital12 = \"I.\";\n    std::string delimiters_capital13\
    \ = \"I.\";\n    std::string delimiters_capital14 = \"I.\";\n    std::string delimiters_capital15\
    \ = \"I.\";\n    std::string delimiters_capital16 = \"I.\";\n    std::string delimiters_capital17\
    \ = \"I.\";\n    std::string delimiters_capital18 = \"I.\";\n    std::string delimiters_capital19\
    \ = \"I.\";\n    std::string delimiters_capital20 = \"I.\";\n    std::string delimiters_capital21\
    \ = \"I.\";\n    std::string delimiters_capital22 = \"I.\";\n    std::string delimiters_capital23\
    \ = \"I.\";\n    std::string delimiters_capital24 = \"I.\";\n    std::string delimiters_capital25\
    \ = \"I.\";\n    std::string delimiters_capital26 = \"I.\";\n    std::string delimiters_capital27\
    \ = \"I.\";\n    std::string delimiters_capital28 = \"I.\";\n    std::string delimiters_capital29\
    \ = \"I.\";\n    std::string delimiters_capital30 = \"I.\";\n    std::string delimiters_capital31\
    \ = \"I.\";\n    std::string delimiters_capital32 = \"I.\";\n    std::string delimiters_capital33\
    \ = \"I.\";\n    std::string delimiters_capital34 = \"I.\";\n    std::string delimiters_capital35\
    \ = \"I.\";\n    std::string delimiters_capital36 = \"I.\";\n    std::string delimiters_capital37\
    \ = \"I.\";\n    std::string delimiters_capital38 = \"I.\";\n    std::string delimiters_capital39\
    \ = \"I.\";\n    std::string delimiters_capital40 = \"I.\";\n    std::string delimiters_capital41\
    \ = \"I.\";\n    std::string delimiters_capital42 = \"\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3je5xwub.cpp:60:40: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiters_capital42 = \"\n                  \
    \                      ^\n/tmp/tmp3je5xwub.cpp:60:5: error: missing terminating\
    \ \" character\n     std::string delimiters_capital42 = \"\n     ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n \
    \                from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3je5xwub.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected pri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string sentence;\n    std::string delimiters = \".?!\";\n  \
    \  size_t pos = 0;\n    size_t i = 0;\n    while (pos < S.size()) {\n        word\
    \ = S.substr(pos, 1);\n        if (word == \"I\") {\n            boredoms += 1;\n\
    \        }\n        pos = pos + 1;\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1oopz1x6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (auto &c : S) {\n    \
    \    if (c == delimiters[0]) {\n            boredoms++;\n            word = S;\n\
    \        }\n        else if (c == delimiters[1]) {\n            boredoms++;\n\
    \            word = S;\n        }\n        else if (c == delimiters[2]) {\n  \
    \          boredoms++;\n            word = S;\n        }\n        else {\n   \
    \         word = word + c;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmjsxyn06.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedj4i6ar.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \".?!\";\n    std::string delimiter2 = \"\
    .\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4 = \"!\"\
    ;\n    std::string delimiter5 = \".\";\n    std::string delimiter6 = \"?\";\n\
    \    std::string delimiter7 = \"!\";\n    std::string delimiter8 = \".\";\n  \
    \  std::string delimiter9 = \"?\";\n    std::string delimiter10 = \"!\";\n   \
    \ std::string delimiter11 = \".\";\n    std::string delimiter12 = \"?\";\n   \
    \ std::string delimiter13 = \"!\";\n    std::string delimiter14 = \".\";\n   \
    \ std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n   \
    \ std::string delimiter17 = \".\";\n    std::string delimiter18 = \"?\";\n   \
    \ std::string delimiter19 = \"!\";\n    std::string delimiter20 = \".\";\n   \
    \ std::string delimiter21 = \"?\";\n    std::string delimiter22 = \"!\";\n   \
    \ std::string delimiter23 = \".\";\n    std::string delimiter24 = \"?\";\n   \
    \ std::string delimiter25 = \"!\";\n    std::string delimiter26 = \".\";\n   \
    \ std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n   \
    \ std::string delimiter29 = \".\";\n    std::string delimiter30 = \"?\";\n   \
    \ std::string delimiter31 = \"!\";\n    std::string delimiter32 = \".\";\n   \
    \ std::string delimiter33 = \"?\";\n    std::string delimiter34 = \"!\";\n   \
    \ std::string delimiter35 = \".\";\n    std::string delimiter36 = \"?\";\n   \
    \ std::string delimiter37 = \"!\";\n    std::string delimiter38 = \".\";\n   \
    \ std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n   \
    \ std::string delimiter41 = \"!\";\n    std::string delimiter42 = \".\";\n   \
    \ std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n   \
    \ std::string delimiter45 = \".\";\n    std::string delimiter46 = \"?\";\n   \
    \ std::string delimiter47 = \"!\";\n    std::string delimiter48 = \".\";\n   \
    \ std::string delimiter49 = \"?\";\n    std::string delimiter50 = \"!\";\n   \
    \ std::string delimiter51 = \"!\";\n    std::string delimiter52 = \".\";\n   \
    \ std::string delimiter53 = \"?\";\n    std::string delimiter54 = \"!\";\n   \
    \ std::string delimiter55 = \".\";\n    std::string delimiter56 = \"?\";\n   \
    \ std::string delimiter57 = \"!\";\n    std::string delimiter58 = \".\";\n   \
    \ std::string delimiter59 = \"?\";\n    std::string delimiter60 = \"!\";\n   \
    \ std::string delimiter61 = \"!\";\n    std::string delimiter62 = \".\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_v8chorb.cpp:75:31: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiter62 = \".\n                          \
    \     ^\n/tmp/tmp_v8chorb.cpp:75:5: error: missing terminating \" character\n\
    \     std::string delimiter62 = \".\n     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_v8chorb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string delimiter2 = \" \";\n    std::string delimiter3 = \".\"\
    ;\n    std::string delimiter4 = \"?\";\n    std::string delimiter5 = \"!\";\n\
    \    std::string delimiter6 = \".\";\n    std::string delimiter7 = \"?\";\n  \
    \  std::string delimiter8 = \"!\";\n    std::string delimiter9 = \".\";\n    std::string\
    \ delimiter10 = \"?\";\n    std::string delimiter11 = \"!\";\n    std::string\
    \ delimiter12 = \".\";\n    std::string delimiter13 = \"?\";\n    std::string\
    \ delimiter14 = \"!\";\n    std::string delimiter15 = \".\";\n    std::string\
    \ delimiter16 = \"?\";\n    std::string delimiter17 = \"!\";\n    std::string\
    \ delimiter18 = \".\";\n    std::string delimiter19 = \"?\";\n    std::string\
    \ delimiter20 = \"!\";\n    std::string delimiter21 = \",\";\n    std::string\
    \ delimiter22 = \" \";\n    std::string delimiter23 = \".\";\n    std::string\
    \ delimiter24 = \"?\";\n    std::string delimiter25 = \"!\";\n    std::string\
    \ delimiter26 = \".\";\n    std::string delimiter27 = \"?\";\n    std::string\
    \ delimiter28 = \"!\";\n    std::string delimiter29 = \".\";\n    std::string\
    \ delimiter30 = \"?\";\n    std::string delimiter31 = \"!\";\n    std::string\
    \ delimiter32 = \".\";\n    std::string delimiter33 = \"?\";\n    std::string\
    \ delimiter34 = \"!\";\n    std::string delimiter35 = \".\";\n    std::string\
    \ delimiter36 = \"?\";\n    std::string delimiter37 = \"!\";\n    std::string\
    \ delimiter38 = \".\";\n    std::string delimiter39 = \"?\";\n    std::string\
    \ delimiter40 = \"!\";\n    std::string delimiter41 = \",\";\n    std::string\
    \ delimiter42 = \".\";\n    std::string delimiter43 = \"?\";\n    std::string\
    \ delimiter44 = \"!\";\n    std::string delimiter45 = \".\";\n    std::string\
    \ delimiter46 = \"?\";\n    std::string delimiter47 = \"!\";\n    std::string\
    \ delimiter48 = \".\";\n    std::string delimiter49 = \"?\";\n    std::string\
    \ delimiter50 = \"!\";\n    std::string delimiter51 = \",\";\n    std::string\
    \ delimiter52 = \".\";\n    std::string delimiter53 = \"?\";\n    std::string\
    \ delimiter54 = \"!\";\n    std::string delimiter55 = \".\";\n    std::string\
    \ delimiter56 = \"?\";\n    std::string delimiter57 = \"!\";\n    std::string\
    \ delimiter58 = \".\";\n    std::string delimiter59 = \"?\";\n    std::string\
    \ delimiter60 = \"!\";\n    std::string delimiter61 = \",\";\n    std::string\
    \ delimiter62\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmps5e3aihu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ count = 0;\n    while(pos < S.size()) {\n        word = S.substr(pos, 1);\n\
    \        pos = S.find(delimiters, pos);\n        if(pos != std::string::npos)\
    \ {\n            boredoms += 1;\n        }\n        pos = pos + 1;\n    }\n  \
    \  return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxa8p_5u_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++) {\n        word = S[i];\n     \
    \   if(word == \"I\") {\n            boredoms += 1;\n        }\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpiomxmh0h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    std::string word;\n\
    \    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter1 = \"I\";\n    std::string delimiter2 = \"the\";\n    std::string\
    \ delimiter3 = \"a\";\n    std::string delimiter4 = \"bore\";\n    std::string\
    \ delimiter5 = \"of\";\n    std::string delimiter6 = \"a\";\n    std::string delimiter7\
    \ = \"bore\";\n    std::string delimiter8 = \"of\";\n    std::string delimiter9\
    \ = \"a\";\n    std::string delimiter10 = \"bore\";\n    std::string delimiter11\
    \ = \"of\";\n    std::string delimiter12 = \"a\";\n    std::string delimiter13\
    \ = \"bore\";\n    std::string delimiter14 = \"of\";\n    std::string delimiter15\
    \ = \"a\";\n    std::string delimiter16 = \"bore\";\n    std::string delimiter17\
    \ = \"of\";\n    std::string delimiter18 = \"a\";\n    std::string delimiter19\
    \ = \"bore\";\n    std::string delimiter20 = \"of\";\n    std::string delimiter21\
    \ = \"a\";\n    std::string delimiter22 = \"bore\";\n    std::string delimiter23\
    \ = \"of\";\n    std::string delimiter24 = \"a\";\n    std::string delimiter25\
    \ = \"bore\";\n    std::string delimiter26 = \"of\";\n    std::string delimiter27\
    \ = \"a\";\n    std::string delimiter28 = \"bore\";\n    std::string delimiter29\
    \ = \"of\";\n    std::string delimiter30 = \"a\";\n    std::string delimiter31\
    \ = \"bore\";\n    std::string delimiter32 = \"of\";\n    std::string delimiter33\
    \ = \"a\";\n    std::string delimiter34 = \"bore\";\n    std::string delimiter35\
    \ = \"of\";\n    std::string delimiter36 = \"a\";\n    std::string delimiter37\
    \ = \"bore\";\n    std::string delimiter38 = \"of\";\n    std::string delimiter39\
    \ = \"a\";\n    std::string delimiter40 = \"bore\";\n    std::string delimiter41\
    \ = \"of\";\n    std::string delimiter42 = \"a\";\n    std::string delimiter43\
    \ = \"bore\";\n    std::string delimiter44 = \"of\";\n    std::string delimiter45\
    \ = \"a\";\n    std::string delimiter46 = \"bore\";\n    std::string delimiter47\
    \ = \"of\";\n    std::string delimiter48 = \"a\";\n    std::string delimiter49\
    \ = \"bore\";\n    std::string delimiter50 = \"of\";\n    std::string delimiter51\
    \ = \"a\";\n    std::string delimiter52 = \"bore\";\n    std::string delimiter53\
    \ = \"of\";\n    std::string delimiter54 = \"a\";\n    std::string delimiter55\
    \ = \"bore\";\n    std::string delimiter56 = \"of\";\n    std::string delimiter57\
    \ = \"a\";\n    std::string delimiter58 = \"bore\";\n\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2roarsus.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    std::string word;\n    for(int i = 0; i < S.length(); i++){\n\
    \        if(S[i] == '.'){\n            boredoms += 1;\n        }\n        if(S[i]\
    \ == '?'){\n            boredoms += 1;\n        }\n        if(S[i] == '!'){\n\
    \            boredoms += 1;\n        }\n        if(S[i] == 'I'){\n           \
    \ boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint main() {\n  \
    \  auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7cppcp0l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    while ((pos = S.find(delimiters, pos)) != std::string::npos) {\n\
    \        word = S.substr(pos, delimiters.size());\n        if (word == \"I\")\
    \ {\n            boredoms++;\n        }\n        pos = pos + delimiters.size();\n\
    \        i++;\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwbmanqjj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    for (auto &i : S) {\n        if (i == '.'\
    \ || i == '?' || i == '!') {\n            boredom += i;\n        } else {\n  \
    \          word += i;\n        }\n    }\n    if (boredom == \"I\") {\n       \
    \ boredoms += 1;\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkbkvd3_i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbftyci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.') {\n            count++;\n    \
    \    }\n        if(S[i] == '?') {\n            count++;\n        }\n        if(S[i]\
    \ == '!') {\n            count++;\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkfs_cccz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiter = \"\
    .?!\";\n    std::string delimiter2 = \" \";\n    std::string delimiter3 = \" \"\
    ;\n    std::string delimiter4 = \" \";\n    std::string delimiter5 = \" \";\n\
    \    std::string delimiter6 = \" \";\n    std::string delimiter7 = \" \";\n  \
    \  std::string delimiter8 = \" \";\n    std::string delimiter9 = \" \";\n    std::string\
    \ delimiter10 = \" \";\n    std::string delimiter11 = \" \";\n    std::string\
    \ delimiter12 = \" \";\n    std::string delimiter13 = \" \";\n    std::string\
    \ delimiter14 = \" \";\n    std::string delimiter15 = \" \";\n    std::string\
    \ delimiter16 = \" \";\n    std::string delimiter17 = \" \";\n    std::string\
    \ delimiter18 = \" \";\n    std::string delimiter19 = \" \";\n    std::string\
    \ delimiter20 = \" \";\n    std::string delimiter21 = \" \";\n    std::string\
    \ delimiter22 = \" \";\n    std::string delimiter23 = \" \";\n    std::string\
    \ delimiter24 = \" \";\n    std::string delimiter25 = \" \";\n    std::string\
    \ delimiter26 = \" \";\n    std::string delimiter27 = \" \";\n    std::string\
    \ delimiter28 = \" \";\n    std::string delimiter29 = \" \";\n    std::string\
    \ delimiter30 = \" \";\n    std::string delimiter31 = \" \";\n    std::string\
    \ delimiter32 = \" \";\n    std::string delimiter33 = \" \";\n    std::string\
    \ delimiter34 = \" \";\n    std::string delimiter35 = \" \";\n    std::string\
    \ delimiter36 = \" \";\n    std::string delimiter37 = \" \";\n    std::string\
    \ delimiter38 = \" \";\n    std::string delimiter39 = \" \";\n    std::string\
    \ delimiter40 = \" \";\n    std::string delimiter41 = \" \";\n    std::string\
    \ delimiter42 = \" \";\n    std::string delimiter43 = \" \";\n    std::string\
    \ delimiter44 = \" \";\n    std::string delimiter45 = \" \";\n    std::string\
    \ delimiter46 = \" \";\n    std::string delimiter47 = \" \";\n    std::string\
    \ delimiter48 = \" \";\n    std::string delimiter49 = \" \";\n    std::string\
    \ delimiter50 = \" \";\n    std::string delimiter51 = \" \";\n    std::string\
    \ delimiter52 = \" \";\n    std::string delimiter53 = \" \";\n    std::string\
    \ delimiter54 = \" \";\n    std::string delimiter55 = \" \";\n    std::string\
    \ delimiter56 = \" \";\n    std::string delimiter57 = \" \";\n    std::string\
    \ delimiter58 = \" \";\n    std::string delimiter59 = \" \";\n    std::string\
    \ delimiter60 = \" \";\n    std::string delimiter61 = \" \";\n    std::string\
    \ delimiter62 = \" \";\n    std::string delimiter6\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsbuicorc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        if (word.compare(0, 2, \"I\") == 0) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyldnd8tl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long ans = 0;\n    std::string word;\n\
    \    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4\
    \ = \"!\";\n    std::string delimiter5 = \".?!\";\n    std::string delimiter6\
    \ = \".\";\n    std::string delimiter7 = \"?\";\n    std::string delimiter8 =\
    \ \"!\";\n    std::string delimiter9 = \".?!\";\n    std::string delimiter10 =\
    \ \".\";\n    std::string delimiter11 = \"?\";\n    std::string delimiter12 =\
    \ \"!\";\n    std::string delimiter13 = \".?!\";\n    std::string delimiter14\
    \ = \".\";\n    std::string delimiter15 = \"?\";\n    std::string delimiter16\
    \ = \"!\";\n    std::string delimiter17 = \".?!\";\n    std::string delimiter18\
    \ = \".\";\n    std::string delimiter19 = \"?\";\n    std::string delimiter20\
    \ = \"!\";\n    std::string delimiter21 = \"?!\";\n    std::string delimiter22\
    \ = \".\";\n    std::string delimiter23 = \"?\";\n    std::string delimiter24\
    \ = \"!\";\n    std::string delimiter25 = \".?!\";\n    std::string delimiter26\
    \ = \".\";\n    std::string delimiter27 = \"?\";\n    std::string delimiter28\
    \ = \"!\";\n    std::string delimiter29 = \".?!\";\n    std::string delimiter30\
    \ = \".\";\n    std::string delimiter31 = \"?\";\n    std::string delimiter32\
    \ = \"!\";\n    std::string delimiter33 = \".?!\";\n    std::string delimiter34\
    \ = \".\";\n    std::string delimiter35 = \"?\";\n    std::string delimiter36\
    \ = \"!\";\n    std::string delimiter37 = \".?!\";\n    std::string delimiter38\
    \ = \".\";\n    std::string delimiter39 = \"?\";\n    std::string delimiter40\
    \ = \"!\";\n    std::string delimiter41 = \"?!\";\n    std::string delimiter42\
    \ = \".\";\n    std::string delimiter43 = \"?\";\n    std::string delimiter44\
    \ = \"!\";\n    std::string delimiter45 = \".?!\";\n    std::string delimiter46\
    \ = \".\";\n    std::string delimiter47 = \"?\";\n    std::string delimiter48\
    \ = \"!\";\n    std::string delimiter49 = \".?!\";\n    std::string delimiter50\
    \ = \".\";\n    std::string delimiter51 = \"?\";\n    std::string delimiter52\
    \ = \"!\";\n    std::string delimiter53 = \".?!\";\n    std::string delimiter54\
    \ = \".\";\n    std::string delimiter55 = \"?\";\n    std::string delimiter56\
    \ = \"!\";\n    std::string delimiter57 = \".?!\";\n    std::string delimiter58\
    \ = \".\";\n\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzncg5nwr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    std::string word;\n    std::string sentence;\n    std::stringstream\
    \ ss(S);\n    while (std::getline(ss, sentence, '.'))\n    {\n        std::istringstream\
    \ iss(sentence);\n        while (std::getline(iss, word, '.'))\n        {\n  \
    \          if (word == \"I\")\n            {\n                boredoms++;\n  \
    \          }\n        }\n    }\n    return boredoms;\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvnmj9fu4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    std::string sentence;\n    std::string\
    \ delimiters = \".?!\";\n    size_t pos = 0;\n    size_t count = 0;\n    while(pos\
    \ < S.length()) {\n        word = S.substr(pos, 1);\n        pos = S.find(delimiters,\
    \ pos);\n        sentence = S.substr(0, pos);\n        if(word == \"I\") {\n \
    \           boredom++;\n        }\n        pos = pos + 1;\n    }\n    return boredom;\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpi13hxzeh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    while(pos < S.size()) {\n        word = S.substr(pos, delimiters.size());\n\
    \        pos = word.find_first_of(delimiters);\n        if(pos != std::string::npos)\
    \ {\n            word = word.substr(0, pos);\n            if(word == \"I\") {\n\
    \                boredoms++;\n            }\n        }\n        i++;\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvnyavllq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    std::string word;\n\
    \    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4\
    \ = \"!\";\n    std::string delimiter5 = \".\";\n    std::string delimiter6 =\
    \ \"?\";\n    std::string delimiter7 = \"!\";\n    std::string delimiter8 = \"\
    .\";\n    std::string delimiter9 = \"?\";\n    std::string delimiter10 = \"!\"\
    ;\n    std::string delimiter11 = \".\";\n    std::string delimiter12 = \"?\";\n\
    \    std::string delimiter13 = \"!\";\n    std::string delimiter14 = \".\";\n\
    \    std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n\
    \    std::string delimiter17 = \".\";\n    std::string delimiter18 = \"?\";\n\
    \    std::string delimiter19 = \"!\";\n    std::string delimiter20 = \".\";\n\
    \    std::string delimiter21 = \"?\";\n    std::string delimiter22 = \"!\";\n\
    \    std::string delimiter23 = \".\";\n    std::string delimiter24 = \"?\";\n\
    \    std::string delimiter25 = \"!\";\n    std::string delimiter26 = \".\";\n\
    \    std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n\
    \    std::string delimiter29 = \".\";\n    std::string delimiter30 = \"?\";\n\
    \    std::string delimiter31 = \"!\";\n    std::string delimiter32 = \".\";\n\
    \    std::string delimiter33 = \"?\";\n    std::string delimiter34 = \"!\";\n\
    \    std::string delimiter35 = \".\";\n    std::string delimiter36 = \"?\";\n\
    \    std::string delimiter37 = \"!\";\n    std::string delimiter38 = \".\";\n\
    \    std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n\
    \    std::string delimiter41 = \"!\";\n    std::string delimiter42 = \".\";\n\
    \    std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n\
    \    std::string delimiter45 = \".\";\n    std::string delimiter46 = \"?\";\n\
    \    std::string delimiter47 = \"!\";\n    std::string delimiter48 = \".\";\n\
    \    std::string delimiter49 = \"?\";\n    std::string delimiter50 = \"!\";\n\
    \    std::string delimiter51 = \"!\";\n    std::string delimiter52 = \".\";\n\
    \    std::string delimiter53 = \"?\";\n    std::string delimiter54 = \"!\";\n\
    \    std::string delimiter55 = \".\";\n    std::string delimiter56 = \"?\";\n\
    \    std::string delimiter57 = \"!\";\n    std::string delimiter58 = \".\";\n\
    \    std::string delimiter59 = \"?\";\n    std::string delimiter60 = \"!\";\n\
    \    std::string delimiter61 = \"!\";\n    std::string \n}\nint main() {\n   \
    \ auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbrl61f63.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long ans = 0;\n    std::string word;\n\
    \    for(auto &i : S) {\n        if(i == '.' || i == '?' || i == '!') {\n    \
    \        ans += 1;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpszlni97m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiter = \"\
    .?!\";\n    std::string delimiter1 = \"I\";\n    std::string delimiter2 = \".\"\
    ;\n    std::string delimiter3 = \".\";\n    std::string delimiter4 = \".\";\n\
    \    std::string delimiter5 = \".\";\n    std::string delimiter6 = \".\";\n  \
    \  std::string delimiter7 = \".\";\n    std::string delimiter8 = \".\";\n    std::string\
    \ delimiter9 = \".\";\n    std::string delimiter10 = \".\";\n    std::string delimiter11\
    \ = \".\";\n    std::string delimiter12 = \".\";\n    std::string delimiter13\
    \ = \".\";\n    std::string delimiter14 = \".\";\n    std::string delimiter15\
    \ = \".\";\n    std::string delimiter16 = \".\";\n    std::string delimiter17\
    \ = \".\";\n    std::string delimiter18 = \".\";\n    std::string delimiter19\
    \ = \".\";\n    std::string delimiter20 = \".\";\n    std::string delimiter21\
    \ = \".\";\n    std::string delimiter22 = \".\";\n    std::string delimiter23\
    \ = \".\";\n    std::string delimiter24 = \".\";\n    std::string delimiter25\
    \ = \".\";\n    std::string delimiter26 = \".\";\n    std::string delimiter27\
    \ = \".\";\n    std::string delimiter28 = \".\";\n    std::string delimiter29\
    \ = \".\";\n    std::string delimiter30 = \".\";\n    std::string delimiter31\
    \ = \".\";\n    std::string delimiter32 = \".\";\n    std::string delimiter33\
    \ = \".\";\n    std::string delimiter34 = \".\";\n    std::string delimiter35\
    \ = \".\";\n    std::string delimiter36 = \".\";\n    std::string delimiter37\
    \ = \".\";\n    std::string delimiter38 = \".\";\n    std::string delimiter39\
    \ = \".\";\n    std::string delimiter40 = \".\";\n    std::string delimiter41\
    \ = \".\";\n    std::string delimiter42 = \".\";\n    std::string delimiter43\
    \ = \".\";\n    std::string delimiter44 = \".\";\n    std::string delimiter45\
    \ = \".\";\n    std::string delimiter46 = \".\";\n    std::string delimiter47\
    \ = \".\";\n    std::string delimiter48 = \".\";\n    std::string delimiter49\
    \ = \".\";\n    std::string delimiter50 = \".\";\n    std::string delimiter51\
    \ = \".\";\n    std::string delimiter52 = \".\";\n    std::string delimiter53\
    \ = \".\";\n    std::string delimiter54 = \".\";\n    std::string delimiter55\
    \ = \".\";\n    std::string delimiter56 = \".\";\n    std::string delimiter57\
    \ = \".\";\n    std::string delimiter58 = \".\";\n    std::string delimiter59\
    \ = \".\";\n    std::string delimiter60 = \".\";\n    \n}\nint main() {\n    auto\
    \ candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n  \
    \  assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyycs8mjz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i=0;i<S.size();i++){\n        if(S[i] == 'I'){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\nint main() {\n   \
    \ auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6rdp02b5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    for(int i = 0; i < S.length(); i++)\
    \ {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n\
    \        }\n    }\n    return boredom;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpr_l73fdf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (auto &c : S) {\n    \
    \    if (c == delimiters[0]) {\n            boredoms++;\n            word = c;\n\
    \        }\n        else if (c == delimiters[1]) {\n            boredoms++;\n\
    \            word = c;\n        }\n        else if (c == delimiters[2]) {\n  \
    \          boredoms++;\n            word = c;\n        }\n        else if (c ==\
    \ delimiters[3]) {\n            boredoms++;\n            word = c;\n        }\n\
    \        else if (c == delimiters[4]) {\n            boredoms++;\n           \
    \ word = c;\n        }\n        else if (c == delimiters[5]) {\n            boredoms++;\n\
    \            word = c;\n        }\n        else if (c == delimiters[6]) {\n  \
    \          boredoms++;\n            word = c;\n        }\n        else if (c ==\
    \ delimiters[7]) {\n            boredoms++;\n            word = c;\n        }\n\
    \        else if (c == delimiters[8]) {\n            boredoms++;\n           \
    \ word = c;\n        }\n        else if (c == delimiters[9]) {\n            boredoms++;\n\
    \            word = c;\n        }\n        else if (c == delimiters[10]) {\n \
    \           boredoms++;\n            word = c;\n        }\n        else if (c\
    \ == delimiters[11]) {\n            boredoms++;\n            word = c;\n     \
    \   }\n        else if (c == delimiters[12]) {\n            boredoms++;\n    \
    \        word = c;\n        }\n        else if (c == delimiters[13]) {\n     \
    \       boredoms++;\n            word = c;\n        }\n        else if (c == delimiters[14])\
    \ {\n            boredoms++;\n            word = c;\n        }\n        else if\
    \ (c == delimiters[15]) {\n            boredoms++;\n            word = c;\n  \
    \      }\n        else if (c == delimiters[16]) {\n            boredoms++;\n \
    \           word = c;\n        }\n        else if (c == delimiters[17]) {\n  \
    \          boredoms++;\n            word = c;\n        }\n        else if (c ==\
    \ delimiters[18]) {\n            boredoms++;\n            word = c;\n        }\n\
    \        else if (c == delimiters[19]) {\n            boredoms++;\n          \
    \  word = c;\n        }\n        else if (c == delimiters[20]) {\n           \
    \ boredoms++;\n            word = c;\n        }\n        else if (c == delimiters[21])\
    \ {\n            boredoms++;\n            word = c;\n        }\n        else if\
    \ (c == delimiters[22]) {\n            boredoms++;\n            word = c;\n  \
    \      }\n        else if (c == delimiters[23]) {\n            boredoms++;\n \
    \           word = c;\n        }\n        else if (c == delimiters[24\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2ei02e30.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string sentence;\n    std::string::size_type pos;\n    std::string::size_type\
    \ i;\n    std::string::size_type j;\n    std::string::size_type k;\n    std::string::size_type\
    \ l;\n    std::string::size_type m;\n    std::string::size_type n;\n    std::string::size_type\
    \ o;\n    std::string::size_type p;\n    std::string::size_type q;\n    std::string::size_type\
    \ r;\n    std::string::size_type s;\n    std::string::size_type t;\n    std::string::size_type\
    \ u;\n    std::string::size_type v;\n    std::string::size_type w;\n    std::string::size_type\
    \ x;\n    std::string::size_type y;\n    std::string::size_type z;\n    std::string::size_type\
    \ A;\n    std::string::size_type B;\n    std::string::size_type C;\n    std::string::size_type\
    \ D;\n    std::string::size_type E;\n    std::string::size_type F;\n    std::string::size_type\
    \ G;\n    std::string::size_type H;\n    std::string::size_type I;\n    std::string::size_type\
    \ J;\n    std::string::size_type K;\n    std::string::size_type L;\n    std::string::size_type\
    \ M;\n    std::string::size_type N;\n    std::string::size_type O;\n    std::string::size_type\
    \ P;\n    std::string::size_type Q;\n    std::string::size_type R;\n    std::string::size_type\
    \ S;\n    std::string::size_type T;\n    std::string::size_type U;\n    std::string::size_type\
    \ V;\n    std::string::size_type W;\n    std::string::size_type X;\n    std::string::size_type\
    \ Y;\n    std::string::size_type Z;\n    std::string::size_type A;\n    std::string::size_type\
    \ B;\n    std::string::size_type C;\n    std::string::size_type D;\n    std::string::size_type\
    \ E;\n    std::string::size_type F;\n    std::string::size_type G;\n    std::string::size_type\
    \ H;\n    std::string::size_type I;\n    std::string::size_type J;\n    std::string::size_type\
    \ K;\n    std::string::size_type L;\n    std::string::size_type M;\n    std::string::size_type\
    \ N;\n    std::string::size_type O;\n    std::string::size_type P;\n    std::string::size_type\
    \ Q;\n    std::string::size_type R;\n    std::string::size_type S;\n    \n}\n\
    int main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7cf4dzx6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string delimiter2 = \" \";\n    std::string delimiter3 = \" \"\
    ;\n    std::string delimiter4 = \" \";\n    std::string delimiter5 = \" \";\n\
    \    std::string delimiter6 = \" \";\n    std::string delimiter7 = \" \";\n  \
    \  std::string delimiter8 = \" \";\n    std::string delimiter9 = \" \";\n    std::string\
    \ delimiter10 = \" \";\n    std::string delimiter11 = \" \";\n    std::string\
    \ delimiter12 = \" \";\n    std::string delimiter13 = \" \";\n    std::string\
    \ delimiter14 = \" \";\n    std::string delimiter15 = \" \";\n    std::string\
    \ delimiter16 = \" \";\n    std::string delimiter17 = \" \";\n    std::string\
    \ delimiter18 = \" \";\n    std::string delimiter19 = \" \";\n    std::string\
    \ delimiter20 = \" \";\n    std::string delimiter21 = \" \";\n    std::string\
    \ delimiter22 = \" \";\n    std::string delimiter23 = \" \";\n    std::string\
    \ delimiter24 = \" \";\n    std::string delimiter25 = \" \";\n    std::string\
    \ delimiter26 = \" \";\n    std::string delimiter27 = \" \";\n    std::string\
    \ delimiter28 = \" \";\n    std::string delimiter29 = \" \";\n    std::string\
    \ delimiter30 = \" \";\n    std::string delimiter31 = \" \";\n    std::string\
    \ delimiter32 = \" \";\n    std::string delimiter33 = \" \";\n    std::string\
    \ delimiter34 = \" \";\n    std::string delimiter35 = \" \";\n    std::string\
    \ delimiter36 = \" \";\n    std::string delimiter37 = \" \";\n    std::string\
    \ delimiter38 = \" \";\n    std::string delimiter39 = \" \";\n    std::string\
    \ delimiter40 = \" \";\n    std::string delimiter41 = \" \";\n    std::string\
    \ delimiter42 = \" \";\n    std::string delimiter43 = \" \";\n    std::string\
    \ delimiter44 = \" \";\n    std::string delimiter45 = \" \";\n    std::string\
    \ delimiter46 = \" \";\n    std::string delimiter47 = \" \";\n    std::string\
    \ delimiter48 = \" \";\n    std::string delimiter49 = \" \";\n    std::string\
    \ delimiter50 = \" \";\n    std::string delimiter51 = \" \";\n    std::string\
    \ delimiter52 = \" \";\n    std::string delimiter53 = \" \";\n    std::string\
    \ delimiter54 = \" \";\n    std::string delimiter55 = \" \";\n    std::string\
    \ delimiter56 = \" \";\n    std::string delimiter57 = \" \";\n    std::string\
    \ delimiter58 = \" \";\n    std::string delimiter59 = \" \";\n    std::string\
    \ delimiter60 = \" \";\n    std::string delimiter61 = \" \";\n    std::string\
    \ delimiter62 = \" \";\n    std::string delimiter63 = \" \";\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwnv_elzj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprhhz_uvs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string sentence;\n    std::stringstream ss(S);\n    while(std::getline(ss,\
    \ sentence, '.')){\n        word = sentence;\n        std::cout << word << std::endl;\n\
    \        if(word == \"I\"){\n            boredoms += 1;\n        }\n    }\n  \
    \  return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptqeuyiqi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpw7zjwpd_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredom++;\n        }\n    }\n\
    \    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp561w164p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (size_t i = 0; i < S.size(); i++) {\n        if (S[i] == '.')\
    \ {\n            boredoms += 1;\n        }\n        if (S[i] == '?') {\n     \
    \       boredoms += 1;\n        }\n        if (S[i] == '!') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if\
    \ (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if (S[i] ==\
    \ 'I') {\n            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n\
    \            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n         \
    \   boredoms += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if\
    \ (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if (S[i] ==\
    \ 'I') {\n            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n\
    \            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n         \
    \   boredoms += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if\
    \ (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if (S[i] ==\
    \ 'I') {\n            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n\
    \            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n         \
    \   boredoms += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if\
    \ (S[i] == 'I') {\n            boredoms += 1;\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpilurqcrs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string delimiters = \".?!\";\n\
    \    std::string delimiters_reversed = \"\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        boredom_word = word;\n        for (size_t\
    \ j = 0; j < delimiters.size(); j++) {\n            if (boredom_word.find(delimiters[j])\
    \ != std::string::npos) {\n                boredom_word = boredom_word.substr(0,\
    \ boredom_word.find(delimiters[j]));\n            }\n        }\n        if (boredom_word\
    \ == \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpi56yjrz2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \".?!\";\n    std::string\
    \ delimiter4 = \".\";\n    std::string delimiter5 = \".?!\";\n    std::string\
    \ delimiter6 = \".\";\n    std::string delimiter7 = \".?!\";\n    std::string\
    \ delimiter8 = \".\";\n    std::string delimiter9 = \".?!\";\n    std::string\
    \ delimiter10 = \".\";\n    std::string delimiter11 = \".?!\";\n    std::string\
    \ delimiter12 = \".\";\n    std::string delimiter13 = \".?!\";\n    std::string\
    \ delimiter14 = \".\";\n    std::string delimiter15 = \".?!\";\n    std::string\
    \ delimiter16 = \".\";\n    std::string delimiter17 = \".?!\";\n    std::string\
    \ delimiter18 = \".\";\n    std::string delimiter19 = \".?!\";\n    std::string\
    \ delimiter20 = \".\";\n    std::string delimiter21 = \".?!\";\n    std::string\
    \ delimiter22 = \".\";\n    std::string delimiter23 = \".?!\";\n    std::string\
    \ delimiter24 = \".\";\n    std::string delimiter25 = \".?!\";\n    std::string\
    \ delimiter26 = \".\";\n    std::string delimiter27 = \".?!\";\n    std::string\
    \ delimiter28 = \".\";\n    std::string delimiter29 = \".?!\";\n    std::string\
    \ delimiter30 = \".\";\n    std::string delimiter31 = \".?!\";\n    std::string\
    \ delimiter32 = \".\";\n    std::string delimiter33 = \".?!\";\n    std::string\
    \ delimiter34 = \".\";\n    std::string delimiter35 = \".?!\";\n    std::string\
    \ delimiter36 = \".\";\n    std::string delimiter37 = \".?!\";\n    std::string\
    \ delimiter38 = \".\";\n    std::string delimiter39 = \".?!\";\n    std::string\
    \ delimiter40 = \".\";\n    std::string delimiter41 = \".?!\";\n    std::string\
    \ delimiter42 = \".\";\n    std::string delimiter43 = \".?!\";\n    std::string\
    \ delimiter44 = \".\";\n    std::string delimiter45 = \".?!\";\n    std::string\
    \ delimiter46 = \".\";\n    std::string delimiter47 = \".?!\";\n    std::string\
    \ delimiter48 = \".\";\n    std::string delimiter49 = \".?!\";\n    std::string\
    \ delimiter50 = \".\";\n    std::string delimiter51 = \".?!\";\n    std::string\
    \ delimiter52 = \".\";\n    std::string delimiter53 = \".?!\";\n    std::string\
    \ delimiter54 = \".\";\n    std::string delimiter55 = \".?!\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo5sge2ad.cpp:69:31: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiter55 = \".?!\n                        \
    \       ^\n/tmp/tmpo5sge2ad.cpp:69:5: error: missing terminating \" character\n\
    \     std::string delimiter55 = \".?!\n     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo5sge2ad.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression befor"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.') {\n\
    \            boredoms += 1;\n        }\n        if(S[i] == '?') {\n          \
    \  boredoms += 1;\n        }\n        if(S[i] == '!') {\n            boredoms\
    \ += 1;\n        }\n        if(S[i] == 'I') {\n            boredoms += 1;\n  \
    \      }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0fsazz7l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string delimiter1 = \"I\";\n    std::string delimiter2 = \"the\"\
    ;\n    std::string delimiter3 = \"a\";\n    std::string delimiter4 = \"bore\"\
    ;\n    std::string delimiter5 = \"of\";\n    std::string delimiter6 = \"the\"\
    ;\n    std::string delimiter7 = \"sky\";\n    std::string delimiter8 = \"is\"\
    ;\n    std::string delimiter9 = \"blue\";\n    std::string delimiter10 = \"the\"\
    ;\n    std::string delimiter11 = \"sun\";\n    std::string delimiter12 = \"is\"\
    ;\n    std::string delimiter13 = \"shining\";\n    std::string delimiter14 = \"\
    I\";\n    std::string delimiter15 = \"love\";\n    std::string delimiter16 = \"\
    this\";\n    std::string delimiter17 = \"weather\";\n    std::string delimiter18\
    \ = \".\";\n    std::string delimiter19 = \".\";\n    std::string delimiter20\
    \ = \".\";\n    std::string delimiter21 = \"!\";\n    std::string delimiter22\
    \ = \".\";\n    std::string delimiter23 = \".\";\n    std::string delimiter24\
    \ = \".\";\n    std::string delimiter25 = \".\";\n    std::string delimiter26\
    \ = \".\";\n    std::string delimiter27 = \".\";\n    std::string delimiter28\
    \ = \".\";\n    std::string delimiter29 = \".\";\n    std::string delimiter30\
    \ = \".\";\n    std::string delimiter31 = \".\";\n    std::string delimiter32\
    \ = \".\";\n    std::string delimiter33 = \".\";\n    std::string delimiter34\
    \ = \".\";\n    std::string delimiter35 = \".\";\n    std::string delimiter36\
    \ = \".\";\n    std::string delimiter37 = \".\";\n    std::string delimiter38\
    \ = \".\";\n    std::string delimiter39 = \".\";\n    std::string delimiter40\
    \ = \".\";\n    std::string delimiter41 = \".\";\n    std::string delimiter42\
    \ = \".\";\n    std::string delimiter43 = \".\";\n    std::string delimiter44\
    \ = \".\";\n    std::string delimiter45 = \".\";\n    std::string delimiter46\
    \ = \".\";\n    std::string delimiter47 = \".\";\n    std::string delimiter48\
    \ = \".\";\n    std::string delimiter49 = \".\";\n    std::string delimiter50\
    \ = \".\";\n    std::string delimiter51 = \".\";\n    std::string delimiter52\
    \ = \".\";\n    std::string delimiter53 = \".\";\n    std::string delimiter54\
    \ = \".\";\n    std::string delimiter55 = \".\";\n    std::string delimiter56\
    \ = \".\";\n    std::string delimiter57 = \".\";\n    std::string delimiter58\
    \ = \".\";\n    std::string delimiter59 = \".\";\n    std::string delimiter60\
    \ = \".\";\n    \n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqkpghecn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2wf_hj5p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n        if (c == ' ') {\n        \
    \    word = \"\";\n        }\n        else {\n            word += c;\n       \
    \ }\n    }\n    if (boredoms == 0) {\n        boredoms = 1;\n    }\n    if (word\
    \ == \"I\") {\n        boredoms += 1;\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxf33i1lb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc1ovw0h5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_caps\
    \ = \"...!\";\n    std::string delimiters_caps_lower = \"...!\";\n    std::string\
    \ delimiters_caps_upper = \"...!\";\n    std::string delimiters_caps_all = \"\
    ...!\";\n    std::string delimiters_caps_all_lower = \"...!\";\n    std::string\
    \ delimiters_caps_all_upper = \"...!\";\n    std::string delimiters_caps_all_all\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_lower = \"...!\";\n   \
    \ std::string delimiters_caps_all_all_upper = \"...!\";\n    std::string delimiters_caps_all_all_all\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_lower = \"...!\";\n\
    \    std::string delimiters_caps_all_all_all_upper = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all = \"...!\";\n    std::string delimiters_caps_all_all_all_all_lower\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_all_upper = \"...!\"\
    ;\n    std::string delimiters_caps_all_all_all_all_all = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_lower = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_upper\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_all = \"...!\"\
    ;\n    std::string delimiters_caps_all_all_all_all_all_all_lower = \"...!\";\n\
    \    std::string delimiters_caps_all_all_all_all_all_all_upper = \"...!\";\n \
    \   std::string delimiters_caps_all_all_all_all_all_all_all = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all_all_lower = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all_all_upper = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all_all_all = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all_all_all_lower = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all_all_all_upper = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all_all_all_all = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all_all_all_all_lower = \"...!\";\n    std::string\
    \ delimiters_caps_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpggsqos_f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string temp;\n    size_t\
    \ pos = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n    size_t\
    \ l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n    size_t\
    \ p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n    size_t\
    \ t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n    size_t\
    \ x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n    size_t\
    \ B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n    size_t\
    \ F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n    size_t\
    \ J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n    size_t\
    \ N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n    size_t\
    \ R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n    size_t\
    \ V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n    size_t\
    \ Z = 0;\n    size_t a = 0;\n    size_t b = 0;\n    size_t c = 0;\n    size_t\
    \ d = 0;\n    size_t e = 0;\n    size_t f = 0;\n    size_t g = 0;\n    size_t\
    \ h = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n    size_t\
    \ l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n    size_t\
    \ p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n    size_t\
    \ t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n    size_t\
    \ x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n    size_t\
    \ B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n    size_t\
    \ F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n    size_t\
    \ J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n    size_t\
    \ N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n    size_t\
    \ R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n    size_t\
    \ V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n    size_t\
    \ Z = 0;\n    size_t a = 0;\n    size_t \n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcgueolqa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc1ovw0h5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == '.' ||\
    \ S[i] == '?' || S[i] == '!'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5r83mnfy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    for(int i = 0; i < S.size(); i++){\n\
    \        if(S[i] == '.'){\n            boredom++;\n        }\n        if(S[i]\
    \ == '?'){\n            boredom++;\n        }\n        if(S[i] == '!'){\n    \
    \        boredom++;\n        }\n    }\n    return boredom;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0yw9ys38.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    std::string word;\n\
    \    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4\
    \ = \"!\";\n    std::string delimiter5 = \".?!\";\n    std::string delimiter6\
    \ = \".\";\n    std::string delimiter7 = \"?\";\n    std::string delimiter8 =\
    \ \"!\";\n    std::string delimiter9 = \".?!\";\n    std::string delimiter10 =\
    \ \".\";\n    std::string delimiter11 = \"?\";\n    std::string delimiter12 =\
    \ \"!\";\n    std::string delimiter13 = \".?!\";\n    std::string delimiter14\
    \ = \".\";\n    std::string delimiter15 = \"?\";\n    std::string delimiter16\
    \ = \"!\";\n    std::string delimiter17 = \".?!\";\n    std::string delimiter18\
    \ = \".\";\n    std::string delimiter19 = \"?\";\n    std::string delimiter20\
    \ = \"!\";\n    std::string delimiter21 = \".?!\";\n    std::string delimiter22\
    \ = \".\";\n    std::string delimiter23 = \"?\";\n    std::string delimiter24\
    \ = \"!\";\n    std::string delimiter25 = \".?!\";\n    std::string delimiter26\
    \ = \".\";\n    std::string delimiter27 = \"?\";\n    std::string delimiter28\
    \ = \"!\";\n    std::string delimiter29 = \".?!\";\n    std::string delimiter30\
    \ = \".\";\n    std::string delimiter31 = \"?\";\n    std::string delimiter32\
    \ = \"!\";\n    std::string delimiter33 = \".?!\";\n    std::string delimiter34\
    \ = \".\";\n    std::string delimiter35 = \"?\";\n    std::string delimiter36\
    \ = \"!\";\n    std::string delimiter37 = \".?!\";\n    std::string delimiter38\
    \ = \".\";\n    std::string delimiter39 = \"?\";\n    std::string delimiter40\
    \ = \"!\";\n    std::string delimiter41 = \".?!\";\n    std::string delimiter42\
    \ = \".\";\n    std::string delimiter43 = \"?\";\n    std::string delimiter44\
    \ = \"!\";\n    std::string delimiter45 = \".?!\";\n    std::string delimiter46\
    \ = \".\";\n    std::string delimiter47 = \"?\";\n    std::string delimiter48\
    \ = \"!\";\n    std::string delimiter49 = \".?!\";\n    std::string delimiter50\
    \ = \".\";\n    std::string delimiter51 = \"?\";\n    std::string delimiter52\
    \ = \"!\";\n    std::string delimiter53 = \".?!\";\n    std::string delimiter54\
    \ = \".\";\n    std::string delimiter55 = \"?\";\n    std::string delimiter56\
    \ = \"!\";\n    std::string delimiter57 = \".?!\";\n    std::string delimiter58\
    \ = \".\";\n    \n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp8bn0gon.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".?!\";\n    std::string delimiter3 = \".?!\";\n    std::string\
    \ delimiter4 = \".?!\";\n    std::string delimiter5 = \".?!\";\n    std::string\
    \ delimiter6 = \".?!\";\n    std::string delimiter7 = \".?!\";\n    std::string\
    \ delimiter8 = \".?!\";\n    std::string delimiter9 = \".?!\";\n    std::string\
    \ delimiter10 = \".?!\";\n    std::string delimiter11 = \".?!\";\n    std::string\
    \ delimiter12 = \".?!\";\n    std::string delimiter13 = \".?!\";\n    std::string\
    \ delimiter14 = \".?!\";\n    std::string delimiter15 = \".?!\";\n    std::string\
    \ delimiter16 = \".?!\";\n    std::string delimiter17 = \".?!\";\n    std::string\
    \ delimiter18 = \".?!\";\n    std::string delimiter19 = \".?!\";\n    std::string\
    \ delimiter20 = \".?!\";\n    std::string delimiter21 = \".?!\";\n    std::string\
    \ delimiter22 = \".?!\";\n    std::string delimiter23 = \".?!\";\n    std::string\
    \ delimiter24 = \".?!\";\n    std::string delimiter25 = \".?!\";\n    std::string\
    \ delimiter26 = \".?!\";\n    std::string delimiter27 = \".?!\";\n    std::string\
    \ delimiter28 = \".?!\";\n    std::string delimiter29 = \".?!\";\n    std::string\
    \ delimiter30 = \".?!\";\n    std::string delimiter31 = \".?!\";\n    std::string\
    \ delimiter32 = \".?!\";\n    std::string delimiter33 = \".?!\";\n    std::string\
    \ delimiter34 = \".?!\";\n    std::string delimiter35 = \".?!\";\n    std::string\
    \ delimiter36 = \".?!\";\n    std::string delimiter37 = \".?!\";\n    std::string\
    \ delimiter38 = \".?!\";\n    std::string delimiter39 = \".?!\";\n    std::string\
    \ delimiter40 = \".?!\";\n    std::string delimiter41 = \".?!\";\n    std::string\
    \ delimiter42 = \".?!\";\n    std::string delimiter43 = \".?!\";\n    std::string\
    \ delimiter44 = \".?!\";\n    std::string delimiter45 = \".?!\";\n    std::string\
    \ delimiter46 = \".?!\";\n    std::string delimiter47 = \".?!\";\n    std::string\
    \ delimiter48 = \".?!\";\n    std::string delimiter49 = \".?!\";\n    std::string\
    \ delimiter50\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3sx_zgr2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n        word = i;\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpau2cjkdh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms += 1;\n        }\n  \
    \  }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv42_23qq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedj4i6ar.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedj4i6ar.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedj4i6ar.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbftyci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiter = \"\
    .,?!\";\n    std::string delimiter2 = \".,?!\";\n    std::string delimiter3 =\
    \ \".,?!\";\n    std::string delimiter4 = \".,?!\";\n    std::string delimiter5\
    \ = \".,?!\";\n    std::string delimiter6 = \".,?!\";\n    std::string delimiter7\
    \ = \".,?!\";\n    std::string delimiter8 = \".,?!\";\n    std::string delimiter9\
    \ = \".,?!\";\n    std::string delimiter10 = \".,?!\";\n    std::string delimiter11\
    \ = \".,?!\";\n    std::string delimiter12 = \".,?!\";\n    std::string delimiter13\
    \ = \".,?!\";\n    std::string delimiter14 = \".,?!\";\n    std::string delimiter15\
    \ = \".,?!\";\n    std::string delimiter16 = \".,?!\";\n    std::string delimiter17\
    \ = \".,?!\";\n    std::string delimiter18 = \".,?!\";\n    std::string delimiter19\
    \ = \".,?!\";\n    std::string delimiter20 = \".,?!\";\n    std::string delimiter21\
    \ = \".,?!\";\n    std::string delimiter22 = \".,?!\";\n    std::string delimiter23\
    \ = \".,?!\";\n    std::string delimiter24 = \".,?!\";\n    std::string delimiter25\
    \ = \".,?!\";\n    std::string delimiter26 = \".,?!\";\n    std::string delimiter27\
    \ = \".,?!\";\n    std::string delimiter28 = \".,?!\";\n    std::string delimiter29\
    \ = \".,?!\";\n    std::string delimiter30 = \".,?!\";\n    std::string delimiter31\
    \ = \".,?!\";\n    std::string delimiter32 = \".,?!\";\n    std::string delimiter33\
    \ = \".,?!\";\n    std::string delimiter34 = \".,?!\";\n    std::string delimiter35\
    \ = \".,?!\";\n    std::string delimiter36 = \".,?!\";\n    std::string delimiter37\
    \ = \".,?!\";\n    std::string delimiter38 = \".,?!\";\n    std::string delimiter39\
    \ = \".,?!\";\n    std::string delimiter40 = \".,?!\";\n    std::string delimiter41\
    \ = \".,?!\";\n    std::string delimiter42 = \".,?!\";\n    std::string delimiter43\
    \ = \".,?!\";\n    std::string delimiter44 = \".,?!\";\n    std::string delimiter45\
    \ = \".,\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1tns27_.cpp:59:31: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiter45 = \".,\n                         \
    \      ^\n/tmp/tmpr1tns27_.cpp:59:5: error: missing terminating \" character\n\
    \     std::string delimiter45 = \".,\n     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpr1tns27_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before "
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n\n}\nint main() {\n    auto candidate = is_bored;\n   \
    \ assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxe0jbf2x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpedj4i6ar.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    std::string word;\n\
    \    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!') {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nint main() {\n  \
    \  auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8d7j7iru.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string sentence;\n    std::string delimiter = \".?!\";\n   \
    \ size_t pos = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n \
    \   size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n \
    \   size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n \
    \   size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n \
    \   size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n \
    \   size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n \
    \   size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n \
    \   size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n \
    \   size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n \
    \   size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n \
    \   size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n \
    \   size_t Z = 0;\n    size_t a = 0;\n    size_t b = 0;\n    size_t c = 0;\n \
    \   size_t d = 0;\n    size_t e = 0;\n    size_t f = 0;\n    size_t g = 0;\n \
    \   size_t h = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n \
    \   size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n \
    \   size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n \
    \   size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n \
    \   size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n \
    \   size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n \
    \   size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n \
    \   size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n \
    \   size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n \
    \   size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n \
    \   size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n \
    \   size_t Z = 0;\n    size_t a = 0;\n    size_t \n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpki7rkuv_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long ans = 0;\n    std::string temp;\n\
    \    temp = S;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            ans += 1;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqur0bm_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpq9wfqbiv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplqz6aw0n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpq9wfqbiv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp56vag4ca.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbftyci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4\
    \ = \"!\";\n    std::string delimiter5 = \".\";\n    std::string delimiter6 =\
    \ \"?\";\n    std::string delimiter7 = \"!\";\n    std::string delimiter8 = \"\
    .\";\n    std::string delimiter9 = \"?\";\n    std::string delimiter10 = \"!\"\
    ;\n    std::string delimiter11 = \".\";\n    std::string delimiter12 = \"?\";\n\
    \    std::string delimiter13 = \"!\";\n    std::string delimiter14 = \".\";\n\
    \    std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n\
    \    std::string delimiter17 = \".\";\n    std::string delimiter18 = \"?\";\n\
    \    std::string delimiter19 = \"!\";\n    std::string delimiter20 = \".\";\n\
    \    std::string delimiter21 = \"?\";\n    std::string delimiter22 = \"!\";\n\
    \    std::string delimiter23 = \".\";\n    std::string delimiter24 = \"?\";\n\
    \    std::string delimiter25 = \"!\";\n    std::string delimiter26 = \".\";\n\
    \    std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n\
    \    std::string delimiter29 = \".\";\n    std::string delimiter30 = \"?\";\n\
    \    std::string delimiter31 = \"!\";\n    std::string delimiter32 = \".\";\n\
    \    std::string delimiter33 = \"?\";\n    std::string delimiter34 = \"!\";\n\
    \    std::string delimiter35 = \".\";\n    std::string delimiter36 = \"?\";\n\
    \    std::string delimiter37 = \"!\";\n    std::string delimiter38 = \".\";\n\
    \    std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n\
    \    std::string delimiter41 = \"!\";\n    std::string delimiter42 = \".\";\n\
    \    std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n\
    \    std::string delimiter45 = \".\";\n    std::string delimiter46 = \"?\";\n\
    \    std::string delimiter47 = \"!\";\n    std::string delimiter48 = \".\";\n\
    \    std::string delimiter49 = \"?\";\n    std::string delimiter50 = \"!\";\n\
    \    std::string delimiter51 = \"!\";\n    std::string delimiter52 = \".\";\n\
    \    std::string delimiter53 = \"?\";\n    std::string delimiter54 = \"!\";\n\
    \    std::string delimiter55 = \".\";\n    std::string delimiter56 = \"?\";\n\
    \    std::string delimiter57 = \"!\";\n    std::string delimiter58 = \".\";\n\
    \    std::string delimiter59 = \"?\";\n    std::string delimiter60 = \"!\";\n\
    \    std::string delimiter61 = \"!\";\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl9l1t0ze.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptlem85tz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptlem85tz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.') {\n\
    \            boredoms += 1;\n            word = S.substr(i, S.size() - i);\n \
    \           i = S.size() - 1;\n        }\n        else if(S[i] == '?') {\n   \
    \         boredoms += 1;\n            word = S.substr(i, S.size() - i);\n    \
    \        i = S.size() - 1;\n        }\n        else if(S[i] == '!') {\n      \
    \      boredoms += 1;\n            word = S.substr(i, S.size() - i);\n       \
    \     i = S.size() - 1;\n        }\n        else {\n            word = S[i];\n\
    \        }\n        if(word == \"I\") {\n            boredoms += 1;\n        }\n\
    \    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5ohxzvts.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        if (word.compare(0, 2, \"I\") == 0) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyldnd8tl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms += 1;\n        }\n        i += 1;\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp653zjqfq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = delimiters[0];\n\
    \    size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.size()) {\n   \
    \     pos = S.find(delimiter, pos);\n        if(pos == std::string::npos) {\n\
    \            word = S.substr(pos);\n            pos = S.size();\n        } else\
    \ {\n            word = S.substr(pos, pos-pos-1);\n            pos = pos + 1;\n\
    \        }\n        std::transform(word.begin(), word.end(), word.begin(), ::tolower);\n\
    \        if(word == \"i\") {\n            boredoms += 1;\n        }\n    }\n \
    \   return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpb9vvxzr5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n\n}\nint main() {\n    auto candidate = is_bored;\n   \
    \ assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxe0jbf2x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    for(int i =\
    \ 0; i < S.length(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredom++;\n        }\n    }\n    return boredom;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprpzbr5qb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string::size_type pos;\n\
    \    pos = S.find_first_of(delimiters);\n    while (pos != std::string::npos)\
    \ {\n        word = S.substr(0, pos);\n        if (word == \"I\") {\n        \
    \    boredoms += 1;\n        }\n        S = S.substr(pos + 1);\n        pos =\
    \ S.find_first_of(delimiters);\n    }\n    return boredoms;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0j_bob1p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptlem85tz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for (int i\
    \ = 0; i < S.size(); i++) {\n        if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    int main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyoqb7zqr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062086
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n\n}\nint main() {\n    auto candidate = is_bored;\n   \
    \ assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxe0jbf2x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ count = 0;\n    while(pos < S.size()) {\n        word = S.substr(pos, 1);\n\
    \        pos = 0;\n        for(size_t i = 0; i < delimiters.size(); i++) {\n \
    \           if(word.find(delimiters[i]) != std::string::npos) {\n            \
    \    pos = word.find(delimiters[i]);\n                break;\n            }\n\
    \        }\n        if(pos != std::string::npos) {\n            count++;\n   \
    \     }\n    }\n    boredoms = count;\n    return boredoms;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8rh4vyyv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    while(pos < S.size()) {\n        word = S.substr(pos, 1);\n    \
    \    pos = 0;\n        for(i = 0; i < delimiters.size(); i++) {\n            if(word.find(delimiters[i])\
    \ != std::string::npos) {\n                pos = word.find(delimiters[i]);\n \
    \               break;\n            }\n        }\n        if(pos != std::string::npos)\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprubjbtw2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.') {\n            i++;\n  \
    \          while (i < S.size() && S[i] != '.') {\n                i++;\n     \
    \       }\n            if (i == S.size()) {\n                boredom++;\n    \
    \        }\n        }\n        else if (S[i] == '?') {\n            i++;\n   \
    \         while (i < S.size() && S[i] != '?') {\n                i++;\n      \
    \      }\n            if (i == S.size()) {\n                boredom++;\n     \
    \       }\n        }\n        else if (S[i] == '!') {\n            i++;\n    \
    \        while (i < S.size() && S[i] != '!') {\n                i++;\n       \
    \     }\n            if (i == S.size()) {\n                boredom++;\n      \
    \      }\n        }\n        else {\n            i++;\n        }\n    }\n    return\
    \ boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjuy_mxje.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredom++;\n        }\n    }\n\
    \    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp561w164p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        for (size_t j = 0; j < delimiters.size();\
    \ j++) {\n            if (word.find(delimiters[j]) != std::string::npos) {\n \
    \               boredoms += 1;\n                break;\n            }\n      \
    \  }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv1y4vnug.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.length(); i++) {\n        if(S[i] ==\
    \ '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n        }\n  \
    \  }\n    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n \
    \   assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6y73esbw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2wf_hj5p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2wf_hj5p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == '.' ||\
    \ S[i] == '?' || S[i] == '!'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5r83mnfy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int count = 0;\n    for(int i = 0;\
    \ i < S.length(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpthvy87sj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size();\
    \ i++) {\n        word = S[i];\n        for (size_t j = 0; j < delimiters.size();\
    \ j++) {\n            if (word.find(delimiters[j]) != std::string::npos) {\n \
    \               boredoms += 1;\n                break;\n            }\n      \
    \  }\n    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv1y4vnug.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n \
    \       if (word == \"I\") {\n            boredoms += 1;\n        }\n    }\n \
    \   return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwjxx2lxw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062085
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \" .?!\";\n   \
    \ std::string delimiter2 = \" .?!\";\n    std::string delimiter3 = \" .?!\";\n\
    \    std::string delimiter4 = \" .?!\";\n    std::string delimiter5 = \" .?!\"\
    ;\n    std::string delimiter6 = \" .?!\";\n    std::string delimiter7 = \" .?!\"\
    ;\n    std::string delimiter8 = \" .?!\";\n    std::string delimiter9 = \" .?!\"\
    ;\n    std::string delimiter10 = \" .?!\";\n    std::string delimiter11 = \" .?!\"\
    ;\n    std::string delimiter12 = \" .?!\";\n    std::string delimiter13 = \" .?!\"\
    ;\n    std::string delimiter14 = \" .?!\";\n    std::string delimiter15 = \" .?!\"\
    ;\n    std::string delimiter16 = \" .?!\";\n    std::string delimiter17 = \" .?!\"\
    ;\n    std::string delimiter18 = \" .?!\";\n    std::string delimiter19 = \" .?!\"\
    ;\n    std::string delimiter20 = \" .?!\";\n    std::string delimiter21 = \" .?!\"\
    ;\n    std::string delimiter22 = \" .?!\";\n    std::string delimiter23 = \" .?!\"\
    ;\n    std::string delimiter24 = \" .?!\";\n    std::string delimiter25 = \" .?!\"\
    ;\n    std::string delimiter26 = \" .?!\";\n    std::string delimiter27 = \" .?!\"\
    ;\n    std::string delimiter28 = \" .?!\";\n    std::string delimiter29 = \" .?!\"\
    ;\n    std::string delimiter30 = \" .?!\";\n    std::string delimiter31 = \" .?!\"\
    ;\n    std::string delimiter32 = \" .?!\";\n    std::string delimiter33 = \" .?!\"\
    ;\n    std::string delimiter34 = \" .?!\";\n    std::string delimiter35 = \" .?!\"\
    ;\n    std::string delimiter36 = \" .?!\";\n    std::string delimiter37 = \" .?!\"\
    ;\n    std::string delimiter38 = \" .?!\";\n    std::string delimiter39 = \" .?!\"\
    ;\n    std::string delimiter40 = \" .?!\";\n    std::string delimiter41 = \" .?!\"\
    ;\n    std::string delimiter42 = \" .?!\";\n    std::string delimiter43 = \" .?!\"\
    ;\n    std::string delimiter44 = \" .?!\";\n    std::string delimiter45 = \" .?!\"\
    ;\n    std::string delimiter46 = \" .?!\";\n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn93xtyj4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_mixed\
    \ = \".?!\";\n    std::string delimiters_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_upper = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_\n\
    }\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello\
    \ world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptbp8bfjf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string sentence;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiters_lower = \"i.e\";\n    std::string\
    \ delimiters_upper = \"I.E\";\n    std::string delimiters_caps = \"I.E\";\n  \
    \  std::string delimiters_caps_lower = \"i.e\";\n    std::string delimiters_caps_upper\
    \ = \"I.E\";\n    std::string delimiters_caps_lower2 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper2 = \"I.E\";\n    std::string delimiters_caps_lower3 =\
    \ \"i.E\";\n    std::string delimiters_caps_upper3 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower4 = \"i.E\";\n    std::string delimiters_caps_upper4 =\
    \ \"I.E\";\n    std::string delimiters_caps_lower5 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper5 = \"I.E\";\n    std::string delimiters_caps_lower6 =\
    \ \"i.E\";\n    std::string delimiters_caps_upper6 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower7 = \"i.E\";\n    std::string delimiters_caps_upper7 =\
    \ \"I.E\";\n    std::string delimiters_caps_lower8 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper8 = \"I.E\";\n    std::string delimiters_caps_lower9 =\
    \ \"i.E\";\n    std::string delimiters_caps_upper9 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower10 = \"i.E\";\n    std::string delimiters_caps_upper10\
    \ = \"I.E\";\n    std::string delimiters_caps_lower11 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper11 = \"I.E\";\n    std::string delimiters_caps_lower12\
    \ = \"i.E\";\n    std::string delimiters_caps_upper12 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower13 = \"i.E\";\n    std::string delimiters_caps_upper13\
    \ = \"I.E\";\n    std::string delimiters_caps_lower14 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper14 = \"I.E\";\n    std::string delimiters_caps_lower15\
    \ = \"i.E\";\n    std::string delimiters_caps_upper15 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower16 = \"i.E\";\n    std::string delimiters_caps_upper16\
    \ = \"I.E\";\n    std::string delimiters_caps_lower17 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper17 = \"I.E\";\n    std::string delimiters_caps_lower18\
    \ = \"\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewx5a2rb.cpp:54:43: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiters_caps_lower18 = \"\n               \
    \                            ^\n/tmp/tmpewx5a2rb.cpp:54:5: error: missing terminating\
    \ \" character\n     std::string delimiters_caps_lower18 = \"\n     ^\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpewx5a2rb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: exp"
  stdout: ''
  timestamp: 1660062087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while(i < S.size()) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n            i++;\n        } else {\n            i++;\n\
    \        }\n    }\n    return boredom;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcsbdszwn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1660062084

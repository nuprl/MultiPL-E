language: cpp
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \" .?!\";\n    std::string delimiter2 = \"\
    \ .?!\";\n    std::string delimiter3 = \" .?!\";\n    std::string delimiter4 =\
    \ \" .?!\";\n    std::string delimiter5 = \" .?!\";\n    std::string delimiter6\
    \ = \" .?!\";\n    std::string delimiter7 = \" .?!\";\n    std::string delimiter8\
    \ = \" .?!\";\n    std::string delimiter9 = \" .?!\";\n    std::string delimiter10\
    \ = \" .?!\";\n    std::string delimiter11 = \" .?!\";\n    std::string delimiter12\
    \ = \" .?!\";\n    std::string delimiter13 = \" .?!\";\n    std::string delimiter14\
    \ = \" .?!\";\n    std::string delimiter15 = \" .?!\";\n    std::string delimiter16\
    \ = \" .?!\";\n    std::string delimiter17 = \" .?!\";\n    std::string delimiter18\
    \ = \" .?!\";\n    std::string delimiter19 = \" .?!\";\n    std::string delimiter20\
    \ = \" .?!\";\n    std::string delimiter21 = \" .?!\";\n    std::string delimiter22\
    \ = \" .?!\";\n    std::string delimiter23 = \" .?!\";\n    std::string delimiter24\
    \ = \" .?!\";\n    std::string delimiter25 = \" .?!\";\n    std::string delimiter26\
    \ = \" .?!\";\n    std::string delimiter27 = \" .?!\";\n    std::string delimiter28\
    \ = \" .?!\";\n    std::string delimiter29 = \" .?!\";\n    std::string delimiter30\
    \ = \" .?!\";\n    std::string delimiter31 = \" .?!\";\n    std::string delimiter32\
    \ = \" .?!\";\n    std::string delimiter33 = \" .?!\";\n    std::string delimiter34\
    \ = \" .?!\";\n    std::string delimiter35 = \" .?!\";\n    std::string delimiter36\
    \ = \" .?!\";\n    std::string delimiter37 = \" .?!\";\n    std::string delimiter38\
    \ = \" .?!\";\n    std::string delimiter39 = \" .?!\";\n    std::string delimiter40\
    \ = \" .?!\";\n    std::string delimiter41 = \" .?!\";\n    std::string delimiter42\
    \ = \" .?!\";\n    std::string delimiter43 = \" .?!\";\n    std::string delimiter44\
    \ = \" .?!\";\n    std::string delimiter45 = \" .?!\";\n    std::string delimiter46\
    \ = \" .?!\";\n    std::string delimiter47 = \" \n}\nint main() {\n    auto candidate\
    \ = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxnt2s88k.cpp:60:31: warning: missing terminating \" character [enabled\
    \ by default]\n     std::string delimiter47 = \" \n                          \
    \     ^\n/tmp/tmpxnt2s88k.cpp:60:5: error: missing terminating \" character\n\
    \     std::string delimiter47 = \" \n     ^\n/tmp/tmpxnt2s88k.cpp: In function\
    \ 'long int is_bored(std::string)':\n/tmp/tmpxnt2s88k.cpp:61:1: error: expected\
    \ primary-expression before '}' token\n }\n ^\n/tmp/tmpxnt2s88k.cpp:61:1: error:\
    \ expected ',' or ';' before '}' token\n/tmp/tmpxnt2s88k.cpp: In function 'int\
    \ main()':\n/tmp/tmpxnt2s88k.cpp:63:10: error: 'candidate' does not name a type\n\
    \     auto candidate = is_bored;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxnt2s88k.cpp:2:\n/tmp/tmpxnt2s88k.cpp:64:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++) {\n        word = S[i];\n     \
    \   if(word == \"I\") {\n            boredoms++;\n        }\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcqky53ze.cpp: In function 'int main()':\n/tmp/tmpcqky53ze.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcqky53ze.cpp:2:\n/tmp/tmpcqky53ze.cpp:24:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphvwe5t2d.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmphvwe5t2d.cpp:14:16:\
    \ error: ISO C++ forbids declaration of 'c' with no type [-fpermissive]\n    \
    \ for (auto &c : S) {\n                ^\n/tmp/tmphvwe5t2d.cpp:14:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &c : S) {\n      \
    \              ^\n/tmp/tmphvwe5t2d.cpp: In function 'int main()':\n/tmp/tmphvwe5t2d.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphvwe5t2d.cpp:2:\n/tmp/tmphvwe5t2d.cpp:23:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.') {\n            boredom++;\n\
    \        }\n        if (S[i] == '?') {\n            boredom++;\n        }\n  \
    \      if (S[i] == '!') {\n            boredom++;\n        }\n        i++;\n \
    \   }\n    return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_jxk422v.cpp: In function 'int main()':\n/tmp/tmp_jxk422v.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_jxk422v.cpp:2:\n/tmp/tmp_jxk422v.cpp:30:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long ans = 0;\n    for(int i = 0;\
    \ i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            ans += 1;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaa96utid.cpp: In function 'int main()':\n/tmp/tmpaa96utid.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaa96utid.cpp:2:\n/tmp/tmpaa96utid.cpp:22:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string delimiter2 = \" \";\n    std::string delimiter3 = \" \"\
    ;\n    std::string delimiter4 = \" \";\n    std::string delimiter5 = \" \";\n\
    \    std::string delimiter6 = \" \";\n    std::string delimiter7 = \" \";\n  \
    \  std::string delimiter8 = \" \";\n    std::string delimiter9 = \" \";\n    std::string\
    \ delimiter10 = \" \";\n    std::string delimiter11 = \" \";\n    std::string\
    \ delimiter12 = \" \";\n    std::string delimiter13 = \" \";\n    std::string\
    \ delimiter14 = \" \";\n    std::string delimiter15 = \" \";\n    std::string\
    \ delimiter16 = \" \";\n    std::string delimiter17 = \" \";\n    std::string\
    \ delimiter18 = \" \";\n    std::string delimiter19 = \" \";\n    std::string\
    \ delimiter20 = \" \";\n    std::string delimiter21 = \" \";\n    std::string\
    \ delimiter22 = \" \";\n    std::string delimiter23 = \" \";\n    std::string\
    \ delimiter24 = \" \";\n    std::string delimiter25 = \" \";\n    std::string\
    \ delimiter26 = \" \";\n    std::string delimiter27 = \" \";\n    std::string\
    \ delimiter28 = \" \";\n    std::string delimiter29 = \" \";\n    std::string\
    \ delimiter30 = \" \";\n    std::string delimiter31 = \" \";\n    std::string\
    \ delimiter32 = \" \";\n    std::string delimiter33 = \" \";\n    std::string\
    \ delimiter34 = \" \";\n    std::string delimiter35 = \" \";\n    std::string\
    \ delimiter36 = \" \";\n    std::string delimiter37 = \" \";\n    std::string\
    \ delimiter38 = \" \";\n    std::string delimiter39 = \" \";\n    std::string\
    \ delimiter40 = \" \";\n    std::string delimiter41 = \" \";\n    std::string\
    \ delimiter42 = \" \";\n    std::string delimiter43 = \" \";\n    std::string\
    \ delimiter44 = \" \";\n    std::string delimiter45 = \" \";\n    std::string\
    \ delimiter46 = \" \";\n    std::string delimiter47 = \" \";\n    std::string\
    \ delimiter48 = \" \";\n    std::string delimiter49 = \" \";\n    std::string\
    \ delimiter50 = \" \";\n    std::string delimiter51 = \" \";\n    std::string\
    \ delimiter52 = \" \";\n    std::string delimiter53 = \" \";\n    std::string\
    \ delimiter54 = \" \";\n    std::string delimiter55 = \" \";\n    std::string\
    \ delimiter56 = \" \";\n    std::string delimiter57 = \" \";\n    std::string\
    \ delimiter58 = \" \";\n    std::string delimiter59 = \" \";\n    std::string\
    \ delimiter60 = \" \";\n    std::string delimiter61 = \" \";\n    std::string\
    \ delimiter62 = \" \";\n    std::string delimiter63 = \" \";\n}\nint main() {\n\
    \    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n\
    \    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7li8xn2k.cpp: In function 'int main()':\n/tmp/tmp7li8xn2k.cpp:80:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7li8xn2k.cpp:2:\n/tmp/tmp7li8xn2k.cpp:81:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpafl9xc2l.cpp: In function 'int main()':\n/tmp/tmpafl9xc2l.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpafl9xc2l.cpp:2:\n/tmp/tmpafl9xc2l.cpp:22:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms += 1;\n        }\n        else {\n            word =\
    \ word + c;\n        }\n    }\n    if (word == \"I\") {\n        boredoms += 1;\n\
    \    }\n    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkaqkvldi.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmpkaqkvldi.cpp:14:16:\
    \ error: ISO C++ forbids declaration of 'c' with no type [-fpermissive]\n    \
    \ for (auto &c : S) {\n                ^\n/tmp/tmpkaqkvldi.cpp:14:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &c : S) {\n      \
    \              ^\n/tmp/tmpkaqkvldi.cpp:19:25: error: no match for 'operator+'\
    \ (operand types are 'std::string {aka std::basic_string<char>}' and 'int')\n\
    \             word = word + c;\n                         ^\n/tmp/tmpkaqkvldi.cpp:19:25:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmpkaqkvldi.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const _Tp&, const std::valarray<_Tp>&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpkaqkvldi.cpp:19:27: note:   mismatched\
    \ types 'const std::valarray<_Tp>' and 'int'\n             word = word + c;\n\
    \                           ^\nIn file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmpkaqkvldi.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const _Tp&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpkaqkvldi.cpp:19:27: note:   'std::string\
    \ {aka std::basic_string<char>}' is not derived from 'const std::valarray<_Tp>'\n\
    \             word = word + c;\n                           ^\nIn file included\
    \ from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n  "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy66w3mbk.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmpy66w3mbk.cpp:14:16:\
    \ error: ISO C++ forbids declaration of 'i' with no type [-fpermissive]\n    \
    \ for (auto &i : S) {\n                ^\n/tmp/tmpy66w3mbk.cpp:14:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &i : S) {\n      \
    \              ^\n/tmp/tmpy66w3mbk.cpp: In function 'int main()':\n/tmp/tmpy66w3mbk.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy66w3mbk.cpp:2:\n/tmp/tmpy66w3mbk.cpp:23:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk5f58_vo.cpp: In function 'int main()':\n/tmp/tmpk5f58_vo.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk5f58_vo.cpp:2:\n/tmp/tmpk5f58_vo.cpp:23:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \". ? !\";\n    std::string::size_type pos;\n\
    \    for (pos = 0; (pos = S.find_first_of(delimiters, pos)) != std::string::npos;\
    \ pos++) {\n        word = S.substr(0, pos);\n        if (word == \"I\") {\n \
    \           boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp294esz3i.cpp: In function 'int main()':\n/tmp/tmp294esz3i.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp294esz3i.cpp:2:\n/tmp/tmp294esz3i.cpp:26:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n\n}\nint main() {\n    auto candidate = is_bored;\n   \
    \ assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is the\
    \ sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n \
    \   assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd__oypot.cpp: In function 'int main()':\n/tmp/tmpd__oypot.cpp:103:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd__oypot.cpp:2:\n/tmp/tmpd__oypot.cpp:104:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long count = 0;\n    for(int i = 0;\
    \ i < S.size(); i++){\n        if(S[i] == 'I'){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\nint main() {\n    auto candidate = is_bored;\n\
    \    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"Is\
    \ the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1acqlbs7.cpp: In function 'int main()':\n/tmp/tmp1acqlbs7.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1acqlbs7.cpp:2:\n/tmp/tmp1acqlbs7.cpp:22:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n        }\n    }\n    return boredom;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyhlgji3l.cpp: In function 'int main()':\n/tmp/tmpyhlgji3l.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyhlgji3l.cpp:2:\n/tmp/tmpyhlgji3l.cpp:22:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    std::string sentence;\n    std::stringstream\
    \ ss;\n    ss << S;\n    while(std::getline(ss, sentence, '.')) {\n        std::istringstream\
    \ iss(sentence);\n        while(std::getline(iss, word, '.')) {\n            if(word\
    \ == \"I\") {\n                boredom++;\n            }\n        }\n    }\n \
    \   return boredom;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz6stmvm_.cpp: In function 'int main()':\n/tmp/tmpz6stmvm_.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz6stmvm_.cpp:2:\n/tmp/tmpz6stmvm_.cpp:30:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    std::string\
    \ word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!')\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\nint main()\
    \ {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\")) ==\
    \ (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnsw26n6o.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmpnsw26n6o.cpp:14:16:\
    \ error: ISO C++ forbids declaration of 'c' with no type [-fpermissive]\n    \
    \ for (auto &c : S) {\n                ^\n/tmp/tmpnsw26n6o.cpp:14:20: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (auto &c : S) {\n      \
    \              ^\n/tmp/tmpnsw26n6o.cpp: In function 'int main()':\n/tmp/tmpnsw26n6o.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnsw26n6o.cpp:2:\n/tmp/tmpnsw26n6o.cpp:23:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\nint\
    \ main() {\n    auto candidate = is_bored;\n    assert(candidate((\"Hello world\"\
    )) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n    assert(candidate((\"\
    I love It !\")) == (1));\n    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"\
    I feel good today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps4r5iosz.cpp: In function 'int main()':\n/tmp/tmps4r5iosz.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmps4r5iosz.cpp:2:\n/tmp/tmps4r5iosz.cpp:22:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredoms = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n        i++;\n    }\n    return\
    \ boredoms;\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1thf9p4_.cpp: In function 'int main()':\n/tmp/tmp1thf9p4_.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1thf9p4_.cpp:2:\n/tmp/tmp1thf9p4_.cpp:24:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_\n}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
    Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
    \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
    )) == (0));\n    assert(candidate((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2));\n    assert(candidate((\"You and I are going for a\
    \ walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_19tq7ol.cpp: In function 'long int is_bored(std::string)':\n/tmp/tmp_19tq7ol.cpp:72:1:\
    \ error: expected initializer before '}' token\n }\n ^\n/tmp/tmp_19tq7ol.cpp:\
    \ In function 'int main()':\n/tmp/tmp_19tq7ol.cpp:74:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = is_bored;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_19tq7ol.cpp:2:\n/tmp/tmp_19tq7ol.cpp:75:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
    \ of words, and your task is to count the number\n// of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
    \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n//\
    \ >>> is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n\
    // (1)\nlong is_bored(std::string S) {\n    int boredom = 0;\n    int i = 0;\n\
    \    while(i < S.size()) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            boredom++;\n            i++;\n        } else {\n            i++;\n\
    \        }\n    }\n    return boredom;\n}\nint main() {\n    auto candidate =\
    \ is_bored;\n    assert(candidate((\"Hello world\")) == (0));\n    assert(candidate((\"\
    Is the sky blue?\")) == (0));\n    assert(candidate((\"I love It !\")) == (1));\n\
    \    assert(candidate((\"bIt\")) == (0));\n    assert(candidate((\"I feel good\
    \ today. I will be productive. will kill It\")) == (2));\n    assert(candidate((\"\
    You and I are going for a walk\")) == (0));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9u1xcdje.cpp: In function 'int main()':\n/tmp/tmp9u1xcdje.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_bored;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9u1xcdje.cpp:2:\n/tmp/tmp9u1xcdje.cpp:26:37: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Hello world\"\
    )) == (0));\n                                     ^\n"
  stdout: ''

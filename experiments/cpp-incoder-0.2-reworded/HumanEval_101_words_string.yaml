name: HumanEval_101_words_string
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
  \ of words separated by commas or spaces. Your task is\n// to split the string into\
  \ words and return a vector of the words.\n// For example:\n// >>> words_string((\"\
  Hi, my name is John\"))\n// (std::vector<std::string>({(std::string)\"Hi\", (std::string)\"\
  my\", (std::string)\"name\", (std::string)\"is\", (std::string)\"John\"}))\n// >>>\
  \ words_string((\"One, two, three, four, five, six\"))\n// (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"}))\nstd::vector<std::string> words_string(std::string\
  \ s) {\n"
tests: "}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
  Hi, my name is John\")) == (std::vector<std::string>({(std::string)\"Hi\", (std::string)\"\
  my\", (std::string)\"name\", (std::string)\"is\", (std::string)\"John\"})));\n \
  \   assert(candidate((\"One, two, three, four, five, six\")) == (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({(std::string)\"\
  Hi\", (std::string)\"my\", (std::string)\"name\"})));\n    assert(candidate((\"\
  One,, two, three, four, five, six,\")) == (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
  \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({(std::string)\"\
  ahmed\", (std::string)\"gamal\"})));\n}\n"
completions: ["    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n  \
    \  while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n  \
    \  }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        word = item;\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> result;\n    std::string word;\n   \
    \ std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n      \
    \  result.push_back(word);\n    }\n    return result;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(0, i);\n      words.push_back(word);\n\
    \    } else {\n      word = s.substr(i, i + 1);\n      words.push_back(word);\n\
    \    }\n  }\n  return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string item;\n    while (std::getline(ss, item, ',')) {\n \
    \       result.push_back(item);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (iss >> word) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.length(); i++) {\n    if (s[i] == ',' || s[i] == ' ') {\n      words.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ',' || s[i] ==\
    \ ' ') {\n      words.push_back(word);\n      word.clear();\n    } else {\n  \
    \    word += s[i];\n    }\n  }\n  words.push_back(word);\n  return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (auto c : s) {\n    if (c == ',' || c ==\
    \ ' ') {\n      words.push_back(word);\n      word.clear();\n    } else {\n  \
    \    word += c;\n    }\n  }\n  words.push_back(word);\n  return words;", "   \
    \ std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(i, s.size());\n     \
    \ words.push_back(word);\n    } else {\n      word = s.substr(i, 2);\n      words.push_back(word);\n\
    \    }\n  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(0, i);\n      words.push_back(word);\n\
    \    } else {\n      word = s.substr(i, i + 1);\n      words.push_back(word);\n\
    \    }\n  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(i, 1);\n      words.push_back(word);\n\
    \    } else {\n      word = s.substr(i, 2);\n      words.push_back(word);\n  \
    \  }\n  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> result;\n  std::string\
    \ word;\n  for (auto i : s) {\n    if (i == ',' || i == ' ') {\n      result.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += i;\n    }\n  }\n  result.push_back(word);\n\
    \  return result;", "  std::vector<std::string> words;\n  std::string word;\n\
    \  std::istringstream iss(s);\n  while (std::getline(iss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(0, i);\n      words.push_back(word);\n\
    \    } else {\n      word = s.substr(i, i + 1);\n      words.push_back(word);\n\
    \    }\n  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(i, s.size());\n     \
    \ words.push_back(word);\n    } else {\n      word = s.substr(i, 2);\n      words.push_back(word);\n\
    \    }\n  }\n  return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (auto c : s) {\n    if (c == ',' || c == ' ') {\n      if (word.size()\
    \ > 0) {\n        words.push_back(word);\n        word.clear();\n      }\n   \
    \ } else {\n      word += c;\n    }\n  }\n  if (word.size() > 0) {\n    words.push_back(word);\n\
    \  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ result;\n  std::string word;\n  for (auto it = s.begin(); it != s.end(); ++it)\
    \ {\n    if (it != s.begin()) {\n      word = *it;\n    }\n    if (it == s.begin())\
    \ {\n      result.push_back(word);\n      continue;\n    }\n    if (it == s.end())\
    \ {\n      result.push_back(word);\n      continue;\n    }\n    if (it != s.begin()\
    \ && it != s.end()) {\n      result.push_back(word);\n      continue;\n    }\n\
    \  }\n  return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.size(); i++) {\n    if (s[i] == ',' || s[i] == ' ') {\n      if (word.size()\
    \ > 0) {\n        words.push_back(word);\n        word.clear();\n      }\n   \
    \ } else {\n      word += s[i];\n    }\n  }\n  if (word.size() > 0) {\n    words.push_back(word);\n\
    \  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        result.push_back(word);\n    }\n    return result;", "  std::vector<std::string>\
    \ result;\n  std::string word;\n  for (auto i : s) {\n    if (i == ',' || i ==\
    \ ' ') {\n      result.push_back(word);\n      word.clear();\n    } else {\n \
    \     word += i;\n    }\n  }\n  result.push_back(word);\n  return result;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.size(); i++) {\n    if (i == 0 || i == s.size() - 1) {\n      word = s.substr(i,\
    \ s.size());\n      words.push_back(word);\n    } else {\n      word = s.substr(i,\
    \ 2);\n      words.push_back(word);\n    }\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  std::istringstream iss(s);\n  while (std::getline(iss, word, ','))\
    \ {\n    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ std::string item;\n    while (std::getline(ss, item, ',')) {\n        word =\
    \ item;\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        result.push_back(item);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  std::stringstream ss;\n\
    \  ss.str(s);\n  while (std::getline(ss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;", "  std::vector<std::string> words;\n  std::string word;\n\
    \  std::string delimiter = \",\";\n  std::stringstream ss(s);\n  while (std::getline(ss,\
    \ word, delimiter)) {\n    words.push_back(word);\n  }\n  return words;", "  \
    \  std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (auto c : s) {\n    if (c == ',' || c == ' ') {\n      words.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += c;\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(0, i);\n      words.push_back(word);\n\
    \    } else {\n      word = s.substr(i, i + 1);\n      words.push_back(word);\n\
    \    }\n  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n\
    \    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> result;\n  std::string word;\n  for (auto it = s.begin();\
    \ it != s.end(); ++it) {\n    if (it != s.begin()) {\n      word = \",\";\n  \
    \  }\n    word += *it;\n  }\n  result.push_back(word);\n  return result;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.length(); i++) {\n    if (s[i] == ',' || s[i] == ' ') {\n      words.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> result;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n  \
    \  while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n  \
    \  }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(i, 1);\n      words.push_back(word);\n\
    \    } else {\n      word = s.substr(i, 2);\n      words.push_back(word);\n  \
    \  }\n  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n\
    \    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (i == 0 || i == s.size() - 1) {\n      word = s.substr(0, i);\n      words.push_back(word);\n\
    \    } else {\n      word = s.substr(i, i + 1);\n      words.push_back(word);\n\
    \    }\n  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.length(); i++) {\n    if (s[i] == ',' || s[i] == ' ') {\n      words.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "  std::vector<std::string> result;\n  std::string word;\n\
    \  std::string delimiter = \",\";\n  std::size_t pos = 0;\n  while (pos < s.size())\
    \ {\n    pos = s.find(delimiter, pos);\n    if (pos == std::string::npos) {\n\
    \      word = s.substr(pos);\n      result.push_back(word);\n      pos = s.size();\n\
    \    } else {\n      word = s.substr(pos, pos - pos + 1);\n      result.push_back(word);\n\
    \      pos = s.find(delimiter, pos + 1);\n    }\n  }\n  return result;", "   \
    \ std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "  std::vector<std::string> result;\n  std::string\
    \ word;\n  for (auto i : s) {\n    if (i == ',' || i == ' ') {\n      if (word\
    \ != \"\") {\n        result.push_back(word);\n        word.clear();\n      }\n\
    \    } else {\n      word += i;\n    }\n  }\n  if (word != \"\") {\n    result.push_back(word);\n\
    \  }\n  return result;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "  std::vector<std::string> words;\n  std::string word;\n\
    \  for (auto c : s) {\n    if (c == ',' || c == ' ') {\n      words.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += c;\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "  std::vector<std::string> words;\n  std::string word;\n \
    \ std::istringstream iss(s);\n  while (std::getline(iss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ',' || s[i]\
    \ == ' ') {\n      if (word.length() > 0) {\n        words.push_back(word);\n\
    \        word.clear();\n      }\n    } else {\n      word += s[i];\n    }\n  }\n\
    \  if (word.length() > 0) {\n    words.push_back(word);\n  }\n  return words;",
  "    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string item;\n    while (std::getline(ss, item, ',')) {\n \
    \       result.push_back(item);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::istringstream iss(s);\n    while (std::getline(iss, word, ',')) {\n\
    \        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> result;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     result.push_back(word);\n    }\n    return result;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  std::stringstream ss;\n  ss.str(s);\n  while\
    \ (std::getline(ss, word, ',')) {\n    words.push_back(word);\n  }\n  return words;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n  \
    \  while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n  \
    \  }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;"]
stop_tokens:
- "\n}"

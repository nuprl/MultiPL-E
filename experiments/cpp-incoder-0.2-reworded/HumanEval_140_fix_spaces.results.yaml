language: cpp
name: HumanEval_140_fix_spaces
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while ((pos\
    \ = fixed_text.find(\"  \", pos)) != std::string::npos) {\n        fixed_text.replace(pos,\
    \ 2, \"_\");\n        pos += 2;\n    }\n    return fixed_text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpsqsxz5e1: /tmp/tmpsqsxz5e1.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        pos =\
    \ 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos) {\n\
    \            result.replace(pos, 1, std::string(\"-\"));\n            pos += 1;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpg4hp6e4k: /tmp/tmpg4hp6e4k.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    std::replace(result.begin(), result.end(),\
    \ ' ', '_');\n    if (result.size() > 2) {\n        std::replace(result.begin(),\
    \ result.end(), ' ', '_');\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpmx8akq7_: /tmp/tmpmx8akq7_.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    if (res.size() > 2) {\n        std::replace(std::begin(res),\
    \ std::end(res), ' ', '-');\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpr304jyol: /tmp/tmpr304jyol.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), ' ', '_');\n    if (s.size() > 2) {\n  \
    \      std::replace(s.begin(), s.end(), ' ', '_');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpjtx7vvdm: /tmp/tmpjtx7vvdm.cpp:28: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    if (s.size() > 2) {\n  \
    \      std::replace(s.begin(), s.end(), '_', '-');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpur4kgsyj: /tmp/tmpur4kgsyj.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find_first_not_of(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    -\"));\n        pos += 1;\n    }\n    while ((pos = result.find_first_of(\" \"\
    , pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw566tm4e: /tmp/tmpw566tm4e.cpp:29: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while ((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res = res.substr(0, pos) + \"_\"\
    \ + res.substr(pos + 1);\n        ++pos;\n    }\n    if (res.size() > 2) {\n \
    \       pos = 0;\n        while ((pos = res.find(\" \", pos)) != std::string::npos)\
    \ {\n            res = res.substr(0, pos) + \"-\" + res.substr(pos + 1);\n   \
    \         ++pos;\n        }\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpncnjzb91: /tmp/tmpncnjzb91.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        size_t\
    \ pos = 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos)\
    \ {\n            result.replace(pos, 1, std::string(\"-\"));\n            pos\
    \ += 1;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpzm5dfniq: /tmp/tmpzm5dfniq.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw2amj06n: /tmp/tmpw2amj06n.cpp:23: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    std::replace(result.begin(), result.end(),\
    \ ' ', '_');\n    if (result.find_first_not_of(' ') != std::string::npos) {\n\
    \        std::replace(result.begin(), result.end(), ' ', '-');\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpeulm841w: /tmp/tmpeulm841w.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        s.replace(s.begin(),\
    \ s.begin() + 2, \"\");\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpupgj70l3: /tmp/tmpupgj70l3.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), ' ', '_');\n    std::replace(s.begin(),\
    \ s.end(), ' ', '_');\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp9os8yhww: /tmp/tmp9os8yhww.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while ((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (res.size() > 2) {\n        res.replace(pos,\
    \ res.size() - 2, std::string(\"_\"));\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::replace: __pos (which is 18446744073709551615) > this->size()\
    \ (which is 7)\n"
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while ((pos\
    \ = fixed_text.find(\"  \", pos)) != std::string::npos) {\n        fixed_text.replace(pos,\
    \ 2, \" _\");\n        pos += 2;\n    }\n    return fixed_text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_q64nx8h: /tmp/tmp_q64nx8h.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    \n    // Replace all spaces with\
    \ underscores\n    size_t pos = 0;\n    while((pos = fixed_text.find(\" \", pos))\
    \ != std::string::npos) {\n        fixed_text.replace(pos, 1, std::string(\"_\"\
    ));\n        pos += 1;\n    }\n    \n    // If there are more than 2 consecutive\
    \ spaces, replace all consecutive spaces with -\n    size_t pos2 = fixed_text.find(\"\
    \ \", pos);\n    while(pos2 != std::string::npos) {\n        if(pos2 - pos > 1)\
    \ {\n            fixed_text.replace(pos2, pos2 - pos, std::string(\"-\"));\n \
    \       }\n        pos2 = fixed_text.find(\" \", pos2 + 1);\n    }\n    \n   \
    \ return fixed_text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp8xqcarsq: /tmp/tmp8xqcarsq.cpp:40: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while ((pos\
    \ = fixed_text.find(\"  \", pos)) != std::string::npos) {\n        fixed_text.replace(pos,\
    \ 2, \"_\");\n        pos += 2;\n    }\n    return fixed_text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpsqsxz5e1: /tmp/tmpsqsxz5e1.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while (pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if (pos == std::string::npos)\
    \ {\n            break;\n        }\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find_first_not_of(\" \", pos + 1);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpfv3zgb91: /tmp/tmpfv3zgb91.cpp:29: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while ((pos\
    \ = fixed_text.find(' ', pos)) != std::string::npos) {\n        fixed_text.replace(pos,\
    \ 1, \" _\");\n        pos += 1;\n    }\n    if (fixed_text.size() > 2) {\n  \
    \      size_t pos = 0;\n        while ((pos = fixed_text.find(' ', pos)) != std::string::npos)\
    \ {\n            fixed_text.replace(pos, 1, \" -\");\n            pos += 1;\n\
    \        }\n    }\n    return fixed_text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw_dh6odm: /tmp/tmpw_dh6odm.cpp:33: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::replace(text.begin(), text.end(), ' ', '_');\n    std::string::size_type\
    \ pos = 0;\n    std::string::size_type prev = 0;\n    std::string::size_type next\
    \ = 0;\n    std::string::size_type count = 0;\n    while (pos < text.size()) {\n\
    \        next = text.find_first_of(' ', pos);\n        if (next == std::string::npos)\
    \ {\n            next = text.size();\n        }\n        prev = pos;\n       \
    \ pos = next;\n        if (pos - prev > 1) {\n            while (pos < text.size())\
    \ {\n                next = text.find_first_of(' ', pos);\n                if\
    \ (next == std::string::npos) {\n                    next = text.size();\n   \
    \             }\n                text[pos] = '-';\n                pos = next;\n\
    \            }\n            while (pos < text.size()) {\n                next\
    \ = text.find_first_of(' ', pos);\n                if (next == std::string::npos)\
    \ {\n                    next = text.size();\n                }\n            \
    \    text[pos] = '_';\n                pos = next;\n            }\n        }\n\
    \    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpqiji8hz3: /tmp/tmpqiji8hz3.cpp:53: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_eikkl24: /tmp/tmp_eikkl24.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, pos = 0;\n    while (pos < s.size()) {\n        pos = s.find_first_not_of(\"\
    \ \", prev);\n        if (pos == std::string::npos) {\n            break;\n  \
    \      }\n        s.replace(pos, 1, std::string(\"-\"));\n        prev = pos +\
    \ 1;\n    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzuhjpara.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpzuhjpara.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzuhjpara.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    if (res.size() > 2) {\n        std::replace(std::begin(res),\
    \ std::end(res), ' ', '-');\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpr304jyol: /tmp/tmpr304jyol.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (pos < result.length())\
    \ {\n        result.replace(pos, 1, std::string(\"-\"));\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpkkmy0aso: /tmp/tmpkkmy0aso.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    \ _\"));\n        pos += 2;\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpskewqt5k: /tmp/tmpskewqt5k.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while(pos < s.size())\
    \ {\n        size_t next = s.find_first_not_of(\" \", pos);\n        if(next ==\
    \ std::string::npos) {\n            next = s.size();\n        }\n        s.replace(pos,\
    \ next - pos, \"_\");\n        pos = next + 1;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '-');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpyq_9bsat: /tmp/tmpyq_9bsat.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, next = 0, count = 0;\n    while (next < s.size()) {\n        if (s[next]\
    \ == ' ') {\n            count++;\n            if (count == 2) {\n           \
    \     s[prev] = '_';\n                s[next] = '-';\n                prev = next\
    \ + 1;\n                count = 0;\n            }\n        } else {\n        \
    \    count = 0;\n        }\n        next++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmqjnjr91.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpmqjnjr91.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpmqjnjr91.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ pos = 0;\n    while (pos < s.size() && s[pos] == ' ') {\n        ++pos;\n  \
    \  }\n    if (pos == s.size()) {\n        return text;\n    }\n    size_t prev\
    \ = pos;\n    while (pos < s.size() && s[pos] == ' ') {\n        ++pos;\n    }\n\
    \    if (pos == s.size()) {\n        return text;\n    }\n    size_t next = pos;\n\
    \    while (next < s.size() && s[next] == ' ') {\n        ++next;\n    }\n   \
    \ if (next == s.size()) {\n        return text;\n    }\n    s.replace(prev, next,\
    \ ' ');\n    s.replace(pos, s.size(), '_');\n    return s;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkfw7af6v.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpkfw7af6v.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkfw7af6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (pos < result.length())\
    \ {\n        result.replace(pos, 1, std::string(\"-\"));\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpkkmy0aso: /tmp/tmpkkmy0aso.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '-');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpyq_9bsat: /tmp/tmpyq_9bsat.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::size_t found = res.find_first_not_of(\"\
    \ \");\n    while (found != std::string::npos) {\n        res = res.substr(0,\
    \ found) + std::to_string(std::distance(text.begin(), found)) + res.substr(found\
    \ + 1);\n        found = res.find_first_not_of(\" \", found + 1);\n    }\n   \
    \ return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp85d35snz.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp85d35snz.cpp:18:86: error: no matching function for call to \u2018\
    distance(std::__cxx11::basic_string<char>::iterator, std::size_t&)\u2019\n   18\
    \ |         res = res.substr(0, found) + std::to_string(std::distance(text.begin(),\
    \ found)) + res.substr(found + 1);\n      |                                  \
    \                                                    ^\nIn file included from\
    \ /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:66,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp85d35snz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator_base_funcs.h:138:5:\
    \ note: candidate: \u2018template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type\
    \ std::distance(_InputIterator, _InputIterator)\u2019\n  138 |     distance(_InputIterator\
    \ __first, _InputIterator __last)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator_base_funcs.h:138:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp85d35snz.cpp:18:86:\
    \ note:   deduced conflicting types for parameter \u2018_InputIterator\u2019 (\u2018\
    __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >\u2019 and\
    \ \u2018long unsigned int\u2019)\n   18 |         res = res.substr(0, found) +\
    \ std::to_string(std::distance(text.begin(), found)) + res.substr(found + 1);\n\
    \      |                                          "
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \        std::replace(s.begin(), s.end(), '-', '_');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6yhcdeu8: /tmp/tmp6yhcdeu8.cpp:28: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while (pos < result.length())\
    \ {\n        size_t next = result.find_first_not_of(\" \", pos);\n        if (next\
    \ == std::string::npos) {\n            next = result.length();\n        }\n  \
    \      result.replace(pos, next - pos, \"_\");\n        pos = next + 1;\n    }\n\
    \    if (result.length() > 2 && result.substr(0, 2) == \"_ \") {\n        result.replace(result.begin(),\
    \ result.begin() + 2, \"\");\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        size_t\
    \ pos = 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos)\
    \ {\n            result.replace(pos, 1, std::string(\"-\"));\n            pos\
    \ += 1;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpzm5dfniq: /tmp/tmpzm5dfniq.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    if (s.size() > 2) {\n  \
    \      std::replace(s.begin(), s.end(), '_', '-');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpur4kgsyj: /tmp/tmpur4kgsyj.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_eikkl24: /tmp/tmp_eikkl24.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '-');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpyq_9bsat: /tmp/tmpyq_9bsat.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while ((pos\
    \ = fixed_text.find(\" \", pos)) != std::string::npos) {\n        fixed_text.replace(pos,\
    \ 1, std::string(\"_\"));\n        ++pos;\n    }\n    if (fixed_text.size() >\
    \ 2) {\n        size_t pos = 0;\n        while ((pos = fixed_text.find(\" \",\
    \ pos)) != std::string::npos) {\n            fixed_text.replace(pos, 1, std::string(\"\
    -\"));\n            ++pos;\n        }\n    }\n    return fixed_text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpdb4rr735: /tmp/tmpdb4rr735.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while (pos < s.size())\
    \ {\n        pos = s.find_first_not_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            s.insert(pos, \"_\");\n        }\n        pos = s.find_first_of(\"\
    \ \", pos);\n        if (pos != std::string::npos) {\n            s.insert(pos,\
    \ \"_\");\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpgg6qmpsu: /tmp/tmpgg6qmpsu.cpp:31: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find_first_not_of(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find_first_not_of(\" \", pos + 1);\n    }\n    pos\
    \ = 0;\n    while ((pos = result.find_first_of(\" \", pos)) != std::string::npos)\
    \ {\n        result.replace(pos, 1, std::string(\"-\"));\n        pos = result.find_first_of(\"\
    \ \", pos + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6aqa0x58: /tmp/tmp6aqa0x58.cpp:30: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while (pos < s.size())\
    \ {\n        size_t next_pos = s.find_first_not_of(\" \", pos);\n        if (next_pos\
    \ != std::string::npos) {\n            s.erase(pos, next_pos - pos);\n       \
    \ }\n        pos = next_pos + 1;\n    }\n    if (s.size() > 2) {\n        size_t\
    \ next_pos = s.find_first_not_of(\" \", pos);\n        if (next_pos != std::string::npos)\
    \ {\n            s.erase(next_pos + 1, s.size());\n        }\n    }\n    return\
    \ s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061832
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    std::replace(result.begin(), result.end(),\
    \ ' ', '_');\n    std::replace(result.begin(), result.end(), '  ', '-');\n   \
    \ std::replace(result.begin(), result.end(), '\\t', '-');\n    std::replace(result.begin(),\
    \ result.end(), '\\n', '_');\n    std::replace(result.begin(), result.end(), '\\\
    r', '_');\n    std::replace(result.begin(), result.end(), '\\v', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\f', '_');\n    std::replace(result.begin(), result.end(), '\\\
    a', '_');\n    std::replace(result.begin(), result.end(), '\\e', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\v', '_');\n    std::replace(result.begin(), result.end(), '\\\
    s', '_');\n    std::replace(result.begin(), result.end(), '\\h', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\o', '_');\n    std::replace(result.begin(), result.end(), '\\\
    W', '_');\n    std::replace(result.begin(), result.end(), '\\s', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\h', '_');\n    std::replace(result.begin(), result.end(), '\\\
    o', '_');\n    std::replace(result.begin(), result.end(), '\\W', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\s', '_');\n    std::replace(result.begin(), result.end(), '\\\
    h', '_');\n    std::replace(result.begin(), result.end(), '\\o', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\W', '_');\n    std::replace(result.begin(), result.end(), '\\\
    s', '_');\n    std::replace(result.begin(), result.end(), '\\h', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\o', '_');\n    std::replace(result.begin(), result.end(), '\\\
    W', '_');\n    std::replace(result.begin(), result.end(), '\\s', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\h', '_');\n    std::replace(result.begin(), result.end(), '\\\
    o', '_');\n    std::replace(result.begin(), result.end(), '\\W', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\s', '_');\n    std::replace(result.begin(), result.end(), '\\\
    h', '_');\n    std::replace(result.begin(), result.end(), '\\o', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\W', '_');\n    std::replace(result.begin(), result.end(), '\\\
    s', '_');\n    std::replace(result.begin(), result.end(), '\\h', '_');\n    std::replace(result.begin(),\
    \ result.end(), '\\o', '_');\n    std::replace(result.begin(), result.end(), '\\\
    W', '_');\n    std::replace(result.begin(), result.end(), '\\s', '_');\n    std::replace(result.begin(),\
    \ \n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp624ouzfs.cpp:17:48: warning: multi-character character constant\
    \ [-Wmultichar]\n   17 |     std::replace(result.begin(), result.end(), '  ',\
    \ '-');\n      |                                                ^~~~\n/tmp/tmp624ouzfs.cpp:26:48:\
    \ warning: unknown escape sequence: '\\s'\n   26 |     std::replace(result.begin(),\
    \ result.end(), '\\s', '_');\n      |                                        \
    \        ^~~~\n/tmp/tmp624ouzfs.cpp:27:48: warning: unknown escape sequence: '\\\
    h'\n   27 |     std::replace(result.begin(), result.end(), '\\h', '_');\n    \
    \  |                                                ^~~~\n/tmp/tmp624ouzfs.cpp:28:48:\
    \ warning: unknown escape sequence: '\\o'\n   28 |     std::replace(result.begin(),\
    \ result.end(), '\\o', '_');\n      |                                        \
    \        ^~~~\n/tmp/tmp624ouzfs.cpp:29:48: warning: unknown escape sequence: '\\\
    W'\n   29 |     std::replace(result.begin(), result.end(), '\\W', '_');\n    \
    \  |                                                ^~~~\n/tmp/tmp624ouzfs.cpp:30:48:\
    \ warning: unknown escape sequence: '\\s'\n   30 |     std::replace(result.begin(),\
    \ result.end(), '\\s', '_');\n      |                                        \
    \        ^~~~\n/tmp/tmp624ouzfs.cpp:31:48: warning: unknown escape sequence: '\\\
    h'\n   31 |     std::replace(result.begin(), result.end(), '\\h', '_');\n    \
    \  |                                                ^~~~\n/tmp/tmp624ouzfs.cpp:32:48:\
    \ warning: unknown escape sequence: '\\o'\n   32 |     std::replace(result.begin(),\
    \ result.end(), '\\o', '_');\n      |                                        \
    \        ^~~~\n/tmp/tmp624ouzfs.cpp:33:48: warning: unknown escape sequence: '\\\
    W'\n   33 |     std::replace(result.begin(), result.end(), '\\W', '_');\n    \
    \  |                                                ^~~~\n/tmp/tmp624ouzfs.cpp:34:48:\
    \ warning: unknown escape sequence: '\\s'\n   34 |     std::replace(result.begin(),\
    \ result.end(), '\\s', '_');\n      |                                        \
    \        ^~~~\n/tmp/tmp624ouzfs.cpp:35:48: warning: unknown escape sequence: '\\\
    h'\n   35 |     std::repla"
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    if (s.size() > 2) {\n  \
    \      std::replace(s.begin(), s.end(), '_', '-');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpur4kgsyj: /tmp/tmpur4kgsyj.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    if (s.size() > 2 && s[0]\
    \ == ' ' && s[1] == ' ') {\n        s.replace(s.begin() + 2, s.end(), '-');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1u249437.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp1u249437.cpp:19:46: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::__cxx11::basic_string<char>::iterator,\
    \ char)\u2019\n   19 |         s.replace(s.begin() + 2, s.end(), '-');\n     \
    \ |                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp1u249437.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       r"
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while(pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if(pos == std::string::npos)\
    \ {\n            break;\n        }\n        result.replace(pos, 1, \" \");\n \
    \       pos = result.find_first_not_of(\" \", pos);\n        if(pos == std::string::npos)\
    \ {\n            break;\n        }\n        result.replace(pos, 1, \"-\");\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwr6ckywz: /tmp/tmpwr6ckywz.cpp:33: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    std::replace(result.begin(), result.end(),\
    \ ' ', '_');\n    if (result.size() > 2) {\n        std::replace(result.begin(),\
    \ result.end(), '  ', '-');\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq24ava17.cpp:18:52: warning: multi-character character constant\
    \ [-Wmultichar]\n   18 |         std::replace(result.begin(), result.end(), '\
    \  ', '-');\n      |                                                    ^~~~\n\
    /tmp/tmpq24ava17.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpq24ava17.cpp:18:61: error: no matching function for call to \u2018\
    replace(std::__cxx11::basic_string<char>::iterator, std::__cxx11::basic_string<char>::iterator,\
    \ int, char)\u2019\n   18 |         std::replace(result.begin(), result.end(),\
    \ '  ', '-');\n      |                                                       \
    \      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpq24ava17.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note: candidate: \u2018template<class _FIter, class _Tp> void std::replace(_FIter,\
    \ _FIter, const _Tp&, const _Tp&)\u2019\n 4356 |     replace(_ForwardIterator\
    \ __first, _ForwardIterator __last,\n      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpq24ava17.cpp:18:61:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    int\u2019 and \u2018char\u2019)\n   18 |         std::replace(result.begin(),\
    \ result.end(), '  ', '-');\n      |                                         \
    \                    ^\n"
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '-');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpyq_9bsat: /tmp/tmpyq_9bsat.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, next = 0, count = 0;\n    while (next < s.size()) {\n        next\
    \ = s.find(' ', prev);\n        if (next == std::string::npos) next = s.size();\n\
    \        s[count] = s[next];\n        prev = next + 1;\n        count++;\n   \
    \ }\n    s[count] = '_';\n    return s;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2sfti8xu.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp2sfti8xu.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp2sfti8xu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::replace(text.begin(), text.end(), ' ', '_');\n    \n    int spaces\
    \ = 0;\n    \n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            spaces++;\n        } else {\n            if (spaces >\
    \ 1) {\n                text[i] = '_';\n            }\n            spaces = 0;\n\
    \        }\n    }\n    \n    return text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp15y2nl0o: /tmp/tmp15y2nl0o.cpp:37: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_eikkl24: /tmp/tmp_eikkl24.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    size_t pos = 0;\n    while ((pos = out.find('\
    \ ', pos)) != std::string::npos) {\n        out.replace(pos, 1, \" \");\n    \
    \    pos = out.find(' ', pos + 1);\n    }\n    if (out.size() > 2 && out.substr(0,\
    \ 2) == \" \") {\n        out.replace(out.begin(), out.begin() + 2, \"\");\n \
    \   }\n    return out;\n}\nint main() {\n    auto candidate = fix_spaces;\n  \
    \  assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpjxsi3vp7: /tmp/tmpjxsi3vp7.cpp:29: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while ((pos = s.find_first_of('\
    \ ', pos)) != std::string::npos) {\n        s.replace((pos), 1, std::string(\"\
    _\"));\n        pos = s.find_first_of(' ', pos + 1);\n    }\n    if (s.size()\
    \ > 2 && s.substr(0, 2) == std::string(\"_\")) {\n        s.erase(0, 2);\n   \
    \ }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp34u_cmfm: /tmp/tmp34u_cmfm.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while ((pos = s.find_first_not_of(\"\
    \ \\t\\n\", pos)) != std::string::npos) {\n        s.replace((pos), 1, std::string(\"\
    _\"));\n        pos = s.find_first_not_of(\" \\t\\n\", pos);\n    }\n    return\
    \ s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw2amj06n: /tmp/tmpw2amj06n.cpp:23: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    \n    // Replace all spaces with\
    \ underscores\n    size_t pos = 0;\n    while(pos < fixed_text.size()) {\n   \
    \     char c = fixed_text[pos];\n        if(c == ' ') {\n            fixed_text[pos]\
    \ = '_';\n            pos++;\n        }\n        pos++;\n    }\n    \n    // If\
    \ there are more than 2 consecutive spaces, \n    // then replace all consecutive\
    \ spaces with -\n    size_t pos2 = 0;\n    while(pos2 < fixed_text.size()) {\n\
    \        char c = fixed_text[pos2];\n        if(c == ' ') {\n            if((pos2\
    \ + 1 < fixed_text.size()) && (fixed_text[pos2 + 1] == ' ')) {\n             \
    \   fixed_text[pos2] = '-';\n                pos2++;\n            }\n        \
    \    pos2++;\n        }\n        pos2++;\n    }\n    \n    return fixed_text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpnv66f7ai: /tmp/tmpnv66f7ai.cpp:49: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while ((pos\
    \ = fixed_text.find(\" \", pos)) != std::string::npos) {\n        fixed_text.replace(pos,\
    \ 1, std::string(\"_\"));\n        pos++;\n    }\n    if (fixed_text.size() >\
    \ 2) {\n        size_t pos = 0;\n        while ((pos = fixed_text.find(\" \",\
    \ pos)) != std::string::npos) {\n            fixed_text.replace(pos, 1, std::string(\"\
    -\"));\n            pos++;\n        }\n    }\n    return fixed_text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmprlu7a6o8: /tmp/tmprlu7a6o8.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = pos + 1;\n    }\n    if (result.size() > 2) {\n        pos\
    \ = 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos) {\n\
    \            result.replace(pos, 1, std::string(\"-\"));\n            pos = pos\
    \ + 1;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpog986i07: /tmp/tmpog986i07.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw2amj06n: /tmp/tmpw2amj06n.cpp:23: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while(pos <\
    \ fixed_text.size()) {\n        size_t space_pos = fixed_text.find(\" \", pos);\n\
    \        if (space_pos != std::string::npos) {\n            fixed_text.replace(space_pos,\
    \ 1, \" _\");\n            pos = space_pos + 1;\n        } else {\n          \
    \  pos = fixed_text.size();\n        }\n    }\n    return fixed_text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6cvcojfp: /tmp/tmp6cvcojfp.cpp:31: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    \n    size_t pos = 0;\n    while\
    \ (pos < fixed_text.size()) {\n        size_t next_pos = fixed_text.find(' ',\
    \ pos);\n        if (next_pos == std::string::npos) {\n            fixed_text.replace(pos,\
    \ 1, \" \");\n        } else {\n            fixed_text.replace(pos, 1, \" _\"\
    );\n            pos = next_pos + 1;\n        }\n    }\n    \n    return fixed_text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061833
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while ((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res.insert(pos, \"_\");\n       \
    \ ++pos;\n    }\n    if (res.size() > 2 && res.find(\"  \", pos) != std::string::npos)\
    \ {\n        res.insert(pos, \"-\");\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while(pos < res.size())\
    \ {\n        size_t next = res.find(' ', pos);\n        if(next == std::string::npos)\
    \ {\n            next = res.size();\n        }\n        res.replace(pos, 1, \"\
    \ \");\n        pos = next;\n    }\n    while(pos < res.size()) {\n        size_t\
    \ next = res.find(' ', pos);\n        if(next == std::string::npos) {\n      \
    \      next = res.size();\n        }\n        res.replace(pos, 1, \"_\");\n  \
    \      pos = next;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm1oyyzxo: /tmp/tmpm1oyyzxo.cpp:37: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    std::size_t pos = 0;\n    while (pos < out.size())\
    \ {\n        pos = out.find_first_not_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            out.replace(pos, 1, \" \");\n            pos = out.find_first_not_of(\"\
    \ \", pos);\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpf9ggdlcm: /tmp/tmpf9ggdlcm.cpp:28: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while (pos < s.size())\
    \ {\n        size_t prev = pos;\n        pos = s.find_first_not_of(\" \", pos);\n\
    \        if (pos == std::string::npos) {\n            pos = s.size();\n      \
    \  }\n        size_t next = pos;\n        pos = s.find_first_of(\" \", pos + 1);\n\
    \        if (pos == std::string::npos) {\n            pos = s.size();\n      \
    \  }\n        if (pos != prev) {\n            s.replace(prev, next - prev, \"\
    \ \");\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061833
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, next = 0, count = 0;\n    while(next < s.size()) {\n        if(s[next]\
    \ == ' ') {\n            count++;\n            if(count == 2) {\n            \
    \    s[prev] = s[next];\n                s[next] = '-';\n                prev\
    \ = next;\n                count = 0;\n            }\n        } else {\n     \
    \       count = 0;\n        }\n        next++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpraax60xh.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpraax60xh.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpraax60xh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res.replace(pos, 1, std::to_string(pos));\n\
    \        pos++;\n    }\n    while((pos = res.find(\" \", pos)) != std::string::npos)\
    \ {\n        res.replace(pos, 1, std::to_string(pos));\n        pos++;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpr7mhtg0e: /tmp/tmpr7mhtg0e.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while(pos < s.size())\
    \ {\n        size_t next = s.find(' ', pos);\n        if(next == std::string::npos)\
    \ {\n            next = s.size();\n        }\n        s.replace(pos, next - pos,\
    \ \"_\");\n        pos = next + 1;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxc1zmc3e: /tmp/tmpxc1zmc3e.cpp:29: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::replace(text.begin(), text.end(), ' ', '_');\n    std::replace(text.begin(),\
    \ text.end(), ' ', '_');\n    std::replace(text.begin(), text.end(), '  ', '-');\n\
    \    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp__ulkft9.cpp:17:44: warning: multi-character character constant\
    \ [-Wmultichar]\n   17 |     std::replace(text.begin(), text.end(), '  ', '-');\n\
    \      |                                            ^~~~\n/tmp/tmp__ulkft9.cpp:\
    \ In function \u2018std::string fix_spaces(std::string)\u2019:\n/tmp/tmp__ulkft9.cpp:17:53:\
    \ error: no matching function for call to \u2018replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, int, char)\u2019\n   17 |     std::replace(text.begin(),\
    \ text.end(), '  ', '-');\n      |                                           \
    \          ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp__ulkft9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note: candidate: \u2018template<class _FIter, class _Tp> void std::replace(_FIter,\
    \ _FIter, const _Tp&, const _Tp&)\u2019\n 4356 |     replace(_ForwardIterator\
    \ __first, _ForwardIterator __last,\n      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp__ulkft9.cpp:17:53:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    int\u2019 and \u2018char\u2019)\n   17 |     std::replace(text.begin(), text.end(),\
    \ '  ', '-');\n      |                                                     ^\n"
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    for (auto &c : out) {\n        if (c ==\
    \ ' ') {\n            c = ' ';\n        } else if (c == '\\t') {\n           \
    \ c = '-';\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpu2_7w_34: /tmp/tmpu2_7w_34.cpp:28: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    std::replace(std::begin(res),\
    \ std::end(res), ' ', '_');\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6yajvp8w: /tmp/tmp6yajvp8w.cpp:28: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, next = 0, count = 0;\n    while (next < s.size()) {\n        next\
    \ = s.find(' ', prev);\n        if (next == std::string::npos) next = s.size();\n\
    \        std::string sub = s.substr(prev, next - prev);\n        s.replace(sub,\
    \ \" \", \"_\");\n        prev = next + 1;\n        ++count;\n    }\n    return\
    \ s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_l6t_zg.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp6_l6t_zg.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp6_l6t_zg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while(pos < s.size())\
    \ {\n        size_t next_pos = s.find_first_of(' ', pos);\n        if(next_pos\
    \ == std::string::npos) {\n            pos = s.size();\n        } else {\n   \
    \         s.erase(pos, next_pos - pos);\n            pos = next_pos + 1;\n   \
    \     }\n    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxkv12rye: /tmp/tmpxkv12rye.cpp:31: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    \ _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        pos\
    \ = 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos) {\n\
    \            result.replace(pos, 1, std::string(\"-\"));\n            pos += 1;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpo92pec5q: /tmp/tmpo92pec5q.cpp:33: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    int\
    \ count = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == '\
    \ ') {\n            count++;\n            if (count == 2) {\n                s.replace(i,\
    \ i + 1, \"-\");\n                i += 1;\n                count = 0;\n      \
    \      }\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4m8mu3k7.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp4m8mu3k7.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp4m8mu3k7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '-');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpyq_9bsat: /tmp/tmpyq_9bsat.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        pos =\
    \ 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos) {\n\
    \            result.replace(pos, 1, std::string(\"-\"));\n            pos += 1;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpg4hp6e4k: /tmp/tmpg4hp6e4k.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  if (res.size() > 2) {\n        std::replace(std::begin(res), std::end(res),\
    \ ' ', '-');\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmprnegcy85: /tmp/tmprnegcy85.cpp:28: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while (pos < s.size())\
    \ {\n        size_t next_space = s.find_first_of(' ', pos);\n        if (next_space\
    \ != std::string::npos) {\n            s.erase(pos, next_space - pos);\n     \
    \       pos = next_space + 1;\n        } else {\n            pos = s.size();\n\
    \        }\n    }\n    while (pos < s.size()) {\n        size_t next_space = s.find_first_of('\
    \ ', pos);\n        if (next_space != std::string::npos) {\n            s.insert(pos,\
    \ \"-\");\n            pos = next_space + 1;\n        } else {\n            pos\
    \ = s.size();\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpx449_tux: /tmp/tmpx449_tux.cpp:40: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    std::replace(result.begin(), result.end(),\
    \ ' ', '_');\n    if (result.find_first_not_of(' ') != std::string::npos) {\n\
    \        std::replace(result.begin(), result.end(), ' ', '-');\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpeulm841w: /tmp/tmpeulm841w.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    std::replace(result.begin(), result.end(),\
    \ ' ', '_');\n    if (result.size() > 2) {\n        std::replace(result.begin(),\
    \ result.end(), ' ', '_');\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpmx8akq7_: /tmp/tmpmx8akq7_.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    for (auto &c : out) {\n        if (std::isspace(c))\
    \ {\n            c = '_';\n        }\n    }\n    size_t pos = 0;\n    while (pos\
    \ < out.size() && out[pos] == ' ') {\n        ++pos;\n    }\n    while (pos <\
    \ out.size() && out[pos] == '_') {\n        ++pos;\n    }\n    if (pos < out.size())\
    \ {\n        out = out.substr(0, pos) + \"-\";\n    }\n    return out;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpa9gtb12_: /tmp/tmpa9gtb12_.cpp:35: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res = res.substr(0, pos) + \"_\"\
    \ + res.substr(pos + 1);\n        pos = res.find(\" \", pos + 1);\n    }\n   \
    \ return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpj_m3yqfq: /tmp/tmpj_m3yqfq.cpp:28: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while(true)\
    \ {\n        pos = fixed_text.find(\"  \", pos);\n        if(pos == std::string::npos)\
    \ {\n            break;\n        }\n        fixed_text.replace(pos, 2, \"_\");\n\
    \        pos += 2;\n    }\n    return fixed_text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpotqlzake: /tmp/tmpotqlzake.cpp:30: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, next = 0, count = 0;\n    while (next < s.size()) {\n        if (s[next]\
    \ == ' ') {\n            count++;\n            if (count == 2) {\n           \
    \     s[prev] = '_';\n                s[next] = '-';\n                prev = next\
    \ + 1;\n                count = 0;\n            } else if (count > 2) {\n    \
    \            s[prev] = '-';\n                s[next] = '_';\n                prev\
    \ = next + 1;\n                count = 0;\n            }\n        } else {\n \
    \           count = 0;\n        }\n        next++;\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7_vlj568.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp7_vlj568.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7_vlj568.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061829
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while(pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if(pos == std::string::npos)\
    \ pos = result.length();\n        result.replace(pos, 1, \" \");\n        pos\
    \ = result.find_first_not_of(\" \", pos);\n        if(pos == std::string::npos)\
    \ pos = result.length();\n        result.replace(pos, 1, \"-\");\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '  ', '-');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53xel74o.cpp:17:38: warning: multi-character character constant\
    \ [-Wmultichar]\n   17 |     std::replace(s.begin(), s.end(), '  ', '-');\n  \
    \    |                                      ^~~~\n/tmp/tmp53xel74o.cpp: In function\
    \ \u2018std::string fix_spaces(std::string)\u2019:\n/tmp/tmp53xel74o.cpp:17:47:\
    \ error: no matching function for call to \u2018replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, int, char)\u2019\n   17 |     std::replace(s.begin(),\
    \ s.end(), '  ', '-');\n      |                                              \
    \ ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp53xel74o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note: candidate: \u2018template<class _FIter, class _Tp> void std::replace(_FIter,\
    \ _FIter, const _Tp&, const _Tp&)\u2019\n 4356 |     replace(_ForwardIterator\
    \ __first, _ForwardIterator __last,\n      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp53xel74o.cpp:17:47:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    int\u2019 and \u2018char\u2019)\n   17 |     std::replace(s.begin(), s.end(),\
    \ '  ', '-');\n      |                                               ^\n"
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while ((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res.replace(pos, 1, std::string(\"\
    -\"));\n        pos += 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpqx006k23: /tmp/tmpqx006k23.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while (pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            result.replace(pos, 1, std::string(\"_\"));\n        }\n    \
    \    pos = result.find_first_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            result.replace(pos, 1, std::string(\"-\"));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp68ohdcx1: /tmp/tmp68ohdcx1.cpp:31: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        size_t\
    \ pos2 = result.find(\" \", pos);\n        result.replace(pos2, result.size()\
    \ - 2, std::string(\"-\"));\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::replace: __pos (which is 18446744073709551615) > this->size()\
    \ (which is 7)\n"
  stdout: ''
  timestamp: 1660061830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while (pos < res.size())\
    \ {\n        if (res[pos] == ' ') {\n            res[pos] = '_';\n           \
    \ pos += 1;\n        } else if (res[pos] == '_' && res[pos + 1] == '_') {\n  \
    \          res[pos] = '-';\n            pos += 1;\n        } else {\n        \
    \    pos += 1;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpgcblntpd: /tmp/tmpgcblntpd.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ pos = 0;\n    while (pos < s.size()) {\n        if (s[pos] == ' ') {\n     \
    \       s[pos] = '_';\n            ++pos;\n        }\n        else if (s[pos]\
    \ == '_') {\n            s[pos] = ' ';\n            ++pos;\n        }\n      \
    \  ++pos;\n    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzx7t_mi9.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpzx7t_mi9.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzx7t_mi9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    if (res.size() > 2 && std::equal(std::begin(res), std::end(res),\
    \ std::begin(res) + 2))\n        std::replace(std::begin(res), std::end(res),\
    \ ' ', '-');\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpakouprmc: /tmp/tmpakouprmc.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        pos =\
    \ 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos) {\n\
    \            result.replace(pos, 1, std::string(\"-\"));\n            pos += 1;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpg4hp6e4k: /tmp/tmpg4hp6e4k.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '-');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpyq_9bsat: /tmp/tmpyq_9bsat.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    std::replace(out.begin(), out.end(), ' ',\
    \ '_');\n    if (out.size() > 2 && out.substr(0, 2) == \" \") {\n        std::replace(out.begin(),\
    \ out.begin() + 2, ' ', '-');\n    }\n    return out;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmph5qi5s9j: /tmp/tmph5qi5s9j.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    for (auto &c : out) {\n        if (c !=\
    \ ' ') {\n            c = tolower(c);\n        }\n    }\n    for (auto &c : out)\
    \ {\n        if (c != ' ') {\n            c = toupper(c);\n        }\n    }\n\
    \    for (auto &c : out) {\n        if (c != ' ') {\n            c = tolower(c);\n\
    \        }\n    }\n    for (auto &c : out) {\n        if (c != ' ') {\n      \
    \      c = toupper(c);\n        }\n    }\n    for (auto &c : out) {\n        if\
    \ (c != ' ') {\n            c = tolower(c);\n        }\n    }\n    for (auto &c\
    \ : out) {\n        if (c != ' ') {\n            c = toupper(c);\n        }\n\
    \    }\n    for (auto &c : out) {\n        if (c != ' ') {\n            c = tolower(c);\n\
    \        }\n    }\n    for (auto &c : out) {\n        if (c != ' ') {\n      \
    \      c = toupper(c);\n        }\n    }\n    for (auto &c : out) {\n        if\
    \ (c != ' ') {\n            c = tolower(c);\n        }\n    }\n    for (auto &c\
    \ : out) {\n        if (c != ' ') {\n            c = toupper(c);\n        }\n\
    \    }\n    for (auto &c : out) {\n        if (c != ' ') {\n            c = tolower(c);\n\
    \        }\n    }\n    for (auto &c : out) {\n        if (c != ' ') {\n      \
    \      c = toupper(c);\n        }\n    }\n    for (auto &c : out) {\n        if\
    \ (c != ' ') {\n            c = tolower(c);\n        }\n    }\n    for (auto &c\
    \ : out) {\n        if (c != ' ') {\n            c = toupper(c);\n        }\n\
    \    }\n    for (auto &c : out) {\n        if (c != ' ') {\n            c = tolower(c);\n\
    \        }\n    }\n    for (auto &c : out) {\n        if (c != ' ') {\n      \
    \      c = toupper(c);\n        }\n    }\n    for (auto &c : out) {\n        if\
    \ (c != ' ') {\n            c = tolower(c);\n        }\n    }\n    for (auto &c\
    \ : out) {\n        if (c != ' ') {\n            c = toupper(c);\n        }\n\
    \    }\n    for (auto &c : out) {\n        if (c != ' ') {\n            c = tolower(c);\n\
    \        }\n    }\n    for (auto &c : out) {\n        if (c != ' ') {\n      \
    \      c = toupper(c);\n        }\n    }\n    for (auto &c : out) {\n        if\
    \ (c != ' ') {\n            c = tolower(c);\n        }\n    }\n    for (auto &c\
    \ : out) {\n        if (c != ' ') {\n            c = toupper(c);\n        }\n\
    \    }\n\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpof2flazj: /tmp/tmpof2flazj.cpp:130: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061830
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find_first_not_of(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, \" \");\n\
    \    }\n    if (result.size() > 2) {\n        pos = 0;\n        while ((pos =\
    \ result.find_first_of(\" \", pos)) != std::string::npos) {\n            result.replace(pos,\
    \ 1, \" \");\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    size_t pos = 0;\n    while (pos < out.size())\
    \ {\n        size_t next_space = out.find(' ', pos);\n        if (next_space ==\
    \ std::string::npos) {\n            out.insert(pos, \"_\");\n            pos +=\
    \ 2;\n        } else {\n            out.insert(next_space, \"-\");\n         \
    \   pos = next_space + 1;\n        }\n    }\n    return out;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm4z8g2mc: /tmp/tmpm4z8g2mc.cpp:31: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        s.replace(s.begin(),\
    \ s.begin() + 2, \"\");\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpupgj70l3: /tmp/tmpupgj70l3.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    if (s.size() > 2) {\n  \
    \      std::replace(s.begin(), s.end(), '_', '-');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpur4kgsyj: /tmp/tmpur4kgsyj.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s[s.size() - 1] == ' ' && s[s.size() - 2] == ' ') {\n\
    \        s.replace(s.size() - 2, s.size() - 1, std::string(\"_\"));\n    }\n \
    \   return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpxdq4psov: /tmp/tmpxdq4psov.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '-');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6bxm7hpd: /tmp/tmp6bxm7hpd.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw2amj06n: /tmp/tmpw2amj06n.cpp:23: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while(pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if(pos != std::string::npos)\
    \ {\n            result.replace(pos, 1, \" \");\n        }\n    }\n    pos = 0;\n\
    \    while(pos < result.length()) {\n        pos = result.find_first_of(\" \"\
    , pos);\n        if(pos != std::string::npos) {\n            result.replace(pos,\
    \ 1, \"_\");\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpn8ge7cfb: /tmp/tmpn8ge7cfb.cpp:34: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061830
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '  ', '-');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53xel74o.cpp:17:38: warning: multi-character character constant\
    \ [-Wmultichar]\n   17 |     std::replace(s.begin(), s.end(), '  ', '-');\n  \
    \    |                                      ^~~~\n/tmp/tmp53xel74o.cpp: In function\
    \ \u2018std::string fix_spaces(std::string)\u2019:\n/tmp/tmp53xel74o.cpp:17:47:\
    \ error: no matching function for call to \u2018replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, int, char)\u2019\n   17 |     std::replace(s.begin(),\
    \ s.end(), '  ', '-');\n      |                                              \
    \ ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp53xel74o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note: candidate: \u2018template<class _FIter, class _Tp> void std::replace(_FIter,\
    \ _FIter, const _Tp&, const _Tp&)\u2019\n 4356 |     replace(_ForwardIterator\
    \ __first, _ForwardIterator __last,\n      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp53xel74o.cpp:17:47:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    int\u2019 and \u2018char\u2019)\n   17 |     std::replace(s.begin(), s.end(),\
    \ '  ', '-');\n      |                                               ^\n"
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while ((pos\
    \ = fixed_text.find(\"  \", pos)) != std::string::npos) {\n        fixed_text.replace(pos,\
    \ 2, \"_\");\n        pos += 2;\n    }\n    return fixed_text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpsqsxz5e1: /tmp/tmpsqsxz5e1.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while (pos <\
    \ fixed_text.size()) {\n        size_t next_space = fixed_text.find(' ', pos);\n\
    \        if (next_space != std::string::npos) {\n            fixed_text.replace(pos,\
    \ next_space - pos, \"_\");\n            pos = next_space + 1;\n        } else\
    \ {\n            pos = fixed_text.size();\n        }\n    }\n    return fixed_text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_z_tskld: /tmp/tmp_z_tskld.cpp:31: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '_');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmphtts47b9: /tmp/tmphtts47b9.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = \"\";\n    std::string space_replacement_string\
    \ = \"_\";\n    std::string consecutive_replacement_string = \"-\";\n    \n  \
    \  for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n\
    \            fixed_text += space_replacement_string;\n        } else {\n     \
    \       fixed_text += text[i];\n        }\n    }\n    \n    if (fixed_text.size()\
    \ > 2) {\n        for (int i = 0; i < fixed_text.size() - 2; i++) {\n        \
    \    fixed_text += consecutive_replacement_string;\n        }\n    }\n    \n \
    \   return fixed_text;\n}\nint main() {\n    auto candidate = fix_spaces;\n  \
    \  assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while ((pos = s.find_first_not_of(\"\
    \ \", pos)) != std::string::npos) {\n        s.replace((pos), 1, std::string(\"\
    _\"));\n        pos = s.find_first_not_of(\" \", pos + 1);\n    }\n    if (s.find_first_not_of(\"\
    \ \", pos) != std::string::npos) {\n        s.replace((pos), 1, std::string(\"\
    -\"));\n    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpu7fiet56: /tmp/tmpu7fiet56.cpp:28: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    if (res.size() > 2) {\n        std::replace(std::begin(res),\
    \ std::end(res), ' ', '-');\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpr304jyol: /tmp/tmpr304jyol.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::size_t pos = 0;\n    while(pos < res.size())\
    \ {\n        pos = res.find_first_not_of(\" \", pos);\n        if(pos != std::string::npos)\
    \ {\n            res.insert(pos, \"_\");\n            pos = res.find_first_not_of(\"\
    \ \", pos);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061836
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while (pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            result.replace(pos, 1, std::string(\"_\"));\n        }\n    \
    \    pos = result.find_first_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            result.replace(pos, 1, std::string(\"-\"));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp68ohdcx1: /tmp/tmp68ohdcx1.cpp:31: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s[s.size() - 1] == ' ' && s[s.size() - 2] == ' ') {\n\
    \        s.replace(s.size() - 2, s.size() - 1, \"-\");\n    }\n    return s;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp5519hz0r: /tmp/tmp5519hz0r.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, pos = 0;\n    while (pos < s.size()) {\n        pos = s.find_first_not_of(\"\
    \ \", prev);\n        if (pos == std::string::npos) pos = s.size();\n        s.replace(pos,\
    \ 1, std::string(\"_\"));\n        prev = pos + 1;\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp28kgr8s9.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp28kgr8s9.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp28kgr8s9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    size_t len =\
    \ fixed_text.size();\n    while (pos < len) {\n        char c = fixed_text[pos];\n\
    \        if (c == ' ') {\n            fixed_text[pos] = '_';\n            pos++;\n\
    \        } else if (c != ' ' && c != '_') {\n            fixed_text[pos] = c;\n\
    \            pos++;\n        }\n    }\n    return fixed_text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcn020i4w: /tmp/tmpcn020i4w.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    std::replace(std::begin(res),\
    \ std::end(res), ' ', '_');\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmplmelg5zf: /tmp/tmplmelg5zf.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while ((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (res.size() > 2) {\n        size_t pos2\
    \ = res.find(\" \", pos);\n        while ((pos2 = res.find(\" \", pos2)) != std::string::npos)\
    \ {\n            res.replace(pos2, 1, std::string(\"-\"));\n            pos2 +=\
    \ 1;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate =\
    \ fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpnzi0euhm: /tmp/tmpnzi0euhm.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        s.replace(s.begin(),\
    \ s.begin() + 2, \"\");\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpupgj70l3: /tmp/tmpupgj70l3.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2 && result[result.size()\
    \ - 1] == ' ') {\n        result.replace(result.size() - 1, 1, std::string(\"\
    -\"));\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpiti6rxht: /tmp/tmpiti6rxht.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw2amj06n: /tmp/tmpw2amj06n.cpp:23: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), ' ', '_');\n    if (s.size() > 2) {\n  \
    \      std::replace(s.begin(), s.end(), '  ', '-');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp59vrd8el.cpp:19:42: warning: multi-character character constant\
    \ [-Wmultichar]\n   19 |         std::replace(s.begin(), s.end(), '  ', '-');\n\
    \      |                                          ^~~~\n/tmp/tmp59vrd8el.cpp:\
    \ In function \u2018std::string fix_spaces(std::string)\u2019:\n/tmp/tmp59vrd8el.cpp:19:51:\
    \ error: no matching function for call to \u2018replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, int, char)\u2019\n   19 |      \
    \   std::replace(s.begin(), s.end(), '  ', '-');\n      |                    \
    \                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp59vrd8el.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note: candidate: \u2018template<class _FIter, class _Tp> void std::replace(_FIter,\
    \ _FIter, const _Tp&, const _Tp&)\u2019\n 4356 |     replace(_ForwardIterator\
    \ __first, _ForwardIterator __last,\n      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp59vrd8el.cpp:19:51:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    int\u2019 and \u2018char\u2019)\n   19 |         std::replace(s.begin(), s.end(),\
    \ '  ', '-');\n      |                                                   ^\n"
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    size_t pos = 0;\n    while ((pos = out.find('\
    \ ', pos)) != std::string::npos) {\n        out.replace(pos, 1, \" _\");\n   \
    \     pos = out.find(' ', pos + 1);\n    }\n    return out;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpvb7k3mef: /tmp/tmpvb7k3mef.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    for (size_t i = 0; i < out.size(); i++)\
    \ {\n        if (out[i] == ' ') {\n            out[i] = '_';\n        }\n    }\n\
    \    if (out.size() > 2) {\n        for (size_t i = 0; i < out.size() - 2; i++)\
    \ {\n            if (out[i] == ' ' && out[i + 1] == ' ') {\n                out[i]\
    \ = '-';\n            }\n        }\n    }\n    return out;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp7ov7cd9v: /tmp/tmp7ov7cd9v.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_eikkl24: /tmp/tmp_eikkl24.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        s.replace(s.begin(),\
    \ s.begin() + 2, \"\");\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpupgj70l3: /tmp/tmpupgj70l3.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::size_t pos = 0;\n    while (pos < res.size())\
    \ {\n        pos = res.find_first_not_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            res.insert(pos, \"_\");\n            pos = res.find_first_not_of(\"\
    \ \", pos);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061837
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while (pos <\
    \ fixed_text.size()) {\n        size_t next_space = fixed_text.find(' ', pos);\n\
    \        if (next_space == std::string::npos) {\n            fixed_text.replace(pos,\
    \ 1, \" \");\n            pos = fixed_text.size();\n        } else {\n       \
    \     fixed_text.replace(pos, 1, \" _\");\n            pos = next_space + 1;\n\
    \        }\n    }\n    return fixed_text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp46nllpth: /tmp/tmp46nllpth.cpp:31: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    if (s.size() > 2 && s[0]\
    \ == ' ' && s[1] == ' ') {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpdqzi1sjc: /tmp/tmpdqzi1sjc.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), ' ', '_');\n    std::replace(s.begin(),\
    \ s.end(), ' ', '_');\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp9os8yhww: /tmp/tmp9os8yhww.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while ((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (res.size() > 2) {\n        size_t pos2\
    \ = res.find(\" \", pos);\n        while (pos2 != std::string::npos) {\n     \
    \       res.replace(pos2, 2, std::string(\"-\"));\n            pos2 += 1;\n  \
    \      }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp3m3iec0v: /tmp/tmp3m3iec0v.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    if (res.find_first_not_of(' ') != std::string::npos) {\n   \
    \     std::replace(std::begin(res), std::end(res), ' ', '-');\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1rk5wmb9: /tmp/tmp1rk5wmb9.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::size_t pos = 0;\n    while (pos < res.size())\
    \ {\n        pos = res.find_first_not_of(\" \", pos);\n        if (pos == std::string::npos)\
    \ {\n            break;\n        }\n        res.replace(pos, 1, \" \");\n    \
    \    pos = res.find_first_not_of(\" \", pos);\n        if (pos == std::string::npos)\
    \ {\n            break;\n        }\n        res.replace(pos, 1, \"-\");\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp27gl62ll: /tmp/tmp27gl62ll.cpp:33: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while ((pos = res.find(\"\
    \ \", pos)) != std::string::npos) {\n        res.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (res.size() > 2) {\n        size_t pos\
    \ = 0;\n        while ((pos = res.find(\" \", pos)) != std::string::npos) {\n\
    \            res.replace(pos, 1, std::string(\"-\"));\n            pos += 1;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpjx3lcyvi: /tmp/tmpjx3lcyvi.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    std::replace(result.begin(), result.end(),\
    \ ' ', '_');\n    if (result.find_first_not_of(' ') != std::string::npos) {\n\
    \        std::replace(result.begin(), result.end(), ' ', '-');\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpeulm841w: /tmp/tmpeulm841w.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    size_t len =\
    \ fixed_text.size();\n    while (pos < len) {\n        pos = fixed_text.find_first_not_of(\"\
    \ \", pos);\n        if (pos == std::string::npos) {\n            break;\n   \
    \     }\n        fixed_text.replace(pos, 1, \" \");\n        pos = fixed_text.find_first_not_of(\"\
    \ \", pos + 1);\n        if (pos == std::string::npos) {\n            break;\n\
    \        }\n        fixed_text.replace(pos, 1, \"-\");\n    }\n    return fixed_text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpogfgr8nk: /tmp/tmpogfgr8nk.cpp:34: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    size_t len = s.size();\n\
    \    while (pos < len) {\n        pos = s.find_first_not_of(\" \", pos);\n   \
    \     if (pos == std::string::npos) {\n            break;\n        }\n       \
    \ s.replace(pos, 1, std::string(\"_\"));\n        pos = s.find_first_not_of(\"\
    \ \", pos + 1);\n        if (pos == std::string::npos) {\n            break;\n\
    \        }\n        s.replace(pos, 1, std::string(\"-\"));\n    }\n    return\
    \ s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp2vcyejxu: /tmp/tmp2vcyejxu.cpp:34: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061832
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    size_t pos = 0;\n    while ((pos = out.find('\
    \ ', pos)) != std::string::npos) {\n        out.replace(pos, 1, \" \");\n    \
    \    pos = out.find(' ', pos + 1);\n    }\n    while (out.size() > 2 && out.substr(0,\
    \ 2) == \" \") {\n        out.replace(out.begin(), out.begin() + 2, \"\");\n \
    \   }\n    return out;\n}\nint main() {\n    auto candidate = fix_spaces;\n  \
    \  assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw6la6kzq: /tmp/tmpw6la6kzq.cpp:29: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        std::replace(s.begin(),\
    \ s.end(), ' ', '-');\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpyq_9bsat: /tmp/tmpyq_9bsat.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    size_t pos = 0;\n    while(pos < out.size())\
    \ {\n        size_t next = out.find(' ', pos);\n        if(next == std::string::npos)\
    \ {\n            next = out.size();\n        }\n        out.replace(pos, 1, out[pos]);\n\
    \        out.replace(next, 1, \"_\");\n        pos = next + 1;\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9tynu92_.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmp9tynu92_.cpp:22:37: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(size_t&, int, __gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type&)\u2019\n   22 |         out.replace(pos, 1, out[pos]);\n\
    \      |                                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9tynu92_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmp9tynu92_.cpp:22:37:\
    \ error: invalid conversion f"
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (pos < result.length())\
    \ {\n        result.replace(pos, 1, std::string(\"-\"));\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpkkmy0aso: /tmp/tmpkkmy0aso.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, pos = 0;\n    while (pos < s.size()) {\n        pos = s.find_first_of('\
    \ ', prev);\n        if (pos == std::string::npos) pos = s.size();\n        s.replace(pos,\
    \ 1, std::string(\"-\"));\n        prev = pos + 1;\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmtbh2k13.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpmtbh2k13.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpmtbh2k13.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \        std::replace(s.begin(), s.end(), '-', '_');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6yhcdeu8: /tmp/tmp6yhcdeu8.cpp:28: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    std::replace(out.begin(), out.end(), ' ',\
    \ '_');\n    std::replace(out.begin(), out.end(), '_', ' ');\n    std::replace(out.begin(),\
    \ out.end(), ' ', '-');\n    return out;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp3dxh2rg8: /tmp/tmp3dxh2rg8.cpp:24: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while (pos < s.size())\
    \ {\n        size_t next = s.find(' ', pos);\n        if (next == std::string::npos)\
    \ {\n            next = s.size();\n        }\n        s.replace(pos, next - pos,\
    \ \"_\");\n        pos = next + 1;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp3zq3gp_s: /tmp/tmp3zq3gp_s.cpp:29: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpthdyojsp: /tmp/tmpthdyojsp.cpp:25: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (result.size()\
    \ > 2) {\n        size_t pos2 = result.find(\" \", pos + 1);\n        while (pos2\
    \ != std::string::npos) {\n            result.replace(pos2, result.size() - 1,\
    \ std::string(\"-\"));\n            pos2 = result.find(\" \", pos2 + 1);\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpx2qfvm4t: /tmp/tmpx2qfvm4t.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while(pos <\
    \ fixed_text.size()) {\n        size_t next = fixed_text.find(' ', pos);\n   \
    \     if(next == std::string::npos) {\n            fixed_text.replace(pos, 1,\
    \ \" \");\n        } else {\n            fixed_text.replace(pos, 1, \" _\");\n\
    \            pos = next + 1;\n        }\n    }\n    return fixed_text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061838
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), ' ', '_');\n    std::replace(s.begin(),\
    \ s.end(), '_', ' ');\n    std::replace(s.begin(), s.end(), '_', '-');\n    return\
    \ s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpdtssn_0d: /tmp/tmpdtssn_0d.cpp:25: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpthdyojsp: /tmp/tmpthdyojsp.cpp:25: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (result.size()\
    \ > 2 && result.substr(0, 2) == \" \") {\n        result.replace(result.begin(),\
    \ result.begin() + 2, std::string(\"-\"));\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpb2eag8he: /tmp/tmpb2eag8he.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_eikkl24: /tmp/tmp_eikkl24.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '-');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6bxm7hpd: /tmp/tmp6bxm7hpd.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while(pos < s.size())\
    \ {\n        size_t next = s.find(' ', pos);\n        if(next == std::string::npos)\
    \ {\n            next = s.size();\n        }\n        s.replace(pos, next - pos,\
    \ \"_\");\n        pos = next + 1;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxc1zmc3e: /tmp/tmpxc1zmc3e.cpp:29: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while (pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if (pos == std::string::npos)\
    \ {\n            break;\n        }\n        result.replace(pos, 1, \" \");\n \
    \       pos = result.find_first_not_of(\" \", pos + 1);\n        if (pos == std::string::npos)\
    \ {\n            break;\n        }\n        result.replace(pos, 1, \"-\");\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpg5xa9cwt: /tmp/tmpg5xa9cwt.cpp:33: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while (pos < s.size())\
    \ {\n        size_t prev = pos;\n        pos = s.find_first_not_of(\" \", pos);\n\
    \        if (pos == std::string::npos) {\n            pos = s.size();\n      \
    \  }\n        s.erase(prev, pos);\n        pos = s.find_first_of(\" \", pos);\n\
    \        if (pos == std::string::npos) {\n            pos = s.size();\n      \
    \  }\n        s.insert(prev, \"_\");\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061839
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    s.replace(s.begin(), s.end(), ' ');\n    size_t\
    \ prev = 0, pos = 0;\n    while (pos < s.size()) {\n        pos = s.find_first_not_of(\"\
    \ \", prev);\n        if (pos == std::string::npos) {\n            break;\n  \
    \      }\n        s.replace(pos, 1, std::string(\"-\"));\n        prev = pos +\
    \ 1;\n    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzuhjpara.cpp: In function \u2018std::string fix_spaces(std::string)\u2019\
    :\n/tmp/tmpzuhjpara.cpp:16:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, char)\u2019\n   16 |     s.replace(s.begin(),\
    \ s.end(), ' ');\n      |                                      ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzuhjpara.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:2045:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019 <near match>\n 2045 |       replace(__const_iterator __i1,\
    \ __const_iterat"
  stdout: ''
  timestamp: 1660061826
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while(pos < s.size())\
    \ {\n        size_t prev = pos;\n        pos = s.find_first_not_of(\" \", pos);\n\
    \        if(pos != std::string::npos) {\n            s.erase(prev, pos);\n   \
    \         s.insert(prev, \"_\");\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061839
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s.substr(0, 2) == \" \") {\n        s.replace(s.begin(),\
    \ s.begin() + 2, \"\");\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpupgj70l3: /tmp/tmpupgj70l3.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (pos < result.length())\
    \ {\n        result.replace(pos, 1, std::string(\"-\"));\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpkkmy0aso: /tmp/tmpkkmy0aso.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    size_t pos = 0;\n    while (pos < res.size())\
    \ {\n        size_t next = res.find(' ', pos);\n        if (next == std::string::npos)\
    \ {\n            next = res.size();\n        }\n        size_t len = next - pos;\n\
    \        if (len > 2) {\n            while (next < res.size() && res[next] ==\
    \ ' ') {\n                ++next;\n            }\n            while (next < res.size()\
    \ && res[next] == ' ') {\n                res[next] = '_';\n                ++next;\n\
    \            }\n        }\n        pos = next;\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpr9wk5his: /tmp/tmpr9wk5his.cpp:39: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_eikkl24: /tmp/tmp_eikkl24.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '_', ' ');\n    if (s.size() > 2) {\n  \
    \      std::replace(s.begin(), s.end(), '_', '-');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpur4kgsyj: /tmp/tmpur4kgsyj.cpp:26: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    std::size_t pos = 0;\n    while (pos < out.size())\
    \ {\n        pos = out.find_first_not_of(\" \", pos);\n        if (pos == std::string::npos)\
    \ break;\n        out.erase(pos, 1);\n        pos = out.find_first_not_of(\" \"\
    , pos);\n        if (pos == std::string::npos) break;\n        out.insert(pos,\
    \ \"_\");\n    }\n    return out;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061839
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    std::replace(s.begin(), s.end(), '  ', '-');\n    return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53xel74o.cpp:17:38: warning: multi-character character constant\
    \ [-Wmultichar]\n   17 |     std::replace(s.begin(), s.end(), '  ', '-');\n  \
    \    |                                      ^~~~\n/tmp/tmp53xel74o.cpp: In function\
    \ \u2018std::string fix_spaces(std::string)\u2019:\n/tmp/tmp53xel74o.cpp:17:47:\
    \ error: no matching function for call to \u2018replace(std::__cxx11::basic_string<char>::iterator,\
    \ std::__cxx11::basic_string<char>::iterator, int, char)\u2019\n   17 |     std::replace(s.begin(),\
    \ s.end(), '  ', '-');\n      |                                              \
    \ ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp53xel74o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note: candidate: \u2018template<class _FIter, class _Tp> void std::replace(_FIter,\
    \ _FIter, const _Tp&, const _Tp&)\u2019\n 4356 |     replace(_ForwardIterator\
    \ __first, _ForwardIterator __last,\n      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:4356:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp53xel74o.cpp:17:47:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    int\u2019 and \u2018char\u2019)\n   17 |     std::replace(s.begin(), s.end(),\
    \ '  ', '-');\n      |                                               ^\n"
  stdout: ''
  timestamp: 1660061829
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    size_t pos = 0;\n    while(pos <\
    \ fixed_text.size()) {\n        size_t next_space = fixed_text.find(' ', pos);\n\
    \        if(next_space == std::string::npos) {\n            fixed_text.replace(pos,\
    \ 1, \" \");\n        } else {\n            fixed_text.replace(pos, 1, \" _\"\
    );\n            pos = next_space + 1;\n        }\n    }\n    return fixed_text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061839
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (result.size()\
    \ > 2) {\n        size_t pos2 = result.find(\" \", pos);\n        while (pos2\
    \ != std::string::npos) {\n            result.replace(pos2, result.size() - 1,\
    \ std::string(\"-\"));\n            pos2 = result.find(\" \", pos2 + 1);\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpv6i_cgfv: /tmp/tmpv6i_cgfv.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2 && s[s.size() - 1] == ' ' && s[s.size() - 2] == ' ') {\n\
    \        s.replace(s.size() - 2, s.size() - 1, \"-\");\n    }\n    return s;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp5519hz0r: /tmp/tmp5519hz0r.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string out = text;\n    for(size_t i = 0; i < out.size(); i++) {\n\
    \        if(out[i] == ' ') {\n            out[i] = '_';\n        }\n        if(out[i]\
    \ == ' ' && out[i+1] == ' ') {\n            out[i] = '-';\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpxplklovy: /tmp/tmpxplklovy.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while (pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if (pos != std::string::npos)\
    \ {\n            result.replace(pos, 1, \" \");\n        }\n        pos = result.find_first_of(\"\
    \ \", pos);\n        if (pos != std::string::npos) {\n            result.replace(pos,\
    \ 1, std::string(\"-\"));\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061839
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '_');\n    std::replace(std::begin(res),\
    \ std::end(res), ' ', '_');\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmplmelg5zf: /tmp/tmplmelg5zf.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string fixed_text = text;\n    \n    // Replace all spaces with\
    \ underscores\n    size_t pos = 0;\n    while ((pos = fixed_text.find(\"  \",\
    \ pos)) != std::string::npos) {\n        fixed_text.replace(pos, 2, \"_\");\n\
    \        pos += 2;\n    }\n    \n    // Replace all consecutive spaces with -\n\
    \    pos = 0;\n    while ((pos = fixed_text.find(\"  \", pos)) != std::string::npos)\
    \ {\n        fixed_text.replace(pos, 2, \"\");\n        pos += 2;\n    }\n   \
    \ \n    return fixed_text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmprht7z1n8: /tmp/tmprht7z1n8.cpp:36: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::replace(text.begin(), text.end(), ' ', '_');\n    \n    int i =\
    \ 0;\n    while (i < text.size()) {\n        if (text[i] == ' ') {\n         \
    \   i++;\n            if (i == text.size()) {\n                std::replace(text.begin(),\
    \ text.end(), '_', ' ');\n            } else {\n                std::replace(text.begin(),\
    \ text.begin() + i, '_', '-');\n                i += 1;\n            }\n     \
    \   }\n        i++;\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp5p0h3pyd: /tmp/tmp5p0h3pyd.cpp:37: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \        std::replace(s.begin(), s.end(), '-', '_');\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6yhcdeu8: /tmp/tmp6yhcdeu8.cpp:28: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::replace(text.begin(), text.end(), ' ', '_');\n    std::replace(text.begin(),\
    \ text.end(), ' ', '_');\n    std::replace(text.begin(), text.end(), ' ', '_');\n\
    \    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpqg3vh22x: /tmp/tmpqg3vh22x.cpp:25: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while (pos < result.length())\
    \ {\n        pos = result.find_first_not_of(\" \", pos);\n        if (pos == std::string::npos)\
    \ {\n            break;\n        }\n        result.replace(pos, 1, \" \");\n \
    \       pos = result.find_first_not_of(\" \", pos + 1);\n        if (pos == std::string::npos)\
    \ {\n            break;\n        }\n        result.replace(pos, 1, \"-\");\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpg5xa9cwt: /tmp/tmpg5xa9cwt.cpp:33: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061833
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos += 1;\n    }\n    if (result.size() > 2) {\n        pos =\
    \ 0;\n        while ((pos = result.find(\" \", pos)) != std::string::npos) {\n\
    \            result.replace(pos, 1, std::string(\"-\"));\n            pos += 1;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpg4hp6e4k: /tmp/tmpg4hp6e4k.cpp:35: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    if (s.size() > 2) {\n        std::replace(s.begin(), s.end(), ' ', '_');\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwbp5pv03: /tmp/tmpwbp5pv03.cpp:27: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (result.size()\
    \ > 2) {\n        result.replace(result.find_last_not_of(\" \"), result.size(),\
    \ std::string(\"-\"));\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpw3a9ed8j: /tmp/tmpw3a9ed8j.cpp:28: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::size_t pos = 0;\n    while(pos < res.size())\
    \ {\n        pos = res.find_first_not_of(\" \", pos);\n        if(pos == std::string::npos)\
    \ {\n            break;\n        }\n        res.replace(pos, 1, std::string(\"\
    \ \"));\n        pos = res.find_first_not_of(\" \", pos);\n        if(pos == std::string::npos)\
    \ {\n            break;\n        }\n        res.replace(pos, 1, std::string(\"\
    -\"));\n    }\n    return res;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmplnzj72z6: /tmp/tmplnzj72z6.cpp:33: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while(pos < result.length())\
    \ {\n        size_t next = result.find_first_not_of(\" \", pos);\n        if(next\
    \ == std::string::npos) {\n            break;\n        }\n        result.replace(pos,\
    \ next - pos, \"_\");\n        pos = next + 1;\n    }\n    if(pos < result.length())\
    \ {\n        result.replace(pos, result.length(), \"_\");\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660061839
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = text;\n    std::replace(std::begin(res), std::end(res),\
    \ ' ', '_');\n    std::replace(std::begin(res), std::end(res), ' ', '_');\n  \
    \  std::replace(std::begin(res), std::end(res), ' ', '-');\n    return res;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6bxm7hpd: /tmp/tmp6bxm7hpd.cpp:26: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = text;\n    size_t pos = 0;\n    while ((pos = s.find_first_of('\
    \ ', pos)) != std::string::npos) {\n        s.replace( pos, 1, std::string(\"\
    _\") );\n        pos = s.find_first_of(' ', pos + 1);\n    }\n    while ((pos\
    \ = s.find_first_of('  ', pos)) != std::string::npos) {\n        s.replace( pos,\
    \ 2, std::string(\"-\") );\n        pos = s.find_first_of('  ', pos + 2);\n  \
    \  }\n    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpel6opghh: /tmp/tmpel6opghh.cpp:32: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = text;\n    size_t pos = 0;\n    while ((pos = result.find(\"\
    \ \", pos)) != std::string::npos) {\n        result.replace(pos, 1, std::string(\"\
    _\"));\n        pos = result.find(\" \", pos + 1);\n    }\n    if (pos < result.length())\
    \ {\n        result.replace(pos, 1, std::string(\"-\"));\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpkkmy0aso: /tmp/tmpkkmy0aso.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660061826

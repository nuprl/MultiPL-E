name: HumanEval_11_string_xor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input are two strings a and\
  \ b consisting only of 1s and 0s.\n// Perform binary XOR on these inputs and return\
  \ result also as a string.\n// >>> string_xor((\"010\"), (\"110\"))\n// (\"100\"\
  )\nstd::string string_xor(std::string a, std::string b) {\n"
tests: "}\nint main() {\n    auto candidate = string_xor;\n    assert(candidate((\"\
  111000\"), (\"101010\")) == (\"010010\"));\n    assert(candidate((\"1\"), (\"1\"\
  )) == (\"0\"));\n    assert(candidate((\"0101\"), (\"0000\")) == (\"0101\"));\n\
  }\n"
completions: ["    std::string result;\n    int carry = 0;\n    for (int i = 0; i\
    \ < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n\
    \        int z = x ^ y;\n        carry += z;\n        result.append(z + '0');\n\
    \    }\n    if (carry > 0) {\n        result.append(carry + '0');\n    }\n   \
    \ return result;", "    std::string result;\n    int n = a.size();\n    int m\
    \ = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n\
    \        if (a[i] != '0' && b[j] != '0') {\n            result += a[i];\n    \
    \        i++;\n        } else if (a[i] != '0' && b[j] == '0') {\n            result\
    \ += b[j];\n            j++;\n        } else if (a[i] != '0' && b[j] == '0') {\n\
    \            result += a[i];\n            i++;\n            j++;\n        } else\
    \ {\n            result += b[j];\n            j++;\n        }\n    }\n    while\
    \ (i < n) {\n        result += a[i];\n        i++;\n    }\n    while (j < m) {\n\
    \        result += b[j];\n        j++;\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result.append(z\
    \ + '0');\n    }\n    if (carry != 0) {\n        result.append(carry + '0');\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        ans += (std::tolower(a[i]) ^ std::tolower(b[j]));\n        i++;\n\
    \        j++;\n    }\n    return ans;", "    std::string ans = \"\";\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        ans\
    \ += (z % 10) + '0';\n        carry = z / 10;\n    }\n    if (carry != 0) {\n\
    \        ans += '1';\n    }\n    return ans;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z >> 2;\n        result += (z % 10) + '0';\n    }\n    if (carry != 0) {\n\
    \        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry\
    \ = (z <= 9) ? (0) : (1);\n    }\n    for (int i = 0; i < b.size(); i++) {\n \
    \       int x = b[i] - '0';\n        int y = ans[i] - '0';\n        int z = x\
    \ + y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n      \
    \  carry = (z <= 9) ? (0) : (1);\n    }\n    return ans;", "    std::string res;\n\
    \    int size = a.size();\n    int size2 = b.size();\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < size && j < size2) {\n        if (a[i] != b[j]) {\n \
    \           res += '0';\n        } else {\n            res += '1';\n        }\n\
    \        i++;\n        j++;\n    }\n    return res;", "    std::string ans = \"\
    \";\n    for (int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i]\
    \ ^ b[i]) + \"\");\n    }\n    return ans;", "    std::string res;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i]\
    \ + carry;\n        carry = val / 2;\n        res += (val % 2);\n    }\n    if\
    \ (carry != 0)\n        res += '1';\n    return res;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val\
    \ = a[i] - '0';\n        result += to_string(val + carry);\n        carry = val\
    \ >= '1';\n    }\n    for (int i = 0; i < b.size(); i++) {\n        int val =\
    \ b[i] - '0';\n        result += to_string(val + carry);\n        carry = val\
    \ >= '1';\n    }\n    result += to_string(carry);\n    return result;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x ^ y;\n        z = z + carry;\n\
    \        carry = z >> 5;\n        z = z % 10;\n        result += z + '0';\n  \
    \  }\n    if (carry != 0) {\n        result += carry + '0';\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int i =\
    \ 0; i < a.size(); i++) {\n        int sum = a[i] - b[i] + carry;\n        ans\
    \ += (sum < 10) ? sum + '0' : sum - 10;\n        carry = sum / 10;\n    }\n  \
    \  if (carry != 0)\n        ans += '1';\n    return ans;", "    std::string ans\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n  \
    \  if (carry != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result[i] = '0'\
    \ + z;\n    }\n    if (carry != 0) {\n        result[result.size() - 1] = '1'\
    \ + carry;\n    }\n    return result;", "    std::string result;\n    size_t i\
    \ = 0, j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] !=\
    \ '0' && a[i] != '1') break;\n        if (b[j] != '0' && b[j] != '1') break;\n\
    \        result[j] = '0' + (a[i] - '0') * 2 + (b[j] - '0') * 2;\n        i +=\
    \ 1;\n        j += 1;\n    }\n    while (i < a.size()) result.push_back(a[i++]);\n\
    \    while (j < b.size()) result.push_back(b[j++]);\n    return result;", "  \
    \  std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += a[i] ^ b[i];\n    }\n    return result;", "    std::string result;\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n        result\
    \ += carry + '0';\n    }\n    return result;", "    std::string result = \"\"\
    ;\n    for (size_t i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::to_string(int(b[i]) ^ int(a[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1)\
    \ + '0';\n        carry = (z >> 1);\n    }\n    if (carry != 0)\n        ans +=\
    \ '1';\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ a.size(); i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "  \
    \  std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n       \
    \ ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string result;\n   \
    \ int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n      \
    \  carry = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n\
    \    if (carry != 0) {\n        result[result.size() - 1] = '1' + carry;\n   \
    \ }\n    return result;", "    std::string ans = \"\";\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] != '0'\
    \ && a[i] != '1') {\n            ans += a[i];\n            i++;\n        } else\
    \ if (b[j] != '0' && b[j] != '1') {\n            ans += b[j];\n            j++;\n\
    \        } else {\n            ans += a[i] ^ b[j];\n            i++;\n       \
    \     j++;\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    int n = a.size();\n    int m = b.size();\n    for (int i = 0; i < n; i++)\
    \ {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int sum\
    \ = a[i] - b[i] + carry;\n        carry = sum / 2;\n        sum += carry % 2;\n\
    \        result.append(sum % 2);\n    }\n    if (carry != 0)\n        result.append(1);\n\
    \    return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result.append(z + '0');\n    }\n    if (carry != 0) {\n   \
    \     result.append(carry + '0');\n    }\n    return result;", "    std::string\
    \ res;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n       \
    \ int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n\
    \        carry = z / 10;\n        z = z % 10;\n        res += (char)('0' + z);\n\
    \    }\n    if (carry != 0) {\n        res += (char)('0' + carry);\n    }\n  \
    \  return res;", "    std::string ans = \"\";\n    for(int i = 0; i < a.size();\
    \ i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n\
    \    if (carry != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    int len1 = a.length();\n    int len2 = b.length();\n    int\
    \ i;\n    for (i = 0; i < len1; i++) {\n        ans += (std::to_string(std::stoi(a[i])\
    \ ^ std::stoi(b[i])));\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    int n = a.size();\n    int m = b.size();\n    for (int i = 0; i < n; i++)\
    \ {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        char c\
    \ = a[i];\n        int d = b[i] - '0';\n        if (d >= 10) {\n            d\
    \ -= 10;\n            carry = 1;\n        } else {\n            carry = 0;\n \
    \       }\n        result += std::to_string(d) + std::to_string(carry);\n    }\n\
    \    if (carry == 1) {\n        result += \"1\";\n    }\n    return result;",
  "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       ans += (z & 1) ? '1' : '0';\n        carry = z >> 1;\n    }\n    if (carry\
    \ != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        ans += (z & 10) + '0';\n    }\n   \
    \ if (carry != 0) {\n        ans += '1';\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (auto i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i])));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(a[i]))\
    \ ^ std::to_string(int(b[i])));\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n \
    \   }\n    if (carry != 0) {\n        result[result.size() - 1] = '1' + carry;\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        if (a[i] != b[j]) {\n            ans += a[i];\n            i++;\n\
    \            j++;\n        } else {\n            ans += a[i];\n            i++;\n\
    \            j++;\n        }\n    }\n    while (i < n) {\n        ans += a[i];\n\
    \        i++;\n    }\n    while (j < m) {\n        ans += b[j];\n        j++;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for (int i = 0; i\
    \ < a.size(); i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n\
    \    }\n    return ans;", "    std::string res;\n    int n = a.size();\n    int\
    \ m = b.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j <\
    \ m; j++) {\n            if(a[i] != '0' && a[i] != '1') continue;\n          \
    \  if(b[j] != '0' && b[j] != '1') continue;\n            if(a[i] == b[j]) res\
    \ += '1';\n            else res += '0';\n        }\n    }\n    return res;", " \
    \   std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n   \
    \     result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n \
    \       carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n\
    \    }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n  \
    \  return result;", "    std::string ans = \"\";\n    for (int i = 0; i < a.size();\
    \ i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n\
    \        carry += z;\n        result.append(z + '0');\n    }\n    if (carry >\
    \ 0) {\n        result.append(carry + '0');\n    }\n    return result;", "   \
    \ std::string result = \"\";\n    for(int i = 0; i < a.size(); i++) {\n      \
    \  result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(a[i])\
    \ ^ int(b[i])));\n    }\n    return ans;", "    std::string result;\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n    }\n    return\
    \ result;", "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        carry = z / 10;\n        ans = std::to_string(z % 10) +\
    \ ans;\n    }\n    if (carry != 0) {\n        ans = std::to_string(carry) + ans;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int carry = 0;\n \
    \   for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n      \
    \  int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1)\
    \ + '0';\n        carry = (z >> 1);\n    }\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z & 1) + '0';\n        carry = (z >> 1);\n\
    \    }\n    return ans;", "    std::string result;\n    size_t n = a.size();\n\
    \    size_t m = b.size();\n    size_t i = 0;\n    size_t j = 0;\n    while (i\
    \ < n && j < m) {\n        if (a[i] != b[j]) {\n            result += a[i];\n\
    \            i++;\n        } else {\n            result += b[j];\n           \
    \ j++;\n        }\n    }\n    while (i < n) {\n        result += a[i];\n     \
    \   i++;\n    }\n    while (j < m) {\n        result += b[j];\n        j++;\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int n = a.size();\n\
    \    int m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j\
    \ < m) {\n        int k = a[i] - '0';\n        int l = b[j] - '0';\n        ans\
    \ += (k ^ l);\n        i += 1;\n        j += 1;\n    }\n    while (i < n) {\n\
    \        int k = a[i] - '0';\n        ans += k;\n        i += 1;\n    }\n    while\
    \ (j < m) {\n        int l = b[j] - '0';\n        ans += l;\n        j += 1;\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x ^ y;\n        z = z + carry;\n        carry\
    \ = z >> 5;\n        z = z % 10;\n        result += std::to_string(z);\n    }\n\
    \    if (carry != 0) {\n        result += std::to_string(carry);\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    for (int i = 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return\
    \ ans;", "    std::string result = \"\";\n    int carry = 0;\n    for (int i =\
    \ 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] -\
    \ '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z = z\
    \ % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n        result\
    \ += carry + '0';\n    }\n    return result;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n        carry +=\
    \ z;\n        result.append(z + '0');\n    }\n    if (carry > 0) {\n        result.append(carry\
    \ + '0');\n    }\n    return result;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(b[i]) ^ int(a[i])));\n\
    \    }\n    return ans;", "    std::string result = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result += z + '0';\n    }\n    if (carry != 0)\n\
    \        result += carry + '0';\n    return result;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.length(); i++) {\n        int x\
    \ = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n\
    \        carry = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n\
    \    }\n    if (carry != 0) {\n        result.append(carry + '0');\n    }\n  \
    \  return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x ^ y;\n        z = z + carry;\n        carry = z >>\
    \ 5;\n        z = z % 10;\n        result += std::to_string(z);\n    }\n    if\
    \ (carry != 0) {\n        result += std::to_string(carry);\n    }\n    return\
    \ result;", "    std::string res;\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != '0' && a[i] != '1') break;\n        if (b[j] != '0' && b[j] != '1') break;\n\
    \        res += a[i++] - '0';\n        res += b[j++] - '0';\n    }\n    while\
    \ (i < n) {\n        res += a[i++] - '0';\n    }\n    while (j < m) {\n      \
    \  res += b[j++] - '0';\n    }\n    return res;", "    std::string result;\n \
    \   for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n  \
    \  }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z & 1)\
    \ + '0';\n        carry = (z >> 1);\n    }\n    for (int i = a.size() - 1; i >=\
    \ 0; i--) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n      \
    \  int z = x + y + carry;\n        ans += (z & 1) + '0';\n        carry = (z >>\
    \ 1);\n    }\n    if (carry != 0) {\n        ans += '1';\n    }\n    return ans;",
  "    std::string result = \"\";\n    for(int i = 0; i < a.size(); i++) {\n     \
    \   result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        carry +=\
    \ (a[i] ^ b[i]) + 1;\n        result.append(1, carry % 2);\n        carry /= 2;\n\
    \    }\n    if (carry != 0)\n        result.append(1, carry);\n    return result;",
  "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += a[i] ^ b[i];\n    }\n    return result;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result.append(z + '0');\n    }\n   \
    \ if (carry != 0)\n        result.append(carry + '0');\n    return result;", " \
    \   std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result.append(1,\
    \ z);\n    }\n    if (carry != 0) {\n        result.append(1, carry);\n    }\n\
    \    return result;", "    std::string ans = \"\";\n    int n = a.size();\n  \
    \  int m = b.size();\n    int i, j;\n    for (i = 0; i < n; i++) {\n        for\
    \ (j = 0; j < m; j++) {\n            ans += (a[i] ^ b[j]);\n        }\n    }\n\
    \    return ans;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result.append(z + '0');\n    }\n    if (carry != 0) {\n   \
    \     result.append(carry + '0');\n    }\n    return result;", "    std::string\
    \ result;\n    int n = a.size();\n    int m = b.size();\n    int k = max(m, n);\n\
    \    for (int i = 0; i < k; i++) {\n        result += a[i]^b[i];\n    }\n    return\
    \ result;", "    std::string result;\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n\
    \        int z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n\
    \        result.append(z + '0');\n    }\n    if (carry != 0) {\n        result.append(carry\
    \ + '0');\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i]\
    \ - carry;\n        carry = x >> 1;\n        result += (char)(x & 1);\n    }\n\
    \    if (carry != 0) {\n        result += (char)(carry);\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int sum = (int) a[i] ^ int(b[i]) + carry;\n        carry = sum\
    \ / 2;\n        sum += sum % 2;\n        result.push_back(sum + '0');\n    }\n\
    \    if (carry != 0) {\n        result.push_back(carry + '0');\n    }\n    return\
    \ result;", "    std::string result;\n    for(int i = 0; i < a.size(); i++) {\n\
    \        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        z = z % 10;\n        result.append(z + '0');\n    }\n    if\
    \ (carry != 0) {\n        result.append(carry + '0');\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.length();\
    \ i++) {\n        char c = a[i];\n        int d = b[i] - '0';\n        if (d >=\
    \ '0' && d <= '9') {\n            d -= '0';\n            carry = 1;\n        }\
    \ else if (d >= 'a' && d <= 'z') {\n            d -= 'a' - 10;\n            carry\
    \ = 1;\n        } else {\n            carry = 1;\n        }\n        result +=\
    \ std::to_string(d ^ carry)[0];\n    }\n    return std::string(result);", "  \
    \  std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n       \
    \ ans += (std::to_string(std::binary_function<int, int, int>()(a[i], b[i])) ^\
    \ a[i]);\n    }\n    return ans;", "    std::string result;\n    for(int i = 0;\
    \ i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;",
  "    std::string result;\n    int n = a.size();\n    int m = b.size();\n    int\
    \ k = n / m;\n    int remain = n % m;\n    for (int i = 0; i < k; i++) {\n   \
    \     result += a[i] ^ b[i];\n    }\n    if (remain > 0) {\n        result +=\
    \ a[n - remain] ^ b[n - remain];\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.length(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        carry = z / 10;\n        ans = ans + static_cast<char>(z\
    \ % 10);\n    }\n    if (carry != 0)\n        ans = ans + '1';\n    return ans;",
  "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n   \
    \ for (int i = 0; i < n; i++) {\n        ans += (std::to_string(std::stoi(a[i]))\
    \ ^ std::stoi(b[i])) + \"\";\n    }\n    return ans;", "    std::string result\
    \ = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - b[i]\
    \ + carry;\n        carry = val / 2;\n        val = val % 2;\n        result.append(1,\
    \ val);\n    }\n    if (carry != 0)\n        result.append(1, carry);\n    return\
    \ result;", "    std::string result;\n    std::string a1 = a.substr(0, a.size()\
    \ - 1);\n    std::string b1 = b.substr(0, b.size() - 1);\n    std::string a2 =\
    \ a.substr(a.size() - 1, a.size());\n    std::string b2 = b.substr(b.size() -\
    \ 1, b.size());\n    std::string a3 = a.substr(0, a.size() - 1);\n    std::string\
    \ b3 = b.substr(0, b.size() - 1);\n    std::string a4 = a.substr(a.size() - 1,\
    \ a.size());\n    std::string b4 = b.substr(b.size() - 1, b.size());\n    std::string\
    \ a5 = a.substr(0, a.size() - 1);\n    std::string b5 = b.substr(0, b.size() -\
    \ 1);\n    std::string a6 = a.substr(a.size() - 1, a.size());\n    std::string\
    \ b6 = b.substr(b.size() - 1, b.size());\n    std::string a7 = a.substr(0, a.size()\
    \ - 1);\n    std::string b7 = b.substr(0, b.size() - 1);\n    std::string a8 =\
    \ a.substr(a.size() - 1, a.size());\n    std::string b8 = b.substr(b.size() -\
    \ 1, b.size());\n    std::string a9 = a.substr(0, a.size() - 1);\n    std::string\
    \ b9 = b.substr(0, b.size() - 1);\n    std::string a10 = a.substr(a.size() - 1,\
    \ a.size());\n    std::string b10 = b.substr(b.size() - 1, b.size());\n    std::string\
    \ a11 = a.substr(0, a.size() - 1);\n    std::string b11 = b.substr(0, b.size()\
    \ - 1);\n    std::string a12 = a.substr(a.size() - 1, a.size());\n    std::string\
    \ b12 = b.substr(b.size() - 1, b.size());\n    std::string a13 = a.substr(0, a.size()\
    \ - 1);\n    std::string b13 = b.substr(0, b.size() - 1);\n    std::string a14\
    \ = a.substr(a.size() - 1, a.size());\n    std::string b14 = b.substr(b.size()\
    \ - 1, b.size());\n    std::string a15 = a.substr(0, a.size() - 1);\n    std::string\
    \ b15 = b.substr(0, b.size() - 1);\n    std::string a16 = a.substr(a.size() -\
    \ 1, a.size());\n    std::string b16 = b.substr(b.size() - 1, b.size());\n   \
    \ std::string a17 = a.substr(0, a.size() - 1);\n    std::string b17 = b.substr(0,\
    \ b.size() - 1);\n    std::string a18 = a.substr(a.size() - 1, a.size());\n  \
    \  std::string b18 = b.substr(b.size() - 1, b.size());\n    std::string a19 =\
    \ a.substr(0, a.size() - 1);\n    std::string b19 = b.substr(0, b.size() - 1);\n\
    \    std::string ", "    std::string ans = \"\";\n    int n = a.size();\n    int\
    \ m = b.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n\
    \        ans += (std::tolower(a[i]) ^ std::tolower(b[j]));\n        i += 1;\n\
    \        j += 1;\n    }\n    return ans;", "    std::string ans = \"\";\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        ans\
    \ += (z & 1) + '0';\n        carry = (z >> 1);\n    }\n    if (carry) {\n    \
    \    ans += '1';\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i] ^ b[i]) + \"\
    0\");\n    }\n    return ans;", "    std::string ans = \"\";\n    int carry =\
    \ 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry =\
    \ z / 10;\n        ans = std::to_string(z % 10) + ans;\n    }\n    if (carry !=\
    \ 0) {\n        ans = std::to_string(carry) + ans;\n    }\n    return ans;", " \
    \   std::string result = \"\";\n    for (auto &c : a) {\n        result += std::bitset<8>(c).to_ulong()\
    \ ^ std::bitset<8>(b).to_ulong();\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry\
    \ = (z <= 9) ? (z - 10 + 'a') : z;\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n\
    \        z = z + carry;\n        carry = z >> 5;\n        z = z % 10;\n      \
    \  result += std::to_string(z);\n    }\n    if (carry != 0) {\n        result\
    \ += std::to_string(carry);\n    }\n    return result;", "    std::string result\
    \ = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result += z +\
    \ '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n    }\n\
    \    return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int sum = (int)a[i] - b[i] - carry;\n \
    \       carry = sum / 2;\n        sum += sum % 2;\n        result.append(1, sum);\n\
    \    }\n    if (carry != 0)\n        result.append(1, carry);\n    return result;",
  "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.length();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z <= 9) ? z + '0' : z - 10;\n        carry\
    \ = z >> 0;\n    }\n    for (int i = a.length(); i < b.length(); i++) {\n    \
    \    int x = b[i] - '0';\n        int y = carry;\n        int z = x + y + carry;\n\
    \        ans += (z <= 9) ? z + '0' : z - 10;\n        carry = z >> 0;\n    }\n\
    \    if (carry != 0)\n        ans += carry;\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result.append(z\
    \ + '0');\n    }\n    if (carry != 0) {\n        result.append(carry + '0');\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        carry += (a[i] ^ b[i]) + carry;\n\
    \        result.append(1, carry % 2);\n        carry /= 2;\n    }\n    while (carry)\
    \ {\n        result.append(1, carry % 2);\n        carry /= 2;\n    }\n    return\
    \ result;", "    std::string result;\n    int n = a.size();\n    int m = b.size();\n\
    \    int m = m % n;\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m)\
    \ {\n        if (a[i] != b[j]) {\n            result += a[i];\n            i++;\n\
    \        }\n        else {\n            result += b[j];\n            j++;\n  \
    \      }\n    }\n    while (i < n) {\n        result += a[i];\n        i++;\n\
    \    }\n    while (j < m) {\n        result += b[j];\n        j++;\n    }\n  \
    \  return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n        result\
    \ += carry + '0';\n    }\n    return result;", "    std::string result;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n    }\n  \
    \  return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result.append(z + '0');\n    }\n    if (carry != 0) {\n   \
    \     result.append(carry + '0');\n    }\n    return result;", "    std::string\
    \ result;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result = \"\";\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result += z + '0';\n    }\n    if (carry\
    \ != 0) {\n        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(a[i]))\
    \ ^ std::to_string(int(b[i])));\n    }\n    return ans;", "    std::string result;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n       \
    \ int y = b[i] - '0';\n        int z = x ^ y;\n        carry += z;\n        result.append(1,\
    \ z + '0');\n    }\n    if (carry != 0) {\n        result.append(1, carry + '0');\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z % 10)\
    \ + '0';\n        carry = z / 10;\n    }\n    if (carry != 0)\n        ans +=\
    \ '1';\n    return ans;", "    std::string result = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n\
    \        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        char c = a[i];\n        int x = c ^ b[i];\n        result += to_string((x\
    \ ^ carry) % 2);\n        carry = x >> 1;\n    }\n    if (carry != 0) {\n    \
    \    result += to_string(carry);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? z + '0' : z - 10;\n        carry = z >>\
    \ 6;\n    }\n    if (carry != 0) ans += '1';\n    return ans;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n       \
    \ int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if (carry != 0)\
    \ {\n        result[result.size() - 1] = '1' + carry;\n    }\n    return result;",
  "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.length();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x ^ y;\n        ans += (z & 1) ? \"1\" : \"0\";\n        carry = z >> 1;\n\
    \    }\n    ans += carry;\n    return ans;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result += std::to_string(z);\n    }\n\
    \    if (carry != 0)\n        result += std::to_string(carry);\n    return result;",
  "    std::string ans = \"\";\n    for (auto i = 0; i < a.size(); i++) {\n      \
    \  ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n    }\n    return ans;",
  "    std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n\
    \        carry = (z <= 9) ? 1 : 0;\n    }\n    for (int i = a.size() - 1; i >=\
    \ 0; i--) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n      \
    \  int z = x + y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n\
    \        carry = (z <= 9) ? 1 : 0;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(a[i])\
    \ ^ std::to_string(b[i]));\n    }\n    return ans;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        char c\
    \ = a[i];\n        char d = b[i];\n        char xor = c ^ d;\n        char temp\
    \ = (carry << 1) | xor;\n        carry = temp;\n        result += std::to_string(temp);\n\
    \    }\n    if (carry != 0) {\n        result += std::to_string(carry);\n    }\n\
    \    return result;", "    std::string res;\n    int n = a.size();\n    int m\
    \ = b.size();\n    int max_n = std::max(m, n);\n    int max_m = std::max(m, n);\n\
    \    for (int i = 0; i < max_n; i++) {\n        for (int j = 0; j < max_m; j++)\
    \ {\n            int sum = 0;\n            for (int k = 0; k < n; k++) {\n   \
    \             sum += a[k] == b[k] ? 1 : 0;\n            }\n            res +=\
    \ (sum % 2 == 1) ? '1' : '0';\n        }\n    }\n    return res;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.length(); i++) {\n        char c = a[i];\n        char\
    \ d = b[i];\n        int x = c ^ d;\n        carry = x >> 1;\n        result +=\
    \ to_string(carry);\n    }\n    if (carry != 0) {\n        result += to_string(carry);\n\
    \    }\n    return result;", "    std::string result;\n    int n = a.size();\n\
    \    int m = b.size();\n    int m = m > n ? n : m;\n    for (int i = 0; i < m;\
    \ i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - b[i] - carry;\n        carry = x >> 1;\n        result +=\
    \ to_string(x);\n    }\n    if (carry != 0)\n        result += to_string(carry);\n\
    \    return result;", "    std::string ans = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int val = a[i] - '0';\n        int\
    \ val2 = b[i] - '0';\n        int res = val ^ val2;\n        ans += (char)('0'\
    \ + res);\n        carry = 1;\n        if (carry && i < a.size() - 1) {\n    \
    \        ans += '0';\n        }\n    }\n    if (carry) {\n        ans += '1';\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    int i = 0;\n    int\
    \ j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] != b[j])\
    \ {\n            ans += '0';\n        } else {\n            ans += '1';\n    \
    \    }\n        i++;\n        j++;\n    }\n    return ans;", "    std::string\
    \ res;\n    int n = a.size();\n    int m = b.size();\n    for(int i = 0; i < n;\
    \ i++) {\n        for(int j = 0; j < m; j++) {\n            if(a[i] != b[j]) {\n\
    \                res += '0';\n            } else {\n                res += '1';\n\
    \            }\n        }\n    }\n    return res;", "    std::string ans = \"\"\
    ;\n    for (size_t i = 0; i < a.size(); i++) {\n        ans += (std::to_string(int(b[i])\
    \ ^ int(a[i])));\n    }\n    return ans;", "    std::string result;\n    int n\
    \ = a.size();\n    int m = b.size();\n    int k = n >= m ? n : m;\n    for (int\
    \ i = 0; i < k; i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        char c = a[i] - '0';\n        char d = b[i] - '0';\n       \
    \ char e = c ^ d;\n        char f = e + carry;\n        carry = f / 10;\n    \
    \    result += f % 10;\n    }\n    if (carry != 0) {\n        result += carry\
    \ + '0';\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n\
    \        int y = b[i] - '0';\n        int z = x ^ y;\n        carry += z < 0 ?\
    \ 1 : 0;\n        result += to_string(z);\n    }\n    result += to_string(carry);\n\
    \    return result;", "    std::string result = \"\";\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n       \
    \ int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n\
    \        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ result;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string result;\n    for(int i\
    \ = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return\
    \ result;", "    std::string result = \"\";\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int val = a[i] - '0';\n        result +=\
    \ to_string(val ^ b[i]) + carry;\n        carry = val >> 5;\n    }\n    if (carry\
    \ != 0) result += to_string(carry);\n    return result;", "    std::string ans\
    \ = \"\";\n    int lena = a.length();\n    int lenb = b.length();\n    int i =\
    \ 0;\n    int j = 0;\n    while (i < lena && j < lenb) {\n        int k = a[i]\
    \ - '0';\n        int l = b[j] - '0';\n        ans += (k ^ l);\n        i += 1;\n\
    \        j += 1;\n    }\n    while (i < lena) {\n        int k = a[i] - '0';\n\
    \        ans += k;\n        i += 1;\n    }\n    while (j < lenb) {\n        int\
    \ l = b[j] - '0';\n        ans += l;\n        j += 1;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for (int i = 0; i < a.size(); i++) {\n       \
    \ ans += (std::to_string(int(a[i])) ^ std::to_string(int(b[i])));\n    }\n   \
    \ return ans;", "    std::string result;\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != '0' && b[j] != '0') {\n            result += a[i] - '0';\n            i++;\n\
    \        } else if (a[i] != '0' && b[j] == '0') {\n            result += a[i]\
    \ - '0';\n            i++;\n        } else if (a[i] != '0' && b[j] != '0') {\n\
    \            result += b[j] - '0';\n            j++;\n        } else if (a[i]\
    \ != '0' && b[j] == '0') {\n            result += b[j] - '0';\n            j++;\n\
    \        } else {\n            result += a[i] - '0';\n            i++;\n     \
    \       j++;\n        }\n    }\n    while (i < n) {\n        result += a[i] -\
    \ '0';\n        i++;\n    }\n    while (j < m) {\n        result += b[j] - '0';\n\
    \        j++;\n    }\n    return result;", "    std::string result;\n    int carry\
    \ = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int sum = a[i] - b[i]\
    \ + carry;\n        carry = sum / 2;\n        sum += carry % 2;\n        result.append(1,\
    \ sum % 2);\n    }\n    if (carry != 0) {\n        result.append(1, carry);\n\
    \    }\n    return result;", "    std::string result;\n    for(int i = 0; i <\
    \ a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;",
  "    std::string ans = \"\";\n    int lena = a.length();\n    int lenb = b.length();\n\
    \    int maxlen = lena > lenb ? lena : lenb;\n    for (int i = 0; i < maxlen;\
    \ i++) {\n        ans += (std::to_string(std::stoi(a[i]) ^ std::stoi(b[i])));\n\
    \    }\n    return ans;", "    std::string result = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n\
    \        result += carry + '0';\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int n = a.size();\n    int m = b.size();\n    for (int i =\
    \ 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "  \
    \  std::string result;\n    for(int i = 0; i < a.size(); i++) {\n        result\
    \ += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n  \
    \  }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int val = a[i] - '0';\n   \
    \     int val2 = b[i] - '0';\n        int res = val + val2 + carry;\n        ans\
    \ += (val < 10 ? '0' : '') + res;\n        carry = res / 10;\n    }\n    if (carry\
    \ != 0)\n        ans += '1';\n    return ans;", "    std::string ans = \"\";\n\
    \    for(int i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i])));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    int n = a.size();\n    int m = b.size();\n    int i, j;\n    for (i =\
    \ 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            ans += (std::tolower(a[i])\
    \ ^ std::tolower(b[j]));\n        }\n    }\n    return ans;", "    std::string\
    \ result;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^\
    \ b[i]);\n    }\n    return result;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < a.size(); i++) {\n        ans += (std::to_string(std::bitset<8>(a[i])\
    \ ^ std::bitset<8>(b[i])));\n    }\n    return ans;", "    std::string result;\n\
    \    int n = a.size();\n    int m = b.size();\n    int k = n >= m ? n : m;\n \
    \   for (int i = 0; i < k; i++) {\n        result += (a[i] ^ b[i]);\n    }\n \
    \   return result;", "    std::string result;\n    for(int i = 0; i < a.size();\
    \ i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int n = a.size();\n    int m = b.size();\n    for(int i = 0;\
    \ i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "    std::string\
    \ result;\n    for(int i = 0; i < a.size(); i++) {\n        result += a[i] ^ b[i];\n\
    \    }\n    return result;", "    std::string result;\n    for(int i = 0; i <\
    \ a.size(); i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;",
  "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    result += (a[i] ^ b[i]);\n    }\n    return result;", "    std::string result;\n\
    \    for(int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n \
    \   }\n    return result;", "    std::string result = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n\
    \        z = z % 10;\n        result += z + '0';\n    }\n    if (carry != 0)\n\
    \        result += carry + '0';\n    return result;", "    std::string result;\n\
    \    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        char c\
    \ = a[i];\n        char d = b[i];\n        int x = c ^ d;\n        carry += x\
    \ >> 1;\n        carry += x & 1;\n        result += to_string(carry);\n    }\n\
    \    if (carry > 0) {\n        result += to_string(carry);\n    }\n    return\
    \ result;", "    std::string result;\n    int carry = 0;\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n\
    \        int z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n\
    \        result[i] = '0' + z;\n    }\n    if (carry != 0) {\n        result[result.size()\
    \ - 1] = '1' + carry;\n    }\n    return result;", "    std::string result;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    for (int i = 0;\
    \ i < a.size(); i++) {\n        ans += (std::to_string(int(a[i])) ^ std::to_string(int(b[i])));\n\
    \    }\n    return ans;", "    std::string result;\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.length(); i++) {\n        int val = a[i] - '0';\n        val\
    \ = val + b[i] - '0';\n        val = val + carry;\n        carry = val / 10;\n\
    \        val = val % 10;\n        result.append(val + '0');\n    }\n    if (carry\
    \ != 0) {\n        result.append(carry + '0');\n    }\n    return result;", " \
    \   std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n  \
    \  int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i]\
    \ != b[j]) {\n            ans += a[i];\n            i++;\n        } else {\n \
    \           ans += a[i];\n            i++;\n            j++;\n        }\n    }\n\
    \    while (i < n) {\n        ans += a[i];\n        i++;\n    }\n    while (j\
    \ < m) {\n        ans += b[j];\n        j++;\n    }\n    return ans;", "    std::string\
    \ result;\n    size_t size = a.size();\n    size_t bsize = b.size();\n    size_t\
    \ maxsize = std::max(size, bsize);\n    for (size_t i = 0; i < maxsize; i++) {\n\
    \        char c = a[i] ^ b[i];\n        result.push_back(c);\n    }\n    return\
    \ result;", "    std::string ans = \"\";\n    int carry = 0;\n    for (int i =\
    \ 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i] -\
    \ '0';\n        int z = x + y + carry;\n        ans += (z <= 9) ? (z + '0') :\
    \ (z - 10 + 'a');\n        carry = (z <= 9) ? (0) : (1);\n    }\n    return ans;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result\
    \ += z + '0';\n    }\n    if (carry != 0) {\n        result += carry + '0';\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    int carry = 0;\n\
    \    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n     \
    \   int y = b[i] - '0';\n        int z = x + y + carry;\n        ans += (z <=\
    \ 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 4;\n    }\n    for (int\
    \ i = 0; i < b.size(); i++) {\n        int x = b[i] - '0';\n        int y = ans[i]\
    \ - '0';\n        int z = x + y + carry;\n        ans += (z <= 9) ? (z + '0')\
    \ : (z - 10 + 'a');\n        carry = z >> 4;\n    }\n    return ans;", "    std::string\
    \ result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n    \
    \    int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y +\
    \ carry;\n        carry = z / 10;\n        z = z % 10;\n        result.append(1,\
    \ z);\n    }\n    if (carry != 0) {\n        result.append(1, carry);\n    }\n\
    \    return result;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - b[i] - carry;\n        carry\
    \ = x >> 1;\n        result += (char) x;\n    }\n    if (carry != 0)\n       \
    \ result += (char) carry;\n    return result;", "    std::string ans = \"\";\n\
    \    int n = a.size();\n    int m = b.size();\n    int i = 0;\n    int j = 0;\n\
    \    while (i < n && j < m) {\n        int k = a[i] - '0';\n        int l = b[j]\
    \ - '0';\n        if (k > 0 && l > 0) {\n            ans += '1';\n           \
    \ i += 1;\n            j += 1;\n        } else if (k > 0 && l < 0) {\n       \
    \     ans += '0';\n            i += 1;\n        } else if (k < 0 && l > 0) {\n\
    \            ans += '0';\n            j += 1;\n        } else {\n            ans\
    \ += '0';\n        }\n    }\n    while (i < n) {\n        ans += '0';\n      \
    \  i += 1;\n    }\n    while (j < m) {\n        ans += '0';\n        j += 1;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ a.size(); i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "  \
    \  std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - b[i] + carry;\n        carry = x >> 1;\n    \
    \    result += (char)(x & 1);\n    }\n    if (carry != 0) {\n        result +=\
    \ (char)(carry);\n    }\n    return result;", "    std::string ans = \"\";\n \
    \   int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x =\
    \ a[i] - '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n        ans\
    \ += (z & 1) ? \"1\" : \"0\";\n        carry = z >> 1;\n    }\n    ans += carry;\n\
    \    return ans;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result.append(z + '0');\n    }\n    if (carry != 0) {\n   \
    \     result.append(carry + '0');\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    int n = a.size();\n    int m = b.size();\n    for (int i =\
    \ 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return ans;", "  \
    \  std::string ans = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n\
    \        carry = z >> 4;\n    }\n    for (int i = a.size() - 1; i >= 0; i--) {\n\
    \        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x +\
    \ y + carry;\n        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry\
    \ = z >> 4;\n    }\n    if (carry != 0) {\n        ans += 'a';\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        ans +=\
    \ a[i] ^ b[j];\n        i++;\n        j++;\n    }\n    return ans;", "    std::string\
    \ result;\n    int n = a.size();\n    int m = b.size();\n    for (int i = 0; i\
    \ < n; i++) {\n        result += a[i] ^ b[i];\n    }\n    return result;", " \
    \   std::string ans = \"\";\n    int lena = a.length();\n    int lenb = b.length();\n\
    \    int i;\n    for (i = 0; i < lena; i++) {\n        ans += (std::to_string(a[i])\
    \ ^ std::to_string(b[i]));\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int\
    \ x = a[i] - '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n\
    \        ans += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 4;\n\
    \    }\n    for (int i = a.size() - 1; i >= 0; i--) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        ans\
    \ += (z <= 9) ? (z + '0') : (z - 10 + 'a');\n        carry = z >> 4;\n    }\n\
    \    return ans;", "    std::string result;\n    int carry = 0;\n    for (int\
    \ i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y = b[i]\
    \ - '0';\n        int z = x + y + carry;\n        carry = z / 10;\n        z =\
    \ z % 10;\n        result += z + '0';\n    }\n    if (carry != 0) {\n        result\
    \ += carry + '0';\n    }\n    return result;", "    std::string result;\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x + y + carry;\n        carry\
    \ = z / 10;\n        z = z % 10;\n        result[i] = '0' + z;\n    }\n    if\
    \ (carry != 0) {\n        result[a.size()] = '1' + carry;\n    }\n    return result;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - '0';\n        int y = b[i] - '0';\n        int\
    \ z = x + y + carry;\n        carry = z / 10;\n        z = z % 10;\n        result.append(z\
    \ + '0');\n    }\n    if (carry != 0) {\n        result.append(carry + '0');\n\
    \    }\n    return result;", "    std::string result;\n    int carry = 0;\n  \
    \  for (int i = 0; i < a.size(); i++) {\n        char c = a[i];\n        char\
    \ d = b[i];\n        char e = c ^ d;\n        char f = e + carry;\n        carry\
    \ = f / 10;\n        result += f % 10;\n    }\n    if (carry != 0)\n        result\
    \ += carry + '0';\n    return result;", "    std::string ans = \"\";\n    int\
    \ carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i] -\
    \ '0';\n        int y = b[i] - '0';\n        int z = x ^ y;\n        ans += (z\
    \ & 1) ? \"1\" : \"0\";\n        carry = z >> 1;\n    }\n    if (carry != 0) {\n\
    \        ans += \"1\";\n    }\n    return ans;", "    std::string result;\n  \
    \  int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int x = a[i]\
    \ - b[i] + carry;\n        carry = x >> 1;\n        result += to_string(x);\n\
    \    }\n    if (carry != 0)\n        result += to_string(carry);\n    return result;",
  "    std::string res;\n    int n = a.size();\n    int m = b.size();\n    int k =\
    \ n >= m ? n : m;\n    for (int i = 0; i < k; i++) {\n        char c = a[i];\n\
    \        res += c;\n        c = b[i];\n        res += c;\n    }\n    return res;",
  "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size();\
    \ i++) {\n        int x = a[i] - b[i] - carry;\n        carry = x >> 31;\n   \
    \     result += (char)(x & 7);\n    }\n    if (carry != 0) result += (char) carry;\n\
    \    return result;", "    std::string ans = \"\";\n    for(int i = 0; i < a.size();\
    \ i++) {\n        ans += (std::to_string(a[i]) ^ std::to_string(b[i]));\n    }\n\
    \    return ans;", "    std::string result = \"\";\n    int carry = 0;\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        int x = a[i] - '0';\n        int y\
    \ = b[i] - '0';\n        int z = x + y + carry;\n        carry = z >> 2;\n   \
    \     result += (z % 10) + '0';\n    }\n    if (carry != 0) {\n        result\
    \ += carry + '0';\n    }\n    return result;", "    std::string result;\n    int\
    \ n = a.size();\n    int m = b.size();\n    int k = n >= m ? n : m;\n    for (int\
    \ i = 0; i < k; i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;",
  "    std::string ans = \"\";\n    int n = a.size();\n    int m = b.size();\n   \
    \ for (int i = 0; i < n; i++) {\n        ans += a[i] ^ b[i];\n    }\n    return\
    \ ans;"]
stop_tokens:
- "\n}"

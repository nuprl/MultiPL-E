name: HumanEval_129_minPath
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a grid with N rows\
  \ and N columns (N >= 2) and a positive integer k, \n// each cell of the grid contains\
  \ a value. Every integer in the range [1, N * N]\n// inclusive appears exactly once\
  \ on the cells of the grid.\n// You have to find the minimum path of length k in\
  \ the grid. You can start\n// from any cell, and in each step you can move to any\
  \ of the neighbor cells,\n// in other words, you can go to cells which share an\
  \ edge with you current\n// cell.\n// Please note that a path of length k means\
  \ visiting exactly k cells (not\n// necessarily distinct).\n// You CANNOT go off\
  \ the grid.\n// A path A (of length k) is considered less than a path B (of length\
  \ k) if\n// after making the ordered vectors of the values on the cells that A and\
  \ B go\n// through (let's call them lst_A and lst_B), lst_A is lexicographically\
  \ less\n// than lst_B, in other words, there exist an integer index i (1 <= i <=\
  \ k)\n// such that lst_A[i] < lst_B[i] and for any j (1 <= j < i) we have\n// lst_A[j]\
  \ = lst_B[j].\n// It is guaranteed that the answer is unique.\n// Return an ordered\
  \ vector of the values on the cells that the minimum path go through.\n// Examples:\
  \    \n// >>> minPath((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}),\
  \ (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})})), (3))\n//\
  \ (std::vector<long>({(long)1, (long)2, (long)1}))\n// >>> minPath((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)5,\
  \ (long)9, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)1, (long)6}),\
  \ (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)2})})), (1))\n//\
  \ (std::vector<long>({(long)1}))\nstd::vector<long> minPath(std::vector<std::vector<long>>\
  \ grid, long k) {\n"
tests: "}\nint main() {\n    auto candidate = minPath;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}),\
  \ (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})})), (3)) ==\
  \ (std::vector<long>({(long)1, (long)2, (long)1})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)5,\
  \ (long)9, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)1, (long)6}),\
  \ (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)2})})), (1)) ==\
  \ (std::vector<long>({(long)1})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)6,\
  \ (long)7, (long)8}), (std::vector<long>)std::vector<long>({(long)9, (long)10, (long)11,\
  \ (long)12}), (std::vector<long>)std::vector<long>({(long)13, (long)14, (long)15,\
  \ (long)16})})), (4)) == (std::vector<long>({(long)1, (long)2, (long)1, (long)2})));\n\
  \    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)6,\
  \ (long)4, (long)13, (long)10}), (std::vector<long>)std::vector<long>({(long)5,\
  \ (long)7, (long)12, (long)1}), (std::vector<long>)std::vector<long>({(long)3, (long)16,\
  \ (long)11, (long)15}), (std::vector<long>)std::vector<long>({(long)8, (long)14,\
  \ (long)9, (long)2})})), (7)) == (std::vector<long>({(long)1, (long)10, (long)1,\
  \ (long)10, (long)1, (long)10, (long)1})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)8,\
  \ (long)14, (long)9, (long)2}), (std::vector<long>)std::vector<long>({(long)6, (long)4,\
  \ (long)13, (long)15}), (std::vector<long>)std::vector<long>({(long)5, (long)7,\
  \ (long)1, (long)12}), (std::vector<long>)std::vector<long>({(long)3, (long)10,\
  \ (long)11, (long)16})})), (5)) == (std::vector<long>({(long)1, (long)7, (long)1,\
  \ (long)7, (long)1})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)11,\
  \ (long)8, (long)7, (long)2}), (std::vector<long>)std::vector<long>({(long)5, (long)16,\
  \ (long)14, (long)4}), (std::vector<long>)std::vector<long>({(long)9, (long)3, (long)15,\
  \ (long)6}), (std::vector<long>)std::vector<long>({(long)12, (long)13, (long)10,\
  \ (long)1})})), (9)) == (std::vector<long>({(long)1, (long)6, (long)1, (long)6,\
  \ (long)1, (long)6, (long)1, (long)6, (long)1})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)12,\
  \ (long)13, (long)10, (long)1}), (std::vector<long>)std::vector<long>({(long)9,\
  \ (long)3, (long)15, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)16,\
  \ (long)14, (long)4}), (std::vector<long>)std::vector<long>({(long)11, (long)8,\
  \ (long)7, (long)2})})), (12)) == (std::vector<long>({(long)1, (long)6, (long)1,\
  \ (long)6, (long)1, (long)6, (long)1, (long)6, (long)1, (long)6, (long)1, (long)6})));\n\
  \    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2,\
  \ (long)7, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)1, (long)5}),\
  \ (std::vector<long>)std::vector<long>({(long)6, (long)8, (long)9})})), (8)) ==\
  \ (std::vector<long>({(long)1, (long)3, (long)1, (long)3, (long)1, (long)3, (long)1,\
  \ (long)3})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)6,\
  \ (long)1, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)8, (long)9}),\
  \ (std::vector<long>)std::vector<long>({(long)2, (long)7, (long)4})})), (8)) ==\
  \ (std::vector<long>({(long)1, (long)5, (long)1, (long)5, (long)1, (long)5, (long)1,\
  \ (long)5})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)2}), (std::vector<long>)std::vector<long>({(long)3, (long)4})})), (10))\
  \ == (std::vector<long>({(long)1, (long)2, (long)1, (long)2, (long)1, (long)2, (long)1,\
  \ (long)2, (long)1, (long)2})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)2})})), (10))\
  \ == (std::vector<long>({(long)1, (long)3, (long)1, (long)3, (long)1, (long)3, (long)1,\
  \ (long)3, (long)1, (long)3})));\n}\n"
completions: ["    std::vector<std::vector<long>> gridCopy(grid);\n    std::vector<long>\
    \ ans;\n    long ansInd = 0;\n    long ind = 0;\n    long ind2 = 0;\n    long\
    \ ind3 = 0;\n    long ind4 = 0;\n    long ind5 = 0;\n    long ind6 = 0;\n    long\
    \ ind7 = 0;\n    long ind8 = 0;\n    long ind9 = 0;\n    long ind10 = 0;\n   \
    \ long ind11 = 0;\n    long ind12 = 0;\n    long ind13 = 0;\n    long ind14 =\
    \ 0;\n    long ind15 = 0;\n    long ind16 = 0;\n    long ind17 = 0;\n    long\
    \ ind18 = 0;\n    long ind19 = 0;\n    long ind20 = 0;\n    long ind21 = 0;\n\
    \    long ind22 = 0;\n    long ind23 = 0;\n    long ind24 = 0;\n    long ind25\
    \ = 0;\n    long ind26 = 0;\n    long ind27 = 0;\n    long ind28 = 0;\n    long\
    \ ind29 = 0;\n    long ind30 = 0;\n    long ind31 = 0;\n    long ind32 = 0;\n\
    \    long ind33 = 0;\n    long ind34 = 0;\n    long ind35 = 0;\n    long ind36\
    \ = 0;\n    long ind37 = 0;\n    long ind38 = 0;\n    long ind39 = 0;\n    long\
    \ ind40 = 0;\n    long ind41 = 0;\n    long ind42 = 0;\n    long ind43 = 0;\n\
    \    long ind44 = 0;\n    long ind45 = 0;\n    long ind46 = 0;\n    long ind47\
    \ = 0;\n    long ind48 = 0;\n    long ind49 = 0;\n    long ind50 = 0;\n    long\
    \ ind51 = 0;\n    long ind52 = 0;\n    long ind53 = 0;\n    long ind54 = 0;\n\
    \    long ind55 = 0;\n    long ind56 = 0;\n    long ind57 = 0;\n    long ind58\
    \ = 0;\n    long ind59 = 0;\n    long ind60 = 0;\n    long ind61 = 0;\n    long\
    \ ind62 = 0;\n    long ind63 = 0;\n    long ind64 = 0;\n    long ind65 = 0;\n\
    \    long ind66 = 0;\n    long ind67 = 0;\n    long ind68 = 0;\n    long ind69\
    \ = 0;\n    long ind70 = 0;\n    long ind71 = 0;\n    long ind72 = 0;\n    long\
    \ ind73 = 0;\n    long ind74 = 0;\n    long ind75 = 0;\n    long ind76 = 0;\n\
    \    long ind77 = 0;\n    long ind78 = 0;\n    long ind79 = 0;\n    long ind80\
    \ = 0;\n    long ind81 = 0;\n    long ind82 = 0;\n", "    // Your code here\n\
    \    std::vector<std::vector<long>> gridCopy = grid;\n    std::vector<long> path;\n\
    \    long minPathSum = 0;\n    long minPathSumIndex = 0;\n    long minPathSumIndex2\
    \ = 0;\n    long minPathSumIndex3 = 0;\n    long minPathSumIndex4 = 0;\n    long\
    \ minPathSumIndex5 = 0;\n    long minPathSumIndex6 = 0;\n    long minPathSumIndex7\
    \ = 0;\n    long minPathSumIndex8 = 0;\n    long minPathSumIndex9 = 0;\n    long\
    \ minPathSumIndex10 = 0;\n    long minPathSumIndex11 = 0;\n    long minPathSumIndex12\
    \ = 0;\n    long minPathSumIndex13 = 0;\n    long minPathSumIndex14 = 0;\n   \
    \ long minPathSumIndex15 = 0;\n    long minPathSumIndex16 = 0;\n    long minPathSumIndex17\
    \ = 0;\n    long minPathSumIndex18 = 0;\n    long minPathSumIndex19 = 0;\n   \
    \ long minPathSumIndex20 = 0;\n    long minPathSumIndex21 = 0;\n    long minPathSumIndex22\
    \ = 0;\n    long minPathSumIndex23 = 0;\n    long minPathSumIndex24 = 0;\n   \
    \ long minPathSumIndex25 = 0;\n    long minPathSumIndex26 = 0;\n    long minPathSumIndex27\
    \ = 0;\n    long minPathSumIndex28 = 0;\n    long minPathSumIndex29 = 0;\n   \
    \ long minPathSumIndex30 = 0;\n    long minPathSumIndex31 = 0;\n    long minPathSumIndex32\
    \ = 0;\n    long minPathSumIndex33 = 0;\n    long minPathSumIndex34 = 0;\n   \
    \ long minPathSumIndex35 = 0;\n    long minPathSumIndex36 = 0;\n    long minPathSumIndex37\
    \ = 0;\n    long minPathSumIndex38 = 0;\n    long minPathSumIndex39 = 0;\n   \
    \ long minPathSumIndex40 = 0;\n    long minPathSumIndex41 = 0;\n    long minPathSumIndex42\
    \ = 0;\n    long minPathSumIndex43 = 0;\n    long minPathSumIndex44 = 0;\n   \
    \ long minPathSumIndex45 = 0;\n    long minPathSumIndex46 = 0;\n    long minPathSumIndex47\
    \ = 0;\n    long minPathSumIndex48 = 0;\n    long minPathSumIndex49 = 0;\n   \
    \ long minPathSumIndex50 = 0;\n    long minPathSumIndex51 = 0;\n    long minPathSumIndex52\
    \ = 0;\n    long minPathSumIndex53 = 0;\n    long minPathSumIndex54 = 0;\n    ",
  "    long n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n  \
    \  std::vector<long> ans_list;\n    std::vector<std::vector<long>> ans_list2;\n\
    \    std::vector<std::vector<long>> ans_list3;\n    std::vector<std::vector<long>>\
    \ ans_list4;\n    std::vector<std::vector<long>> ans_list5;\n    std::vector<std::vector<long>>\
    \ ans_list6;\n    std::vector<std::vector<long>> ans_list7;\n    std::vector<std::vector<long>>\
    \ ans_list8;\n    std::vector<std::vector<long>> ans_list9;\n    std::vector<std::vector<long>>\
    \ ans_list10;\n    std::vector<std::vector<long>> ans_list11;\n    std::vector<std::vector<long>>\
    \ ans_list12;\n    std::vector<std::vector<long>> ans_list13;\n    std::vector<std::vector<long>>\
    \ ans_list14;\n    std::vector<std::vector<long>> ans_list15;\n    std::vector<std::vector<long>>\
    \ ans_list16;\n    std::vector<std::vector<long>> ans_list17;\n    std::vector<std::vector<long>>\
    \ ans_list18;\n    std::vector<std::vector<long>> ans_list19;\n    std::vector<std::vector<long>>\
    \ ans_list20;\n    std::vector<std::vector<long>> ans_list21;\n    std::vector<std::vector<long>>\
    \ ans_list22;\n    std::vector<std::vector<long>> ans_list23;\n    std::vector<std::vector<long>>\
    \ ans_list24;\n    std::vector<std::vector<long>> ans_list25;\n    std::vector<std::vector<long>>\
    \ ans_list26;\n    std::vector<std::vector<long>> ans_list27;\n    std::vector<std::vector<long>>\
    \ ans_list28;\n    std::vector<std::vector<long>> ans_list29;\n    std::vector<std::vector<long>>\
    \ ans_list30;\n    std::vector<std::vector<long>> ans_list31;\n    std::vector<std::vector<long>>\
    \ ans_list32;\n    std::vector<std::vector<long>> ans_list33;\n    std::vector<std::vector<long>>\
    \ ans_list34;\n    std::vector<std::vector<long>> ans_list35;\n    std::vector<std::vector<long>>\
    \ ans_list36;\n    std::vector<std::vector<long>> ans_list37;\n    std::vector<std::vector<long>>\
    \ ans_list38;\n    std::vector<std::vector<long>> ans_list39;\n    std::vector<std::vector<long>>\
    \ ans_list40;\n    std::vector<std::vector<long>> ans_list41;\n    std::vector<std::vector<long>>\
    \ ans_list42;\n    std::vector<std::vector<long>> ans_list43;\n    std::vector<std::vector<long>>\
    \ ans_list44;\n    std::vector<std::vector<long>> ans_list45;\n    std::vector<std::vector<long>>\
    \ ans_list46;\n    std::vector<std::vector<long>> ans_list47;\n    std::vector<std::vector<long>>\
    \ ans_list48;\n    std::vector<std::vector<long>> ans_list49;\n    std::vector<std::vector<long>>\
    \ ans_list50;\n    std::vector<std::vector<long>> ans_list51;\n    std::vector<",
  "    std::vector<long> ans;\n    std::vector<std::vector<long>> gridCopy = grid;\n\
    \    std::vector<std::vector<long>> gridCopy2 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy3 = grid;\n    std::vector<std::vector<long>> gridCopy4 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy5 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy6 = grid;\n    std::vector<std::vector<long>> gridCopy7 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy8 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy9 = grid;\n    std::vector<std::vector<long>> gridCopy10 = grid;\n \
    \   std::vector<std::vector<long>> gridCopy11 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy12 = grid;\n    std::vector<std::vector<long>> gridCopy13 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy14 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy15 = grid;\n    std::vector<std::vector<long>> gridCopy16 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy17 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy18 = grid;\n    std::vector<std::vector<long>> gridCopy19 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy20 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy21 = grid;\n    std::vector<std::vector<long>> gridCopy22 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy23 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy24 = grid;\n    std::vector<std::vector<long>> gridCopy25 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy26 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy27 = grid;\n    std::vector<std::vector<long>> gridCopy28 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy29 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy30 = grid;\n    std::vector<std::vector<long>> gridCopy31 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy32 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy33 = grid;\n    std::vector<std::vector<long>> gridCopy34 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy35 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy36 = grid;\n    std::vector<std::vector<long>> gridCopy37 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy38 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy39 = grid;\n    std::vector<std::vector<long>> gridCopy40 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy41 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy42 = grid;\n    std::vector<std::vector<long>> gridCopy43 = grid;\n\
    \    ", "    std::vector<long> ans;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cur = 0;\n    long ans = 0;\n    long cnt2 = 0;\n\
    \    long cur2 = 0;\n    long ans2 = 0;\n    long cnt3 = 0;\n    long cur3 = 0;\n\
    \    long ans3 = 0;\n    long cnt4 = 0;\n    long cur4 = 0;\n    long ans4 = 0;\n\
    \    long cnt5 = 0;\n    long cur5 = 0;\n    long ans5 = 0;\n    long cnt6 = 0;\n\
    \    long cur6 = 0;\n    long ans6 = 0;\n    long cnt7 = 0;\n    long cur7 = 0;\n\
    \    long ans7 = 0;\n    long cnt8 = 0;\n    long cur8 = 0;\n    long ans8 = 0;\n\
    \    long cnt9 = 0;\n    long cur9 = 0;\n    long ans9 = 0;\n    long cnt10 =\
    \ 0;\n    long cur10 = 0;\n    long ans10 = 0;\n    long cnt11 = 0;\n    long\
    \ cur11 = 0;\n    long ans11 = 0;\n    long cnt12 = 0;\n    long cur12 = 0;\n\
    \    long ans12 = 0;\n    long cnt13 = 0;\n    long cur13 = 0;\n    long ans13\
    \ = 0;\n    long cnt14 = 0;\n    long cur14 = 0;\n    long ans14 = 0;\n    long\
    \ cnt15 = 0;\n    long cur15 = 0;\n    long ans15 = 0;\n    long cnt16 = 0;\n\
    \    long cur16 = 0;\n    long ans16 = 0;\n    long cnt17 = 0;\n    long cur17\
    \ = 0;\n    long ans17 = 0;\n    long cnt18 = 0;\n    long cur18 = 0;\n    long\
    \ ans18 = 0;\n    long cnt19 = 0;\n    long cur19 = 0;\n    long ans19 = 0;\n\
    \    long cnt20 = 0;\n    long cur20 = 0;\n    long ans20 = 0;\n    long cnt21\
    \ = 0;\n    long cur21 = 0;\n    long ans21 = 0;\n    long cnt22 = 0;\n    long\
    \ cur22 = 0;\n    long ans22 = 0;\n    long cnt23 = 0;\n    long cur23 = 0;\n\
    \    long ans23 = 0;\n    long cnt24 = 0;\n    long cur24 = 0;\n    long ans24\
    \ = 0;\n    long cnt25 = 0;\n    long cur25 = 0;\n    long ans25 = 0;\n    long\
    \ cnt26 = 0;\n    long cur26 = 0;\n    long ans26 = 0;\n    long cnt27 = 0;\n\
    \    long cur27 = 0;\n    long ans27 = 0;\n    long cnt28 = 0;\n    long cur28\
    \ = 0;\n    long ans28 = 0;", "    // write your code here\n    std::vector<std::vector<long>>\
    \ gridCopy = grid;\n    std::vector<long> ans;\n    long ansInd = 0;\n    long\
    \ ind = 0;\n    long ind2 = 0;\n    long ind3 = 0;\n    long ind4 = 0;\n    long\
    \ ind5 = 0;\n    long ind6 = 0;\n    long ind7 = 0;\n    long ind8 = 0;\n    long\
    \ ind9 = 0;\n    long ind10 = 0;\n    long ind11 = 0;\n    long ind12 = 0;\n \
    \   long ind13 = 0;\n    long ind14 = 0;\n    long ind15 = 0;\n    long ind16\
    \ = 0;\n    long ind17 = 0;\n    long ind18 = 0;\n    long ind19 = 0;\n    long\
    \ ind20 = 0;\n    long ind21 = 0;\n    long ind22 = 0;\n    long ind23 = 0;\n\
    \    long ind24 = 0;\n    long ind25 = 0;\n    long ind26 = 0;\n    long ind27\
    \ = 0;\n    long ind28 = 0;\n    long ind29 = 0;\n    long ind30 = 0;\n    long\
    \ ind31 = 0;\n    long ind32 = 0;\n    long ind33 = 0;\n    long ind34 = 0;\n\
    \    long ind35 = 0;\n    long ind36 = 0;\n    long ind37 = 0;\n    long ind38\
    \ = 0;\n    long ind39 = 0;\n    long ind40 = 0;\n    long ind41 = 0;\n    long\
    \ ind42 = 0;\n    long ind43 = 0;\n    long ind44 = 0;\n    long ind45 = 0;\n\
    \    long ind46 = 0;\n    long ind47 = 0;\n    long ind48 = 0;\n    long ind49\
    \ = 0;\n    long ind50 = 0;\n    long ind51 = 0;\n    long ind52 = 0;\n    long\
    \ ind53 = 0;\n    long ind54 = 0;\n    long ind55 = 0;\n    long ind56 = 0;\n\
    \    long ind57 = 0;\n    long ind58 = 0;\n    long ind59 = 0;\n    long ind60\
    \ = 0;\n    long ind61 = 0;\n    long ind62 = 0;\n    long ind63 = 0;\n    long\
    \ ind64 = 0;\n    long ind65 = 0;\n    long ind66 = 0;\n    long ind67 = 0;\n\
    \    long ind68 = 0;\n    long ind69 = 0;\n    long ind70 = 0;\n    long ind71\
    \ = 0;\n    long ind72 = 0;\n    long ind73 = 0;\n    long ind74 = 0;\n    long\
    \ ind75 = 0;\n    long ind76 = 0;\n    long ind77 = 0;\n    long ind78 = 0;\n\
    \    long ind79 = 0;\n    long ind80 = 0;\n    long ind81 = 0;\n    ", "    std::vector<std::vector<long>>\
    \ gridCopy = grid;\n    std::vector<std::vector<long>> gridCopy2 = grid;\n   \
    \ std::vector<std::vector<long>> gridCopy3 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy4 = grid;\n    std::vector<std::vector<long>> gridCopy5 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy6 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy7 = grid;\n    std::vector<std::vector<long>> gridCopy8 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy9 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy10 = grid;\n    std::vector<std::vector<long>> gridCopy11 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy12 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy13 = grid;\n    std::vector<std::vector<long>> gridCopy14 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy15 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy16 = grid;\n    std::vector<std::vector<long>> gridCopy17 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy18 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy19 = grid;\n    std::vector<std::vector<long>> gridCopy20 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy21 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy22 = grid;\n    std::vector<std::vector<long>> gridCopy23 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy24 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy25 = grid;\n    std::vector<std::vector<long>> gridCopy26 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy27 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy28 = grid;\n    std::vector<std::vector<long>> gridCopy29 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy30 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy31 = grid;\n    std::vector<std::vector<long>> gridCopy32 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy33 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy34 = grid;\n    std::vector<std::vector<long>> gridCopy35 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy36 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy37 = grid;\n    std::vector<std::vector<long>> gridCopy38 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy39 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy40 = grid;\n    std::vector<std::vector<long>> gridCopy41 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy42 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy43 = grid;\n    std::vector<std::vector<long>> gridCopy44", "    //\
    \ write your code here\n    std::vector<std::vector<long>> gridCopy = grid;\n\
    \    std::vector<long> ans;\n    long n = gridCopy.size();\n    long m = gridCopy[0].size();\n\
    \    long ans = INT_MAX;\n    long start = 0;\n    long end = 0;\n    long index\
    \ = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long\
    \ temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n\
    \    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11\
    \ = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n   \
    \ long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18\
    \ = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n   \
    \ long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25\
    \ = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n   \
    \ long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32\
    \ = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n   \
    \ long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39\
    \ = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n   \
    \ long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46\
    \ = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n   \
    \ long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53\
    \ = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n   \
    \ long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60\
    \ = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n   \
    \ long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67\
    \ = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n   \
    \ long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74\
    \ = 0;\n    long temp75 = 0;\n    long temp76", "    std::vector<long> ans;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long an = n * m;\n\
    \    long cnt = 0;\n    long cur = 0;\n    long cur2 = 0;\n    long cur3 = 0;\n\
    \    long cur4 = 0;\n    long cur5 = 0;\n    long cur6 = 0;\n    long cur7 = 0;\n\
    \    long cur8 = 0;\n    long cur9 = 0;\n    long cur10 = 0;\n    long cur11 =\
    \ 0;\n    long cur12 = 0;\n    long cur13 = 0;\n    long cur14 = 0;\n    long\
    \ cur15 = 0;\n    long cur16 = 0;\n    long cur17 = 0;\n    long cur18 = 0;\n\
    \    long cur19 = 0;\n    long cur20 = 0;\n    long cur21 = 0;\n    long cur22\
    \ = 0;\n    long cur23 = 0;\n    long cur24 = 0;\n    long cur25 = 0;\n    long\
    \ cur26 = 0;\n    long cur27 = 0;\n    long cur28 = 0;\n    long cur29 = 0;\n\
    \    long cur30 = 0;\n    long cur31 = 0;\n    long cur32 = 0;\n    long cur33\
    \ = 0;\n    long cur34 = 0;\n    long cur35 = 0;\n    long cur36 = 0;\n    long\
    \ cur37 = 0;\n    long cur38 = 0;\n    long cur39 = 0;\n    long cur40 = 0;\n\
    \    long cur41 = 0;\n    long cur42 = 0;\n    long cur43 = 0;\n    long cur44\
    \ = 0;\n    long cur45 = 0;\n    long cur46 = 0;\n    long cur47 = 0;\n    long\
    \ cur48 = 0;\n    long cur49 = 0;\n    long cur50 = 0;\n    long cur51 = 0;\n\
    \    long cur52 = 0;\n    long cur53 = 0;\n    long cur54 = 0;\n    long cur55\
    \ = 0;\n    long cur56 = 0;\n    long cur57 = 0;\n    long cur58 = 0;\n    long\
    \ cur59 = 0;\n    long cur60 = 0;\n    long cur61 = 0;\n    long cur62 = 0;\n\
    \    long cur63 = 0;\n    long cur64 = 0;\n    long cur65 = 0;\n    long cur66\
    \ = 0;\n    long cur67 = 0;\n    long cur68 = 0;\n    long cur69 = 0;\n    long\
    \ cur70 = 0;\n    long cur71 = 0;\n    long cur72 = 0;\n    long cur73 = 0;\n\
    \    long cur74 = 0;\n    long cur75 = 0;\n    long cur76 = 0;\n    long cur77\
    \ = 0;\n    long cur78 = 0;\n    long cur79 = 0;\n    long cur80 = 0;\n    long\
    \ cur", "    std::vector<std::vector<long>> gridCopy = grid;\n    std::vector<long>\
    \ ans;\n    long ansInd = 0;\n    long ind = 0;\n    long ind2 = 0;\n    long\
    \ ind3 = 0;\n    long ind4 = 0;\n    long ind5 = 0;\n    long ind6 = 0;\n    long\
    \ ind7 = 0;\n    long ind8 = 0;\n    long ind9 = 0;\n    long ind10 = 0;\n   \
    \ long ind11 = 0;\n    long ind12 = 0;\n    long ind13 = 0;\n    long ind14 =\
    \ 0;\n    long ind15 = 0;\n    long ind16 = 0;\n    long ind17 = 0;\n    long\
    \ ind18 = 0;\n    long ind19 = 0;\n    long ind20 = 0;\n    long ind21 = 0;\n\
    \    long ind22 = 0;\n    long ind23 = 0;\n    long ind24 = 0;\n    long ind25\
    \ = 0;\n    long ind26 = 0;\n    long ind27 = 0;\n    long ind28 = 0;\n    long\
    \ ind29 = 0;\n    long ind30 = 0;\n    long ind31 = 0;\n    long ind32 = 0;\n\
    \    long ind33 = 0;\n    long ind34 = 0;\n    long ind35 = 0;\n    long ind36\
    \ = 0;\n    long ind37 = 0;\n    long ind38 = 0;\n    long ind39 = 0;\n    long\
    \ ind40 = 0;\n    long ind41 = 0;\n    long ind42 = 0;\n    long ind43 = 0;\n\
    \    long ind44 = 0;\n    long ind45 = 0;\n    long ind46 = 0;\n    long ind47\
    \ = 0;\n    long ind48 = 0;\n    long ind49 = 0;\n    long ind50 = 0;\n    long\
    \ ind51 = 0;\n    long ind52 = 0;\n    long ind53 = 0;\n    long ind54 = 0;\n\
    \    long ind55 = 0;\n    long ind56 = 0;\n    long ind57 = 0;\n    long ind58\
    \ = 0;\n    long ind59 = 0;\n    long ind60 = 0;\n    long ind61 = 0;\n    long\
    \ ind62 = 0;\n    long ind63 = 0;\n    long ind64 = 0;\n    long ind65 = 0;\n\
    \    long ind66 = 0;\n    long ind67 = 0;\n    long ind68 = 0;\n    long ind69\
    \ = 0;\n    long ind70 = 0;\n    long ind71 = 0;\n    long ind72 = 0;\n    long\
    \ ind73 = 0;\n    long ind74 = 0;\n    long ind75 = 0;\n    long ind76 = 0;\n\
    \    long ind77 = 0;\n    long ind78 = 0;\n    long ind79 = 0;\n    long ind80\
    \ = 0;\n    long ind81 = 0;\n    long ind82 = 0;\n", "    std::vector<std::vector<long>>\
    \ gridCopy = grid;\n    std::vector<long> path;\n    long start = 0;\n    long\
    \ end = 0;\n    long minPath = 0;\n    long minPathIndex = 0;\n    long minPathValue\
    \ = 0;\n    long minPathValueIndex = 0;\n    long minPathValueIndex2 = 0;\n  \
    \  long minPathValueIndex3 = 0;\n    long minPathValueIndex4 = 0;\n    long minPathValueIndex5\
    \ = 0;\n    long minPathValueIndex6 = 0;\n    long minPathValueIndex7 = 0;\n \
    \   long minPathValueIndex8 = 0;\n    long minPathValueIndex9 = 0;\n    long minPathValueIndex10\
    \ = 0;\n    long minPathValueIndex11 = 0;\n    long minPathValueIndex12 = 0;\n\
    \    long minPathValueIndex13 = 0;\n    long minPathValueIndex14 = 0;\n    long\
    \ minPathValueIndex15 = 0;\n    long minPathValueIndex16 = 0;\n    long minPathValueIndex17\
    \ = 0;\n    long minPathValueIndex18 = 0;\n    long minPathValueIndex19 = 0;\n\
    \    long minPathValueIndex20 = 0;\n    long minPathValueIndex21 = 0;\n    long\
    \ minPathValueIndex22 = 0;\n    long minPathValueIndex23 = 0;\n    long minPathValueIndex24\
    \ = 0;\n    long minPathValueIndex25 = 0;\n    long minPathValueIndex26 = 0;\n\
    \    long minPathValueIndex27 = 0;\n    long minPathValueIndex28 = 0;\n    long\
    \ minPathValueIndex29 = 0;\n    long minPathValueIndex30 = 0;\n    long minPathValueIndex31\
    \ = 0;\n    long minPathValueIndex32 = 0;\n    long minPathValueIndex33 = 0;\n\
    \    long minPathValueIndex34 = 0;\n    long minPathValueIndex35 = 0;\n    long\
    \ minPathValueIndex36 = 0;\n    long minPathValueIndex37 = 0;\n    long minPathValueIndex38\
    \ = 0;\n    long minPathValueIndex39 = 0;\n    long minPathValueIndex40 = 0;\n\
    \    long minPathValueIndex41 = 0;\n    long minPathValueIndex42 = 0;\n    long\
    \ minPathValueIndex43 = 0;\n    long minPathValueIndex44 = 0;\n    long minPathValueIndex45\
    \ = 0;\n    long minPathValueIndex46 = 0;\n    long minPathValueIndex47 = 0;\n\
    \    long minPathValueIndex48 = 0;\n    long minPathValueIndex49 = 0;\n    long\
    \ minPathValueIndex50 = 0;\n    long minPathValueIndex51 = 0;\n    long minPathValueIndex52\
    \ = 0;\n    ", "    std::vector<std::vector<long>> gridCopy = grid;\n    std::vector<long>\
    \ path;\n    long ans = 0;\n    long n = gridCopy.size();\n    long m = gridCopy[0].size();\n\
    \    long cnt = 0;\n    long minPathLen = k;\n    std::vector<long> ansList;\n\
    \    std::vector<long> temp;\n    std::vector<long> temp2;\n    std::vector<long>\
    \ temp3;\n    std::vector<long> temp4;\n    std::vector<long> temp5;\n    std::vector<long>\
    \ temp6;\n    std::vector<long> temp7;\n    std::vector<long> temp8;\n    std::vector<long>\
    \ temp9;\n    std::vector<long> temp10;\n    std::vector<long> temp11;\n    std::vector<long>\
    \ temp12;\n    std::vector<long> temp13;\n    std::vector<long> temp14;\n    std::vector<long>\
    \ temp15;\n    std::vector<long> temp16;\n    std::vector<long> temp17;\n    std::vector<long>\
    \ temp18;\n    std::vector<long> temp19;\n    std::vector<long> temp20;\n    std::vector<long>\
    \ temp21;\n    std::vector<long> temp22;\n    std::vector<long> temp23;\n    std::vector<long>\
    \ temp24;\n    std::vector<long> temp25;\n    std::vector<long> temp26;\n    std::vector<long>\
    \ temp27;\n    std::vector<long> temp28;\n    std::vector<long> temp29;\n    std::vector<long>\
    \ temp30;\n    std::vector<long> temp31;\n    std::vector<long> temp32;\n    std::vector<long>\
    \ temp33;\n    std::vector<long> temp34;\n    std::vector<long> temp35;\n    std::vector<long>\
    \ temp36;\n    std::vector<long> temp37;\n    std::vector<long> temp38;\n    std::vector<long>\
    \ temp39;\n    std::vector<long> temp40;\n    std::vector<long> temp41;\n    std::vector<long>\
    \ temp42;\n    std::vector<long> temp43;\n    std::vector<long> temp44;\n    std::vector<long>\
    \ temp45;\n    std::vector<long> temp46;\n    std::vector<long> temp47;\n    std::vector<long>\
    \ temp48;\n    std::vector<long> temp49;\n    std::vector<long> temp50;\n    std::vector<long>\
    \ temp51;\n    std::vector<long> temp52;\n    std::vector<long> temp53;\n    std::vector<long>\
    \ temp54;\n    std::vector<long> temp55;\n    std::vector<long> temp56;\n    std::vector<long>\
    \ temp57;\n    std::vector<long> temp58;\n    std::vector<long> temp59", "   \
    \ std::vector<long> ans;\n    std::vector<std::vector<long>> gridCopy = grid;\n\
    \    std::vector<std::vector<long>> gridCopy2 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy3 = grid;\n    std::vector<std::vector<long>> gridCopy4 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy5 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy6 = grid;\n    std::vector<std::vector<long>> gridCopy7 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy8 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy9 = grid;\n    std::vector<std::vector<long>> gridCopy10 = grid;\n \
    \   std::vector<std::vector<long>> gridCopy11 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy12 = grid;\n    std::vector<std::vector<long>> gridCopy13 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy14 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy15 = grid;\n    std::vector<std::vector<long>> gridCopy16 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy17 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy18 = grid;\n    std::vector<std::vector<long>> gridCopy19 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy20 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy21 = grid;\n    std::vector<std::vector<long>> gridCopy22 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy23 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy24 = grid;\n    std::vector<std::vector<long>> gridCopy25 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy26 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy27 = grid;\n    std::vector<std::vector<long>> gridCopy28 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy29 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy30 = grid;\n    std::vector<std::vector<long>> gridCopy31 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy32 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy33 = grid;\n    std::vector<std::vector<long>> gridCopy34 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy35 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy36 = grid;\n    std::vector<std::vector<long>> gridCopy37 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy38 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy39 = grid;\n    std::vector<std::vector<long>> gridCopy40 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy41 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy42 = grid;\n    std::vector<std::vector<long>> gridCopy43 = grid;\n\
    \    ", "    // Your code here\n    std::vector<long> ans;\n    std::vector<long>\
    \ lst_A;\n    std::vector<long> lst_B;\n    std::vector<long> lst_C;\n    std::vector<long>\
    \ lst_D;\n    std::vector<long> lst_E;\n    std::vector<long> lst_F;\n    std::vector<long>\
    \ lst_G;\n    std::vector<long> lst_H;\n    std::vector<long> lst_I;\n    std::vector<long>\
    \ lst_J;\n    std::vector<long> lst_K;\n    std::vector<long> lst_L;\n    std::vector<long>\
    \ lst_M;\n    std::vector<long> lst_N;\n    std::vector<long> lst_O;\n    std::vector<long>\
    \ lst_P;\n    std::vector<long> lst_Q;\n    std::vector<long> lst_R;\n    std::vector<long>\
    \ lst_S;\n    std::vector<long> lst_T;\n    std::vector<long> lst_U;\n    std::vector<long>\
    \ lst_V;\n    std::vector<long> lst_W;\n    std::vector<long> lst_X;\n    std::vector<long>\
    \ lst_Y;\n    std::vector<long> lst_Z;\n    std::vector<long> lst_A;\n    std::vector<long>\
    \ lst_B;\n    std::vector<long> lst_C;\n    std::vector<long> lst_D;\n    std::vector<long>\
    \ lst_E;\n    std::vector<long> lst_F;\n    std::vector<long> lst_G;\n    std::vector<long>\
    \ lst_H;\n    std::vector<long> lst_I;\n    std::vector<long> lst_J;\n    std::vector<long>\
    \ lst_K;\n    std::vector<long> lst_L;\n    std::vector<long> lst_M;\n    std::vector<long>\
    \ lst_N;\n    std::vector<long> lst_O;\n    std::vector<long> lst_P;\n    std::vector<long>\
    \ lst_Q;\n    std::vector<long> lst_R;\n    std::vector<long> lst_S;\n    std::vector<long>\
    \ lst_T;\n    std::vector<long> lst_U;\n    std::vector<long> lst_V;\n    std::vector<long>\
    \ lst_W;\n    std::vector<long> lst_X;\n    std::vector<long> lst_Y;\n    std::vector<long>\
    \ lst_Z;\n    std::vector<long> lst_A;\n    std::vector<long> lst_B;\n    std::vector<long>\
    \ lst_C;\n    std::vector<long> lst_D;\n    std::vector<", "    // Your code here\n\
    \    std::vector<std::vector<long>> gridCopy = grid;\n    std::vector<long> path;\n\
    \    std::vector<long> pathCopy;\n    std::vector<long> pathCopy2;\n    std::vector<long>\
    \ pathCopy3;\n    std::vector<long> pathCopy4;\n    std::vector<long> pathCopy5;\n\
    \    std::vector<long> pathCopy6;\n    std::vector<long> pathCopy7;\n    std::vector<long>\
    \ pathCopy8;\n    std::vector<long> pathCopy9;\n    std::vector<long> pathCopy10;\n\
    \    std::vector<long> pathCopy11;\n    std::vector<long> pathCopy12;\n    std::vector<long>\
    \ pathCopy13;\n    std::vector<long> pathCopy14;\n    std::vector<long> pathCopy15;\n\
    \    std::vector<long> pathCopy16;\n    std::vector<long> pathCopy17;\n    std::vector<long>\
    \ pathCopy18;\n    std::vector<long> pathCopy19;\n    std::vector<long> pathCopy20;\n\
    \    std::vector<long> pathCopy21;\n    std::vector<long> pathCopy22;\n    std::vector<long>\
    \ pathCopy23;\n    std::vector<long> pathCopy24;\n    std::vector<long> pathCopy25;\n\
    \    std::vector<long> pathCopy26;\n    std::vector<long> pathCopy27;\n    std::vector<long>\
    \ pathCopy28;\n    std::vector<long> pathCopy29;\n    std::vector<long> pathCopy30;\n\
    \    std::vector<long> pathCopy31;\n    std::vector<long> pathCopy32;\n    std::vector<long>\
    \ pathCopy33;\n    std::vector<long> pathCopy34;\n    std::vector<long> pathCopy35;\n\
    \    std::vector<long> pathCopy36;\n    std::vector<long> pathCopy37;\n    std::vector<long>\
    \ pathCopy38;\n    std::vector<long> pathCopy39;\n    std::vector<long> pathCopy40;\n\
    \    std::vector<long> pathCopy41;\n    std::vector<long> pathCopy42;\n    std::vector<long>\
    \ pathCopy43;\n    std::vector<long> pathCopy44;\n    std::vector<long> pathCopy45;\n\
    \    std::vector<long> pathCopy46;\n    std::vector<long> pathCopy47;\n    std::vector<long>\
    \ pathCopy48;\n    std::vector<long> pathCopy49;\n    std::vector<long> pathCopy50;\n\
    \    std::vector<long> pathCopy51;\n    std::vector<long> pathCopy52;\n    std::vector<long>\
    \ pathCopy53;\n    std::vector<long> pathCopy54;\n    std::vector<long> pathCopy55;\n\
    \    std::vector<long> pathCopy56;\n    std::vector<long> ", "    // write your\
    \ code here\n    std::vector<std::vector<long>> gridCopy = grid;\n    std::vector<long>\
    \ ans;\n    long curr = 0;\n    long currRow = gridCopy[0].size() - 1;\n    long\
    \ currCol = gridCopy[0].size() - 1;\n    long currVal = gridCopy[0][currRow];\n\
    \    long currRow2 = gridCopy[0].size() - 1;\n    long currCol2 = gridCopy[0].size()\
    \ - 1;\n    long currVal2 = gridCopy[0][currRow2];\n    long currRow3 = gridCopy[0].size()\
    \ - 1;\n    long currCol3 = gridCopy[0].size() - 1;\n    long currVal3 = gridCopy[0][currRow3];\n\
    \    long currRow4 = gridCopy[0].size() - 1;\n    long currCol4 = gridCopy[0].size()\
    \ - 1;\n    long currVal4 = gridCopy[0][currRow4];\n    long currRow5 = gridCopy[0].size()\
    \ - 1;\n    long currCol5 = gridCopy[0].size() - 1;\n    long currVal5 = gridCopy[0][currRow5];\n\
    \    long currRow6 = gridCopy[0].size() - 1;\n    long currCol6 = gridCopy[0].size()\
    \ - 1;\n    long currVal6 = gridCopy[0][currRow6];\n    long currRow7 = gridCopy[0].size()\
    \ - 1;\n    long currCol7 = gridCopy[0].size() - 1;\n    long currVal7 = gridCopy[0][currRow7];\n\
    \    long currRow8 = gridCopy[0].size() - 1;\n    long currCol8 = gridCopy[0].size()\
    \ - 1;\n    long currVal8 = gridCopy[0][currRow8];\n    long currRow9 = gridCopy[0].size()\
    \ - 1;\n    long currCol9 = gridCopy[0].size() - 1;\n    long currVal9 = gridCopy[0][currRow9];\n\
    \    long currRow10 = gridCopy[0].size() - 1;\n    long currCol10 = gridCopy[0].size()\
    \ - 1;\n    long currVal10 = gridCopy[0][currRow10];\n    long currRow11 = gridCopy[0].size()\
    \ - 1;\n    long currCol11 = gridCopy[0].size() - 1;\n    long currVal11 = gridCopy[0][currRow11];\n\
    \    long currRow12 = gridCopy[0].size() - 1;\n    long currCol12 = gridCopy[0].size()\
    \ - 1;\n    long currVal12 = gridCopy[0][currRow12];\n    long currRow13 = gridCopy[0].size()\
    \ - 1;\n    long currCol13 = gridCopy[0].size() - 1;\n    long currVal13 = gridCopy[0][currRow13];\n\
    \    long ", "    std::vector<std::vector<long>> gridCopy = grid;\n    std::vector<long>\
    \ ans;\n    long n = gridCopy.size();\n    long m = gridCopy[0].size();\n    long\
    \ ans = 0;\n    long index = 0;\n    long temp = 0;\n    long temp2 = 0;\n   \
    \ long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 =\
    \ 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long\
    \ temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n\
    \    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79", "    // write your\
    \ code here\n    std::vector<std::vector<long>> gridCopy = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy2 = gridCopy;\n    std::vector<std::vector<long>> gridCopy3 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy4 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy5 = gridCopy;\n    std::vector<std::vector<long>> gridCopy6 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy7 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy8 = gridCopy;\n    std::vector<std::vector<long>> gridCopy9 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy10 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy11 = gridCopy;\n    std::vector<std::vector<long>> gridCopy12 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy13 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy14 = gridCopy;\n    std::vector<std::vector<long>> gridCopy15 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy16 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy17 = gridCopy;\n    std::vector<std::vector<long>> gridCopy18 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy19 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy20 = gridCopy;\n    std::vector<std::vector<long>> gridCopy21 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy22 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy23 = gridCopy;\n    std::vector<std::vector<long>> gridCopy24 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy25 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy26 = gridCopy;\n    std::vector<std::vector<long>> gridCopy27 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy28 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy29 = gridCopy;\n    std::vector<std::vector<long>> gridCopy30 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy31 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy32 = gridCopy;\n    std::vector<std::vector<long>> gridCopy33 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy34 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy35 = gridCopy;\n    std::vector<std::vector<long>> gridCopy36 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy37 = gridCopy;\n    std::vector<std::vector<long>>\
    \ gridCopy38 = gridCopy;\n    std::vector<std::vector<long>> gridCopy39 = gridCopy;\n\
    \    std::vector<std::vector<long>> gridCopy40 = gridCopy;\n", "    std::vector<long>\
    \ ans;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    long ans = 0;\n    std::vector<std::vector<long>> grid2(grid);\n \
    \   std::vector<long> grid3(grid);\n    std::vector<long> grid4(grid);\n    std::vector<long>\
    \ grid5(grid);\n    std::vector<long> grid6(grid);\n    std::vector<long> grid7(grid);\n\
    \    std::vector<long> grid8(grid);\n    std::vector<long> grid9(grid);\n    std::vector<long>\
    \ grid10(grid);\n    std::vector<long> grid11(grid);\n    std::vector<long> grid12(grid);\n\
    \    std::vector<long> grid13(grid);\n    std::vector<long> grid14(grid);\n  \
    \  std::vector<long> grid15(grid);\n    std::vector<long> grid16(grid);\n    std::vector<long>\
    \ grid17(grid);\n    std::vector<long> grid18(grid);\n    std::vector<long> grid19(grid);\n\
    \    std::vector<long> grid20(grid);\n    std::vector<long> grid21(grid);\n  \
    \  std::vector<long> grid22(grid);\n    std::vector<long> grid23(grid);\n    std::vector<long>\
    \ grid24(grid);\n    std::vector<long> grid25(grid);\n    std::vector<long> grid26(grid);\n\
    \    std::vector<long> grid27(grid);\n    std::vector<long> grid28(grid);\n  \
    \  std::vector<long> grid29(grid);\n    std::vector<long> grid30(grid);\n    std::vector<long>\
    \ grid31(grid);\n    std::vector<long> grid32(grid);\n    std::vector<long> grid33(grid);\n\
    \    std::vector<long> grid34(grid);\n    std::vector<long> grid35(grid);\n  \
    \  std::vector<long> grid36(grid);\n    std::vector<long> grid37(grid);\n    std::vector<long>\
    \ grid38(grid);\n    std::vector<long> grid39(grid);\n    std::vector<long> grid40(grid);\n\
    \    std::vector<long> grid41(grid);\n    std::vector<long> grid42(grid);\n  \
    \  std::vector<long> grid43(grid);\n    std::vector<long> grid44(grid);\n    std::vector<long>\
    \ grid45(grid);\n    std::vector<long> grid46(grid);\n    std::vector<long> grid47(grid);\n\
    \    std::vector<long> grid48(grid);\n    std::vector<long> grid49(grid);\n  \
    \  std::vector<long> grid50", "    std::vector<std::vector<long>> gridCopy = grid;\n\
    \    std::vector<std::vector<long>> gridCopy2 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy3 = grid;\n    std::vector<std::vector<long>> gridCopy4 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy5 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy6 = grid;\n    std::vector<std::vector<long>> gridCopy7 = grid;\n  \
    \  std::vector<std::vector<long>> gridCopy8 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy9 = grid;\n    std::vector<std::vector<long>> gridCopy10 = grid;\n \
    \   std::vector<std::vector<long>> gridCopy11 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy12 = grid;\n    std::vector<std::vector<long>> gridCopy13 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy14 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy15 = grid;\n    std::vector<std::vector<long>> gridCopy16 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy17 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy18 = grid;\n    std::vector<std::vector<long>> gridCopy19 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy20 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy21 = grid;\n    std::vector<std::vector<long>> gridCopy22 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy23 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy24 = grid;\n    std::vector<std::vector<long>> gridCopy25 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy26 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy27 = grid;\n    std::vector<std::vector<long>> gridCopy28 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy29 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy30 = grid;\n    std::vector<std::vector<long>> gridCopy31 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy32 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy33 = grid;\n    std::vector<std::vector<long>> gridCopy34 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy35 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy36 = grid;\n    std::vector<std::vector<long>> gridCopy37 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy38 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy39 = grid;\n    std::vector<std::vector<long>> gridCopy40 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy41 = grid;\n    std::vector<std::vector<long>>\
    \ gridCopy42 = grid;\n    std::vector<std::vector<long>> gridCopy43 = grid;\n\
    \    std::vector<std::vector<long>> gridCopy44"]
stop_tokens:
- "\n}"

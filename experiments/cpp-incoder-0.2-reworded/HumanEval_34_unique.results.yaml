language: cpp
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(*it == *std::prev(it)) {\n\
    \            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rcmza7_.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp2rcmza7_.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmp2rcmza7_.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmp2rcmza7_.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp2rcmza7_.cpp:10:20: error: 'prev'\
    \ is not a member of 'std'\n         if(*it == *std::prev(it)) {\n           \
    \         ^\n/tmp/tmp2rcmza7_.cpp: In function 'int main()':\n/tmp/tmp2rcmza7_.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2rcmza7_.cpp:2:\n/tmp/tmp2rcmza7_.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp2rcmza7_.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp2rcmza7_.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp2rcmza7_.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2rcmza7_.cpp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(*it == *std::prev(it)) {\n\
    \            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rcmza7_.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp2rcmza7_.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmp2rcmza7_.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmp2rcmza7_.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp2rcmza7_.cpp:10:20: error: 'prev'\
    \ is not a member of 'std'\n         if(*it == *std::prev(it)) {\n           \
    \         ^\n/tmp/tmp2rcmza7_.cpp: In function 'int main()':\n/tmp/tmp2rcmza7_.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2rcmza7_.cpp:2:\n/tmp/tmp2rcmza7_.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp2rcmza7_.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp2rcmza7_.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp2rcmza7_.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2rcmza7_.cpp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(long\
    \ i = 1; i < l.size(); i++) {\n        if(l[i] == l[i-1]) {\n            u.push_back(l[i]);\n\
    \        }\n    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_29szfz7.cpp: In function 'int main()':\n/tmp/tmp_29szfz7.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_29szfz7.cpp:2:\n/tmp/tmp_29szfz7.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp_29szfz7.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp_29szfz7.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp_29szfz7.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp_29szfz7.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_29szfz7.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (long i : l)\n        if (std::find(u.begin(), u.end(), i) == u.end())\n   \
    \         u.push_back(i);\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq0c5larc.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpq0c5larc.cpp:9:19: error: range-based 'for' loops are not allowed\
    \ in C++98 mode\n     for (long i : l)\n                   ^\n/tmp/tmpq0c5larc.cpp:\
    \ In function 'int main()':\n/tmp/tmpq0c5larc.cpp:15:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpq0c5larc.cpp:2:\n/tmp/tmpq0c5larc.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpq0c5larc.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpq0c5larc.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpq0c5larc.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpq0c5larc.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpq0c5larc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<cl"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(*it == *std::prev(it)) {\n\
    \            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rcmza7_.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp2rcmza7_.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmp2rcmza7_.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmp2rcmza7_.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp2rcmza7_.cpp:10:20: error: 'prev'\
    \ is not a member of 'std'\n         if(*it == *std::prev(it)) {\n           \
    \         ^\n/tmp/tmp2rcmza7_.cpp: In function 'int main()':\n/tmp/tmp2rcmza7_.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2rcmza7_.cpp:2:\n/tmp/tmp2rcmza7_.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp2rcmza7_.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp2rcmza7_.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp2rcmza7_.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2rcmza7_.cpp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n        if (u.empty() || *it !=\
    \ *u.back()) {\n            u.push_back(*it);\n        }\n    }\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ui4vt4t.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp7ui4vt4t.cpp:9:15: error: 'it' does not name a type\n     for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmp7ui4vt4t.cpp:9:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmp7ui4vt4t.cpp:9:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp7ui4vt4t.cpp:10:41: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if (u.empty() || *it\
    \ != *u.back()) {\n                                         ^\n/tmp/tmp7ui4vt4t.cpp:\
    \ In function 'int main()':\n/tmp/tmp7ui4vt4t.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7ui4vt4t.cpp:2:\n/tmp/tmp7ui4vt4t.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp7ui4vt4t.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp7ui4vt4t.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp7ui4vt4t.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp__wc2k67.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp__wc2k67.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmp__wc2k67.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmp__wc2k67.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp__wc2k67.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmp__wc2k67.cpp:\
    \ In function 'int main()':\n/tmp/tmp__wc2k67.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp__wc2k67.cpp:2:\n/tmp/tmp__wc2k67.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp__wc2k67.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp__wc2k67.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp__wc2k67.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n        if (u.size() == 0 || u[u.size()\
    \ - 1] != *it) {\n            u.push_back(*it);\n        }\n    }\n    return\
    \ u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd71q0aol.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpd71q0aol.cpp:9:15: error: 'it' does not name a type\n     for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmpd71q0aol.cpp:9:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmpd71q0aol.cpp:9:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpd71q0aol.cpp: In function 'int\
    \ main()':\n/tmp/tmpd71q0aol.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd71q0aol.cpp:2:\n/tmp/tmpd71q0aol.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpd71q0aol.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpd71q0aol.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpd71q0aol.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpd71q0aol.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/includ"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(*it != *std::prev(it)) {\n\
    \            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnwgmzrw.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpgnwgmzrw.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpgnwgmzrw.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpgnwgmzrw.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpgnwgmzrw.cpp:10:20: error: 'prev'\
    \ is not a member of 'std'\n         if(*it != *std::prev(it)) {\n           \
    \         ^\n/tmp/tmpgnwgmzrw.cpp: In function 'int main()':\n/tmp/tmpgnwgmzrw.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgnwgmzrw.cpp:2:\n/tmp/tmpgnwgmzrw.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpgnwgmzrw.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpgnwgmzrw.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpgnwgmzrw.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpgnwgmzrw.cpp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(long\
    \ i = 0; i < l.size(); i++)\n        if(l[i] != i)\n            u.push_back(l[i]);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmrc2l9b9.cpp: In function 'int main()':\n/tmp/tmpmrc2l9b9.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmrc2l9b9.cpp:2:\n/tmp/tmpmrc2l9b9.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpmrc2l9b9.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpmrc2l9b9.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpmrc2l9b9.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpmrc2l9b9.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmrc2l9b9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp__wc2k67.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp__wc2k67.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmp__wc2k67.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmp__wc2k67.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp__wc2k67.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmp__wc2k67.cpp:\
    \ In function 'int main()':\n/tmp/tmp__wc2k67.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp__wc2k67.cpp:2:\n/tmp/tmp__wc2k67.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp__wc2k67.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp__wc2k67.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp__wc2k67.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (long i : l)\n        if (std::find(u.begin(), u.end(), i) == u.end())\n   \
    \         u.push_back(i);\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq0c5larc.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpq0c5larc.cpp:9:19: error: range-based 'for' loops are not allowed\
    \ in C++98 mode\n     for (long i : l)\n                   ^\n/tmp/tmpq0c5larc.cpp:\
    \ In function 'int main()':\n/tmp/tmpq0c5larc.cpp:15:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpq0c5larc.cpp:2:\n/tmp/tmpq0c5larc.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpq0c5larc.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpq0c5larc.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpq0c5larc.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpq0c5larc.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpq0c5larc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<cl"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || it != u.end()\
    \ && *it == *std::prev(u.end())) {\n            u.push_back(*it);\n        }\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqdopi7qh.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpqdopi7qh.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpqdopi7qh.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpqdopi7qh.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpqdopi7qh.cpp:10:50: error: 'prev'\
    \ is not a member of 'std'\n         if(u.empty() || it != u.end() && *it == *std::prev(u.end()))\
    \ {\n                                                  ^\n/tmp/tmpqdopi7qh.cpp:\
    \ In function 'int main()':\n/tmp/tmpqdopi7qh.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqdopi7qh.cpp:2:\n/tmp/tmpqdopi7qh.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpqdopi7qh.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpqdopi7qh.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpqdopi7qh.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        u.push_back(*it);\n    }\n \
    \   return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2y1_mt9.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpq2y1_mt9.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpq2y1_mt9.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpq2y1_mt9.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpq2y1_mt9.cpp: In function 'int\
    \ main()':\n/tmp/tmpq2y1_mt9.cpp:15:10: error: 'candidate' does not name a type\n\
    \     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpq2y1_mt9.cpp:2:\n/tmp/tmpq2y1_mt9.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpq2y1_mt9.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpq2y1_mt9.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpq2y1_mt9.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpq2y1_mt9.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c+"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(long\
    \ i = 0; i < l.size(); i++)\n        if(l[i] != i)\n            u.push_back(l[i]);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmrc2l9b9.cpp: In function 'int main()':\n/tmp/tmpmrc2l9b9.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmrc2l9b9.cpp:2:\n/tmp/tmpmrc2l9b9.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpmrc2l9b9.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpmrc2l9b9.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpmrc2l9b9.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpmrc2l9b9.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmrc2l9b9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (long i : l)\n        if (i == l[u.size()-1])\n            u.push_back(i);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpfgkgco3y.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpfgkgco3y.cpp:9:19: error: range-based 'for' loops are not allowed\
    \ in C++98 mode\n     for (long i : l)\n                   ^\n/tmp/tmpfgkgco3y.cpp:\
    \ In function 'int main()':\n/tmp/tmpfgkgco3y.cpp:15:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfgkgco3y.cpp:2:\n/tmp/tmpfgkgco3y.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpfgkgco3y.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpfgkgco3y.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpfgkgco3y.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpfgkgco3y.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpfgkgco3y.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<cl"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (long i = 0; i < l.size(); ++i) {\n        if (i == 0 || l[i] != l[i - 1]) {\n\
    \            u.push_back(l[i]);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8oxfqk0p.cpp: In function 'int main()':\n/tmp/tmp8oxfqk0p.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8oxfqk0p.cpp:2:\n/tmp/tmp8oxfqk0p.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp8oxfqk0p.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp8oxfqk0p.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp8oxfqk0p.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8oxfqk0p.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp8oxfqk0p.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n        if (u.empty() || *it !=\
    \ *u.back()) {\n            u.push_back(*it);\n        }\n    }\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ui4vt4t.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp7ui4vt4t.cpp:9:15: error: 'it' does not name a type\n     for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmp7ui4vt4t.cpp:9:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmp7ui4vt4t.cpp:9:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp7ui4vt4t.cpp:10:41: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if (u.empty() || *it\
    \ != *u.back()) {\n                                         ^\n/tmp/tmp7ui4vt4t.cpp:\
    \ In function 'int main()':\n/tmp/tmp7ui4vt4t.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7ui4vt4t.cpp:2:\n/tmp/tmp7ui4vt4t.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp7ui4vt4t.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp7ui4vt4t.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp7ui4vt4t.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || it != u.begin())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0sw8lc8t.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp0sw8lc8t.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmp0sw8lc8t.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmp0sw8lc8t.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp0sw8lc8t.cpp: In function 'int\
    \ main()':\n/tmp/tmp0sw8lc8t.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0sw8lc8t.cpp:2:\n/tmp/tmp0sw8lc8t.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp0sw8lc8t.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp0sw8lc8t.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp0sw8lc8t.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp0sw8lc8t.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c+"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a vector\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || it != u.begin())\n\
    \            u.push_back(*it);\n    }\n    return u;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc0vikyd1.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpc0vikyd1.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpc0vikyd1.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpc0vikyd1.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpc0vikyd1.cpp: In function 'int\
    \ main()':\n/tmp/tmpc0vikyd1.cpp:16:10: error: 'candidate' does not name a type\n\
    \     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc0vikyd1.cpp:2:\n/tmp/tmpc0vikyd1.cpp:17:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpc0vikyd1.cpp:17:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpc0vikyd1.cpp:17:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpc0vikyd1.cpp:17:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpc0vikyd1.cpp:17:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c+"
  stdout: ''

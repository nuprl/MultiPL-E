name: HumanEval_160_do_algebra
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two vectors operator,\
  \ and operand. The first vector has basic algebra operations, and \n// the second\
  \ vector is a vector of integers. Use the two given vectors to build the algebric\
  \ \n// expression and return the evaluation of this expression.\n// The basic algebra\
  \ operations:\n// Addition ( + ) \n// Subtraction ( - ) \n// Multiplication ( *\
  \ ) \n// Floor division ( // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+',\
  \ '*', '-']\n// vector = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result =\
  \ 9\n// Note:\n// The length of operator vector is equal to the length of operand\
  \ vector minus one.\n// Operand is a vector of of non-negative integers.\n// Operator\
  \ vector has at least one operator, and operand vector has at least two operands.\n\
  long do_algebra(std::vector<std::string> op, std::vector<long> operand) {\n"
tests: "}\nint main() {\n    auto candidate = do_algebra;\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  **\", (std::string)\"*\", (std::string)\"+\"})), (std::vector<long>({(long)2, (long)3,\
  \ (long)4, (long)5}))) == (37));\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  +\", (std::string)\"*\", (std::string)\"-\"})), (std::vector<long>({(long)2, (long)3,\
  \ (long)4, (long)5}))) == (9));\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  //\", (std::string)\"*\"})), (std::vector<long>({(long)7, (long)3, (long)4}))) ==\
  \ (8));\n}\n"
completions: ["    // Your code goes here\n    long result = 0;\n    long temp = 0;\n\
    \    long op_index = 0;\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long op_size = op.size();\n\
    \    long op_size = op.size();\n    long op_size = op.size();\n    long op_size\
    \ = op.size();\n    long op_size = op.size();\n    long ", "    // Write your\
    \ code here\n    long result = 0;\n    long temp = 0;\n    long op_index = 0;\n\
    \    long op_index2 = 0;\n    long op_index3 = 0;\n    long op_index4 = 0;\n \
    \   long op_index5 = 0;\n    long op_index6 = 0;\n    long op_index7 = 0;\n  \
    \  long op_index8 = 0;\n    long op_index9 = 0;\n    long op_index10 = 0;\n  \
    \  long op_index11 = 0;\n    long op_index12 = 0;\n    long op_index13 = 0;\n\
    \    long op_index14 = 0;\n    long op_index15 = 0;\n    long op_index16 = 0;\n\
    \    long op_index17 = 0;\n    long op_index18 = 0;\n    long op_index19 = 0;\n\
    \    long op_index20 = 0;\n    long op_index21 = 0;\n    long op_index22 = 0;\n\
    \    long op_index23 = 0;\n    long op_index24 = 0;\n    long op_index25 = 0;\n\
    \    long op_index26 = 0;\n    long op_index27 = 0;\n    long op_index28 = 0;\n\
    \    long op_index29 = 0;\n    long op_index30 = 0;\n    long op_index31 = 0;\n\
    \    long op_index32 = 0;\n    long op_index33 = 0;\n    long op_index34 = 0;\n\
    \    long op_index35 = 0;\n    long op_index36 = 0;\n    long op_index37 = 0;\n\
    \    long op_index38 = 0;\n    long op_index39 = 0;\n    long op_index40 = 0;\n\
    \    long op_index41 = 0;\n    long op_index42 = 0;\n    long op_index43 = 0;\n\
    \    long op_index44 = 0;\n    long op_index45 = 0;\n    long op_index46 = 0;\n\
    \    long op_index47 = 0;\n    long op_index48 = 0;\n    long op_index49 = 0;\n\
    \    long op_index50 = 0;\n    long op_index51 = 0;\n    long op_index52 = 0;\n\
    \    long op_index53 = 0;\n    long op_index54 = 0;\n    long op_index55 = 0;\n\
    \    long op_index56 = 0;\n    long op_index57 = 0;\n    long op_index58 = 0;\n\
    \    long op_index59 = 0;\n    long op_index60 = 0;\n    long op_index61 = 0;\n\
    \    long op_index62 = 0;\n    long op_index63 = 0;\n    long op_index64 = 0;\n\
    \    long op_index65 = 0;\n    long op_index66 = 0;\n    long op_index67 = 0;\n\
    \    long op_index68 = 0;\n    long op_index69 = 0;\n    long op_index70 = 0;\n\
    \    long op_index71 = 0;\n    long op_index72", "    // Your code goes here\n\
    \    long result = 0;\n    long temp = 0;\n    long op_index = 0;\n    long op_size\
    \ = op.size();\n    long op_index2 = 0;\n    long op_size2 = op.size();\n    long\
    \ op_index3 = 0;\n    long op_size3 = op.size();\n    long op_index4 = 0;\n  \
    \  long op_size4 = op.size();\n    long op_index5 = 0;\n    long op_size5 = op.size();\n\
    \    long op_index6 = 0;\n    long op_size6 = op.size();\n    long op_index7 =\
    \ 0;\n    long op_size7 = op.size();\n    long op_index8 = 0;\n    long op_size8\
    \ = op.size();\n    long op_index9 = 0;\n    long op_size9 = op.size();\n    long\
    \ op_index10 = 0;\n    long op_size10 = op.size();\n    long op_index11 = 0;\n\
    \    long op_size11 = op.size();\n    long op_index12 = 0;\n    long op_size12\
    \ = op.size();\n    long op_index13 = 0;\n    long op_size13 = op.size();\n  \
    \  long op_index14 = 0;\n    long op_size14 = op.size();\n    long op_index15\
    \ = 0;\n    long op_size15 = op.size();\n    long op_index16 = 0;\n    long op_size16\
    \ = op.size();\n    long op_index17 = 0;\n    long op_size17 = op.size();\n  \
    \  long op_index18 = 0;\n    long op_size18 = op.size();\n    long op_index19\
    \ = 0;\n    long op_size19 = op.size();\n    long op_index20 = 0;\n    long op_size20\
    \ = op.size();\n    long op_index21 = 0;\n    long op_size21 = op.size();\n  \
    \  long op_index22 = 0;\n    long op_size22 = op.size();\n    long op_index23\
    \ = 0;\n    long op_size23 = op.size();\n    long op_index24 = 0;\n    long op_size24\
    \ = op.size();\n    long op_index25 = 0;\n    long op_size25 = op.size();\n  \
    \  long op_index26 = 0;\n    long op_size26 = op.size();\n    long op_index27\
    \ = 0;\n    long op_size27 = op.size();\n    long op_index28 = 0;\n    long op_size28\
    \ = op.size();\n    long op_index29 = 0;\n    long op_size29 = op.size();\n  \
    \  long op_index30 = 0;\n    long op_size30 = op.size();\n    long op_index",
  "    // Write your code here\n    long result = 0;\n    long temp = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n\
    \    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long\
    \ J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n\
    \    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long\
    \ S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n\
    \    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long\
    \ AB = 0;\n    long AC = 0;\n    long AD = 0;\n    long AE = 0;\n    long AF =\
    \ 0;\n    long AG = 0;\n    long AH = 0;\n    long AI = 0;\n    long AJ = 0;\n\
    \    long AK = 0;\n    long AL = 0;\n    long AM = 0;\n    long AN = 0;\n    long\
    \ AO = 0;\n    long AP = 0;\n    long AQ = 0;\n    long AR = 0;\n    long AS =\
    \ 0;\n    long AT = 0;\n    long AU = 0;\n    long AV = 0;\n    long AW = 0;\n\
    \    long AX = 0;\n    long AY = 0;\n    long AZ = 0;\n    long BA = 0;\n    long\
    \ BB = 0;\n    long BC = 0;\n    long BD = 0;\n    long BE = 0;\n    long BF =\
    \ 0;\n    long BG = 0;\n    long BH = 0;\n    long BI = 0;\n    long BJ = 0;\n\
    \    long BK = 0;\n    long BL = 0;\n    long BM = 0;\n    long BN = 0;\n    long\
    \ BO = 0;\n    long BP = 0;\n    long BQ = 0;\n    long BR = 0;\n    long BS =\
    \ 0;\n    long BT = 0;\n    long BU = 0;\n    long BV = 0;\n    long BW = 0;\n\
    \    long BX = 0;\n    long BY = 0;\n    long BZ = 0;\n    long CA = 0;\n    long\
    \ CB = 0;\n    ", "    // Your code here\n    long result = 0;\n    for (size_t\
    \ i = 0; i < op.size(); i++) {\n        switch (op[i]) {\n            case '+':\n\
    \                result += operand[i];\n                break;\n            case\
    \ '-':\n                result -= operand[i];\n                break;\n      \
    \      case '*':\n                result *= operand[i];\n                break;\n\
    \            case '/':\n                result /= operand[i];\n              \
    \  break;\n            case '**':\n                result *= operand[i];\n   \
    \             break;\n            default:\n                assert(false);\n \
    \       }\n    }\n    return result;", "    // Write your code here\n    long\
    \ result = 0;\n    long temp = 0;\n    long op_index = 0;\n    long op_index2\
    \ = 0;\n    long op_index3 = 0;\n    long op_index4 = 0;\n    long op_index5 =\
    \ 0;\n    long op_index6 = 0;\n    long op_index7 = 0;\n    long op_index8 = 0;\n\
    \    long op_index9 = 0;\n    long op_index10 = 0;\n    long op_index11 = 0;\n\
    \    long op_index12 = 0;\n    long op_index13 = 0;\n    long op_index14 = 0;\n\
    \    long op_index15 = 0;\n    long op_index16 = 0;\n    long op_index17 = 0;\n\
    \    long op_index18 = 0;\n    long op_index19 = 0;\n    long op_index20 = 0;\n\
    \    long op_index21 = 0;\n    long op_index22 = 0;\n    long op_index23 = 0;\n\
    \    long op_index24 = 0;\n    long op_index25 = 0;\n    long op_index26 = 0;\n\
    \    long op_index27 = 0;\n    long op_index28 = 0;\n    long op_index29 = 0;\n\
    \    long op_index30 = 0;\n    long op_index31 = 0;\n    long op_index32 = 0;\n\
    \    long op_index33 = 0;\n    long op_index34 = 0;\n    long op_index35 = 0;\n\
    \    long op_index36 = 0;\n    long op_index37 = 0;\n    long op_index38 = 0;\n\
    \    long op_index39 = 0;\n    long op_index40 = 0;\n    long op_index41 = 0;\n\
    \    long op_index42 = 0;\n    long op_index43 = 0;\n    long op_index44 = 0;\n\
    \    long op_index45 = 0;\n    long op_index46 = 0;\n    long op_index47 = 0;\n\
    \    long op_index48 = 0;\n    long op_index49 = 0;\n    long op_index50 = 0;\n\
    \    long op_index51 = 0;\n    long op_index52 = 0;\n    long op_index53 = 0;\n\
    \    long op_index54 = 0;\n    long op_index55 = 0;\n    long op_index56 = 0;\n\
    \    long op_index57 = 0;\n    long op_index58 = 0;\n    long op_index59 = 0;\n\
    \    long op_index60 = 0;\n    long op_index61 = 0;\n    long op_index62 = 0;\n\
    \    long op_index63 = 0;\n    long op_index64 = 0;\n    long op_index65 = 0;\n\
    \    long op_index66 = 0;\n    long op_index67 = 0;\n    long op_index68 = 0;\n\
    \    long op_index69 = 0;\n    long op_index70 = 0;\n    long op_index71 = 0;\n\
    \    long op_index72", "    // Your code goes here\n    long result = 0;\n   \
    \ long temp = 0;\n    long op_index = 0;\n    long op_size = 0;\n    long op_size2\
    \ = 0;\n    long op_size3 = 0;\n    long op_size4 = 0;\n    long op_size5 = 0;\n\
    \    long op_size6 = 0;\n    long op_size7 = 0;\n    long op_size8 = 0;\n    long\
    \ op_size9 = 0;\n    long op_size10 = 0;\n    long op_size11 = 0;\n    long op_size12\
    \ = 0;\n    long op_size13 = 0;\n    long op_size14 = 0;\n    long op_size15 =\
    \ 0;\n    long op_size16 = 0;\n    long op_size17 = 0;\n    long op_size18 = 0;\n\
    \    long op_size19 = 0;\n    long op_size20 = 0;\n    long op_size21 = 0;\n \
    \   long op_size22 = 0;\n    long op_size23 = 0;\n    long op_size24 = 0;\n  \
    \  long op_size25 = 0;\n    long op_size26 = 0;\n    long op_size27 = 0;\n   \
    \ long op_size28 = 0;\n    long op_size29 = 0;\n    long op_size30 = 0;\n    long\
    \ op_size31 = 0;\n    long op_size32 = 0;\n    long op_size33 = 0;\n    long op_size34\
    \ = 0;\n    long op_size35 = 0;\n    long op_size36 = 0;\n    long op_size37 =\
    \ 0;\n    long op_size38 = 0;\n    long op_size39 = 0;\n    long op_size40 = 0;\n\
    \    long op_size41 = 0;\n    long op_size42 = 0;\n    long op_size43 = 0;\n \
    \   long op_size44 = 0;\n    long op_size45 = 0;\n    long op_size46 = 0;\n  \
    \  long op_size47 = 0;\n    long op_size48 = 0;\n    long op_size49 = 0;\n   \
    \ long op_size50 = 0;\n    long op_size51 = 0;\n    long op_size52 = 0;\n    long\
    \ op_size53 = 0;\n    long op_size54 = 0;\n    long op_size55 = 0;\n    long op_size56\
    \ = 0;\n    long op_size57 = 0;\n    long op_size58 = 0;\n    long op_size59 =\
    \ 0;\n    long op_size60 = 0;\n    long op_size61 = 0;\n    long op_size62 = 0;\n\
    \    long op_size63 = 0;\n    long op_size64 = 0;\n    long op_size65 = 0;\n \
    \   long op_size66 = 0;\n    long op_size67 = 0;\n    long op_size68 = 0;\n  \
    \  long op_size69 = 0;\n    long op_size70 = 0;\n    long op_size71", "    //\
    \ Write your code here\n    long result = 0;\n    for(auto i : operand) {\n  \
    \      result += i;\n    }\n    for(auto i : op) {\n        switch(i) {\n    \
    \        case '+':\n                result += operand[0];\n                break;\n\
    \            case '-':\n                result -= operand[0];\n              \
    \  break;\n            case '*':\n                result *= operand[0];\n    \
    \            break;\n            case '/':\n                result /= operand[0];\n\
    \                break;\n            case '**':\n                result *= operand[0];\n\
    \                result *= operand[0];\n                break;\n            default:\n\
    \                assert(0);\n        }\n    }\n    return result;", "    // Write\
    \ your code here\n    long result = 0;\n    for(size_t i = 0; i < op.size(); i++)\
    \ {\n        switch(op[i]) {\n            case '+':\n                result +=\
    \ operand[i];\n                break;\n            case '-':\n               \
    \ result -= operand[i];\n                break;\n            case '*':\n     \
    \           result *= operand[i];\n                break;\n            case '/':\n\
    \                result /= operand[i];\n                break;\n            case\
    \ '^':\n                result %= operand[i];\n                break;\n      \
    \      default:\n                assert(false);\n        }\n    }\n    return\
    \ result;", "    // Write your code here\n    long result = 0;\n    long sum =\
    \ 0;\n    long product = 1;\n    long floor = 0;\n    long exponent = 1;\n   \
    \ long power = 1;\n    long power2 = 1;\n    long power3 = 1;\n    long power4\
    \ = 1;\n    long power5 = 1;\n    long power6 = 1;\n    long power7 = 1;\n   \
    \ long power8 = 1;\n    long power9 = 1;\n    long power10 = 1;\n    long power11\
    \ = 1;\n    long power12 = 1;\n    long power13 = 1;\n    long power14 = 1;\n\
    \    long power15 = 1;\n    long power16 = 1;\n    long power17 = 1;\n    long\
    \ power18 = 1;\n    long power19 = 1;\n    long power20 = 1;\n    long power21\
    \ = 1;\n    long power22 = 1;\n    long power23 = 1;\n    long power24 = 1;\n\
    \    long power25 = 1;\n    long power26 = 1;\n    long power27 = 1;\n    long\
    \ power28 = 1;\n    long power29 = 1;\n    long power30 = 1;\n    long power31\
    \ = 1;\n    long power32 = 1;\n    long power33 = 1;\n    long power34 = 1;\n\
    \    long power35 = 1;\n    long power36 = 1;\n    long power37 = 1;\n    long\
    \ power38 = 1;\n    long power39 = 1;\n    long power40 = 1;\n    long power41\
    \ = 1;\n    long power42 = 1;\n    long power43 = 1;\n    long power44 = 1;\n\
    \    long power45 = 1;\n    long power46 = 1;\n    long power47 = 1;\n    long\
    \ power48 = 1;\n    long power49 = 1;\n    long power50 = 1;\n    long power51\
    \ = 1;\n    long power52 = 1;\n    long power53 = 1;\n    long power54 = 1;\n\
    \    long power55 = 1;\n    long power56 = 1;\n    long power57 = 1;\n    long\
    \ power58 = 1;\n    long power59 = 1;\n    long power60 = 1;\n    long power61\
    \ = 1;\n    long power62 = 1;\n    long power63 = 1;\n    long power64 = 1;\n\
    \    long power65 = 1;\n    long power66 = 1;\n    long power67 = 1;\n    long\
    \ power68 = 1;\n    long power69 = 1;\n    long power70 = 1;\n    long power71\
    \ = 1;\n    long power72 = 1;\n    long power73 = 1;\n    long power74 = 1;\n\
    \    long power75 = 1;\n    long power76 = 1;\n    long power77 = 1;\n    long\
    \ power78 = 1;\n    long power79 = 1;\n    long ", "    // Write your code here\n\
    \    long result = 0;\n    long temp = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n\
    \    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long\
    \ G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n\
    \    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long\
    \ P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n\
    \    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long\
    \ Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n\
    \    long AD = 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long\
    \ AH = 0;\n    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL =\
    \ 0;\n    long AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n\
    \    long AQ = 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long\
    \ AU = 0;\n    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY =\
    \ 0;\n    long AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n\
    \    long BD = 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long\
    \ BH = 0;\n    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL =\
    \ 0;\n    long BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n\
    \    long BQ = 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long\
    \ BU = 0;\n    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n    long BY =\
    \ 0;\n    long BZ = 0;\n    long CA = 0;\n    long CB = 0;\n    ", "    // Your\
    \ code here\n    long result = 0;\n    long temp = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long\
    \ B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n\
    \    long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long\
    \ K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n\
    \    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long\
    \ T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n\
    \    long Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long\
    \ AC = 0;\n    long AD = 0;\n    long AE = 0;\n    long AF = 0;\n    long AG =\
    \ 0;\n    long AH = 0;\n    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n\
    \    long AL = 0;\n    long AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long\
    \ AP = 0;\n    long AQ = 0;\n    long AR = 0;\n    long AS = 0;\n    long AT =\
    \ 0;\n    long AU = 0;\n    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n\
    \    long AY = 0;\n    long AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long\
    \ BC = 0;\n    long BD = 0;\n    long BE = 0;\n    long BF = 0;\n    long BG =\
    \ 0;\n    long BH = 0;\n    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n\
    \    long BL = 0;\n    long BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long\
    \ BP = 0;\n    long BQ = 0;\n    long BR = 0;\n    long BS = 0;\n    long BT =\
    \ 0;\n    long BU = 0;\n    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n\
    \    long BY = 0;\n    long BZ = 0;\n    long CA = 0;\n    long CB = 0;\n    ",
  "    // Your code goes here\n    long result = 0;\n    for(size_t i = 0; i < op.size();\
    \ i++) {\n        switch(op[i]) {\n            case '+':\n                result\
    \ += operand[i];\n                break;\n            case '-':\n            \
    \    result -= operand[i];\n                break;\n            case '*':\n  \
    \              result *= operand[i];\n                break;\n            case\
    \ '/':\n                result /= operand[i];\n                break;\n      \
    \      case '%':\n                result %= operand[i];\n                break;\n\
    \            case '^':\n                result ^= operand[i];\n              \
    \  break;\n            default:\n                assert(false);\n        }\n \
    \   }\n    return result;", "    long result = 0;\n    long op_index = 0;\n  \
    \  long op_size = 0;\n    long op_index2 = 0;\n    long op_size2 = 0;\n    long\
    \ op_index3 = 0;\n    long op_size3 = 0;\n    long op_index4 = 0;\n    long op_size4\
    \ = 0;\n    long op_index5 = 0;\n    long op_size5 = 0;\n    long op_index6 =\
    \ 0;\n    long op_size6 = 0;\n    long op_index7 = 0;\n    long op_size7 = 0;\n\
    \    long op_index8 = 0;\n    long op_size8 = 0;\n    long op_index9 = 0;\n  \
    \  long op_size9 = 0;\n    long op_index10 = 0;\n    long op_size10 = 0;\n   \
    \ long op_index11 = 0;\n    long op_size11 = 0;\n    long op_index12 = 0;\n  \
    \  long op_size12 = 0;\n    long op_index13 = 0;\n    long op_size13 = 0;\n  \
    \  long op_index14 = 0;\n    long op_size14 = 0;\n    long op_index15 = 0;\n \
    \   long op_size15 = 0;\n    long op_index16 = 0;\n    long op_size16 = 0;\n \
    \   long op_index17 = 0;\n    long op_size17 = 0;\n    long op_index18 = 0;\n\
    \    long op_size18 = 0;\n    long op_index19 = 0;\n    long op_size19 = 0;\n\
    \    long op_index20 = 0;\n    long op_size20 = 0;\n    long op_index21 = 0;\n\
    \    long op_size21 = 0;\n    long op_index22 = 0;\n    long op_size22 = 0;\n\
    \    long op_index23 = 0;\n    long op_size23 = 0;\n    long op_index24 = 0;\n\
    \    long op_size24 = 0;\n    long op_index25 = 0;\n    long op_size25 = 0;\n\
    \    long op_index26 = 0;\n    long op_size26 = 0;\n    long op_index27 = 0;\n\
    \    long op_size27 = 0;\n    long op_index28 = 0;\n    long op_size28 = 0;\n\
    \    long op_index29 = 0;\n    long op_size29 = 0;\n    long op_index30 = 0;\n\
    \    long op_size30 = 0;\n    long op_index31 = 0;\n    long op_size31 = 0;\n\
    \    long op_index32 = 0;\n    long op_size32 = 0;\n    long op_index33 = 0;\n\
    \    long op_size33 = 0;\n    long op_index34 = 0;\n    long op_size34 = 0;\n\
    \    long op_index35 = 0;\n    long op_size35 = 0;\n    long op_index36 = 0;\n\
    \    long op_size36 = 0;\n    long op_index37 = 0;\n    long op_size37 = 0;",
  "    // Write your code here\n    long result = 0;\n    for(auto i : operand) {\n\
    \        result += i;\n    }\n    for(auto i : op) {\n        switch(i) {\n  \
    \          case '+':\n                result += operand[0];\n                break;\n\
    \            case '-':\n                result -= operand[0];\n              \
    \  break;\n            case '*':\n                result *= operand[0];\n    \
    \            break;\n            case '/':\n                result /= operand[0];\n\
    \                break;\n            case '**':\n                result *= operand[0];\n\
    \                result *= operand[0];\n                break;\n            default:\n\
    \                assert(0);\n        }\n    }\n    return result;", "    // Write\
    \ your code here\n    long result = 0;\n    for(int i = 0; i < op.size(); i++)\
    \ {\n        switch(op[i]) {\n            case '+':\n                result +=\
    \ operand[i];\n                break;\n            case '-':\n               \
    \ result -= operand[i];\n                break;\n            case '*':\n     \
    \           result *= operand[i];\n                break;\n            case '/':\n\
    \                result /= operand[i];\n                break;\n            case\
    \ '^':\n                result %= operand[i];\n                break;\n      \
    \      case '**':\n                result %= operand[i];\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;", "    // Your code goes here\n    long result = 0;\n    long sum =\
    \ 0;\n    long product = 1;\n    long floordiv = 0;\n    long exponent = 1;\n\
    \    long temp;\n    long i;\n    for(i = 0; i < op.size(); i++) {\n        switch(op[i])\
    \ {\n            case '+':\n                sum += operand[i];\n             \
    \   break;\n            case '-':\n                sum -= operand[i];\n      \
    \          break;\n            case '*':\n                product *= operand[i];\n\
    \                break;\n            case '/':\n                floordiv = operand[i]\
    \ / product;\n                break;\n            case '^':\n                exponent\
    \ = operand[i] * exponent;\n                break;\n            default:\n   \
    \             assert(false);\n        }\n    }\n    temp = sum;\n    temp = floordiv;\n\
    \    temp = temp * exponent;\n    temp = temp / product;\n    result = temp;\n\
    \    return result;", "    // Your code here\n    long result = 0;\n    for(auto\
    \ i : operand){\n        result += i;\n    }\n    for(auto i : op){\n        switch(i){\n\
    \            case '+':\n                result += operand[0];\n              \
    \  break;\n            case '-':\n                result -= operand[0];\n    \
    \            break;\n            case '*':\n                result *= operand[0];\n\
    \                break;\n            case '/':\n                result /= operand[0];\n\
    \                break;\n            case '**':\n                result *= operand[0];\n\
    \                result *= operand[0];\n                break;\n            default:\n\
    \                assert(false);\n        }\n    }\n    return result;", "    //\
    \ Your code goes here\n    long result = 0;\n    long temp = 0;\n    long op_index\
    \ = 0;\n    long op_size = 0;\n    long op_index2 = 0;\n    long op_size2 = 0;\n\
    \    long op_index3 = 0;\n    long op_size3 = 0;\n    long op_index4 = 0;\n  \
    \  long op_size4 = 0;\n    long op_index5 = 0;\n    long op_size5 = 0;\n    long\
    \ op_index6 = 0;\n    long op_size6 = 0;\n    long op_index7 = 0;\n    long op_size7\
    \ = 0;\n    long op_index8 = 0;\n    long op_size8 = 0;\n    long op_index9 =\
    \ 0;\n    long op_size9 = 0;\n    long op_index10 = 0;\n    long op_size10 = 0;\n\
    \    long op_index11 = 0;\n    long op_size11 = 0;\n    long op_index12 = 0;\n\
    \    long op_size12 = 0;\n    long op_index13 = 0;\n    long op_size13 = 0;\n\
    \    long op_index14 = 0;\n    long op_size14 = 0;\n    long op_index15 = 0;\n\
    \    long op_size15 = 0;\n    long op_index16 = 0;\n    long op_size16 = 0;\n\
    \    long op_index17 = 0;\n    long op_size17 = 0;\n    long op_index18 = 0;\n\
    \    long op_size18 = 0;\n    long op_index19 = 0;\n    long op_size19 = 0;\n\
    \    long op_index20 = 0;\n    long op_size20 = 0;\n    long op_index21 = 0;\n\
    \    long op_size21 = 0;\n    long op_index22 = 0;\n    long op_size22 = 0;\n\
    \    long op_index23 = 0;\n    long op_size23 = 0;\n    long op_index24 = 0;\n\
    \    long op_size24 = 0;\n    long op_index25 = 0;\n    long op_size25 = 0;\n\
    \    long op_index26 = 0;\n    long op_size26 = 0;\n    long op_index27 = 0;\n\
    \    long op_size27 = 0;\n    long op_index28 = 0;\n    long op_size28 = 0;\n\
    \    long op_index29 = 0;\n    long op_size29 = 0;\n    long op_index30 = 0;\n\
    \    long op_size30 = 0;\n    long op_index31 = 0;\n    long op_size31 = 0;\n\
    \    long op_index32 = 0;\n    long op_size32 = 0;\n    long op_index33 = 0;\n\
    \    long op_size33 = 0;\n    long op_index34 = 0;\n    long op_size34 = 0;\n\
    \    long op_index35 = 0;\n    long op_size35 = 0;\n    long op_index36 = 0;\n\
    \    long op_size36 = 0;\n    long ", "    // Your code goes here\n    long result\
    \ = 0;\n    long temp = 0;\n    long op_index = 0;\n    long op_size = op.size();\n\
    \    long op_index2 = 0;\n    long op_size2 = op.size() - 1;\n    long op_index3\
    \ = 0;\n    long op_size3 = op.size() - 2;\n    long op_index4 = 0;\n    long\
    \ op_size4 = op.size() - 3;\n    long op_index5 = 0;\n    long op_size5 = op.size()\
    \ - 4;\n    long op_index6 = 0;\n    long op_size6 = op.size() - 5;\n    long\
    \ op_index7 = 0;\n    long op_size7 = op.size() - 6;\n    long op_index8 = 0;\n\
    \    long op_size8 = op.size() - 7;\n    long op_index9 = 0;\n    long op_size9\
    \ = op.size() - 8;\n    long op_index10 = 0;\n    long op_size10 = op.size() -\
    \ 9;\n    long op_index11 = 0;\n    long op_size11 = op.size() - 10;\n    long\
    \ op_index12 = 0;\n    long op_size12 = op.size() - 11;\n    long op_index13 =\
    \ 0;\n    long op_size13 = op.size() - 12;\n    long op_index14 = 0;\n    long\
    \ op_size14 = op.size() - 13;\n    long op_index15 = 0;\n    long op_size15 =\
    \ op.size() - 14;\n    long op_index16 = 0;\n    long op_size16 = op.size() -\
    \ 15;\n    long op_index17 = 0;\n    long op_size17 = op.size() - 16;\n    long\
    \ op_index18 = 0;\n    long op_size18 = op.size() - 17;\n    long op_index19 =\
    \ 0;\n    long op_size19 = op.size() - 18;\n    long op_index20 = 0;\n    long\
    \ op_size20 = op.size() - 19;\n    long op_index21 = 0;\n    long op_size21 =\
    \ op.size() - 20;\n    long op_index22 = 0;\n    long op_size22 = op.size() -\
    \ 21;\n    long op_index23 = 0;\n    long op_size23 = op.size() - 22;\n    long\
    \ op_index24 = 0;\n    long op_size24 = op.size() - 23;\n    long op_index25 =\
    \ 0;\n    long op_size25 = op.size() - 24;\n    long op_index26 = 0;\n    long\
    \ op_size26 = op.size() - 25;\n    long op_index27 = 0;\n    long op_size27 =\
    \ op.size() - 26;\n    long op_index28 = 0;\n    long op_size28 = op.size() -\
    \ 27;\n    "]
stop_tokens:
- "\n}"

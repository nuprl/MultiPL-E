name: HumanEval_91_is_bored
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
  \ of words, and your task is to count the number\n// of boredoms. A boredom is a\
  \ sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
  \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n// >>>\
  \ is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n// (1)\n\
  long is_bored(std::string S) {\n"
tests: "}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
  Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
  \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
  )) == (0));\n    assert(candidate((\"I feel good today. I will be productive. will\
  \ kill It\")) == (2));\n    assert(candidate((\"You and I are going for a walk\"\
  )) == (0));\n}\n"
completions: ["    long boredoms = 0;\n    std::string word;\n    std::string delimiter\
    \ = \" .?!\";\n    std::string delimiter2 = \" .?!\";\n    std::string delimiter3\
    \ = \" .?!\";\n    std::string delimiter4 = \" .?!\";\n    std::string delimiter5\
    \ = \" .?!\";\n    std::string delimiter6 = \" .?!\";\n    std::string delimiter7\
    \ = \" .?!\";\n    std::string delimiter8 = \" .?!\";\n    std::string delimiter9\
    \ = \" .?!\";\n    std::string delimiter10 = \" .?!\";\n    std::string delimiter11\
    \ = \" .?!\";\n    std::string delimiter12 = \" .?!\";\n    std::string delimiter13\
    \ = \" .?!\";\n    std::string delimiter14 = \" .?!\";\n    std::string delimiter15\
    \ = \" .?!\";\n    std::string delimiter16 = \" .?!\";\n    std::string delimiter17\
    \ = \" .?!\";\n    std::string delimiter18 = \" .?!\";\n    std::string delimiter19\
    \ = \" .?!\";\n    std::string delimiter20 = \" .?!\";\n    std::string delimiter21\
    \ = \" .?!\";\n    std::string delimiter22 = \" .?!\";\n    std::string delimiter23\
    \ = \" .?!\";\n    std::string delimiter24 = \" .?!\";\n    std::string delimiter25\
    \ = \" .?!\";\n    std::string delimiter26 = \" .?!\";\n    std::string delimiter27\
    \ = \" .?!\";\n    std::string delimiter28 = \" .?!\";\n    std::string delimiter29\
    \ = \" .?!\";\n    std::string delimiter30 = \" .?!\";\n    std::string delimiter31\
    \ = \" .?!\";\n    std::string delimiter32 = \" .?!\";\n    std::string delimiter33\
    \ = \" .?!\";\n    std::string delimiter34 = \" .?!\";\n    std::string delimiter35\
    \ = \" .?!\";\n    std::string delimiter36 = \" .?!\";\n    std::string delimiter37\
    \ = \" .?!\";\n    std::string delimiter38 = \" .?!\";\n    std::string delimiter39\
    \ = \" .?!\";\n    std::string delimiter40 = \" .?!\";\n    std::string delimiter41\
    \ = \" .?!\";\n    std::string delimiter42 = \" .?!\";\n    std::string delimiter43\
    \ = \" .?!\";\n    std::string delimiter44 = \" .?!\";\n    std::string delimiter45\
    \ = \" .?!\";\n    std::string delimiter46 = \" .?!\";\n    std::string delimiter47\
    \ = \" ", "    long boredoms = 0;\n    std::string word;\n    for(int i = 0; i\
    \ < S.size(); i++) {\n        word = S[i];\n        if(word == \"I\") {\n    \
    \        boredoms++;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    for (auto &c : S) {\n        if (c == '.' ||\
    \ c == '?' || c == '!') {\n            boredoms += 1;\n        }\n    }\n    return\
    \ boredoms;", "    int boredom = 0;\n    int i = 0;\n    while (i < S.size())\
    \ {\n        if (S[i] == '.') {\n            boredom++;\n        }\n        if\
    \ (S[i] == '?') {\n            boredom++;\n        }\n        if (S[i] == '!')\
    \ {\n            boredom++;\n        }\n        i++;\n    }\n    return boredom;",
  "    long ans = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] ==\
    \ '.' || S[i] == '?' || S[i] == '!') {\n            ans += 1;\n        }\n   \
    \ }\n    return ans;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiter = \",\";\n    std::string delimiter2\
    \ = \" \";\n    std::string delimiter3 = \" \";\n    std::string delimiter4 =\
    \ \" \";\n    std::string delimiter5 = \" \";\n    std::string delimiter6 = \"\
    \ \";\n    std::string delimiter7 = \" \";\n    std::string delimiter8 = \" \"\
    ;\n    std::string delimiter9 = \" \";\n    std::string delimiter10 = \" \";\n\
    \    std::string delimiter11 = \" \";\n    std::string delimiter12 = \" \";\n\
    \    std::string delimiter13 = \" \";\n    std::string delimiter14 = \" \";\n\
    \    std::string delimiter15 = \" \";\n    std::string delimiter16 = \" \";\n\
    \    std::string delimiter17 = \" \";\n    std::string delimiter18 = \" \";\n\
    \    std::string delimiter19 = \" \";\n    std::string delimiter20 = \" \";\n\
    \    std::string delimiter21 = \" \";\n    std::string delimiter22 = \" \";\n\
    \    std::string delimiter23 = \" \";\n    std::string delimiter24 = \" \";\n\
    \    std::string delimiter25 = \" \";\n    std::string delimiter26 = \" \";\n\
    \    std::string delimiter27 = \" \";\n    std::string delimiter28 = \" \";\n\
    \    std::string delimiter29 = \" \";\n    std::string delimiter30 = \" \";\n\
    \    std::string delimiter31 = \" \";\n    std::string delimiter32 = \" \";\n\
    \    std::string delimiter33 = \" \";\n    std::string delimiter34 = \" \";\n\
    \    std::string delimiter35 = \" \";\n    std::string delimiter36 = \" \";\n\
    \    std::string delimiter37 = \" \";\n    std::string delimiter38 = \" \";\n\
    \    std::string delimiter39 = \" \";\n    std::string delimiter40 = \" \";\n\
    \    std::string delimiter41 = \" \";\n    std::string delimiter42 = \" \";\n\
    \    std::string delimiter43 = \" \";\n    std::string delimiter44 = \" \";\n\
    \    std::string delimiter45 = \" \";\n    std::string delimiter46 = \" \";\n\
    \    std::string delimiter47 = \" \";\n    std::string delimiter48 = \" \";\n\
    \    std::string delimiter49 = \" \";\n    std::string delimiter50 = \" \";\n\
    \    std::string delimiter51 = \" \";\n    std::string delimiter52 = \" \";\n\
    \    std::string delimiter53 = \" \";\n    std::string delimiter54 = \" \";\n\
    \    std::string delimiter55 = \" \";\n    std::string delimiter56 = \" \";\n\
    \    std::string delimiter57 = \" \";\n    std::string delimiter58 = \" \";\n\
    \    std::string delimiter59 = \" \";\n    std::string delimiter60 = \" \";\n\
    \    std::string delimiter61 = \" \";\n    std::string delimiter62 = \" \";\n\
    \    std::string delimiter63 = \" \";", "    int boredoms = 0;\n    for(int i\
    \ = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;", " \
    \   long boredoms = 0;\n    std::string word;\n    for (auto &c : S) {\n     \
    \   if (c == '.' || c == '?' || c == '!') {\n            boredoms += 1;\n    \
    \    }\n        else {\n            word = word + c;\n        }\n    }\n    if\
    \ (word == \"I\") {\n        boredoms += 1;\n    }\n    return boredoms;", " \
    \   long boredoms = 0;\n    std::string word;\n    for (auto &i : S) {\n     \
    \   if (i == '.' || i == '?' || i == '!') {\n            boredoms += 1;\n    \
    \    }\n    }\n    return boredoms;", "    // Write your code here\n    long boredoms\
    \ = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i]\
    \ == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n    return\
    \ boredoms;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \". ? !\";\n    std::string::size_type pos;\n    for (pos = 0;\
    \ (pos = S.find_first_of(delimiters, pos)) != std::string::npos; pos++) {\n  \
    \      word = S.substr(0, pos);\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = \"\
    ,\";\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n", "    long count = 0;\n    for(int i = 0; i < S.size();\
    \ i++){\n        if(S[i] == 'I'){\n            count++;\n        }\n    }\n  \
    \  return count;", "    int boredom = 0;\n    for(int i = 0; i < S.size(); i++)\
    \ {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n\
    \        }\n    }\n    return boredom;", "    // Write your code here\n    long\
    \ boredom = 0;\n    std::string word;\n    std::string sentence;\n    std::stringstream\
    \ ss;\n    ss << S;\n    while(std::getline(ss, sentence, '.')) {\n        std::istringstream\
    \ iss(sentence);\n        while(std::getline(iss, word, '.')) {\n            if(word\
    \ == \"I\") {\n                boredom++;\n            }\n        }\n    }\n \
    \   return boredom;", "    int boredoms = 0;\n    std::string word;\n    for (auto\
    \ &c : S) {\n        if (c == '.' || c == '?' || c == '!') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    int boredoms = 0;\n    for(int\
    \ i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms += 1;\n        }\n    }\n    return boredoms;",
  "    int boredoms = 0;\n    int i = 0;\n    while (i < S.size()) {\n        if (S[i]\
    \ == '.' || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n\
    \        i++;\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_", "    int boredom = 0;\n    int i = 0;\n    while(i < S.size())\
    \ {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n\
    \            i++;\n        } else {\n            i++;\n        }\n    }\n    return\
    \ boredom;", "    long count = 0;\n    std::string word;\n    std::string boredom;\n\
    \    std::string delimiter = \" .?!\";\n    size_t pos = 0;\n    size_t len =\
    \ S.length();\n    while(pos < len) {\n        word = S.substr(pos, 1);\n    \
    \    pos = pos + 1;\n        boredom = \"\";\n        pos = 0;\n        while(pos\
    \ < len) {\n            if(delimiter[0] == S[pos]) {\n                boredom\
    \ = boredom + S[pos];\n                pos = pos + 1;\n            }\n       \
    \     pos = pos + 1;\n        }\n        if(boredom == \"I\") {\n            count\
    \ = count + 1;\n        }\n    }\n    return count;", "    long boredoms = 0;\n\
    \    std::string word;\n    for (auto &i : S) {\n        if (i == '.' || i ==\
    \ '?' || i == '!') {\n            boredoms += 1;\n        }\n        else {\n\
    \            word = i;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    for\
    \ (auto &c : S) {\n        if (c == delimiters[0]) {\n            boredoms +=\
    \ 1;\n            word.clear();\n        } else if (c == delimiters[1]) {\n  \
    \          boredoms += 1;\n            word.clear();\n        } else if (c ==\
    \ delimiters[2]) {\n            word.clear();\n        } else {\n            word\
    \ += c;\n        }\n    }\n    return boredoms;", "    int boredom = 0;\n    for(int\
    \ i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredom++;\n        }\n    }\n    return boredom;", "  \
    \  long boredoms = 0;\n    std::string word;\n    for(int i = 0; i < S.size();\
    \ i++) {\n        if(S[i] == '.') {\n            boredoms += 1;\n        }\n \
    \       else if(S[i] == '?') {\n            boredoms += 1;\n        }\n      \
    \  else if(S[i] == '!') {\n            boredoms += 1;\n        }\n        else\
    \ {\n            word = S[i];\n            for(int j = i; j < S.size(); j++) {\n\
    \                if(S[j] == word) {\n                    boredoms += 1;\n    \
    \            }\n            }\n        }\n    }\n    return boredoms;", "    //\
    \ Write your code here\n    long boredoms = 0;\n    for(int i = 0; i < S.size();\
    \ i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n          \
    \  boredoms += 1;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string boredom_word;\n    std::string\
    \ sentence;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \"i.e\";\n    std::string delimiters_upper = \"I.E\";\n    std::string delimiters_capital\
    \ = \"I.E\";\n    std::string delimiters_capital2 = \"I.E\";\n    std::string\
    \ delimiters_capital3 = \"I.E\";\n    std::string delimiters_capital4 = \"I.E\"\
    ;\n    std::string delimiters_capital5 = \"I.E\";\n    std::string delimiters_capital6\
    \ = \"I.E\";\n    std::string delimiters_capital7 = \"I.E\";\n    std::string\
    \ delimiters_capital8 = \"I.E\";\n    std::string delimiters_capital9 = \"I.E\"\
    ;\n    std::string delimiters_capital10 = \"I.E\";\n    std::string delimiters_capital11\
    \ = \"I.E\";\n    std::string delimiters_capital12 = \"I.E\";\n    std::string\
    \ delimiters_capital13 = \"I.E\";\n    std::string delimiters_capital14 = \"I.E\"\
    ;\n    std::string delimiters_capital15 = \"I.E\";\n    std::string delimiters_capital16\
    \ = \"I.E\";\n    std::string delimiters_capital17 = \"I.E\";\n    std::string\
    \ delimiters_capital18 = \"I.E\";\n    std::string delimiters_capital19 = \"I.E\"\
    ;\n    std::string delimiters_capital20 = \"I.E\";\n    std::string delimiters_capital21\
    \ = \"I.E\";\n    std::string delimiters_capital22 = \"I.E\";\n    std::string\
    \ delimiters_capital23 = \"I.E\";\n    std::string delimiters_capital24 = \"I.E\"\
    ;\n    std::string delimiters_capital25 = \"I.E\";\n    std::string delimiters_capital26\
    \ = \"I.E\";\n    std::string delimiters_capital27 = \"I.E\";\n    std::string\
    \ delimiters_capital28 = \"I.E\";\n    std::string delimiters_capital29 = \"I.E\"\
    ;\n    std::string delimiters_capital30 = \"I.E\";\n    std::string delimiters_capital31\
    \ = \"I.E\";\n    std::string delimiters_capital32 = \"I.E\";\n    std::string\
    \ delimiters_capital33 = \"I.E\";\n    std::string delimiters_capital34 = \"I.E\"\
    ;\n    std::string delimiters_capital35 = \"I.E\";\n    std::string delimiters_capital36\
    \ = \"I.E\";\n    std::string delimiters_capital37 = \"I.E\";\n    std::string\
    \ delimiters_capital38 = \"I.E\";\n    ", "    int boredom = 0;\n    int i = 0;\n\
    \    std::string word;\n    while (i < S.size()) {\n        word = S[i];\n   \
    \     if (word == \"I\") {\n            boredom++;\n        }\n        i++;\n\
    \    }\n    return boredom;", "    long boredoms = 0;\n    std::string word;\n\
    \    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!') {\n  \
    \          boredoms += 1;\n        }\n    }\n    return boredoms;", "    int count\
    \ = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i]\
    \ == '?' || S[i] == '!') {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long boredoms = 0;\n    std::string word;\n    std::string boredom;\n\
    \    std::string delimiters = \".?!\";\n    std::string delimiters_lower = \"\
    i.e\";\n    std::string delimiters_upper = \"I.E\";\n    std::string delimiters_caps\
    \ = \"I.E\";\n    std::string delimiters_caps_lower = \"i.e\";\n    std::string\
    \ delimiters_caps_upper = \"I.E\";\n    std::string delimiters_caps_lower = \"\
    \";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string delimiters_caps_upper = \"\";\n    std::string delimiters_caps_lower\
    \ = \"\";\n    std::string ", "    long boredoms = 0;\n    std::string word;\n\
    \    for (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!') {\n  \
    \          boredoms += 1;\n        }\n    }\n    return boredoms;", "    long\
    \ boredoms = 0;\n    std::string word;\n    std::string boredom_word;\n    std::string\
    \ boredom_word_2;\n    std::string boredom_word_3;\n    std::string boredom_word_4;\n\
    \    std::string boredom_word_5;\n    std::string boredom_word_6;\n    std::string\
    \ boredom_word_7;\n    std::string boredom_word_8;\n    std::string boredom_word_9;\n\
    \    std::string boredom_word_10;\n    std::string boredom_word_11;\n    std::string\
    \ boredom_word_12;\n    std::string boredom_word_13;\n    std::string boredom_word_14;\n\
    \    std::string boredom_word_15;\n    std::string boredom_word_16;\n    std::string\
    \ boredom_word_17;\n    std::string boredom_word_18;\n    std::string boredom_word_19;\n\
    \    std::string boredom_word_20;\n    std::string boredom_word_21;\n    std::string\
    \ boredom_word_22;\n    std::string boredom_word_23;\n    std::string boredom_word_24;\n\
    \    std::string boredom_word_25;\n    std::string boredom_word_26;\n    std::string\
    \ boredom_word_27;\n    std::string boredom_word_28;\n    std::string boredom_word_29;\n\
    \    std::string boredom_word_30;\n    std::string boredom_word_31;\n    std::string\
    \ boredom_word_32;\n    std::string boredom_word_33;\n    std::string boredom_word_34;\n\
    \    std::string boredom_word_35;\n    std::string boredom_word_36;\n    std::string\
    \ boredom_word_37;\n    std::string boredom_word_38;\n    std::string boredom_word_39;\n\
    \    std::string boredom_word_40;\n    std::string boredom_word_41;\n    std::string\
    \ boredom_word_42;\n    std::string boredom_word_43;\n    std::string boredom_word_44;\n\
    \    std::string boredom_word_45;\n    std::string boredom_word_46;\n    std::string\
    \ boredom_word_47;\n    std::string boredom_word_48;\n    std::string boredom_word_49;\n\
    \    std::string boredom_word_50;\n    std::string boredom_word_51;\n    std::string\
    \ boredom_word_52;\n    std::string boredom_word_53;\n    std::string boredom_word_54;\n\
    \    std::string boredom_word_55;\n    std::string boredom_word_56;\n    std::string\
    \ boredom_word_57;\n    std::string boredom_word_", "    long boredoms = 0;\n\
    \    std::string word;\n    std::string delimiters = \".?!\";\n    size_t pos\
    \ = 0;\n    size_t i = 0;\n    while (pos < S.size()) {\n        word = S.substr(pos,\
    \ 1);\n        for (i = 0; i <= word.length(); i++) {\n            if (word.substr(0,\
    \ i) == \"I\") {\n                boredoms++;\n            }\n        }\n    \
    \    pos = pos + 1;\n    }\n    return boredoms;", "    long boredoms = 0;\n \
    \   std::string word;\n    std::string delimiters = \".?!\";\n    std::string\
    \ delimiter = delimiters[0];\n    std::string temp;\n    std::string temp2;\n\
    \    std::string temp3;\n    std::string temp4;\n    std::string temp5;\n    std::string\
    \ temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string temp9;\n\
    \    std::string temp10;\n    std::string temp11;\n    std::string temp12;\n \
    \   std::string temp13;\n    std::string temp14;\n    std::string temp15;\n  \
    \  std::string temp16;\n    std::string temp17;\n    std::string temp18;\n   \
    \ std::string temp19;\n    std::string temp20;\n    std::string temp21;\n    std::string\
    \ temp22;\n    std::string temp23;\n    std::string temp24;\n    std::string temp25;\n\
    \    std::string temp26;\n    std::string temp27;\n    std::string temp28;\n \
    \   std::string temp29;\n    std::string temp30;\n    std::string temp31;\n  \
    \  std::string temp32;\n    std::string temp33;\n    std::string temp34;\n   \
    \ std::string temp35;\n    std::string temp36;\n    std::string temp37;\n    std::string\
    \ temp38;\n    std::string temp39;\n    std::string temp40;\n    std::string temp41;\n\
    \    std::string temp42;\n    std::string temp43;\n    std::string temp44;\n \
    \   std::string temp45;\n    std::string temp46;\n    std::string temp47;\n  \
    \  std::string temp48;\n    std::string temp49;\n    std::string temp50;\n   \
    \ std::string temp51;\n    std::string temp52;\n    std::string temp53;\n    std::string\
    \ temp54;\n    std::string temp55;\n    std::string temp56;\n    std::string temp57;\n\
    \    std::string temp58;\n    std::string temp59;\n    std::string temp60;\n \
    \   std::string temp61;\n    std::string temp62;\n    std::string temp63;\n  \
    \  std::string temp64;\n    std::string temp65;\n    std::string temp66;\n   \
    \ std::string temp67;\n    std::string temp68;\n    std::string temp69;\n    std::string\
    \ temp70;\n    std::string temp71;\n    std::string temp72;\n    std::string temp73;\n\
    \    std::string temp74;\n    std::string temp75;\n    std::string temp76;\n \
    \   std::string temp77;\n    std::string temp78;\n    std::string temp79;\n  \
    \  std::string temp80;\n    std::string temp81;\n    std::string temp82;\n   \
    \ std::string temp83;\n    std::string temp84;\n", "    long boredoms = 0;\n \
    \   std::string word;\n    std::string delimiters = \".?!\";\n    size_t pos =\
    \ 0;\n    size_t i = 0;\n    while (pos < S.size()) {\n        word = S.substr(pos,\
    \ 1);\n        if (word == \"I\") {\n            boredoms += 1;\n        }\n \
    \       pos = pos + 1;\n    }\n    return boredoms;", "    long ans = 0;\n   \
    \ std::string word;\n    std::string boredom;\n    std::string temp;\n    std::string\
    \ temp2;\n    std::string temp3;\n    std::string temp4;\n    std::string temp5;\n\
    \    std::string temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string\
    \ temp9;\n    std::string temp10;\n    std::string temp11;\n    std::string temp12;\n\
    \    std::string temp13;\n    std::string temp14;\n    std::string temp15;\n \
    \   std::string temp16;\n    std::string temp17;\n    std::string temp18;\n  \
    \  std::string temp19;\n    std::string temp20;\n    std::string temp21;\n   \
    \ std::string temp22;\n    std::string temp23;\n    std::string temp24;\n    std::string\
    \ temp25;\n    std::string temp26;\n    std::string temp27;\n    std::string temp28;\n\
    \    std::string temp29;\n    std::string temp30;\n    std::string temp31;\n \
    \   std::string temp32;\n    std::string temp33;\n    std::string temp34;\n  \
    \  std::string temp35;\n    std::string temp36;\n    std::string temp37;\n   \
    \ std::string temp38;\n    std::string temp39;\n    std::string temp40;\n    std::string\
    \ temp41;\n    std::string temp42;\n    std::string temp43;\n    std::string temp44;\n\
    \    std::string temp45;\n    std::string temp46;\n    std::string temp47;\n \
    \   std::string temp48;\n    std::string temp49;\n    std::string temp50;\n  \
    \  std::string temp51;\n    std::string temp52;\n    std::string temp53;\n   \
    \ std::string temp54;\n    std::string temp55;\n    std::string temp56;\n    std::string\
    \ temp57;\n    std::string temp58;\n    std::string temp59;\n    std::string temp60;\n\
    \    std::string temp61;\n    std::string temp62;\n    std::string temp63;\n \
    \   std::string temp64;\n    std::string temp65;\n    std::string temp66;\n  \
    \  std::string temp67;\n    std::string temp68;\n    std::string temp69;\n   \
    \ std::string temp70;\n    std::string temp71;\n    std::string temp72;\n    std::string\
    \ temp73;\n    std::string temp74;\n    std::string temp75;\n    std::string temp76;\n\
    \    std::string temp77;\n    std::string temp78;\n    std::string temp79;\n \
    \   std::string temp80;\n    std::string temp81;\n    std::string temp82;\n  \
    \  std::string temp83;\n    std::string temp84;\n    std::string temp85;\n   \
    \ std::string temp86;", "    long boredoms = 0;\n    std::string word;\n    for\
    \ (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!') {\n         \
    \   boredoms += 1;\n        }\n    }\n    return boredoms;", "    int boredom\
    \ = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n   \
    \         boredom++;\n        }\n    }\n    return boredom;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string boredom_word;\n    for (size_t\
    \ i = 0; i < S.size(); i++) {\n        word = S[i];\n        if (word == \".\"\
    \ || word == \"?\" || word == \"!\") {\n            boredom_word = S[i];\n   \
    \         boredoms += 1;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    std::string\
    \ delimiter = delimiters[0];\n    std::string temp;\n    std::string temp_2;\n\
    \    std::string temp_3;\n    std::string temp_4;\n    std::string temp_5;\n \
    \   std::string temp_6;\n    std::string temp_7;\n    std::string temp_8;\n  \
    \  std::string temp_9;\n    std::string temp_10;\n    std::string temp_11;\n \
    \   std::string temp_12;\n    std::string temp_13;\n    std::string temp_14;\n\
    \    std::string temp_15;\n    std::string temp_16;\n    std::string temp_17;\n\
    \    std::string temp_18;\n    std::string temp_19;\n    std::string temp_20;\n\
    \    std::string temp_21;\n    std::string temp_22;\n    std::string temp_23;\n\
    \    std::string temp_24;\n    std::string temp_25;\n    std::string temp_26;\n\
    \    std::string temp_27;\n    std::string temp_28;\n    std::string temp_29;\n\
    \    std::string temp_30;\n    std::string temp_31;\n    std::string temp_32;\n\
    \    std::string temp_33;\n    std::string temp_34;\n    std::string temp_35;\n\
    \    std::string temp_36;\n    std::string temp_37;\n    std::string temp_38;\n\
    \    std::string temp_39;\n    std::string temp_40;\n    std::string temp_41;\n\
    \    std::string temp_42;\n    std::string temp_43;\n    std::string temp_44;\n\
    \    std::string temp_45;\n    std::string temp_46;\n    std::string temp_47;\n\
    \    std::string temp_48;\n    std::string temp_49;\n    std::string temp_50;\n\
    \    std::string temp_51;\n    std::string temp_52;\n    std::string temp_53;\n\
    \    std::string temp_54;\n    std::string temp_55;\n    std::string temp_56;\n\
    \    std::string temp_57;\n    std::string temp_58;\n    std::string temp_59;\n\
    \    std::string temp_60;\n    std::string temp_61;\n    std::string temp_62;\n\
    \    std::string temp_63;\n    std::string temp_64;\n    std::string temp_65;\n\
    \    std::string temp_66;\n    std::string temp_67;\n    std::string temp_68;\n\
    \    std::string temp_69;\n    std::string temp_70;\n    std::string temp_71;\n\
    \    std::string temp_72;\n    std::string temp_73;\n    std::string temp_74;\n\
    \    std::string temp_75;\n    std::string temp_76;\n    std::string temp_77;\n\
    \    std::string temp_78;\n    std::string temp_79;\n    std::string temp_80;\n\
    \    std::string temp_81;\n    std::string temp_82;\n    std::string temp_83;\n\
    \    std::string temp_84;\n", "    long boredoms = 0;\n    std::string word;\n\
    \    for (auto &c : S) {\n        if (c == '.' || c == '?' || c == '!') {\n  \
    \          boredoms += 1;\n        }\n    }\n    return boredoms;", "    long\
    \ boredoms = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n\
    \    std::string delimiter = \",\";\n    std::string delimiter1 = \"I\";\n   \
    \ std::string delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n    std::string\
    \ delimiter4 = \"!\";\n    std::string delimiter5 = \".\";\n    std::string delimiter6\
    \ = \"?\";\n    std::string delimiter7 = \"!\";\n    std::string delimiter8 =\
    \ \".\";\n    std::string delimiter9 = \"?\";\n    std::string delimiter10 = \"\
    !\";\n    std::string delimiter11 = \".\";\n    std::string delimiter12 = \"?\"\
    ;\n    std::string delimiter13 = \"!\";\n    std::string delimiter14 = \".\";\n\
    \    std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n\
    \    std::string delimiter17 = \".\";\n    std::string delimiter18 = \"?\";\n\
    \    std::string delimiter19 = \"!\";\n    std::string delimiter20 = \".\";\n\
    \    std::string delimiter21 = \"?\";\n    std::string delimiter22 = \"!\";\n\
    \    std::string delimiter23 = \".\";\n    std::string delimiter24 = \"?\";\n\
    \    std::string delimiter25 = \"!\";\n    std::string delimiter26 = \".\";\n\
    \    std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n\
    \    std::string delimiter29 = \".\";\n    std::string delimiter30 = \"?\";\n\
    \    std::string delimiter31 = \"!\";\n    std::string delimiter32 = \".\";\n\
    \    std::string delimiter33 = \"?\";\n    std::string delimiter34 = \"!\";\n\
    \    std::string delimiter35 = \".\";\n    std::string delimiter36 = \"?\";\n\
    \    std::string delimiter37 = \"!\";\n    std::string delimiter38 = \".\";\n\
    \    std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n\
    \    std::string delimiter41 = \"!\";\n    std::string delimiter42 = \".\";\n\
    \    std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n\
    \    std::string delimiter45 = \".\";\n    std::string delimiter46 = \"?\";\n\
    \    std::string delimiter47 = \"!\";\n    std::string delimiter48 = \".\";\n\
    \    std::string delimiter49 = \"?\";\n    std::string delimiter50 = \"!\";\n\
    \    std::string delimiter51 = \"!\";\n    std::string delimiter52 = \".\";\n\
    \    std::string delimiter53 = \"?\";\n    std::string delimiter54 = \"!\";\n\
    \    std::string delimiter55 = \".\";\n    std::string delimiter56 = \"?\";\n\
    \    std::string delimiter57 = \"!\";\n    std::string delimiter58 = \".\";\n\
    \    std::string delimiter59 = \"?\";\n    std::string delimiter60 = \"!\";\n",
  "    // Write your code here\n    long count = 0;\n    for(int i=0;i<S.size();i++){\n\
    \        if(S[i] == 'I'){\n            count++;\n        }\n    }\n    return\
    \ count;", "    long boredoms = 0;\n    std::string word;\n    std::string delimiters\
    \ = \".?!\";\n    for (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n\
    \        if (word.find(delimiters[0]) != std::string::npos) {\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;", "    long boredoms = 0;\n  \
    \  std::string word;\n    std::string boredom_word = \"I\";\n    std::string delimiter\
    \ = \".?!\";\n    size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.size())\
    \ {\n        word = S.substr(pos, 1);\n        pos = pos + 1;\n        count =\
    \ 0;\n        for(size_t i = 0; i < boredom_word.length(); i++) {\n          \
    \  if(word == boredom_word) {\n                count++;\n            }\n     \
    \   }\n        if(count == 0) {\n            boredoms += 1;\n        }\n    }\n\
    \    return boredoms;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiters_lower = \".?!\";\n    std::string\
    \ delimiters_upper = \".?!\";\n    std::string delimiters_mixed = \".?!\";\n \
    \   std::string delimiters_mixed_upper = \".?!\";\n    std::string delimiters_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower = \".?!\";\n \
    \   std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ boredom_word;\n    std::string boredom_word_2;\n    std::string boredom_word_3;\n\
    \    std::string boredom_word_4;\n    std::string boredom_word_5;\n    std::string\
    \ boredom_word_6;\n    std::string boredom_word_7;\n    std::string boredom_word_8;\n\
    \    std::string boredom_word_9;\n    std::string boredom_word_10;\n    std::string\
    \ boredom_word_11;\n    std::string boredom_word_12;\n    std::string boredom_word_13;\n\
    \    std::string boredom_word_14;\n    std::string boredom_word_15;\n    std::string\
    \ boredom_word_16;\n    std::string boredom_word_17;\n    std::string boredom_word_18;\n\
    \    std::string boredom_word_19;\n    std::string boredom_word_20;\n    std::string\
    \ boredom_word_21;\n    std::string boredom_word_22;\n    std::string boredom_word_23;\n\
    \    std::string boredom_word_24;\n    std::string boredom_word_25;\n    std::string\
    \ boredom_word_26;\n    std::string boredom_word_27;\n    std::string boredom_word_28;\n\
    \    std::string boredom_word_29;\n    std::string boredom_word_30;\n    std::string\
    \ boredom_word_31;\n    std::string boredom_word_32;\n    std::string boredom_word_33;\n\
    \    std::string boredom_word_34;\n    std::string boredom_word_35;\n    std::string\
    \ boredom_word_36;\n    std::string boredom_word_37;\n    std::string boredom_word_38;\n\
    \    std::string boredom_word_39;\n    std::string boredom_word_40;\n    std::string\
    \ boredom_word_41;\n    std::string boredom_word_42;\n    std::string boredom_word_43;\n\
    \    std::string boredom_word_44;\n    std::string boredom_word_45;\n    std::string\
    \ boredom_word_46;\n    std::string boredom_word_47;\n    std::string boredom_word_48;\n\
    \    std::string boredom_word_49;\n    std::string boredom_word_50;\n    std::string\
    \ boredom_word_51;\n    std::string boredom_word_52;\n    std::string boredom_word_53;\n\
    \    std::string boredom_word_54;\n    std::string boredom_word_55;\n    std::string\
    \ boredom_word_56;\n    std::string boredom_word_57;\n    std::string boredom_word_",
  "    long boredoms = 0;\n    std::string word;\n    std::string boredom_word = \"\
    I\";\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \"i.e\";\n    std::string delimiters_upper = \"I.E\";\n    std::string delimiters_mixed\
    \ = \"i.E.\";\n    std::string delimiters_mixed_upper = \"I.E.\";\n    std::string\
    \ delimiters_mixed_lower = \"i.E.\";\n    std::string delimiters_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_lower = \"I.E.\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_upper = \"I.E.\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \"I.E.\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_mixed_upper = \"I.E.\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_lower = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \"I.E.\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper",
  "    long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    std::string delimiter = \",\";\n    std::string delimiter2 = \" \"\
    ;\n    std::string delimiter3 = \" \";\n    std::string delimiter4 = \" \";\n\
    \    std::string delimiter5 = \" \";\n    std::string delimiter6 = \" \";\n  \
    \  std::string delimiter7 = \" \";\n    std::string delimiter8 = \" \";\n    std::string\
    \ delimiter9 = \" \";\n    std::string delimiter10 = \" \";\n    std::string delimiter11\
    \ = \" \";\n    std::string delimiter12 = \" \";\n    std::string delimiter13\
    \ = \" \";\n    std::string delimiter14 = \" \";\n    std::string delimiter15\
    \ = \" \";\n    std::string delimiter16 = \" \";\n    std::string delimiter17\
    \ = \" \";\n    std::string delimiter18 = \" \";\n    std::string delimiter19\
    \ = \" \";\n    std::string delimiter20 = \" \";\n    std::string delimiter21\
    \ = \" \";\n    std::string delimiter22 = \" \";\n    std::string delimiter23\
    \ = \" \";\n    std::string delimiter24 = \" \";\n    std::string delimiter25\
    \ = \" \";\n    std::string delimiter26 = \" \";\n    std::string delimiter27\
    \ = \" \";\n    std::string delimiter28 = \" \";\n    std::string delimiter29\
    \ = \" \";\n    std::string delimiter30 = \" \";\n    std::string delimiter31\
    \ = \" \";\n    std::string delimiter32 = \" \";\n    std::string delimiter33\
    \ = \" \";\n    std::string delimiter34 = \" \";\n    std::string delimiter35\
    \ = \" \";\n    std::string delimiter36 = \" \";\n    std::string delimiter37\
    \ = \" \";\n    std::string delimiter38 = \" \";\n    std::string delimiter39\
    \ = \" \";\n    std::string delimiter40 = \" \";\n    std::string delimiter41\
    \ = \" \";\n    std::string delimiter42 = \" \";\n    std::string delimiter43\
    \ = \" \";\n    std::string delimiter44 = \" \";\n    std::string delimiter45\
    \ = \" \";\n    std::string delimiter46 = \" \";\n    std::string delimiter47\
    \ = \" \";\n    std::string delimiter48 = \" \";\n    std::string delimiter49\
    \ = \" \";\n    std::string delimiter50 = \" \";\n    std::string delimiter51\
    \ = \" \";\n    std::string delimiter52 = \" \";\n    std::string delimiter53\
    \ = \" \";\n    std::string delimiter54 = \" \";\n    std::string delimiter55\
    \ = \" \";\n    std::string delimiter56 = \" \";\n    std::string delimiter57\
    \ = \" \";\n    std::string delimiter58 = \" \";\n    std::string delimiter59\
    \ = \" \";\n    std::string delimiter60 = \" \";\n    std::string delimiter61\
    \ = \" \";\n    std::string delimiter62 = \" \";\n    std::string delimiter63\
    \ = \" \";", "    int boredom = 0;\n    int i = 0;\n    while(i < S.size()) {\n\
    \        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n\
    \            i++;\n        }\n        else {\n            i++;\n        }\n  \
    \  }\n    return boredom;", "    int boredoms = 0;\n    int i = 0;\n    while(i\
    \ < S.length()) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n \
    \           boredoms += 1;\n        }\n        i++;\n    }\n    return boredoms;",
  "    long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    std::string delimiter = \",\";\n    std::string temp;\n    std::string\
    \ temp2;\n    std::string temp3;\n    std::string temp4;\n    std::string temp5;\n\
    \    std::string temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string\
    \ temp9;\n    std::string temp10;\n    std::string temp11;\n    std::string temp12;\n\
    \    std::string temp13;\n    std::string temp14;\n    std::string temp15;\n \
    \   std::string temp16;\n    std::string temp17;\n    std::string temp18;\n  \
    \  std::string temp19;\n    std::string temp20;\n    std::string temp21;\n   \
    \ std::string temp22;\n    std::string temp23;\n    std::string temp24;\n    std::string\
    \ temp25;\n    std::string temp26;\n    std::string temp27;\n    std::string temp28;\n\
    \    std::string temp29;\n    std::string temp30;\n    std::string temp31;\n \
    \   std::string temp32;\n    std::string temp33;\n    std::string temp34;\n  \
    \  std::string temp35;\n    std::string temp36;\n    std::string temp37;\n   \
    \ std::string temp38;\n    std::string temp39;\n    std::string temp40;\n    std::string\
    \ temp41;\n    std::string temp42;\n    std::string temp43;\n    std::string temp44;\n\
    \    std::string temp45;\n    std::string temp46;\n    std::string temp47;\n \
    \   std::string temp48;\n    std::string temp49;\n    std::string temp50;\n  \
    \  std::string temp51;\n    std::string temp52;\n    std::string temp53;\n   \
    \ std::string temp54;\n    std::string temp55;\n    std::string temp56;\n    std::string\
    \ temp57;\n    std::string temp58;\n    std::string temp59;\n    std::string temp60;\n\
    \    std::string temp61;\n    std::string temp62;\n    std::string temp63;\n \
    \   std::string temp64;\n    std::string temp65;\n    std::string temp66;\n  \
    \  std::string temp67;\n    std::string temp68;\n    std::string temp69;\n   \
    \ std::string temp70;\n    std::string temp71;\n    std::string temp72;\n    std::string\
    \ temp73;\n    std::string temp74;\n    std::string temp75;\n    std::string temp76;\n\
    \    std::string temp77;\n    std::string temp78;\n    std::string temp79;\n \
    \   std::string temp80;\n    std::string temp81;\n    std::string temp82;\n  \
    \  std::string temp83;\n    std::string temp84;\n", "    long boredoms = 0;\n\
    \    std::string word;\n    std::string boredom;\n    std::string delimiter =\
    \ \".?!\";\n    std::string delimiter2 = \".\";\n    std::string delimiter3 =\
    \ \"?\";\n    std::string delimiter4 = \"!\";\n    std::string delimiter5 = \"\
    .\";\n    std::string delimiter6 = \"?\";\n    std::string delimiter7 = \"!\"\
    ;\n    std::string delimiter8 = \".\";\n    std::string delimiter9 = \"?\";\n\
    \    std::string delimiter10 = \"!\";\n    std::string delimiter11 = \".\";\n\
    \    std::string delimiter12 = \"?\";\n    std::string delimiter13 = \"!\";\n\
    \    std::string delimiter14 = \".\";\n    std::string delimiter15 = \"?\";\n\
    \    std::string delimiter16 = \"!\";\n    std::string delimiter17 = \".\";\n\
    \    std::string delimiter18 = \"?\";\n    std::string delimiter19 = \"!\";\n\
    \    std::string delimiter20 = \".\";\n    std::string delimiter21 = \"?\";\n\
    \    std::string delimiter22 = \"!\";\n    std::string delimiter23 = \".\";\n\
    \    std::string delimiter24 = \"?\";\n    std::string delimiter25 = \"!\";\n\
    \    std::string delimiter26 = \".\";\n    std::string delimiter27 = \"?\";\n\
    \    std::string delimiter28 = \"!\";\n    std::string delimiter29 = \".\";\n\
    \    std::string delimiter30 = \"?\";\n    std::string delimiter31 = \"!\";\n\
    \    std::string delimiter32 = \".\";\n    std::string delimiter33 = \"?\";\n\
    \    std::string delimiter34 = \"!\";\n    std::string delimiter35 = \".\";\n\
    \    std::string delimiter36 = \"?\";\n    std::string delimiter37 = \"!\";\n\
    \    std::string delimiter38 = \".\";\n    std::string delimiter39 = \"?\";\n\
    \    std::string delimiter40 = \"!\";\n    std::string delimiter41 = \"!\";\n\
    \    std::string delimiter42 = \".\";\n    std::string delimiter43 = \"?\";\n\
    \    std::string delimiter44 = \"!\";\n    std::string delimiter45 = \".\";\n\
    \    std::string delimiter46 = \"?\";\n    std::string delimiter47 = \"!\";\n\
    \    std::string delimiter48 = \".\";\n    std::string delimiter49 = \"?\";\n\
    \    std::string delimiter50 = \"!\";\n    std::string delimiter51 = \"!\";\n\
    \    std::string delimiter52 = \".\";\n    std::string delimiter53 = \"?\";\n\
    \    std::string delimiter54 = \"!\";\n    std::string delimiter55 = \".\";\n\
    \    std::string delimiter56 = \"?\";\n    std::string delimiter57 = \"!\";\n\
    \    std::string delimiter58 = \".\";\n    std::string delimiter59 = \"?\";\n\
    \    std::string delimiter60 = \"!\";\n    std::string delimiter61 = \"!\";",
  "    long boredoms = 0;\n    std::string word;\n    for (auto &c : S) {\n      \
    \  if (c == '.') {\n            boredoms += 1;\n            word = \"\";\n   \
    \     } else if (c == '?' || c == '!') {\n            boredoms += 1;\n       \
    \     word += c;\n        } else if (c == 'I') {\n            boredoms += 1;\n\
    \            word += c;\n        } else {\n            word += c;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t count\
    \ = 0;\n    std::string temp;\n    while(pos < S.size()) {\n        pos = S.find_first_of(delimiters,\
    \ pos);\n        word = S.substr(pos, delimiters.size());\n        temp = S;\n\
    \        temp.erase(temp.begin() + pos);\n        temp.erase(temp.begin());\n\
    \        if(word == \"I\") {\n            boredoms += 1;\n        }\n        pos\
    \ = temp.find_first_of(delimiters, pos);\n    }\n    return boredoms;", "    int\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiters_lower = \".?!\";\n    std::string\
    \ delimiters_upper = \".?!\";\n    std::string delimiters_mixed = \".?!\";\n \
    \   std::string delimiters_mixed_upper = \".?!\";\n    std::string delimiters_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_upper = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower = \".?!\";\n \
    \   std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";", "    int boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \".?!\";\n    for (size_t i = 0; i < S.size(); i++) {\n       \
    \ word = S[i];\n        if (word.find(delimiters[0]) != std::string::npos) {\n\
    \            boredoms += 1;\n        }\n    }\n    return boredoms;", "    //\
    \ Write your code here\n    long boredoms = 0;\n    for(int i = 0; i < S.size();\
    \ i++){\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!'){\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;", "    int boredom = 0;\n    int\
    \ i = 0;\n    while(i < S.size()) {\n        if(S[i] == '.' || S[i] == '?' ||\
    \ S[i] == '!') {\n            boredom++;\n        }\n        i++;\n    }\n   \
    \ return boredom;", "    int boredom = 0;\n    int i = 0;\n    while (i < S.size())\
    \ {\n        if (S[i] == '.') {\n            boredom++;\n        } else if (S[i]\
    \ == '?') {\n            boredom++;\n        } else if (S[i] == '!') {\n     \
    \       boredom++;\n        }\n        i++;\n    }\n    return boredom;", "  \
    \  // Write your code here\n    long count = 0;\n    for(int i = 0; i < S.length();\
    \ i++){\n        if(S[i] == 'I'){\n            count++;\n        }\n    }\n  \
    \  return count;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ boredom_word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \"i.e\";\n    std::string delimiters_upper = \"I.E\";\n    std::string delimiters_caps\
    \ = \"I.E\";\n    std::string delimiters_caps_lower = \"i.e\";\n    std::string\
    \ delimiters_caps_upper = \"I.E\";\n    std::string delimiters_caps_upper2 = \"\
    I.E\";\n    std::string delimiters_caps_upper3 = \"I.E\";\n    std::string delimiters_caps_upper4\
    \ = \"I.E\";\n    std::string delimiters_caps_upper5 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper6 = \"I.E\";\n    std::string delimiters_caps_upper7 =\
    \ \"I.E\";\n    std::string delimiters_caps_upper8 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper9 = \"I.E\";\n    std::string delimiters_caps_upper10 =\
    \ \"I.E\";\n    std::string delimiters_caps_upper11 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper12 = \"I.E\";\n    std::string delimiters_caps_upper13\
    \ = \"I.E\";\n    std::string delimiters_caps_upper14 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper15 = \"I.E\";\n    std::string delimiters_caps_upper16\
    \ = \"I.E\";\n    std::string delimiters_caps_upper17 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper18 = \"I.E\";\n    std::string delimiters_caps_upper19\
    \ = \"I.E\";\n    std::string delimiters_caps_upper20 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper21 = \"I.E\";\n    std::string delimiters_caps_upper22\
    \ = \"I.E\";\n    std::string delimiters_caps_upper23 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper24 = \"I.E\";\n    std::string delimiters_caps_upper25\
    \ = \"I.E\";\n    std::string delimiters_caps_upper26 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper27 = \"I.E\";\n    std::string delimiters_caps_upper28\
    \ = \"I.E\";\n    std::string delimiters_caps_upper29 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper30 = \"I.E\";\n    std::string delimiters_caps_upper31\
    \ = \"I.E\";\n    std::string delimiters_caps_upper32 = \"I.E\";\n    std::string\
    \ delimiters_caps_upper33 = \"I.E\";\n    std::string delimiters_caps_upper34\
    \ = \"I.E", "    long boredoms = 0;\n    std::string word;\n    std::string delimiters\
    \ = \".?!\";\n    size_t pos = 0;\n    std::string temp;\n    while(pos < S.length())\
    \ {\n        word = S.substr(pos, delimiters.size());\n        temp = S;\n   \
    \     temp = temp.substr(0, pos);\n        if(word == \"I\") {\n            boredoms\
    \ += 1;\n        }\n        pos = temp.find(delimiters, pos);\n    }\n    return\
    \ boredoms;", "    long boredoms = 0;\n    std::string word;\n    for (auto &i\
    \ : S) {\n        if (i == '.' || i == '?' || i == '!') {\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;", "    int boredom = 0;\n    int\
    \ i = 0;\n    while (i < S.size()) {\n        if (S[i] == '.') {\n           \
    \ i++;\n            while (i < S.size() && S[i] != '.') {\n                i++;\n\
    \            }\n            if (i < S.size() && S[i] == '.') {\n             \
    \   i++;\n                while (i < S.size() && S[i] != '.') {\n            \
    \        i++;\n                }\n                if (i < S.size() && S[i] ==\
    \ '.') {\n                    i++;\n                    while (i < S.size() &&\
    \ S[i] != '.') {\n                        i++;\n                    }\n      \
    \              if (i < S.size() && S[i] == '.') {\n                        i++;\n\
    \                        while (i < S.size() && S[i] != '.') {\n             \
    \               i++;\n                        }\n                        if (i\
    \ < S.size() && S[i] == '.') {\n                            i++;\n           \
    \                 while (i < S.size() && S[i] != '.') {\n                    \
    \            i++;\n                            }\n                           \
    \ if (i < S.size() && S[i] == '.') {\n                                i++;\n \
    \                               while (i < S.size() && S[i] != '.') {\n      \
    \                              i++;\n                                }\n     \
    \                           if (i < S.size() && S[i] == '.') {\n             \
    \                       i++;\n                                    while (i < S.size()\
    \ && S[i] != '.') {\n                                        i++;\n          \
    \                          }\n                                    if (i < S.size()\
    \ && S[i] == '.') {\n                                        i++;\n          \
    \                              while (i < S.size() && S[i] != '.') {\n       \
    \                                     i++;\n                                 \
    \       }\n                                        if (i < S.size() && S[i] ==\
    \ '.') {\n                                            i++;\n                 \
    \                           while (i < S.size() && S[i] != '.') {\n          \
    \                                      i++;\n                                \
    \            }\n                                            if (i < S.size() &&\
    \ S[i] == '.') {\n                                                i++;\n     \
    \                                           while (i < S.size() && S[i] != '.')\
    \ {\n                                                    i++;\n              \
    \                                  }\n                                       \
    \         if (i < S.size() && S[i] == '.') {\n                               \
    \                     i++;\n                                                 \
    \   while (i < S.size() && S[i] != '.') {\n                                  \
    \                      i++;\n                                                \
    \    }\n                                                    if (i < S.size() &&\
    \ S[i] == '.') {\n                                                        i++;\n\
    \                                                        while (i < S.size() &&\
    \ S[i] != '.') {\n                                                           \
    \ i++;\n                                                        }\n          \
    \                                              if (i < S.size() && S[i] == '.')\
    \ {\n                                                            i++;\n      \
    \                                                      while (i < S.size() &&\
    \ S[i] != '.') {\n                                                           \
    \     i++;\n                                                            }\n  \
    \                                                          if (i < S.size() &&\
    \ S[i] == '.') {\n                                                           \
    \     i++;\n                                                                while\
    \ (i < S.size() && S[i] != '.') {\n                                          \
    \                          i++;\n                                            \
    \                    }\n                                                     \
    \           if (i < S.size() && S[i] == '.') {\n                             \
    \                                       i++;\n                               \
    \                                     while (", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_cap\
    \ = \".?!\";\n    std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_string(tolower(delimiters_lower));\n\
    \    std::string delimiters_upper = std::to_string(toupper(delimiters_upper));\n\
    \    std::string delimiters_cap = std::to_string(toupper(delimiters_cap));\n \
    \   std::string delimiters_lower = std::to_", "    // Write your code here\n \
    \   long boredom = 0;\n    std::string word;\n    std::string boredom_word;\n\
    \    std::string boredom_word_2;\n    std::string boredom_word_3;\n    std::string\
    \ boredom_word_4;\n    std::string boredom_word_5;\n    std::string boredom_word_6;\n\
    \    std::string boredom_word_7;\n    std::string boredom_word_8;\n    std::string\
    \ boredom_word_9;\n    std::string boredom_word_10;\n    std::string boredom_word_11;\n\
    \    std::string boredom_word_12;\n    std::string boredom_word_13;\n    std::string\
    \ boredom_word_14;\n    std::string boredom_word_15;\n    std::string boredom_word_16;\n\
    \    std::string boredom_word_17;\n    std::string boredom_word_18;\n    std::string\
    \ boredom_word_19;\n    std::string boredom_word_20;\n    std::string boredom_word_21;\n\
    \    std::string boredom_word_22;\n    std::string boredom_word_23;\n    std::string\
    \ boredom_word_24;\n    std::string boredom_word_25;\n    std::string boredom_word_26;\n\
    \    std::string boredom_word_27;\n    std::string boredom_word_28;\n    std::string\
    \ boredom_word_29;\n    std::string boredom_word_30;\n    std::string boredom_word_31;\n\
    \    std::string boredom_word_32;\n    std::string boredom_word_33;\n    std::string\
    \ boredom_word_34;\n    std::string boredom_word_35;\n    std::string boredom_word_36;\n\
    \    std::string boredom_word_37;\n    std::string boredom_word_38;\n    std::string\
    \ boredom_word_39;\n    std::string boredom_word_40;\n    std::string boredom_word_41;\n\
    \    std::string boredom_word_42;\n    std::string boredom_word_43;\n    std::string\
    \ boredom_word_44;\n    std::string boredom_word_45;\n    std::string boredom_word_46;\n\
    \    std::string boredom_word_47;\n    std::string boredom_word_48;\n    std::string\
    \ boredom_word_49;\n    std::string boredom_word_50;\n    std::string boredom_word_51;\n\
    \    std::string boredom_word_52;\n    std::string boredom_word_53;\n    std::string\
    \ boredom_word_54;\n    std::string boredom_word_55;\n    std::string boredom_word_56;\n\
    \    std::string boredom_word_57;\n    ", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string temp;\n    size_t\
    \ pos = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n    size_t\
    \ l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n    size_t\
    \ p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n    size_t\
    \ t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n    size_t\
    \ x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n    size_t\
    \ B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n    size_t\
    \ F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n    size_t\
    \ J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n    size_t\
    \ N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n    size_t\
    \ R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n    size_t\
    \ V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n    size_t\
    \ Z = 0;\n    size_t a = 0;\n    size_t b = 0;\n    size_t c = 0;\n    size_t\
    \ d = 0;\n    size_t e = 0;\n    size_t f = 0;\n    size_t g = 0;\n    size_t\
    \ h = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n    size_t\
    \ l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n    size_t\
    \ p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n    size_t\
    \ t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n    size_t\
    \ x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n    size_t\
    \ B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n    size_t\
    \ F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n    size_t\
    \ J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n    size_t\
    \ N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n    size_t\
    \ R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n    size_t\
    \ V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n    size_t\
    \ Z = 0;\n    size_t a = 0;\n    size_t ", "    // Write your code here\n    long\
    \ count = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            count++;\n        }\n    }\n    return count;", "    // Write your\
    \ code here\n    long boredoms = 0;\n    std::string word;\n    std::string boredom;\n\
    \    for(int i = 0; i < S.length(); i++) {\n        word = S.substr(i, 1);\n \
    \       if(word == \".\" || word == \"?\" || word == \"!\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;", "    long count = 0;\n    for(int\
    \ i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            count++;\n        }\n    }\n    return count;", "    //\
    \ Write your code here\n    long boredoms = 0;\n    std::string word;\n    std::string\
    \ boredom;\n    std::string sentence;\n    std::string delimiter = \".?!\";\n\
    \    std::string delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n  \
    \  std::string delimiter4 = \"!\";\n    std::string delimiter5 = \".\";\n    std::string\
    \ delimiter6 = \"?\";\n    std::string delimiter7 = \"!\";\n    std::string delimiter8\
    \ = \".\";\n    std::string delimiter9 = \"?\";\n    std::string delimiter10 =\
    \ \"!\";\n    std::string delimiter11 = \".\";\n    std::string delimiter12 =\
    \ \"?\";\n    std::string delimiter13 = \"!\";\n    std::string delimiter14 =\
    \ \".\";\n    std::string delimiter15 = \"?\";\n    std::string delimiter16 =\
    \ \"!\";\n    std::string delimiter17 = \".\";\n    std::string delimiter18 =\
    \ \"?\";\n    std::string delimiter19 = \"!\";\n    std::string delimiter20 =\
    \ \".\";\n    std::string delimiter21 = \"?\";\n    std::string delimiter22 =\
    \ \"!\";\n    std::string delimiter23 = \".\";\n    std::string delimiter24 =\
    \ \"?\";\n    std::string delimiter25 = \"!\";\n    std::string delimiter26 =\
    \ \".\";\n    std::string delimiter27 = \"?\";\n    std::string delimiter28 =\
    \ \"!\";\n    std::string delimiter29 = \".\";\n    std::string delimiter30 =\
    \ \"?\";\n    std::string delimiter31 = \"!\";\n    std::string delimiter32 =\
    \ \".\";\n    std::string delimiter33 = \"?\";\n    std::string delimiter34 =\
    \ \"!\";\n    std::string delimiter35 = \".\";\n    std::string delimiter36 =\
    \ \"?\";\n    std::string delimiter37 = \"!\";\n    std::string delimiter38 =\
    \ \".\";\n    std::string delimiter39 = \"?\";\n    std::string delimiter40 =\
    \ \"!\";\n    std::string delimiter41 = \"!\";\n    std::string delimiter42 =\
    \ \".\";\n    std::string delimiter43 = \"?\";\n    std::string delimiter44 =\
    \ \"!\";\n    std::string delimiter45 = \".\";\n    std::string delimiter46 =\
    \ \"?\";\n    std::string delimiter47 = \"!\";\n    std::string delimiter48 =\
    \ \".\";\n    std::string delimiter49 = \"?\";\n    std::string delimiter50 =\
    \ \"!\";\n    std::string delimiter51 = \"!\";\n    std::string delimiter52 =\
    \ \".\";\n    std::string delimiter53 = \"?\";\n    std::string delimiter54 =\
    \ \"!\";\n    std::string delimiter55 = \".\";\n    std::string delimiter56 =\
    \ \"?\";\n    std::string delimiter57 = \"!\";\n    std::string delimiter58 =\
    \ \".\";\n    std::string delimiter59 = \"?\";\n    std::string delimiter60 =\
    \ \"!", "    long boredoms = 0;\n    std::string word;\n    for (size_t i = 0;\
    \ i < S.size(); i++) {\n        word = S[i];\n        if (word == \"I\") {\n \
    \           boredoms += 1;\n        }\n    }\n    return boredoms;", "    long\
    \ boredoms = 0;\n    std::string word;\n    for (size_t i = 0; i < S.size(); i++)\
    \ {\n        word = S[i];\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    // Write your code here\n    long\
    \ boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n\
    \            boredom++;\n        }\n    }\n    return boredom;", "    int boredom\
    \ = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i]\
    \ == '?' || S[i] == '!') {\n            boredom++;\n        }\n    }\n    return\
    \ boredom;", "    long boredoms = 0;\n    std::string word;\n    std::string boredom_word;\n\
    \    for (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n        if\
    \ (word == \".\" || word == \"?\" || word == \"!\") {\n            boredoms +=\
    \ 1;\n        }\n    }\n    for (size_t i = 0; i < S.size(); i++) {\n        word\
    \ = S[i];\n        if (word == \"I\") {\n            boredoms += 1;\n        }\n\
    \    }\n    return boredoms;", "    // Write your code here\n    long boredom\
    \ = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n   \
    \         boredom++;\n        }\n    }\n    return boredom;", "    // Write your\
    \ code here\n    long boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n\
    \        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    for (auto &i : S) {\n        if ((i ==\
    \ \".\") || (i == \"?\") || (i == \"!\")) {\n            boredom += i;\n     \
    \   } else {\n            word = i;\n        }\n    }\n    if (boredom.find(\"\
    I\") == 0) {\n        boredoms += 1;\n    }\n    return boredoms;", "    // Write\
    \ your code here\n    long boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n\
    \        if(S[i] == '.' || S[i] == '?' || S[i] == '!'){\n            boredom++;\n\
    \        }\n    }\n    return boredom;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiter = \" .?!\";\n    size_t pos = 0;\n    size_t\
    \ i = 0;\n    bool flag = false;\n    while(pos < S.size()) {\n        flag =\
    \ false;\n        pos = 0;\n        while(pos < S.size() && flag == false) {\n\
    \            pos = S.find(delimiter, pos);\n            if(pos == std::string::npos)\
    \ {\n                flag = true;\n            }\n            else {\n       \
    \         word = S.substr(pos, (pos - i));\n                if(word == \"I\")\
    \ {\n                    boredoms++;\n                }\n                i = pos;\n\
    \            }\n        }\n    }\n    return boredoms;", "    long boredoms =\
    \ 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    std::string::size_type\
    \ pos = 0;\n    std::string::size_type lastPos = 0;\n    std::string::size_type\
    \ lastDelimiter = 0;\n    std::string::size_type i = 0;\n    std::string::size_type\
    \ j = 0;\n    std::string::size_type k = 0;\n    std::string::size_type l = 0;\n\
    \    std::string::size_type m = 0;\n    std::string::size_type n = 0;\n    std::string::size_type\
    \ o = 0;\n    std::string::size_type p = 0;\n    std::string::size_type q = 0;\n\
    \    std::string::size_type r = 0;\n    std::string::size_type s = 0;\n    std::string::size_type\
    \ t = 0;\n    std::string::size_type u = 0;\n    std::string::size_type v = 0;\n\
    \    std::string::size_type w = 0;\n    std::string::size_type x = 0;\n    std::string::size_type\
    \ y = 0;\n    std::string::size_type z = 0;\n    std::string::size_type A = 0;\n\
    \    std::string::size_type B = 0;\n    std::string::size_type C = 0;\n    std::string::size_type\
    \ D = 0;\n    std::string::size_type E = 0;\n    std::string::size_type F = 0;\n\
    \    std::string::size_type G = 0;\n    std::string::size_type H = 0;\n    std::string::size_type\
    \ I = 0;\n    std::string::size_type J = 0;\n    std::string::size_type K = 0;\n\
    \    std::string::size_type L = 0;\n    std::string::size_type M = 0;\n    std::string::size_type\
    \ N = 0;\n    std::string::size_type O = 0;\n    std::string::size_type P = 0;\n\
    \    std::string::size_type Q = 0;\n    std::string::size_type R = 0;\n    std::string::size_type\
    \ S = 0;\n    std::string::size_type T = 0;\n    std::string::size_type U = 0;\n\
    \    std::string::size_type V = 0;\n    std::string::size_type W = 0;\n    std::string::size_type\
    \ X = 0;\n    std::string::size_type Y = 0;\n    std::string::size_type Z = 0;\n\
    \    std::string::size_type _ = 0;\n    std::string::size_type _1 = 0;\n    std::string::size_type\
    \ _2 = 1;\n    std::string::size_type _3 = 1;\n    std::string::size_type _4 =\
    \ 2;\n    std::string::size_type _5 = 3;\n    std::string::size_type _6 = 6;\n\
    \    std::string::size_type _7 = 4;\n    std::string::size_type _8 = 5;\n    std::string::size_type\
    \ _9 = 6;\n    std::string::size_type _10 = 7;\n    std::string::size_type _11\
    \ = 8;\n    std::string::size_type _12 = 9;\n    std::string::size_type ", " \
    \   long boredoms = 0;\n    std::string word;\n    for (auto &c : S) {\n     \
    \   if (c == '.' || c == '?' || c == '!') {\n            boredoms += 1;\n    \
    \    }\n    }\n    return boredoms;", "    long count = 0;\n    std::string temp;\n\
    \    temp = S;\n    while(temp != \"\"){\n        if(temp[0] == 'I'){\n      \
    \      count++;\n        }\n        temp = temp.substr(1);\n    }\n    return\
    \ count;", "    long boredoms = 0;\n    std::string word;\n    std::string delimiter\
    \ = \".?!\";\n    size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.size())\
    \ {\n        word = S.substr(pos, 1);\n        pos = 0;\n        count = 0;\n\
    \        for(size_t i = 0; i < S.size(); i++) {\n            if(delimiter[i] ==\
    \ S[i]) {\n                count++;\n            }\n            if(delimiter[i]\
    \ == word) {\n                pos = i + 1;\n            }\n        }\n       \
    \ if(count == 1) {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    for (auto &c : S) {\n        if (c == delimiters[0]) {\n         \
    \   boredoms += 1;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string boredom_word;\n    std::string\
    \ boredom_word_2;\n    std::string boredom_word_3;\n    std::string boredom_word_4;\n\
    \    std::string boredom_word_5;\n    std::string boredom_word_6;\n    std::string\
    \ boredom_word_7;\n    std::string boredom_word_8;\n    std::string boredom_word_9;\n\
    \    std::string boredom_word_10;\n    std::string boredom_word_11;\n    std::string\
    \ boredom_word_12;\n    std::string boredom_word_13;\n    std::string boredom_word_14;\n\
    \    std::string boredom_word_15;\n    std::string boredom_word_16;\n    std::string\
    \ boredom_word_17;\n    std::string boredom_word_18;\n    std::string boredom_word_19;\n\
    \    std::string boredom_word_20;\n    std::string boredom_word_21;\n    std::string\
    \ boredom_word_22;\n    std::string boredom_word_23;\n    std::string boredom_word_24;\n\
    \    std::string boredom_word_25;\n    std::string boredom_word_26;\n    std::string\
    \ boredom_word_27;\n    std::string boredom_word_28;\n    std::string boredom_word_29;\n\
    \    std::string boredom_word_30;\n    std::string boredom_word_31;\n    std::string\
    \ boredom_word_32;\n    std::string boredom_word_33;\n    std::string boredom_word_34;\n\
    \    std::string boredom_word_35;\n    std::string boredom_word_36;\n    std::string\
    \ boredom_word_37;\n    std::string boredom_word_38;\n    std::string boredom_word_39;\n\
    \    std::string boredom_word_40;\n    std::string boredom_word_41;\n    std::string\
    \ boredom_word_42;\n    std::string boredom_word_43;\n    std::string boredom_word_44;\n\
    \    std::string boredom_word_45;\n    std::string boredom_word_46;\n    std::string\
    \ boredom_word_47;\n    std::string boredom_word_48;\n    std::string boredom_word_49;\n\
    \    std::string boredom_word_50;\n    std::string boredom_word_51;\n    std::string\
    \ boredom_word_52;\n    std::string boredom_word_53;\n    std::string boredom_word_54;\n\
    \    std::string boredom_word_55;\n    std::string boredom_word_56;\n    std::string\
    \ boredom_word_57;\n    std::string boredom_word_", "    // Write your code here\n\
    \    long boredom = 0;\n    std::string word;\n    std::string delimiter = \"\
    \ .,?!\";\n    std::string delimiter2 = \".?!\";\n    std::string delimiter3 =\
    \ \".?!.\";\n    std::string delimiter4 = \".?!.?!\";\n    std::string delimiter5\
    \ = \".?!.?!.\";\n    std::string delimiter6 = \".?!.?!.?!\";\n    std::string\
    \ delimiter7 = \".?!.?!.?!.\";\n    std::string delimiter8 = \".?!.?!.?!.?!\"\
    ;\n    std::string delimiter9 = \".?!.?!.?!.?!.\";\n    std::string delimiter10\
    \ = \".?!.?!.?!.?!.?!\";\n    std::string delimiter11 = \".?!.?!.?!.?!.?!.\";\n\
    \    std::string delimiter12 = \".?!.?!.?!.?!.?!.?!\";\n    std::string delimiter13\
    \ = \".?!.?!.?!.?!.?!.?!.\";\n    std::string delimiter14 = \".?!.?!.?!.?!.?!.?!.?!\"\
    ;\n    std::string delimiter15 = \".?!.?!.?!.?!.?!.?!.?!.\";\n    std::string\
    \ delimiter16 = \".?!.?!.?!.?!.?!.?!.?!.?!\";\n    std::string delimiter17 = \"\
    .?!.?!.?!.?!.?!.?!.?!.?!.\";\n    std::string delimiter18 = \".?!.?!.?!.?!.?!.?!.?!.?!.?!\"\
    ;\n    std::string delimiter19 = \".?!.?!.?!.?!.?!.?!.?!.?!.?!.\";\n    std::string\
    \ delimiter20 = \".?!.?!.?!.?!.?!.?!.?!.?!.?!.?!\";\n    std::string delimiter21\
    \ = \".?!.?!.?!.?!.?!.?!.?!.?!.?!.?!.\";\n    std::string delimiter22", "    int\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;", "    long ans = 0;\n    std::string word;\n    for (auto\
    \ &i : S) {\n        if (i == '.' || i == '?' || i == '!') {\n            ans\
    \ += 1;\n        }\n    }\n    return ans;", "    int boredoms = 0;\n    for (int\
    \ i = 0; i < S.size(); i++) {\n        if (S[i] == '.' || S[i] == '?' || S[i]\
    \ == '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long boredoms = 0;\n    std::string word;\n    std::string boredom_word = \"\
    I\";\n    std::string delimiter = \".?!\";\n    std::string delimiters = \". ?\
    \ !\";\n    std::string delimiters_1 = \". ? !\";\n    std::string delimiters_2\
    \ = \". ? !\";\n    std::string delimiters_3 = \". ? !\";\n    std::string delimiters_4\
    \ = \". ? !\";\n    std::string delimiters_5 = \". ? !\";\n    std::string delimiters_6\
    \ = \". ? !\";\n    std::string delimiters_7 = \". ? !\";\n    std::string delimiters_8\
    \ = \". ? !\";\n    std::string delimiters_9 = \". ? !\";\n    std::string delimiters_10\
    \ = \". ? !\";\n    std::string delimiters_11 = \". ? !\";\n    std::string delimiters_12\
    \ = \". ? !\";\n    std::string delimiters_13 = \". ? !\";\n    std::string delimiters_14\
    \ = \". ? !\";\n    std::string delimiters_15 = \". ? !\";\n    std::string delimiters_16\
    \ = \". ? !\";\n    std::string delimiters_17 = \". ? !\";\n    std::string delimiters_18\
    \ = \". ? !\";\n    std::string delimiters_19 = \". ? !\";\n    std::string delimiters_20\
    \ = \". ? !\";\n    std::string delimiters_21 = \". ? !\";\n    std::string delimiters_22\
    \ = \". ? !\";\n    std::string delimiters_23 = \". ? !\";\n    std::string delimiters_24\
    \ = \". ? !\";\n    std::string delimiters_25 = \". ? !\";\n    std::string delimiters_26\
    \ = \". ? !\";\n    std::string delimiters_27 = \". ? !\";\n    std::string delimiters_28\
    \ = \". ? !\";\n    std::string delimiters_29 = \". ? !\";\n    std::string delimiters_30\
    \ = \". ? !\";\n    std::string delimiters_31 = \". ? !\";\n    std::string delimiters_32\
    \ = \". ? !\";\n    std::string delimiters_33 = \". ? !\";\n    std::string delimiters_34\
    \ = \". ? !\";\n    std::string delimiters_35 = \". ? !\";\n    std::string delimiters_36\
    \ = \". ? !\";\n    std::string delimiters_37 = \". ? !\";\n    std::string delimiters_38\
    \ = \". ? !\";\n    std::string delimiters_39 = \". ? !\";\n    std::string delimiters_40\
    \ = \". ? !\";\n    std::string delimiters_41 = \". ? !\";\n    std::string delimiters_42\
    \ = \". ? !\";\n    std::string delimiters_43 = \". ", "    long boredoms = 0;\n\
    \    std::string word;\n    std::string delimiters = \".?!\";\n    size_t pos\
    \ = 0;\n    size_t i = 0;\n    while(pos < S.length()) {\n        word = S.substr(pos,\
    \ delimiters.length());\n        if(word == \"I\") {\n            boredoms++;\n\
    \        }\n        pos = pos + delimiters.length();\n    }\n    return boredoms;",
  "    // Write your code here\n    long boredoms = 0;\n    for(int i = 0; i < S.size();\
    \ i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n          \
    \  boredoms += 1;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    std::string\
    \ delimiters_lower = \".?!\";\n    std::string delimiters_upper = \".?!\";\n \
    \   std::string delimiters_capital = \".?!\";\n    std::string delimiters_mixed\
    \ = \".?!\";\n    std::string delimiters_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_lower = \".?!\";\n    std::string delimiters_mixed_capital\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_capital\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_capital\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_upper = \".?!\";\n\
    \    std::string delimiters_mixed_mixed_mixed_lower = \".?", "    // Write your\
    \ code here\n    long boredoms = 0;\n    std::string word;\n    std::string boredom;\n\
    \    std::string delimiters = \".?!\";\n    std::string delimiters_lower = \"\
    i.\";\n    std::string delimiters_upper = \"I.\";\n    std::string delimiters_capital\
    \ = \"I.\";\n    std::string delimiters_capital2 = \"I.\";\n    std::string delimiters_capital3\
    \ = \"I.\";\n    std::string delimiters_capital4 = \"I.\";\n    std::string delimiters_capital5\
    \ = \"I.\";\n    std::string delimiters_capital6 = \"I.\";\n    std::string delimiters_capital7\
    \ = \"I.\";\n    std::string delimiters_capital8 = \"I.\";\n    std::string delimiters_capital9\
    \ = \"I.\";\n    std::string delimiters_capital10 = \"I.\";\n    std::string delimiters_capital11\
    \ = \"I.\";\n    std::string delimiters_capital12 = \"I.\";\n    std::string delimiters_capital13\
    \ = \"I.\";\n    std::string delimiters_capital14 = \"I.\";\n    std::string delimiters_capital15\
    \ = \"I.\";\n    std::string delimiters_capital16 = \"I.\";\n    std::string delimiters_capital17\
    \ = \"I.\";\n    std::string delimiters_capital18 = \"I.\";\n    std::string delimiters_capital19\
    \ = \"I.\";\n    std::string delimiters_capital20 = \"I.\";\n    std::string delimiters_capital21\
    \ = \"I.\";\n    std::string delimiters_capital22 = \"I.\";\n    std::string delimiters_capital23\
    \ = \"I.\";\n    std::string delimiters_capital24 = \"I.\";\n    std::string delimiters_capital25\
    \ = \"I.\";\n    std::string delimiters_capital26 = \"I.\";\n    std::string delimiters_capital27\
    \ = \"I.\";\n    std::string delimiters_capital28 = \"I.\";\n    std::string delimiters_capital29\
    \ = \"I.\";\n    std::string delimiters_capital30 = \"I.\";\n    std::string delimiters_capital31\
    \ = \"I.\";\n    std::string delimiters_capital32 = \"I.\";\n    std::string delimiters_capital33\
    \ = \"I.\";\n    std::string delimiters_capital34 = \"I.\";\n    std::string delimiters_capital35\
    \ = \"I.\";\n    std::string delimiters_capital36 = \"I.\";\n    std::string delimiters_capital37\
    \ = \"I.\";\n    std::string delimiters_capital38 = \"I.\";\n    std::string delimiters_capital39\
    \ = \"I.\";\n    std::string delimiters_capital40 = \"I.\";\n    std::string delimiters_capital41\
    \ = \"I.\";\n    std::string delimiters_capital42 = \"", "    long boredoms =\
    \ 0;\n    std::string word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n\
    \    std::string boredom_word_3;\n    std::string boredom_word_4;\n    std::string\
    \ boredom_word_5;\n    std::string boredom_word_6;\n    std::string boredom_word_7;\n\
    \    std::string boredom_word_8;\n    std::string boredom_word_9;\n    std::string\
    \ boredom_word_10;\n    std::string boredom_word_11;\n    std::string boredom_word_12;\n\
    \    std::string boredom_word_13;\n    std::string boredom_word_14;\n    std::string\
    \ boredom_word_15;\n    std::string boredom_word_16;\n    std::string boredom_word_17;\n\
    \    std::string boredom_word_18;\n    std::string boredom_word_19;\n    std::string\
    \ boredom_word_20;\n    std::string boredom_word_21;\n    std::string boredom_word_22;\n\
    \    std::string boredom_word_23;\n    std::string boredom_word_24;\n    std::string\
    \ boredom_word_25;\n    std::string boredom_word_26;\n    std::string boredom_word_27;\n\
    \    std::string boredom_word_28;\n    std::string boredom_word_29;\n    std::string\
    \ boredom_word_30;\n    std::string boredom_word_31;\n    std::string boredom_word_32;\n\
    \    std::string boredom_word_33;\n    std::string boredom_word_34;\n    std::string\
    \ boredom_word_35;\n    std::string boredom_word_36;\n    std::string boredom_word_37;\n\
    \    std::string boredom_word_38;\n    std::string boredom_word_39;\n    std::string\
    \ boredom_word_40;\n    std::string boredom_word_41;\n    std::string boredom_word_42;\n\
    \    std::string boredom_word_43;\n    std::string boredom_word_44;\n    std::string\
    \ boredom_word_45;\n    std::string boredom_word_46;\n    std::string boredom_word_47;\n\
    \    std::string boredom_word_48;\n    std::string boredom_word_49;\n    std::string\
    \ boredom_word_50;\n    std::string boredom_word_51;\n    std::string boredom_word_52;\n\
    \    std::string boredom_word_53;\n    std::string boredom_word_54;\n    std::string\
    \ boredom_word_55;\n    std::string boredom_word_56;\n    std::string boredom_word_57;\n\
    \    std::string boredom_word_", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string sentence;\n    std::string delimiters = \".?!\";\n    size_t\
    \ pos = 0;\n    size_t i = 0;\n    while (pos < S.size()) {\n        word = S.substr(pos,\
    \ 1);\n        if (word == \"I\") {\n            boredoms += 1;\n        }\n \
    \       pos = pos + 1;\n    }\n    return boredoms;", "    long boredoms = 0;\n\
    \    std::string word;\n    std::string delimiters = \".?!\";\n    for (auto &c\
    \ : S) {\n        if (c == delimiters[0]) {\n            boredoms++;\n       \
    \     word = S;\n        }\n        else if (c == delimiters[1]) {\n         \
    \   boredoms++;\n            word = S;\n        }\n        else if (c == delimiters[2])\
    \ {\n            boredoms++;\n            word = S;\n        }\n        else {\n\
    \            word = word + c;\n        }\n    }\n    return boredoms;", "    //\
    \ Write your code here\n    long boredom = 0;\n    for(int i = 0; i < S.size();\
    \ i++){\n        if(S[i] == 'I'){\n            boredom++;\n        }\n    }\n\
    \    return boredom;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ boredom_word;\n    std::string boredom_word_2;\n    std::string boredom_word_3;\n\
    \    std::string boredom_word_4;\n    std::string boredom_word_5;\n    std::string\
    \ boredom_word_6;\n    std::string boredom_word_7;\n    std::string boredom_word_8;\n\
    \    std::string boredom_word_9;\n    std::string boredom_word_10;\n    std::string\
    \ boredom_word_11;\n    std::string boredom_word_12;\n    std::string boredom_word_13;\n\
    \    std::string boredom_word_14;\n    std::string boredom_word_15;\n    std::string\
    \ boredom_word_16;\n    std::string boredom_word_17;\n    std::string boredom_word_18;\n\
    \    std::string boredom_word_19;\n    std::string boredom_word_20;\n    std::string\
    \ boredom_word_21;\n    std::string boredom_word_22;\n    std::string boredom_word_23;\n\
    \    std::string boredom_word_24;\n    std::string boredom_word_25;\n    std::string\
    \ boredom_word_26;\n    std::string boredom_word_27;\n    std::string boredom_word_28;\n\
    \    std::string boredom_word_29;\n    std::string boredom_word_30;\n    std::string\
    \ boredom_word_31;\n    std::string boredom_word_32;\n    std::string boredom_word_33;\n\
    \    std::string boredom_word_34;\n    std::string boredom_word_35;\n    std::string\
    \ boredom_word_36;\n    std::string boredom_word_37;\n    std::string boredom_word_38;\n\
    \    std::string boredom_word_39;\n    std::string boredom_word_40;\n    std::string\
    \ boredom_word_41;\n    std::string boredom_word_42;\n    std::string boredom_word_43;\n\
    \    std::string boredom_word_44;\n    std::string boredom_word_45;\n    std::string\
    \ boredom_word_46;\n    std::string boredom_word_47;\n    std::string boredom_word_48;\n\
    \    std::string boredom_word_49;\n    std::string boredom_word_50;\n    std::string\
    \ boredom_word_51;\n    std::string boredom_word_52;\n    std::string boredom_word_53;\n\
    \    std::string boredom_word_54;\n    std::string boredom_word_55;\n    std::string\
    \ boredom_word_56;\n    std::string boredom_word_57;\n    std::string boredom_word_",
  "    long boredoms = 0;\n    std::string word;\n    std::string delimiter = \".?!\"\
    ;\n    std::string delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n\
    \    std::string delimiter4 = \"!\";\n    std::string delimiter5 = \".\";\n  \
    \  std::string delimiter6 = \"?\";\n    std::string delimiter7 = \"!\";\n    std::string\
    \ delimiter8 = \".\";\n    std::string delimiter9 = \"?\";\n    std::string delimiter10\
    \ = \"!\";\n    std::string delimiter11 = \".\";\n    std::string delimiter12\
    \ = \"?\";\n    std::string delimiter13 = \"!\";\n    std::string delimiter14\
    \ = \".\";\n    std::string delimiter15 = \"?\";\n    std::string delimiter16\
    \ = \"!\";\n    std::string delimiter17 = \".\";\n    std::string delimiter18\
    \ = \"?\";\n    std::string delimiter19 = \"!\";\n    std::string delimiter20\
    \ = \".\";\n    std::string delimiter21 = \"?\";\n    std::string delimiter22\
    \ = \"!\";\n    std::string delimiter23 = \".\";\n    std::string delimiter24\
    \ = \"?\";\n    std::string delimiter25 = \"!\";\n    std::string delimiter26\
    \ = \".\";\n    std::string delimiter27 = \"?\";\n    std::string delimiter28\
    \ = \"!\";\n    std::string delimiter29 = \".\";\n    std::string delimiter30\
    \ = \"?\";\n    std::string delimiter31 = \"!\";\n    std::string delimiter32\
    \ = \".\";\n    std::string delimiter33 = \"?\";\n    std::string delimiter34\
    \ = \"!\";\n    std::string delimiter35 = \".\";\n    std::string delimiter36\
    \ = \"?\";\n    std::string delimiter37 = \"!\";\n    std::string delimiter38\
    \ = \".\";\n    std::string delimiter39 = \"?\";\n    std::string delimiter40\
    \ = \"!\";\n    std::string delimiter41 = \"!\";\n    std::string delimiter42\
    \ = \".\";\n    std::string delimiter43 = \"?\";\n    std::string delimiter44\
    \ = \"!\";\n    std::string delimiter45 = \".\";\n    std::string delimiter46\
    \ = \"?\";\n    std::string delimiter47 = \"!\";\n    std::string delimiter48\
    \ = \".\";\n    std::string delimiter49 = \"?\";\n    std::string delimiter50\
    \ = \"!\";\n    std::string delimiter51 = \"!\";\n    std::string delimiter52\
    \ = \".\";\n    std::string delimiter53 = \"?\";\n    std::string delimiter54\
    \ = \"!\";\n    std::string delimiter55 = \".\";\n    std::string delimiter56\
    \ = \"?\";\n    std::string delimiter57 = \"!\";\n    std::string delimiter58\
    \ = \".\";\n    std::string delimiter59 = \"?\";\n    std::string delimiter60\
    \ = \"!\";\n    std::string delimiter61 = \"!\";\n    std::string delimiter62\
    \ = \".", "    long boredoms = 0;\n    std::string word;\n    std::string delimiters\
    \ = \".?!\";\n    std::string delimiter = \",\";\n    std::string delimiter2 =\
    \ \" \";\n    std::string delimiter3 = \".\";\n    std::string delimiter4 = \"\
    ?\";\n    std::string delimiter5 = \"!\";\n    std::string delimiter6 = \".\"\
    ;\n    std::string delimiter7 = \"?\";\n    std::string delimiter8 = \"!\";\n\
    \    std::string delimiter9 = \".\";\n    std::string delimiter10 = \"?\";\n \
    \   std::string delimiter11 = \"!\";\n    std::string delimiter12 = \".\";\n \
    \   std::string delimiter13 = \"?\";\n    std::string delimiter14 = \"!\";\n \
    \   std::string delimiter15 = \".\";\n    std::string delimiter16 = \"?\";\n \
    \   std::string delimiter17 = \"!\";\n    std::string delimiter18 = \".\";\n \
    \   std::string delimiter19 = \"?\";\n    std::string delimiter20 = \"!\";\n \
    \   std::string delimiter21 = \",\";\n    std::string delimiter22 = \" \";\n \
    \   std::string delimiter23 = \".\";\n    std::string delimiter24 = \"?\";\n \
    \   std::string delimiter25 = \"!\";\n    std::string delimiter26 = \".\";\n \
    \   std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n \
    \   std::string delimiter29 = \".\";\n    std::string delimiter30 = \"?\";\n \
    \   std::string delimiter31 = \"!\";\n    std::string delimiter32 = \".\";\n \
    \   std::string delimiter33 = \"?\";\n    std::string delimiter34 = \"!\";\n \
    \   std::string delimiter35 = \".\";\n    std::string delimiter36 = \"?\";\n \
    \   std::string delimiter37 = \"!\";\n    std::string delimiter38 = \".\";\n \
    \   std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n \
    \   std::string delimiter41 = \",\";\n    std::string delimiter42 = \".\";\n \
    \   std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n \
    \   std::string delimiter45 = \".\";\n    std::string delimiter46 = \"?\";\n \
    \   std::string delimiter47 = \"!\";\n    std::string delimiter48 = \".\";\n \
    \   std::string delimiter49 = \"?\";\n    std::string delimiter50 = \"!\";\n \
    \   std::string delimiter51 = \",\";\n    std::string delimiter52 = \".\";\n \
    \   std::string delimiter53 = \"?\";\n    std::string delimiter54 = \"!\";\n \
    \   std::string delimiter55 = \".\";\n    std::string delimiter56 = \"?\";\n \
    \   std::string delimiter57 = \"!\";\n    std::string delimiter58 = \".\";\n \
    \   std::string delimiter59 = \"?\";\n    std::string delimiter60 = \"!\";\n \
    \   std::string delimiter61 = \",\";\n    std::string delimiter62", "    long\
    \ boredoms = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n\
    \    size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.size()) {\n   \
    \     word = S.substr(pos, 1);\n        pos = S.find(delimiters, pos);\n     \
    \   if(pos != std::string::npos) {\n            boredoms += 1;\n        }\n  \
    \      pos = pos + 1;\n    }\n    return boredoms;", "    long boredoms = 0;\n\
    \    std::string word;\n    for(int i = 0; i < S.size(); i++) {\n        word\
    \ = S[i];\n        if(word == \"I\") {\n            boredoms += 1;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_", "    long count = 0;\n    std::string word;\n    std::string\
    \ boredom;\n    std::string delimiter = \".?!\";\n    std::string delimiter1 =\
    \ \"I\";\n    std::string delimiter2 = \"the\";\n    std::string delimiter3 =\
    \ \"a\";\n    std::string delimiter4 = \"bore\";\n    std::string delimiter5 =\
    \ \"of\";\n    std::string delimiter6 = \"a\";\n    std::string delimiter7 = \"\
    bore\";\n    std::string delimiter8 = \"of\";\n    std::string delimiter9 = \"\
    a\";\n    std::string delimiter10 = \"bore\";\n    std::string delimiter11 = \"\
    of\";\n    std::string delimiter12 = \"a\";\n    std::string delimiter13 = \"\
    bore\";\n    std::string delimiter14 = \"of\";\n    std::string delimiter15 =\
    \ \"a\";\n    std::string delimiter16 = \"bore\";\n    std::string delimiter17\
    \ = \"of\";\n    std::string delimiter18 = \"a\";\n    std::string delimiter19\
    \ = \"bore\";\n    std::string delimiter20 = \"of\";\n    std::string delimiter21\
    \ = \"a\";\n    std::string delimiter22 = \"bore\";\n    std::string delimiter23\
    \ = \"of\";\n    std::string delimiter24 = \"a\";\n    std::string delimiter25\
    \ = \"bore\";\n    std::string delimiter26 = \"of\";\n    std::string delimiter27\
    \ = \"a\";\n    std::string delimiter28 = \"bore\";\n    std::string delimiter29\
    \ = \"of\";\n    std::string delimiter30 = \"a\";\n    std::string delimiter31\
    \ = \"bore\";\n    std::string delimiter32 = \"of\";\n    std::string delimiter33\
    \ = \"a\";\n    std::string delimiter34 = \"bore\";\n    std::string delimiter35\
    \ = \"of\";\n    std::string delimiter36 = \"a\";\n    std::string delimiter37\
    \ = \"bore\";\n    std::string delimiter38 = \"of\";\n    std::string delimiter39\
    \ = \"a\";\n    std::string delimiter40 = \"bore\";\n    std::string delimiter41\
    \ = \"of\";\n    std::string delimiter42 = \"a\";\n    std::string delimiter43\
    \ = \"bore\";\n    std::string delimiter44 = \"of\";\n    std::string delimiter45\
    \ = \"a\";\n    std::string delimiter46 = \"bore\";\n    std::string delimiter47\
    \ = \"of\";\n    std::string delimiter48 = \"a\";\n    std::string delimiter49\
    \ = \"bore\";\n    std::string delimiter50 = \"of\";\n    std::string delimiter51\
    \ = \"a\";\n    std::string delimiter52 = \"bore\";\n    std::string delimiter53\
    \ = \"of\";\n    std::string delimiter54 = \"a\";\n    std::string delimiter55\
    \ = \"bore\";\n    std::string delimiter56 = \"of\";\n    std::string delimiter57\
    \ = \"a\";\n    std::string delimiter58 = \"bore\";\n", "    // Write your code\
    \ here\n    long boredoms = 0;\n    std::string word;\n    for(int i = 0; i <\
    \ S.length(); i++){\n        if(S[i] == '.'){\n            boredoms += 1;\n  \
    \      }\n        if(S[i] == '?'){\n            boredoms += 1;\n        }\n  \
    \      if(S[i] == '!'){\n            boredoms += 1;\n        }\n        if(S[i]\
    \ == 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;",
  "    long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    size_t pos = 0;\n    size_t i = 0;\n    while ((pos = S.find(delimiters,\
    \ pos)) != std::string::npos) {\n        word = S.substr(pos, delimiters.size());\n\
    \        if (word == \"I\") {\n            boredoms++;\n        }\n        pos\
    \ = pos + delimiters.size();\n        i++;\n    }\n    return boredoms;", "  \
    \  long boredoms = 0;\n    std::string word;\n    std::string boredom;\n    for\
    \ (auto &i : S) {\n        if (i == '.' || i == '?' || i == '!') {\n         \
    \   boredom += i;\n        } else {\n            word += i;\n        }\n    }\n\
    \    if (boredom == \"I\") {\n        boredoms += 1;\n    }\n    return boredoms;",
  "    int boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i]\
    \ == '.' || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    int count = 0;\n    for(int i = 0; i < S.size();\
    \ i++) {\n        if(S[i] == '.') {\n            count++;\n        }\n       \
    \ if(S[i] == '?') {\n            count++;\n        }\n        if(S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string boredom_word;\n    std::string\
    \ boredom_word_2;\n    std::string boredom_word_3;\n    std::string boredom_word_4;\n\
    \    std::string boredom_word_5;\n    std::string boredom_word_6;\n    std::string\
    \ boredom_word_7;\n    std::string boredom_word_8;\n    std::string boredom_word_9;\n\
    \    std::string boredom_word_10;\n    std::string boredom_word_11;\n    std::string\
    \ boredom_word_12;\n    std::string boredom_word_13;\n    std::string boredom_word_14;\n\
    \    std::string boredom_word_15;\n    std::string boredom_word_16;\n    std::string\
    \ boredom_word_17;\n    std::string boredom_word_18;\n    std::string boredom_word_19;\n\
    \    std::string boredom_word_20;\n    std::string boredom_word_21;\n    std::string\
    \ boredom_word_22;\n    std::string boredom_word_23;\n    std::string boredom_word_24;\n\
    \    std::string boredom_word_25;\n    std::string boredom_word_26;\n    std::string\
    \ boredom_word_27;\n    std::string boredom_word_28;\n    std::string boredom_word_29;\n\
    \    std::string boredom_word_30;\n    std::string boredom_word_31;\n    std::string\
    \ boredom_word_32;\n    std::string boredom_word_33;\n    std::string boredom_word_34;\n\
    \    std::string boredom_word_35;\n    std::string boredom_word_36;\n    std::string\
    \ boredom_word_37;\n    std::string boredom_word_38;\n    std::string boredom_word_39;\n\
    \    std::string boredom_word_40;\n    std::string boredom_word_41;\n    std::string\
    \ boredom_word_42;\n    std::string boredom_word_43;\n    std::string boredom_word_44;\n\
    \    std::string boredom_word_45;\n    std::string boredom_word_46;\n    std::string\
    \ boredom_word_47;\n    std::string boredom_word_48;\n    std::string boredom_word_49;\n\
    \    std::string boredom_word_50;\n    std::string boredom_word_51;\n    std::string\
    \ boredom_word_52;\n    std::string boredom_word_53;\n    std::string boredom_word_54;\n\
    \    std::string boredom_word_55;\n    std::string boredom_word_56;\n    std::string\
    \ boredom_word_57;\n    std::string boredom_word_", "    long boredoms = 0;\n\
    \    std::string word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n\
    \    std::string boredom_word_3;\n    std::string boredom_word_4;\n    std::string\
    \ boredom_word_5;\n    std::string boredom_word_6;\n    std::string boredom_word_7;\n\
    \    std::string boredom_word_8;\n    std::string boredom_word_9;\n    std::string\
    \ boredom_word_10;\n    std::string boredom_word_11;\n    std::string boredom_word_12;\n\
    \    std::string boredom_word_13;\n    std::string boredom_word_14;\n    std::string\
    \ boredom_word_15;\n    std::string boredom_word_16;\n    std::string boredom_word_17;\n\
    \    std::string boredom_word_18;\n    std::string boredom_word_19;\n    std::string\
    \ boredom_word_20;\n    std::string boredom_word_21;\n    std::string boredom_word_22;\n\
    \    std::string boredom_word_23;\n    std::string boredom_word_24;\n    std::string\
    \ boredom_word_25;\n    std::string boredom_word_26;\n    std::string boredom_word_27;\n\
    \    std::string boredom_word_28;\n    std::string boredom_word_29;\n    std::string\
    \ boredom_word_30;\n    std::string boredom_word_31;\n    std::string boredom_word_32;\n\
    \    std::string boredom_word_33;\n    std::string boredom_word_34;\n    std::string\
    \ boredom_word_35;\n    std::string boredom_word_36;\n    std::string boredom_word_37;\n\
    \    std::string boredom_word_38;\n    std::string boredom_word_39;\n    std::string\
    \ boredom_word_40;\n    std::string boredom_word_41;\n    std::string boredom_word_42;\n\
    \    std::string boredom_word_43;\n    std::string boredom_word_44;\n    std::string\
    \ boredom_word_45;\n    std::string boredom_word_46;\n    std::string boredom_word_47;\n\
    \    std::string boredom_word_48;\n    std::string boredom_word_49;\n    std::string\
    \ boredom_word_50;\n    std::string boredom_word_51;\n    std::string boredom_word_52;\n\
    \    std::string boredom_word_53;\n    std::string boredom_word_54;\n    std::string\
    \ boredom_word_55;\n    std::string boredom_word_56;\n    std::string boredom_word_57;\n\
    \    std::string boredom_word_", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string boredom_word = \"I\";\n    std::string delimiter = \".?!\";\n\
    \    std::string delimiter2 = \" \";\n    std::string delimiter3 = \" \";\n  \
    \  std::string delimiter4 = \" \";\n    std::string delimiter5 = \" \";\n    std::string\
    \ delimiter6 = \" \";\n    std::string delimiter7 = \" \";\n    std::string delimiter8\
    \ = \" \";\n    std::string delimiter9 = \" \";\n    std::string delimiter10 =\
    \ \" \";\n    std::string delimiter11 = \" \";\n    std::string delimiter12 =\
    \ \" \";\n    std::string delimiter13 = \" \";\n    std::string delimiter14 =\
    \ \" \";\n    std::string delimiter15 = \" \";\n    std::string delimiter16 =\
    \ \" \";\n    std::string delimiter17 = \" \";\n    std::string delimiter18 =\
    \ \" \";\n    std::string delimiter19 = \" \";\n    std::string delimiter20 =\
    \ \" \";\n    std::string delimiter21 = \" \";\n    std::string delimiter22 =\
    \ \" \";\n    std::string delimiter23 = \" \";\n    std::string delimiter24 =\
    \ \" \";\n    std::string delimiter25 = \" \";\n    std::string delimiter26 =\
    \ \" \";\n    std::string delimiter27 = \" \";\n    std::string delimiter28 =\
    \ \" \";\n    std::string delimiter29 = \" \";\n    std::string delimiter30 =\
    \ \" \";\n    std::string delimiter31 = \" \";\n    std::string delimiter32 =\
    \ \" \";\n    std::string delimiter33 = \" \";\n    std::string delimiter34 =\
    \ \" \";\n    std::string delimiter35 = \" \";\n    std::string delimiter36 =\
    \ \" \";\n    std::string delimiter37 = \" \";\n    std::string delimiter38 =\
    \ \" \";\n    std::string delimiter39 = \" \";\n    std::string delimiter40 =\
    \ \" \";\n    std::string delimiter41 = \" \";\n    std::string delimiter42 =\
    \ \" \";\n    std::string delimiter43 = \" \";\n    std::string delimiter44 =\
    \ \" \";\n    std::string delimiter45 = \" \";\n    std::string delimiter46 =\
    \ \" \";\n    std::string delimiter47 = \" \";\n    std::string delimiter48 =\
    \ \" \";\n    std::string delimiter49 = \" \";\n    std::string delimiter50 =\
    \ \" \";\n    std::string delimiter51 = \" \";\n    std::string delimiter52 =\
    \ \" \";\n    std::string delimiter53 = \" \";\n    std::string delimiter54 =\
    \ \" \";\n    std::string delimiter55 = \" \";\n    std::string delimiter56 =\
    \ \" \";\n    std::string delimiter57 = \" \";\n    std::string delimiter58 =\
    \ \" \";\n    std::string delimiter59 = \" \";\n    std::string delimiter60 =\
    \ \" \";\n    std::string delimiter61 = \" \";\n    std::string delimiter62 =\
    \ \" \";\n    std::string delimiter6", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \".?!\";\n    for (size_t i = 0; i < S.size(); i++) {\n       \
    \ word = S[i];\n        if (word.compare(0, 2, \"I\") == 0) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long ans = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4\
    \ = \"!\";\n    std::string delimiter5 = \".?!\";\n    std::string delimiter6\
    \ = \".\";\n    std::string delimiter7 = \"?\";\n    std::string delimiter8 =\
    \ \"!\";\n    std::string delimiter9 = \".?!\";\n    std::string delimiter10 =\
    \ \".\";\n    std::string delimiter11 = \"?\";\n    std::string delimiter12 =\
    \ \"!\";\n    std::string delimiter13 = \".?!\";\n    std::string delimiter14\
    \ = \".\";\n    std::string delimiter15 = \"?\";\n    std::string delimiter16\
    \ = \"!\";\n    std::string delimiter17 = \".?!\";\n    std::string delimiter18\
    \ = \".\";\n    std::string delimiter19 = \"?\";\n    std::string delimiter20\
    \ = \"!\";\n    std::string delimiter21 = \"?!\";\n    std::string delimiter22\
    \ = \".\";\n    std::string delimiter23 = \"?\";\n    std::string delimiter24\
    \ = \"!\";\n    std::string delimiter25 = \".?!\";\n    std::string delimiter26\
    \ = \".\";\n    std::string delimiter27 = \"?\";\n    std::string delimiter28\
    \ = \"!\";\n    std::string delimiter29 = \".?!\";\n    std::string delimiter30\
    \ = \".\";\n    std::string delimiter31 = \"?\";\n    std::string delimiter32\
    \ = \"!\";\n    std::string delimiter33 = \".?!\";\n    std::string delimiter34\
    \ = \".\";\n    std::string delimiter35 = \"?\";\n    std::string delimiter36\
    \ = \"!\";\n    std::string delimiter37 = \".?!\";\n    std::string delimiter38\
    \ = \".\";\n    std::string delimiter39 = \"?\";\n    std::string delimiter40\
    \ = \"!\";\n    std::string delimiter41 = \"?!\";\n    std::string delimiter42\
    \ = \".\";\n    std::string delimiter43 = \"?\";\n    std::string delimiter44\
    \ = \"!\";\n    std::string delimiter45 = \".?!\";\n    std::string delimiter46\
    \ = \".\";\n    std::string delimiter47 = \"?\";\n    std::string delimiter48\
    \ = \"!\";\n    std::string delimiter49 = \".?!\";\n    std::string delimiter50\
    \ = \".\";\n    std::string delimiter51 = \"?\";\n    std::string delimiter52\
    \ = \"!\";\n    std::string delimiter53 = \".?!\";\n    std::string delimiter54\
    \ = \".\";\n    std::string delimiter55 = \"?\";\n    std::string delimiter56\
    \ = \"!\";\n    std::string delimiter57 = \".?!\";\n    std::string delimiter58\
    \ = \".\";\n", "    // Write your code here\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string sentence;\n    std::stringstream ss(S);\n    while (std::getline(ss,\
    \ sentence, '.'))\n    {\n        std::istringstream iss(sentence);\n        while\
    \ (std::getline(iss, word, '.'))\n        {\n            if (word == \"I\")\n\
    \            {\n                boredoms++;\n            }\n        }\n    }\n\
    \    return boredoms;", "    // Write your code here\n    long boredom = 0;\n\
    \    std::string word;\n    std::string sentence;\n    std::string delimiters\
    \ = \".?!\";\n    size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.length())\
    \ {\n        word = S.substr(pos, 1);\n        pos = S.find(delimiters, pos);\n\
    \        sentence = S.substr(0, pos);\n        if(word == \"I\") {\n         \
    \   boredom++;\n        }\n        pos = pos + 1;\n    }\n    return boredom;",
  "    long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    size_t pos = 0;\n    size_t i = 0;\n    while(pos < S.size()) {\n\
    \        word = S.substr(pos, delimiters.size());\n        pos = word.find_first_of(delimiters);\n\
    \        if(pos != std::string::npos) {\n            word = word.substr(0, pos);\n\
    \            if(word == \"I\") {\n                boredoms++;\n            }\n\
    \        }\n        i++;\n    }\n    return boredoms;", "    long count = 0;\n\
    \    std::string word;\n    std::string boredom;\n    std::string delimiter =\
    \ \".?!\";\n    std::string delimiter2 = \".\";\n    std::string delimiter3 =\
    \ \"?\";\n    std::string delimiter4 = \"!\";\n    std::string delimiter5 = \"\
    .\";\n    std::string delimiter6 = \"?\";\n    std::string delimiter7 = \"!\"\
    ;\n    std::string delimiter8 = \".\";\n    std::string delimiter9 = \"?\";\n\
    \    std::string delimiter10 = \"!\";\n    std::string delimiter11 = \".\";\n\
    \    std::string delimiter12 = \"?\";\n    std::string delimiter13 = \"!\";\n\
    \    std::string delimiter14 = \".\";\n    std::string delimiter15 = \"?\";\n\
    \    std::string delimiter16 = \"!\";\n    std::string delimiter17 = \".\";\n\
    \    std::string delimiter18 = \"?\";\n    std::string delimiter19 = \"!\";\n\
    \    std::string delimiter20 = \".\";\n    std::string delimiter21 = \"?\";\n\
    \    std::string delimiter22 = \"!\";\n    std::string delimiter23 = \".\";\n\
    \    std::string delimiter24 = \"?\";\n    std::string delimiter25 = \"!\";\n\
    \    std::string delimiter26 = \".\";\n    std::string delimiter27 = \"?\";\n\
    \    std::string delimiter28 = \"!\";\n    std::string delimiter29 = \".\";\n\
    \    std::string delimiter30 = \"?\";\n    std::string delimiter31 = \"!\";\n\
    \    std::string delimiter32 = \".\";\n    std::string delimiter33 = \"?\";\n\
    \    std::string delimiter34 = \"!\";\n    std::string delimiter35 = \".\";\n\
    \    std::string delimiter36 = \"?\";\n    std::string delimiter37 = \"!\";\n\
    \    std::string delimiter38 = \".\";\n    std::string delimiter39 = \"?\";\n\
    \    std::string delimiter40 = \"!\";\n    std::string delimiter41 = \"!\";\n\
    \    std::string delimiter42 = \".\";\n    std::string delimiter43 = \"?\";\n\
    \    std::string delimiter44 = \"!\";\n    std::string delimiter45 = \".\";\n\
    \    std::string delimiter46 = \"?\";\n    std::string delimiter47 = \"!\";\n\
    \    std::string delimiter48 = \".\";\n    std::string delimiter49 = \"?\";\n\
    \    std::string delimiter50 = \"!\";\n    std::string delimiter51 = \"!\";\n\
    \    std::string delimiter52 = \".\";\n    std::string delimiter53 = \"?\";\n\
    \    std::string delimiter54 = \"!\";\n    std::string delimiter55 = \".\";\n\
    \    std::string delimiter56 = \"?\";\n    std::string delimiter57 = \"!\";\n\
    \    std::string delimiter58 = \".\";\n    std::string delimiter59 = \"?\";\n\
    \    std::string delimiter60 = \"!\";\n    std::string delimiter61 = \"!\";\n\
    \    std::string ", "    long ans = 0;\n    std::string word;\n    for(auto &i\
    \ : S) {\n        if(i == '.' || i == '?' || i == '!') {\n            ans += 1;\n\
    \        }\n    }\n    return ans;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string delimiter = \"\
    .?!\";\n    std::string delimiter1 = \"I\";\n    std::string delimiter2 = \".\"\
    ;\n    std::string delimiter3 = \".\";\n    std::string delimiter4 = \".\";\n\
    \    std::string delimiter5 = \".\";\n    std::string delimiter6 = \".\";\n  \
    \  std::string delimiter7 = \".\";\n    std::string delimiter8 = \".\";\n    std::string\
    \ delimiter9 = \".\";\n    std::string delimiter10 = \".\";\n    std::string delimiter11\
    \ = \".\";\n    std::string delimiter12 = \".\";\n    std::string delimiter13\
    \ = \".\";\n    std::string delimiter14 = \".\";\n    std::string delimiter15\
    \ = \".\";\n    std::string delimiter16 = \".\";\n    std::string delimiter17\
    \ = \".\";\n    std::string delimiter18 = \".\";\n    std::string delimiter19\
    \ = \".\";\n    std::string delimiter20 = \".\";\n    std::string delimiter21\
    \ = \".\";\n    std::string delimiter22 = \".\";\n    std::string delimiter23\
    \ = \".\";\n    std::string delimiter24 = \".\";\n    std::string delimiter25\
    \ = \".\";\n    std::string delimiter26 = \".\";\n    std::string delimiter27\
    \ = \".\";\n    std::string delimiter28 = \".\";\n    std::string delimiter29\
    \ = \".\";\n    std::string delimiter30 = \".\";\n    std::string delimiter31\
    \ = \".\";\n    std::string delimiter32 = \".\";\n    std::string delimiter33\
    \ = \".\";\n    std::string delimiter34 = \".\";\n    std::string delimiter35\
    \ = \".\";\n    std::string delimiter36 = \".\";\n    std::string delimiter37\
    \ = \".\";\n    std::string delimiter38 = \".\";\n    std::string delimiter39\
    \ = \".\";\n    std::string delimiter40 = \".\";\n    std::string delimiter41\
    \ = \".\";\n    std::string delimiter42 = \".\";\n    std::string delimiter43\
    \ = \".\";\n    std::string delimiter44 = \".\";\n    std::string delimiter45\
    \ = \".\";\n    std::string delimiter46 = \".\";\n    std::string delimiter47\
    \ = \".\";\n    std::string delimiter48 = \".\";\n    std::string delimiter49\
    \ = \".\";\n    std::string delimiter50 = \".\";\n    std::string delimiter51\
    \ = \".\";\n    std::string delimiter52 = \".\";\n    std::string delimiter53\
    \ = \".\";\n    std::string delimiter54 = \".\";\n    std::string delimiter55\
    \ = \".\";\n    std::string delimiter56 = \".\";\n    std::string delimiter57\
    \ = \".\";\n    std::string delimiter58 = \".\";\n    std::string delimiter59\
    \ = \".\";\n    std::string delimiter60 = \".\";\n    ", "    // Write your code\
    \ here\n    long count = 0;\n    for(int i=0;i<S.size();i++){\n        if(S[i]\
    \ == 'I'){\n            count++;\n        }\n    }\n    return count;", "    //\
    \ Write your code here\n    long boredom = 0;\n    std::string word;\n    for(int\
    \ i = 0; i < S.length(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i]\
    \ == '!') {\n            boredom++;\n        }\n    }\n    return boredom;", " \
    \   long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    for (auto &c : S) {\n        if (c == delimiters[0]) {\n         \
    \   boredoms++;\n            word = c;\n        }\n        else if (c == delimiters[1])\
    \ {\n            boredoms++;\n            word = c;\n        }\n        else if\
    \ (c == delimiters[2]) {\n            boredoms++;\n            word = c;\n   \
    \     }\n        else if (c == delimiters[3]) {\n            boredoms++;\n   \
    \         word = c;\n        }\n        else if (c == delimiters[4]) {\n     \
    \       boredoms++;\n            word = c;\n        }\n        else if (c == delimiters[5])\
    \ {\n            boredoms++;\n            word = c;\n        }\n        else if\
    \ (c == delimiters[6]) {\n            boredoms++;\n            word = c;\n   \
    \     }\n        else if (c == delimiters[7]) {\n            boredoms++;\n   \
    \         word = c;\n        }\n        else if (c == delimiters[8]) {\n     \
    \       boredoms++;\n            word = c;\n        }\n        else if (c == delimiters[9])\
    \ {\n            boredoms++;\n            word = c;\n        }\n        else if\
    \ (c == delimiters[10]) {\n            boredoms++;\n            word = c;\n  \
    \      }\n        else if (c == delimiters[11]) {\n            boredoms++;\n \
    \           word = c;\n        }\n        else if (c == delimiters[12]) {\n  \
    \          boredoms++;\n            word = c;\n        }\n        else if (c ==\
    \ delimiters[13]) {\n            boredoms++;\n            word = c;\n        }\n\
    \        else if (c == delimiters[14]) {\n            boredoms++;\n          \
    \  word = c;\n        }\n        else if (c == delimiters[15]) {\n           \
    \ boredoms++;\n            word = c;\n        }\n        else if (c == delimiters[16])\
    \ {\n            boredoms++;\n            word = c;\n        }\n        else if\
    \ (c == delimiters[17]) {\n            boredoms++;\n            word = c;\n  \
    \      }\n        else if (c == delimiters[18]) {\n            boredoms++;\n \
    \           word = c;\n        }\n        else if (c == delimiters[19]) {\n  \
    \          boredoms++;\n            word = c;\n        }\n        else if (c ==\
    \ delimiters[20]) {\n            boredoms++;\n            word = c;\n        }\n\
    \        else if (c == delimiters[21]) {\n            boredoms++;\n          \
    \  word = c;\n        }\n        else if (c == delimiters[22]) {\n           \
    \ boredoms++;\n            word = c;\n        }\n        else if (c == delimiters[23])\
    \ {\n            boredoms++;\n            word = c;\n        }\n        else if\
    \ (c == delimiters[24", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ sentence;\n    std::string::size_type pos;\n    std::string::size_type i;\n\
    \    std::string::size_type j;\n    std::string::size_type k;\n    std::string::size_type\
    \ l;\n    std::string::size_type m;\n    std::string::size_type n;\n    std::string::size_type\
    \ o;\n    std::string::size_type p;\n    std::string::size_type q;\n    std::string::size_type\
    \ r;\n    std::string::size_type s;\n    std::string::size_type t;\n    std::string::size_type\
    \ u;\n    std::string::size_type v;\n    std::string::size_type w;\n    std::string::size_type\
    \ x;\n    std::string::size_type y;\n    std::string::size_type z;\n    std::string::size_type\
    \ A;\n    std::string::size_type B;\n    std::string::size_type C;\n    std::string::size_type\
    \ D;\n    std::string::size_type E;\n    std::string::size_type F;\n    std::string::size_type\
    \ G;\n    std::string::size_type H;\n    std::string::size_type I;\n    std::string::size_type\
    \ J;\n    std::string::size_type K;\n    std::string::size_type L;\n    std::string::size_type\
    \ M;\n    std::string::size_type N;\n    std::string::size_type O;\n    std::string::size_type\
    \ P;\n    std::string::size_type Q;\n    std::string::size_type R;\n    std::string::size_type\
    \ S;\n    std::string::size_type T;\n    std::string::size_type U;\n    std::string::size_type\
    \ V;\n    std::string::size_type W;\n    std::string::size_type X;\n    std::string::size_type\
    \ Y;\n    std::string::size_type Z;\n    std::string::size_type A;\n    std::string::size_type\
    \ B;\n    std::string::size_type C;\n    std::string::size_type D;\n    std::string::size_type\
    \ E;\n    std::string::size_type F;\n    std::string::size_type G;\n    std::string::size_type\
    \ H;\n    std::string::size_type I;\n    std::string::size_type J;\n    std::string::size_type\
    \ K;\n    std::string::size_type L;\n    std::string::size_type M;\n    std::string::size_type\
    \ N;\n    std::string::size_type O;\n    std::string::size_type P;\n    std::string::size_type\
    \ Q;\n    std::string::size_type R;\n    std::string::size_type S;\n    ", " \
    \   long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    std::string delimiter = \",\";\n    std::string delimiter2 = \" \"\
    ;\n    std::string delimiter3 = \" \";\n    std::string delimiter4 = \" \";\n\
    \    std::string delimiter5 = \" \";\n    std::string delimiter6 = \" \";\n  \
    \  std::string delimiter7 = \" \";\n    std::string delimiter8 = \" \";\n    std::string\
    \ delimiter9 = \" \";\n    std::string delimiter10 = \" \";\n    std::string delimiter11\
    \ = \" \";\n    std::string delimiter12 = \" \";\n    std::string delimiter13\
    \ = \" \";\n    std::string delimiter14 = \" \";\n    std::string delimiter15\
    \ = \" \";\n    std::string delimiter16 = \" \";\n    std::string delimiter17\
    \ = \" \";\n    std::string delimiter18 = \" \";\n    std::string delimiter19\
    \ = \" \";\n    std::string delimiter20 = \" \";\n    std::string delimiter21\
    \ = \" \";\n    std::string delimiter22 = \" \";\n    std::string delimiter23\
    \ = \" \";\n    std::string delimiter24 = \" \";\n    std::string delimiter25\
    \ = \" \";\n    std::string delimiter26 = \" \";\n    std::string delimiter27\
    \ = \" \";\n    std::string delimiter28 = \" \";\n    std::string delimiter29\
    \ = \" \";\n    std::string delimiter30 = \" \";\n    std::string delimiter31\
    \ = \" \";\n    std::string delimiter32 = \" \";\n    std::string delimiter33\
    \ = \" \";\n    std::string delimiter34 = \" \";\n    std::string delimiter35\
    \ = \" \";\n    std::string delimiter36 = \" \";\n    std::string delimiter37\
    \ = \" \";\n    std::string delimiter38 = \" \";\n    std::string delimiter39\
    \ = \" \";\n    std::string delimiter40 = \" \";\n    std::string delimiter41\
    \ = \" \";\n    std::string delimiter42 = \" \";\n    std::string delimiter43\
    \ = \" \";\n    std::string delimiter44 = \" \";\n    std::string delimiter45\
    \ = \" \";\n    std::string delimiter46 = \" \";\n    std::string delimiter47\
    \ = \" \";\n    std::string delimiter48 = \" \";\n    std::string delimiter49\
    \ = \" \";\n    std::string delimiter50 = \" \";\n    std::string delimiter51\
    \ = \" \";\n    std::string delimiter52 = \" \";\n    std::string delimiter53\
    \ = \" \";\n    std::string delimiter54 = \" \";\n    std::string delimiter55\
    \ = \" \";\n    std::string delimiter56 = \" \";\n    std::string delimiter57\
    \ = \" \";\n    std::string delimiter58 = \" \";\n    std::string delimiter59\
    \ = \" \";\n    std::string delimiter60 = \" \";\n    std::string delimiter61\
    \ = \" \";\n    std::string delimiter62 = \" \";\n    std::string delimiter63\
    \ = \" \";", "    long boredoms = 0;\n    std::string word;\n    for (auto &i\
    \ : S) {\n        if (i == '.' || i == '?' || i == '!') {\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;", "    long boredoms = 0;\n  \
    \  std::string word;\n    std::string sentence;\n    std::stringstream ss(S);\n\
    \    while(std::getline(ss, sentence, '.')){\n        word = sentence;\n     \
    \   std::cout << word << std::endl;\n        if(word == \"I\"){\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;", "    long boredoms = 0;\n  \
    \  std::string word;\n    for (auto &c : S) {\n        if (c == '.' || c == '?'\
    \ || c == '!') {\n            boredoms += 1;\n        }\n    }\n    return boredoms;",
  "    // Write your code here\n    long boredom = 0;\n    for(int i = 0; i < S.size();\
    \ i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n          \
    \  boredom++;\n        }\n    }\n    return boredom;", "    long boredoms = 0;\n\
    \    std::string word;\n    for (size_t i = 0; i < S.size(); i++) {\n        if\
    \ (S[i] == '.') {\n            boredoms += 1;\n        }\n        if (S[i] ==\
    \ '?') {\n            boredoms += 1;\n        }\n        if (S[i] == '!') {\n\
    \            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n         \
    \   boredoms += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if\
    \ (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if (S[i] ==\
    \ 'I') {\n            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n\
    \            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n         \
    \   boredoms += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if\
    \ (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if (S[i] ==\
    \ 'I') {\n            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n\
    \            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n         \
    \   boredoms += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if\
    \ (S[i] == 'I') {\n            boredoms += 1;\n        }\n        if (S[i] ==\
    \ 'I') {\n            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n\
    \            boredoms += 1;\n        }\n        if (S[i] == 'I') {\n         \
    \   boredoms += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms\
    \ += 1;\n        }\n        if (S[i] == 'I') {\n            boredoms += 1;\n \
    \       }\n        if (S[i] == 'I') {\n            boredoms += 1;", "    long\
    \ boredoms = 0;\n    std::string word;\n    std::string boredom_word;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiters_reversed = \"\";\n    for\
    \ (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n        boredom_word\
    \ = word;\n        for (size_t j = 0; j < delimiters.size(); j++) {\n        \
    \    if (boredom_word.find(delimiters[j]) != std::string::npos) {\n          \
    \      boredom_word = boredom_word.substr(0, boredom_word.find(delimiters[j]));\n\
    \            }\n        }\n        if (boredom_word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \".?!\";\n    std::string\
    \ delimiter2 = \".\";\n    std::string delimiter3 = \".?!\";\n    std::string\
    \ delimiter4 = \".\";\n    std::string delimiter5 = \".?!\";\n    std::string\
    \ delimiter6 = \".\";\n    std::string delimiter7 = \".?!\";\n    std::string\
    \ delimiter8 = \".\";\n    std::string delimiter9 = \".?!\";\n    std::string\
    \ delimiter10 = \".\";\n    std::string delimiter11 = \".?!\";\n    std::string\
    \ delimiter12 = \".\";\n    std::string delimiter13 = \".?!\";\n    std::string\
    \ delimiter14 = \".\";\n    std::string delimiter15 = \".?!\";\n    std::string\
    \ delimiter16 = \".\";\n    std::string delimiter17 = \".?!\";\n    std::string\
    \ delimiter18 = \".\";\n    std::string delimiter19 = \".?!\";\n    std::string\
    \ delimiter20 = \".\";\n    std::string delimiter21 = \".?!\";\n    std::string\
    \ delimiter22 = \".\";\n    std::string delimiter23 = \".?!\";\n    std::string\
    \ delimiter24 = \".\";\n    std::string delimiter25 = \".?!\";\n    std::string\
    \ delimiter26 = \".\";\n    std::string delimiter27 = \".?!\";\n    std::string\
    \ delimiter28 = \".\";\n    std::string delimiter29 = \".?!\";\n    std::string\
    \ delimiter30 = \".\";\n    std::string delimiter31 = \".?!\";\n    std::string\
    \ delimiter32 = \".\";\n    std::string delimiter33 = \".?!\";\n    std::string\
    \ delimiter34 = \".\";\n    std::string delimiter35 = \".?!\";\n    std::string\
    \ delimiter36 = \".\";\n    std::string delimiter37 = \".?!\";\n    std::string\
    \ delimiter38 = \".\";\n    std::string delimiter39 = \".?!\";\n    std::string\
    \ delimiter40 = \".\";\n    std::string delimiter41 = \".?!\";\n    std::string\
    \ delimiter42 = \".\";\n    std::string delimiter43 = \".?!\";\n    std::string\
    \ delimiter44 = \".\";\n    std::string delimiter45 = \".?!\";\n    std::string\
    \ delimiter46 = \".\";\n    std::string delimiter47 = \".?!\";\n    std::string\
    \ delimiter48 = \".\";\n    std::string delimiter49 = \".?!\";\n    std::string\
    \ delimiter50 = \".\";\n    std::string delimiter51 = \".?!\";\n    std::string\
    \ delimiter52 = \".\";\n    std::string delimiter53 = \".?!\";\n    std::string\
    \ delimiter54 = \".\";\n    std::string delimiter55 = \".?!", "    long boredoms\
    \ = 0;\n    std::string word;\n    for(int i = 0; i < S.size(); i++) {\n     \
    \   if(S[i] == '.') {\n            boredoms += 1;\n        }\n        if(S[i]\
    \ == '?') {\n            boredoms += 1;\n        }\n        if(S[i] == '!') {\n\
    \            boredoms += 1;\n        }\n        if(S[i] == 'I') {\n          \
    \  boredoms += 1;\n        }\n    }\n    return boredoms;", "    int boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    std::string\
    \ delimiter = \",\";\n    std::string delimiter1 = \"I\";\n    std::string delimiter2\
    \ = \"the\";\n    std::string delimiter3 = \"a\";\n    std::string delimiter4\
    \ = \"bore\";\n    std::string delimiter5 = \"of\";\n    std::string delimiter6\
    \ = \"the\";\n    std::string delimiter7 = \"sky\";\n    std::string delimiter8\
    \ = \"is\";\n    std::string delimiter9 = \"blue\";\n    std::string delimiter10\
    \ = \"the\";\n    std::string delimiter11 = \"sun\";\n    std::string delimiter12\
    \ = \"is\";\n    std::string delimiter13 = \"shining\";\n    std::string delimiter14\
    \ = \"I\";\n    std::string delimiter15 = \"love\";\n    std::string delimiter16\
    \ = \"this\";\n    std::string delimiter17 = \"weather\";\n    std::string delimiter18\
    \ = \".\";\n    std::string delimiter19 = \".\";\n    std::string delimiter20\
    \ = \".\";\n    std::string delimiter21 = \"!\";\n    std::string delimiter22\
    \ = \".\";\n    std::string delimiter23 = \".\";\n    std::string delimiter24\
    \ = \".\";\n    std::string delimiter25 = \".\";\n    std::string delimiter26\
    \ = \".\";\n    std::string delimiter27 = \".\";\n    std::string delimiter28\
    \ = \".\";\n    std::string delimiter29 = \".\";\n    std::string delimiter30\
    \ = \".\";\n    std::string delimiter31 = \".\";\n    std::string delimiter32\
    \ = \".\";\n    std::string delimiter33 = \".\";\n    std::string delimiter34\
    \ = \".\";\n    std::string delimiter35 = \".\";\n    std::string delimiter36\
    \ = \".\";\n    std::string delimiter37 = \".\";\n    std::string delimiter38\
    \ = \".\";\n    std::string delimiter39 = \".\";\n    std::string delimiter40\
    \ = \".\";\n    std::string delimiter41 = \".\";\n    std::string delimiter42\
    \ = \".\";\n    std::string delimiter43 = \".\";\n    std::string delimiter44\
    \ = \".\";\n    std::string delimiter45 = \".\";\n    std::string delimiter46\
    \ = \".\";\n    std::string delimiter47 = \".\";\n    std::string delimiter48\
    \ = \".\";\n    std::string delimiter49 = \".\";\n    std::string delimiter50\
    \ = \".\";\n    std::string delimiter51 = \".\";\n    std::string delimiter52\
    \ = \".\";\n    std::string delimiter53 = \".\";\n    std::string delimiter54\
    \ = \".\";\n    std::string delimiter55 = \".\";\n    std::string delimiter56\
    \ = \".\";\n    std::string delimiter57 = \".\";\n    std::string delimiter58\
    \ = \".\";\n    std::string delimiter59 = \".\";\n    std::string delimiter60\
    \ = \".\";\n    ", "    // Write your code here\n    long boredoms = 0;\n    for(int\
    \ i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;", " \
    \   long boredoms = 0;\n    std::string word;\n    for (auto &c : S) {\n     \
    \   if (c == '.' || c == '?' || c == '!') {\n            boredoms += 1;\n    \
    \    }\n        if (c == ' ') {\n            word = \"\";\n        }\n       \
    \ else {\n            word += c;\n        }\n    }\n    if (boredoms == 0) {\n\
    \        boredoms = 1;\n    }\n    if (word == \"I\") {\n        boredoms += 1;\n\
    \    }\n    return boredoms;", "    // Write your code here\n    long boredoms\
    \ = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n   \
    \         boredoms += 1;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    std::string\
    \ delimiters_lower = \".?!\";\n    std::string delimiters_upper = \".?!\";\n \
    \   std::string delimiters_caps = \"...!\";\n    std::string delimiters_caps_lower\
    \ = \"...!\";\n    std::string delimiters_caps_upper = \"...!\";\n    std::string\
    \ delimiters_caps_all = \"...!\";\n    std::string delimiters_caps_all_lower =\
    \ \"...!\";\n    std::string delimiters_caps_all_upper = \"...!\";\n    std::string\
    \ delimiters_caps_all_all = \"...!\";\n    std::string delimiters_caps_all_all_lower\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_upper = \"...!\";\n   \
    \ std::string delimiters_caps_all_all_all = \"...!\";\n    std::string delimiters_caps_all_all_all_lower\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_upper = \"...!\";\n\
    \    std::string delimiters_caps_all_all_all_all = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_lower = \"...!\";\n    std::string delimiters_caps_all_all_all_all_upper\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all = \"...!\"\
    ;\n    std::string delimiters_caps_all_all_all_all_all_lower = \"...!\";\n   \
    \ std::string delimiters_caps_all_all_all_all_all_upper = \"...!\";\n    std::string\
    \ delimiters_caps_all_all_all_all_all_all = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_lower\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_upper =\
    \ \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all = \"\
    ...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all_lower = \"\
    ...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all_upper = \"\
    ...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all_all = \"\
    ...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all_all_lower\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all_all_upper\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all_all_all\
    \ = \"...!\";\n    std::string delimiters_caps_all_all_all_all_all_all_all_all_all_lower\
    \ = \"...!\";\n    std::string delimiters_caps_", "    long boredoms = 0;\n  \
    \  std::string word;\n    std::string delimiters = \".?!\";\n    std::string temp;\n\
    \    size_t pos = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t a = 0;\n    size_t b = 0;\n    size_t c = 0;\n\
    \    size_t d = 0;\n    size_t e = 0;\n    size_t f = 0;\n    size_t g = 0;\n\
    \    size_t h = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t a = 0;\n    size_t ", "    // Write your code here\n\
    \    long boredoms = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i]\
    \ == 'I'){\n            boredoms += 1;\n        }\n    }\n    return boredoms;",
  "    // Write your code here\n    long count = 0;\n    for(int i = 0; i < S.size();\
    \ i++){\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!'){\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_", "    // Write your code here\n    long boredom = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i] == '.'){\n  \
    \          boredom++;\n        }\n        if(S[i] == '?'){\n            boredom++;\n\
    \        }\n        if(S[i] == '!'){\n            boredom++;\n        }\n    }\n\
    \    return boredom;", "    long count = 0;\n    std::string word;\n    std::string\
    \ boredom;\n    std::string delimiter = \".?!\";\n    std::string delimiter2 =\
    \ \".\";\n    std::string delimiter3 = \"?\";\n    std::string delimiter4 = \"\
    !\";\n    std::string delimiter5 = \".?!\";\n    std::string delimiter6 = \".\"\
    ;\n    std::string delimiter7 = \"?\";\n    std::string delimiter8 = \"!\";\n\
    \    std::string delimiter9 = \".?!\";\n    std::string delimiter10 = \".\";\n\
    \    std::string delimiter11 = \"?\";\n    std::string delimiter12 = \"!\";\n\
    \    std::string delimiter13 = \".?!\";\n    std::string delimiter14 = \".\";\n\
    \    std::string delimiter15 = \"?\";\n    std::string delimiter16 = \"!\";\n\
    \    std::string delimiter17 = \".?!\";\n    std::string delimiter18 = \".\";\n\
    \    std::string delimiter19 = \"?\";\n    std::string delimiter20 = \"!\";\n\
    \    std::string delimiter21 = \".?!\";\n    std::string delimiter22 = \".\";\n\
    \    std::string delimiter23 = \"?\";\n    std::string delimiter24 = \"!\";\n\
    \    std::string delimiter25 = \".?!\";\n    std::string delimiter26 = \".\";\n\
    \    std::string delimiter27 = \"?\";\n    std::string delimiter28 = \"!\";\n\
    \    std::string delimiter29 = \".?!\";\n    std::string delimiter30 = \".\";\n\
    \    std::string delimiter31 = \"?\";\n    std::string delimiter32 = \"!\";\n\
    \    std::string delimiter33 = \".?!\";\n    std::string delimiter34 = \".\";\n\
    \    std::string delimiter35 = \"?\";\n    std::string delimiter36 = \"!\";\n\
    \    std::string delimiter37 = \".?!\";\n    std::string delimiter38 = \".\";\n\
    \    std::string delimiter39 = \"?\";\n    std::string delimiter40 = \"!\";\n\
    \    std::string delimiter41 = \".?!\";\n    std::string delimiter42 = \".\";\n\
    \    std::string delimiter43 = \"?\";\n    std::string delimiter44 = \"!\";\n\
    \    std::string delimiter45 = \".?!\";\n    std::string delimiter46 = \".\";\n\
    \    std::string delimiter47 = \"?\";\n    std::string delimiter48 = \"!\";\n\
    \    std::string delimiter49 = \".?!\";\n    std::string delimiter50 = \".\";\n\
    \    std::string delimiter51 = \"?\";\n    std::string delimiter52 = \"!\";\n\
    \    std::string delimiter53 = \".?!\";\n    std::string delimiter54 = \".\";\n\
    \    std::string delimiter55 = \"?\";\n    std::string delimiter56 = \"!\";\n\
    \    std::string delimiter57 = \".?!\";\n    std::string delimiter58 = \".\";\n\
    \    ", "    long boredoms = 0;\n    std::string word;\n    std::string boredom;\n\
    \    std::string delimiter = \".?!\";\n    std::string delimiter2 = \".?!\";\n\
    \    std::string delimiter3 = \".?!\";\n    std::string delimiter4 = \".?!\";\n\
    \    std::string delimiter5 = \".?!\";\n    std::string delimiter6 = \".?!\";\n\
    \    std::string delimiter7 = \".?!\";\n    std::string delimiter8 = \".?!\";\n\
    \    std::string delimiter9 = \".?!\";\n    std::string delimiter10 = \".?!\"\
    ;\n    std::string delimiter11 = \".?!\";\n    std::string delimiter12 = \".?!\"\
    ;\n    std::string delimiter13 = \".?!\";\n    std::string delimiter14 = \".?!\"\
    ;\n    std::string delimiter15 = \".?!\";\n    std::string delimiter16 = \".?!\"\
    ;\n    std::string delimiter17 = \".?!\";\n    std::string delimiter18 = \".?!\"\
    ;\n    std::string delimiter19 = \".?!\";\n    std::string delimiter20 = \".?!\"\
    ;\n    std::string delimiter21 = \".?!\";\n    std::string delimiter22 = \".?!\"\
    ;\n    std::string delimiter23 = \".?!\";\n    std::string delimiter24 = \".?!\"\
    ;\n    std::string delimiter25 = \".?!\";\n    std::string delimiter26 = \".?!\"\
    ;\n    std::string delimiter27 = \".?!\";\n    std::string delimiter28 = \".?!\"\
    ;\n    std::string delimiter29 = \".?!\";\n    std::string delimiter30 = \".?!\"\
    ;\n    std::string delimiter31 = \".?!\";\n    std::string delimiter32 = \".?!\"\
    ;\n    std::string delimiter33 = \".?!\";\n    std::string delimiter34 = \".?!\"\
    ;\n    std::string delimiter35 = \".?!\";\n    std::string delimiter36 = \".?!\"\
    ;\n    std::string delimiter37 = \".?!\";\n    std::string delimiter38 = \".?!\"\
    ;\n    std::string delimiter39 = \".?!\";\n    std::string delimiter40 = \".?!\"\
    ;\n    std::string delimiter41 = \".?!\";\n    std::string delimiter42 = \".?!\"\
    ;\n    std::string delimiter43 = \".?!\";\n    std::string delimiter44 = \".?!\"\
    ;\n    std::string delimiter45 = \".?!\";\n    std::string delimiter46 = \".?!\"\
    ;\n    std::string delimiter47 = \".?!\";\n    std::string delimiter48 = \".?!\"\
    ;\n    std::string delimiter49 = \".?!\";\n    std::string delimiter50", "   \
    \ long boredoms = 0;\n    std::string word;\n    for (auto &i : S) {\n       \
    \ if (i == '.' || i == '?' || i == '!') {\n            boredoms += 1;\n      \
    \  }\n        word = i;\n    }\n    return boredoms;", "    // Write your code\
    \ here\n    long boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n    \
    \    if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredoms +=\
    \ 1;\n        }\n    }\n    return boredoms;", "    // Write your code here\n\
    \    long boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n        if(S[i]\
    \ == 'I'){\n            boredom++;\n        }\n    }\n    return boredom;", " \
    \   long boredoms = 0;\n    std::string word;\n    std::string boredom_word;\n\
    \    std::string boredom_word_2;\n    std::string boredom_word_3;\n    std::string\
    \ boredom_word_4;\n    std::string boredom_word_5;\n    std::string boredom_word_6;\n\
    \    std::string boredom_word_7;\n    std::string boredom_word_8;\n    std::string\
    \ boredom_word_9;\n    std::string boredom_word_10;\n    std::string boredom_word_11;\n\
    \    std::string boredom_word_12;\n    std::string boredom_word_13;\n    std::string\
    \ boredom_word_14;\n    std::string boredom_word_15;\n    std::string boredom_word_16;\n\
    \    std::string boredom_word_17;\n    std::string boredom_word_18;\n    std::string\
    \ boredom_word_19;\n    std::string boredom_word_20;\n    std::string boredom_word_21;\n\
    \    std::string boredom_word_22;\n    std::string boredom_word_23;\n    std::string\
    \ boredom_word_24;\n    std::string boredom_word_25;\n    std::string boredom_word_26;\n\
    \    std::string boredom_word_27;\n    std::string boredom_word_28;\n    std::string\
    \ boredom_word_29;\n    std::string boredom_word_30;\n    std::string boredom_word_31;\n\
    \    std::string boredom_word_32;\n    std::string boredom_word_33;\n    std::string\
    \ boredom_word_34;\n    std::string boredom_word_35;\n    std::string boredom_word_36;\n\
    \    std::string boredom_word_37;\n    std::string boredom_word_38;\n    std::string\
    \ boredom_word_39;\n    std::string boredom_word_40;\n    std::string boredom_word_41;\n\
    \    std::string boredom_word_42;\n    std::string boredom_word_43;\n    std::string\
    \ boredom_word_44;\n    std::string boredom_word_45;\n    std::string boredom_word_46;\n\
    \    std::string boredom_word_47;\n    std::string boredom_word_48;\n    std::string\
    \ boredom_word_49;\n    std::string boredom_word_50;\n    std::string boredom_word_51;\n\
    \    std::string boredom_word_52;\n    std::string boredom_word_53;\n    std::string\
    \ boredom_word_54;\n    std::string boredom_word_55;\n    std::string boredom_word_56;\n\
    \    std::string boredom_word_57;\n    std::string boredom_word_", "    // Write\
    \ your code here\n    long boredom = 0;\n    for(int i = 0; i < S.size(); i++){\n\
    \        if(S[i] == 'I'){\n            boredom++;\n        }\n    }\n    return\
    \ boredom;", "    // Write your code here\n    long boredom = 0;\n    for(int\
    \ i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n            boredom++;\n\
    \        }\n    }\n    return boredom;", "    int boredoms = 0;\n    for(int i\
    \ = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;", " \
    \   long boredoms = 0;\n    std::string word;\n    std::string boredom_word =\
    \ \"I\";\n    std::string delimiter = \".,?!\";\n    std::string delimiter2 =\
    \ \".,?!\";\n    std::string delimiter3 = \".,?!\";\n    std::string delimiter4\
    \ = \".,?!\";\n    std::string delimiter5 = \".,?!\";\n    std::string delimiter6\
    \ = \".,?!\";\n    std::string delimiter7 = \".,?!\";\n    std::string delimiter8\
    \ = \".,?!\";\n    std::string delimiter9 = \".,?!\";\n    std::string delimiter10\
    \ = \".,?!\";\n    std::string delimiter11 = \".,?!\";\n    std::string delimiter12\
    \ = \".,?!\";\n    std::string delimiter13 = \".,?!\";\n    std::string delimiter14\
    \ = \".,?!\";\n    std::string delimiter15 = \".,?!\";\n    std::string delimiter16\
    \ = \".,?!\";\n    std::string delimiter17 = \".,?!\";\n    std::string delimiter18\
    \ = \".,?!\";\n    std::string delimiter19 = \".,?!\";\n    std::string delimiter20\
    \ = \".,?!\";\n    std::string delimiter21 = \".,?!\";\n    std::string delimiter22\
    \ = \".,?!\";\n    std::string delimiter23 = \".,?!\";\n    std::string delimiter24\
    \ = \".,?!\";\n    std::string delimiter25 = \".,?!\";\n    std::string delimiter26\
    \ = \".,?!\";\n    std::string delimiter27 = \".,?!\";\n    std::string delimiter28\
    \ = \".,?!\";\n    std::string delimiter29 = \".,?!\";\n    std::string delimiter30\
    \ = \".,?!\";\n    std::string delimiter31 = \".,?!\";\n    std::string delimiter32\
    \ = \".,?!\";\n    std::string delimiter33 = \".,?!\";\n    std::string delimiter34\
    \ = \".,?!\";\n    std::string delimiter35 = \".,?!\";\n    std::string delimiter36\
    \ = \".,?!\";\n    std::string delimiter37 = \".,?!\";\n    std::string delimiter38\
    \ = \".,?!\";\n    std::string delimiter39 = \".,?!\";\n    std::string delimiter40\
    \ = \".,?!\";\n    std::string delimiter41 = \".,?!\";\n    std::string delimiter42\
    \ = \".,?!\";\n    std::string delimiter43 = \".,?!\";\n    std::string delimiter44\
    \ = \".,?!\";\n    std::string delimiter45 = \".,", "    long boredoms = 0;\n\
    \    std::string word;\n    std::string delimiters = \".?!\";\n    std::string\
    \ delimiter = \",\";\n    std::string temp;\n    std::string temp2;\n    std::string\
    \ temp3;\n    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n\
    \    std::string temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string\
    \ temp10;\n    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n\
    \    std::string temp14;\n    std::string temp15;\n    std::string temp16;\n \
    \   std::string temp17;\n    std::string temp18;\n    std::string temp19;\n  \
    \  std::string temp20;\n    std::string temp21;\n    std::string temp22;\n   \
    \ std::string temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string\
    \ temp26;\n    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n\
    \    std::string temp30;\n    std::string temp31;\n    std::string temp32;\n \
    \   std::string temp33;\n    std::string temp34;\n    std::string temp35;\n  \
    \  std::string temp36;\n    std::string temp37;\n    std::string temp38;\n   \
    \ std::string temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string\
    \ temp42;\n    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n\
    \    std::string temp46;\n    std::string temp47;\n    std::string temp48;\n \
    \   std::string temp49;\n    std::string temp50;\n    std::string temp51;\n  \
    \  std::string temp52;\n    std::string temp53;\n    std::string temp54;\n   \
    \ std::string temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string\
    \ temp58;\n    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n\
    \    std::string temp62;\n    std::string temp63;\n    std::string temp64;\n \
    \   std::string temp65;\n    std::string temp66;\n    std::string temp67;\n  \
    \  std::string temp68;\n    std::string temp69;\n    std::string temp70;\n   \
    \ std::string temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string\
    \ temp74;\n    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n\
    \    std::string temp78;\n    std::string temp79;\n    std::string temp80;\n \
    \   std::string temp81;\n    std::string temp82;\n    std::string temp83;\n  \
    \  std::string temp84;\n", "    // Write your code here\n    long boredom = 0;\n\
    \    for(int i = 0; i < S.size(); i++){\n        if(S[i] == 'I'){\n          \
    \  boredom++;\n        }\n    }\n    return boredom;", "    long count = 0;\n\
    \    std::string word;\n    for (auto &c : S) {\n        if (c == '.' || c ==\
    \ '?' || c == '!') {\n            count++;\n        }\n    }\n    return count;",
  "    long boredoms = 0;\n    std::string word;\n    std::string sentence;\n    std::string\
    \ delimiter = \".?!\";\n    size_t pos = 0;\n    size_t i = 0;\n    size_t j =\
    \ 0;\n    size_t k = 0;\n    size_t l = 0;\n    size_t m = 0;\n    size_t n =\
    \ 0;\n    size_t o = 0;\n    size_t p = 0;\n    size_t q = 0;\n    size_t r =\
    \ 0;\n    size_t s = 0;\n    size_t t = 0;\n    size_t u = 0;\n    size_t v =\
    \ 0;\n    size_t w = 0;\n    size_t x = 0;\n    size_t y = 0;\n    size_t z =\
    \ 0;\n    size_t A = 0;\n    size_t B = 0;\n    size_t C = 0;\n    size_t D =\
    \ 0;\n    size_t E = 0;\n    size_t F = 0;\n    size_t G = 0;\n    size_t H =\
    \ 0;\n    size_t I = 0;\n    size_t J = 0;\n    size_t K = 0;\n    size_t L =\
    \ 0;\n    size_t M = 0;\n    size_t N = 0;\n    size_t O = 0;\n    size_t P =\
    \ 0;\n    size_t Q = 0;\n    size_t R = 0;\n    size_t S = 0;\n    size_t T =\
    \ 0;\n    size_t U = 0;\n    size_t V = 0;\n    size_t W = 0;\n    size_t X =\
    \ 0;\n    size_t Y = 0;\n    size_t Z = 0;\n    size_t a = 0;\n    size_t b =\
    \ 0;\n    size_t c = 0;\n    size_t d = 0;\n    size_t e = 0;\n    size_t f =\
    \ 0;\n    size_t g = 0;\n    size_t h = 0;\n    size_t i = 0;\n    size_t j =\
    \ 0;\n    size_t k = 0;\n    size_t l = 0;\n    size_t m = 0;\n    size_t n =\
    \ 0;\n    size_t o = 0;\n    size_t p = 0;\n    size_t q = 0;\n    size_t r =\
    \ 0;\n    size_t s = 0;\n    size_t t = 0;\n    size_t u = 0;\n    size_t v =\
    \ 0;\n    size_t w = 0;\n    size_t x = 0;\n    size_t y = 0;\n    size_t z =\
    \ 0;\n    size_t A = 0;\n    size_t B = 0;\n    size_t C = 0;\n    size_t D =\
    \ 0;\n    size_t E = 0;\n    size_t F = 0;\n    size_t G = 0;\n    size_t H =\
    \ 0;\n    size_t I = 0;\n    size_t J = 0;\n    size_t K = 0;\n    size_t L =\
    \ 0;\n    size_t M = 0;\n    size_t N = 0;\n    size_t O = 0;\n    size_t P =\
    \ 0;\n    size_t Q = 0;\n    size_t R = 0;\n    size_t S = 0;\n    size_t T =\
    \ 0;\n    size_t U = 0;\n    size_t V = 0;\n    size_t W = 0;\n    size_t X =\
    \ 0;\n    size_t Y = 0;\n    size_t Z = 0;\n    size_t a = 0;\n    size_t ", " \
    \   long boredoms = 0;\n    std::string word;\n    std::string boredom_word;\n\
    \    std::string boredom_word_2;\n    std::string boredom_word_3;\n    std::string\
    \ boredom_word_4;\n    std::string boredom_word_5;\n    std::string boredom_word_6;\n\
    \    std::string boredom_word_7;\n    std::string boredom_word_8;\n    std::string\
    \ boredom_word_9;\n    std::string boredom_word_10;\n    std::string boredom_word_11;\n\
    \    std::string boredom_word_12;\n    std::string boredom_word_13;\n    std::string\
    \ boredom_word_14;\n    std::string boredom_word_15;\n    std::string boredom_word_16;\n\
    \    std::string boredom_word_17;\n    std::string boredom_word_18;\n    std::string\
    \ boredom_word_19;\n    std::string boredom_word_20;\n    std::string boredom_word_21;\n\
    \    std::string boredom_word_22;\n    std::string boredom_word_23;\n    std::string\
    \ boredom_word_24;\n    std::string boredom_word_25;\n    std::string boredom_word_26;\n\
    \    std::string boredom_word_27;\n    std::string boredom_word_28;\n    std::string\
    \ boredom_word_29;\n    std::string boredom_word_30;\n    std::string boredom_word_31;\n\
    \    std::string boredom_word_32;\n    std::string boredom_word_33;\n    std::string\
    \ boredom_word_34;\n    std::string boredom_word_35;\n    std::string boredom_word_36;\n\
    \    std::string boredom_word_37;\n    std::string boredom_word_38;\n    std::string\
    \ boredom_word_39;\n    std::string boredom_word_40;\n    std::string boredom_word_41;\n\
    \    std::string boredom_word_42;\n    std::string boredom_word_43;\n    std::string\
    \ boredom_word_44;\n    std::string boredom_word_45;\n    std::string boredom_word_46;\n\
    \    std::string boredom_word_47;\n    std::string boredom_word_48;\n    std::string\
    \ boredom_word_49;\n    std::string boredom_word_50;\n    std::string boredom_word_51;\n\
    \    std::string boredom_word_52;\n    std::string boredom_word_53;\n    std::string\
    \ boredom_word_54;\n    std::string boredom_word_55;\n    std::string boredom_word_56;\n\
    \    std::string boredom_word_57;\n    std::string boredom_word_", "    long ans\
    \ = 0;\n    std::string temp;\n    temp = S;\n    for(int i = 0; i < S.size();\
    \ i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n          \
    \  ans += 1;\n        }\n    }\n    return ans;", "    // Write your code here\n\
    \    long count = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i]\
    \ == '.' || S[i] == '?' || S[i] == '!') {\n            count++;\n        }\n \
    \   }\n    return count;", "    long boredoms = 0;\n    std::string word;\n  \
    \  std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_", "    // Write your code here\n    long count = 0;\n    for(int\
    \ i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::string word;\n    for (auto &c : S) {\n        if (c\
    \ == '.' || c == '?' || c == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;", "    int boredoms = 0;\n    for(int i = 0; i < S.size();\
    \ i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n          \
    \  boredoms++;\n        }\n    }\n    return boredoms;", "    long boredoms =\
    \ 0;\n    std::string word;\n    std::string boredom;\n    std::string delimiter\
    \ = \".?!\";\n    std::string delimiter2 = \".\";\n    std::string delimiter3\
    \ = \"?\";\n    std::string delimiter4 = \"!\";\n    std::string delimiter5 =\
    \ \".\";\n    std::string delimiter6 = \"?\";\n    std::string delimiter7 = \"\
    !\";\n    std::string delimiter8 = \".\";\n    std::string delimiter9 = \"?\"\
    ;\n    std::string delimiter10 = \"!\";\n    std::string delimiter11 = \".\";\n\
    \    std::string delimiter12 = \"?\";\n    std::string delimiter13 = \"!\";\n\
    \    std::string delimiter14 = \".\";\n    std::string delimiter15 = \"?\";\n\
    \    std::string delimiter16 = \"!\";\n    std::string delimiter17 = \".\";\n\
    \    std::string delimiter18 = \"?\";\n    std::string delimiter19 = \"!\";\n\
    \    std::string delimiter20 = \".\";\n    std::string delimiter21 = \"?\";\n\
    \    std::string delimiter22 = \"!\";\n    std::string delimiter23 = \".\";\n\
    \    std::string delimiter24 = \"?\";\n    std::string delimiter25 = \"!\";\n\
    \    std::string delimiter26 = \".\";\n    std::string delimiter27 = \"?\";\n\
    \    std::string delimiter28 = \"!\";\n    std::string delimiter29 = \".\";\n\
    \    std::string delimiter30 = \"?\";\n    std::string delimiter31 = \"!\";\n\
    \    std::string delimiter32 = \".\";\n    std::string delimiter33 = \"?\";\n\
    \    std::string delimiter34 = \"!\";\n    std::string delimiter35 = \".\";\n\
    \    std::string delimiter36 = \"?\";\n    std::string delimiter37 = \"!\";\n\
    \    std::string delimiter38 = \".\";\n    std::string delimiter39 = \"?\";\n\
    \    std::string delimiter40 = \"!\";\n    std::string delimiter41 = \"!\";\n\
    \    std::string delimiter42 = \".\";\n    std::string delimiter43 = \"?\";\n\
    \    std::string delimiter44 = \"!\";\n    std::string delimiter45 = \".\";\n\
    \    std::string delimiter46 = \"?\";\n    std::string delimiter47 = \"!\";\n\
    \    std::string delimiter48 = \".\";\n    std::string delimiter49 = \"?\";\n\
    \    std::string delimiter50 = \"!\";\n    std::string delimiter51 = \"!\";\n\
    \    std::string delimiter52 = \".\";\n    std::string delimiter53 = \"?\";\n\
    \    std::string delimiter54 = \"!\";\n    std::string delimiter55 = \".\";\n\
    \    std::string delimiter56 = \"?\";\n    std::string delimiter57 = \"!\";\n\
    \    std::string delimiter58 = \".\";\n    std::string delimiter59 = \"?\";\n\
    \    std::string delimiter60 = \"!\";\n    std::string delimiter61 = \"!\";",
  "    int count = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] ==\
    \ '.' || S[i] == '?' || S[i] == '!') {\n            count++;\n        }\n    }\n\
    \    return count;", "    int count = 0;\n    for(int i = 0; i < S.size(); i++)\
    \ {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::string\
    \ word;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.') {\n\
    \            boredoms += 1;\n            word = S.substr(i, S.size() - i);\n \
    \           i = S.size() - 1;\n        }\n        else if(S[i] == '?') {\n   \
    \         boredoms += 1;\n            word = S.substr(i, S.size() - i);\n    \
    \        i = S.size() - 1;\n        }\n        else if(S[i] == '!') {\n      \
    \      boredoms += 1;\n            word = S.substr(i, S.size() - i);\n       \
    \     i = S.size() - 1;\n        }\n        else {\n            word = S[i];\n\
    \        }\n        if(word == \"I\") {\n            boredoms += 1;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size(); i++)\
    \ {\n        word = S[i];\n        if (word.compare(0, 2, \"I\") == 0) {\n   \
    \         boredoms++;\n        }\n    }\n    return boredoms;", "    int boredoms\
    \ = 0;\n    int i = 0;\n    while (i < S.size()) {\n        if (S[i] == '.' ||\
    \ S[i] == '?' || S[i] == '!') {\n            boredoms += 1;\n        }\n     \
    \   i += 1;\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiter = delimiters[0];\n\
    \    size_t pos = 0;\n    size_t count = 0;\n    while(pos < S.size()) {\n   \
    \     pos = S.find(delimiter, pos);\n        if(pos == std::string::npos) {\n\
    \            word = S.substr(pos);\n            pos = S.size();\n        } else\
    \ {\n            word = S.substr(pos, pos-pos-1);\n            pos = pos + 1;\n\
    \        }\n        std::transform(word.begin(), word.end(), word.begin(), ::tolower);\n\
    \        if(word == \"i\") {\n            boredoms += 1;\n        }\n    }\n \
    \   return boredoms;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiter = \",\";\n    std::string temp;\n\
    \    std::string temp2;\n    std::string temp3;\n    std::string temp4;\n    std::string\
    \ temp5;\n    std::string temp6;\n    std::string temp7;\n    std::string temp8;\n\
    \    std::string temp9;\n    std::string temp10;\n    std::string temp11;\n  \
    \  std::string temp12;\n    std::string temp13;\n    std::string temp14;\n   \
    \ std::string temp15;\n    std::string temp16;\n    std::string temp17;\n    std::string\
    \ temp18;\n    std::string temp19;\n    std::string temp20;\n    std::string temp21;\n\
    \    std::string temp22;\n    std::string temp23;\n    std::string temp24;\n \
    \   std::string temp25;\n    std::string temp26;\n    std::string temp27;\n  \
    \  std::string temp28;\n    std::string temp29;\n    std::string temp30;\n   \
    \ std::string temp31;\n    std::string temp32;\n    std::string temp33;\n    std::string\
    \ temp34;\n    std::string temp35;\n    std::string temp36;\n    std::string temp37;\n\
    \    std::string temp38;\n    std::string temp39;\n    std::string temp40;\n \
    \   std::string temp41;\n    std::string temp42;\n    std::string temp43;\n  \
    \  std::string temp44;\n    std::string temp45;\n    std::string temp46;\n   \
    \ std::string temp47;\n    std::string temp48;\n    std::string temp49;\n    std::string\
    \ temp50;\n    std::string temp51;\n    std::string temp52;\n    std::string temp53;\n\
    \    std::string temp54;\n    std::string temp55;\n    std::string temp56;\n \
    \   std::string temp57;\n    std::string temp58;\n    std::string temp59;\n  \
    \  std::string temp60;\n    std::string temp61;\n    std::string temp62;\n   \
    \ std::string temp63;\n    std::string temp64;\n    std::string temp65;\n    std::string\
    \ temp66;\n    std::string temp67;\n    std::string temp68;\n    std::string temp69;\n\
    \    std::string temp70;\n    std::string temp71;\n    std::string temp72;\n \
    \   std::string temp73;\n    std::string temp74;\n    std::string temp75;\n  \
    \  std::string temp76;\n    std::string temp77;\n    std::string temp78;\n   \
    \ std::string temp79;\n    std::string temp80;\n    std::string temp81;\n    std::string\
    \ temp82;\n    std::string temp83;\n    std::string temp84;\n", "    int boredom\
    \ = 0;\n    for(int i = 0; i < S.length(); i++) {\n        if(S[i] == '.' || S[i]\
    \ == '?' || S[i] == '!') {\n            boredom++;\n        }\n    }\n    return\
    \ boredom;", "    long boredoms = 0;\n    std::string word;\n    std::string delimiters\
    \ = \".?!\";\n    std::string::size_type pos;\n    pos = S.find_first_of(delimiters);\n\
    \    while (pos != std::string::npos) {\n        word = S.substr(0, pos);\n  \
    \      if (word == \"I\") {\n            boredoms += 1;\n        }\n        S\
    \ = S.substr(pos + 1);\n        pos = S.find_first_of(delimiters);\n    }\n  \
    \  return boredoms;", "    int count = 0;\n    for(int i = 0; i < S.size(); i++)\
    \ {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            count++;\n\
    \        }\n    }\n    return count;", "    int boredoms = 0;\n    for (int i\
    \ = 0; i < S.size(); i++) {\n        if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;", " \
    \   long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    std::string delimiter = \",\";\n    std::string temp;\n    std::string\
    \ temp2;\n    std::string temp3;\n    std::string temp4;\n    std::string temp5;\n\
    \    std::string temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string\
    \ temp9;\n    std::string temp10;\n    std::string temp11;\n    std::string temp12;\n\
    \    std::string temp13;\n    std::string temp14;\n    std::string temp15;\n \
    \   std::string temp16;\n    std::string temp17;\n    std::string temp18;\n  \
    \  std::string temp19;\n    std::string temp20;\n    std::string temp21;\n   \
    \ std::string temp22;\n    std::string temp23;\n    std::string temp24;\n    std::string\
    \ temp25;\n    std::string temp26;\n    std::string temp27;\n    std::string temp28;\n\
    \    std::string temp29;\n    std::string temp30;\n    std::string temp31;\n \
    \   std::string temp32;\n    std::string temp33;\n    std::string temp34;\n  \
    \  std::string temp35;\n    std::string temp36;\n    std::string temp37;\n   \
    \ std::string temp38;\n    std::string temp39;\n    std::string temp40;\n    std::string\
    \ temp41;\n    std::string temp42;\n    std::string temp43;\n    std::string temp44;\n\
    \    std::string temp45;\n    std::string temp46;\n    std::string temp47;\n \
    \   std::string temp48;\n    std::string temp49;\n    std::string temp50;\n  \
    \  std::string temp51;\n    std::string temp52;\n    std::string temp53;\n   \
    \ std::string temp54;\n    std::string temp55;\n    std::string temp56;\n    std::string\
    \ temp57;\n    std::string temp58;\n    std::string temp59;\n    std::string temp60;\n\
    \    std::string temp61;\n    std::string temp62;\n    std::string temp63;\n \
    \   std::string temp64;\n    std::string temp65;\n    std::string temp66;\n  \
    \  std::string temp67;\n    std::string temp68;\n    std::string temp69;\n   \
    \ std::string temp70;\n    std::string temp71;\n    std::string temp72;\n    std::string\
    \ temp73;\n    std::string temp74;\n    std::string temp75;\n    std::string temp76;\n\
    \    std::string temp77;\n    std::string temp78;\n    std::string temp79;\n \
    \   std::string temp80;\n    std::string temp81;\n    std::string temp82;\n  \
    \  std::string temp83;\n    std::string temp84;\n", "    long boredoms = 0;\n\
    \    std::string word;\n    std::string delimiters = \".?!\";\n    size_t pos\
    \ = 0;\n    size_t count = 0;\n    while(pos < S.size()) {\n        word = S.substr(pos,\
    \ 1);\n        pos = 0;\n        for(size_t i = 0; i < delimiters.size(); i++)\
    \ {\n            if(word.find(delimiters[i]) != std::string::npos) {\n       \
    \         pos = word.find(delimiters[i]);\n                break;\n          \
    \  }\n        }\n        if(pos != std::string::npos) {\n            count++;\n\
    \        }\n    }\n    boredoms = count;\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    size_t\
    \ pos = 0;\n    size_t i = 0;\n    while(pos < S.size()) {\n        word = S.substr(pos,\
    \ 1);\n        pos = 0;\n        for(i = 0; i < delimiters.size(); i++) {\n  \
    \          if(word.find(delimiters[i]) != std::string::npos) {\n             \
    \   pos = word.find(delimiters[i]);\n                break;\n            }\n \
    \       }\n        if(pos != std::string::npos) {\n            boredoms++;\n \
    \       }\n    }\n    return boredoms;", "    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.size()) {\n        if (S[i] == '.') {\n            i++;\n  \
    \          while (i < S.size() && S[i] != '.') {\n                i++;\n     \
    \       }\n            if (i == S.size()) {\n                boredom++;\n    \
    \        }\n        }\n        else if (S[i] == '?') {\n            i++;\n   \
    \         while (i < S.size() && S[i] != '?') {\n                i++;\n      \
    \      }\n            if (i == S.size()) {\n                boredom++;\n     \
    \       }\n        }\n        else if (S[i] == '!') {\n            i++;\n    \
    \        while (i < S.size() && S[i] != '!') {\n                i++;\n       \
    \     }\n            if (i == S.size()) {\n                boredom++;\n      \
    \      }\n        }\n        else {\n            i++;\n        }\n    }\n    return\
    \ boredom;", "    // Write your code here\n    long boredom = 0;\n    for(int\
    \ i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n            boredom++;\n        }\n    }\n    return boredom;", "  \
    \  long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    for (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n  \
    \      for (size_t j = 0; j < delimiters.size(); j++) {\n            if (word.find(delimiters[j])\
    \ != std::string::npos) {\n                boredoms += 1;\n                break;\n\
    \            }\n        }\n    }\n    return boredoms;", "    // Write your code\
    \ here\n    long boredom = 0;\n    for(int i = 0; i < S.length(); i++) {\n   \
    \     if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n\
    \        }\n    }\n    return boredom;", "    // Write your code here\n    long\
    \ boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.'\
    \ || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;", "    // Write your code here\n    long boredoms = 0;\n\
    \    for(int i = 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?'\
    \ || S[i] == '!') {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    // Write your code here\n    long count = 0;\n    for(int i = 0; i < S.size();\
    \ i++){\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!'){\n            count++;\n\
    \        }\n    }\n    return count;", "    int count = 0;\n    for(int i = 0;\
    \ i < S.length(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiters = \".?!\";\n    for\
    \ (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n        for (size_t\
    \ j = 0; j < delimiters.size(); j++) {\n            if (word.find(delimiters[j])\
    \ != std::string::npos) {\n                boredoms += 1;\n                break;\n\
    \            }\n        }\n    }\n    return boredoms;", "    long boredoms =\
    \ 0;\n    std::string word;\n    for (size_t i = 0; i < S.size(); i++) {\n   \
    \     word = S[i];\n        if (word == \"I\") {\n            boredoms += 1;\n\
    \        }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom;\n    std::string delimiter = \" .?!\";\n   \
    \ std::string delimiter2 = \" .?!\";\n    std::string delimiter3 = \" .?!\";\n\
    \    std::string delimiter4 = \" .?!\";\n    std::string delimiter5 = \" .?!\"\
    ;\n    std::string delimiter6 = \" .?!\";\n    std::string delimiter7 = \" .?!\"\
    ;\n    std::string delimiter8 = \" .?!\";\n    std::string delimiter9 = \" .?!\"\
    ;\n    std::string delimiter10 = \" .?!\";\n    std::string delimiter11 = \" .?!\"\
    ;\n    std::string delimiter12 = \" .?!\";\n    std::string delimiter13 = \" .?!\"\
    ;\n    std::string delimiter14 = \" .?!\";\n    std::string delimiter15 = \" .?!\"\
    ;\n    std::string delimiter16 = \" .?!\";\n    std::string delimiter17 = \" .?!\"\
    ;\n    std::string delimiter18 = \" .?!\";\n    std::string delimiter19 = \" .?!\"\
    ;\n    std::string delimiter20 = \" .?!\";\n    std::string delimiter21 = \" .?!\"\
    ;\n    std::string delimiter22 = \" .?!\";\n    std::string delimiter23 = \" .?!\"\
    ;\n    std::string delimiter24 = \" .?!\";\n    std::string delimiter25 = \" .?!\"\
    ;\n    std::string delimiter26 = \" .?!\";\n    std::string delimiter27 = \" .?!\"\
    ;\n    std::string delimiter28 = \" .?!\";\n    std::string delimiter29 = \" .?!\"\
    ;\n    std::string delimiter30 = \" .?!\";\n    std::string delimiter31 = \" .?!\"\
    ;\n    std::string delimiter32 = \" .?!\";\n    std::string delimiter33 = \" .?!\"\
    ;\n    std::string delimiter34 = \" .?!\";\n    std::string delimiter35 = \" .?!\"\
    ;\n    std::string delimiter36 = \" .?!\";\n    std::string delimiter37 = \" .?!\"\
    ;\n    std::string delimiter38 = \" .?!\";\n    std::string delimiter39 = \" .?!\"\
    ;\n    std::string delimiter40 = \" .?!\";\n    std::string delimiter41 = \" .?!\"\
    ;\n    std::string delimiter42 = \" .?!\";\n    std::string delimiter43 = \" .?!\"\
    ;\n    std::string delimiter44 = \" .?!\";\n    std::string delimiter45 = \" .?!\"\
    ;\n    std::string delimiter46 = \" .?!\";", "    long boredoms = 0;\n    std::string\
    \ word;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \".?!\";\n    std::string delimiters_upper = \".?!\";\n    std::string delimiters_mixed\
    \ = \".?!\";\n    std::string delimiters_mixed_upper = \".?!\";\n    std::string\
    \ delimiters_mixed_lower = \".?!\";\n    std::string delimiters_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_upper = \".?!\"\
    ;\n    std::string delimiters_mixed_mixed_mixed_mixed_lower = \".?!\";\n    std::string\
    \ delimiters_mixed_mixed_mixed_mixed_mixed_upper = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_lower\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_mixed_upper\
    \ = \".?!\";\n    std::string delimiters_mixed_mixed_mixed_mixed_mixed_mixed_mixed_",
  "    long boredoms = 0;\n    std::string word;\n    std::string boredom;\n    std::string\
    \ sentence;\n    std::string delimiters = \".?!\";\n    std::string delimiters_lower\
    \ = \"i.e\";\n    std::string delimiters_upper = \"I.E\";\n    std::string delimiters_caps\
    \ = \"I.E\";\n    std::string delimiters_caps_lower = \"i.e\";\n    std::string\
    \ delimiters_caps_upper = \"I.E\";\n    std::string delimiters_caps_lower2 = \"\
    i.E\";\n    std::string delimiters_caps_upper2 = \"I.E\";\n    std::string delimiters_caps_lower3\
    \ = \"i.E\";\n    std::string delimiters_caps_upper3 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower4 = \"i.E\";\n    std::string delimiters_caps_upper4 =\
    \ \"I.E\";\n    std::string delimiters_caps_lower5 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper5 = \"I.E\";\n    std::string delimiters_caps_lower6 =\
    \ \"i.E\";\n    std::string delimiters_caps_upper6 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower7 = \"i.E\";\n    std::string delimiters_caps_upper7 =\
    \ \"I.E\";\n    std::string delimiters_caps_lower8 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper8 = \"I.E\";\n    std::string delimiters_caps_lower9 =\
    \ \"i.E\";\n    std::string delimiters_caps_upper9 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower10 = \"i.E\";\n    std::string delimiters_caps_upper10\
    \ = \"I.E\";\n    std::string delimiters_caps_lower11 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper11 = \"I.E\";\n    std::string delimiters_caps_lower12\
    \ = \"i.E\";\n    std::string delimiters_caps_upper12 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower13 = \"i.E\";\n    std::string delimiters_caps_upper13\
    \ = \"I.E\";\n    std::string delimiters_caps_lower14 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper14 = \"I.E\";\n    std::string delimiters_caps_lower15\
    \ = \"i.E\";\n    std::string delimiters_caps_upper15 = \"I.E\";\n    std::string\
    \ delimiters_caps_lower16 = \"i.E\";\n    std::string delimiters_caps_upper16\
    \ = \"I.E\";\n    std::string delimiters_caps_lower17 = \"i.E\";\n    std::string\
    \ delimiters_caps_upper17 = \"I.E\";\n    std::string delimiters_caps_lower18\
    \ = \"", "    int boredom = 0;\n    int i = 0;\n    while(i < S.size()) {\n  \
    \      if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n\
    \            i++;\n        } else {\n            i++;\n        }\n    }\n    return\
    \ boredom;"]
stop_tokens:
- "\n}"

name: HumanEval_71_triangle_area
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
  \ three sides of a triangle. Return the area of\n// the triangle rounded to 2 decimal\
  \ points if the three sides form a valid triangle. \n// Otherwise return -1\n//\
  \ Three sides make a valid triangle when the sum of any two sides is greater \n\
  // than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n// (6.0)\n\
  // >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long a,\
  \ long b, long c) {\n"
tests: "}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
  \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
  \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
  \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
  \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
  \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
  \ (10)) == (float(-1)));\n}\n"
completions: ["    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area;", "    float s = (a + b + c) / 2;\n  \
    \  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", " \
    \   float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float area = 0.0;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    else {\n        area = -1;\n    }\n    return area;",
  "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;", "    float area = 0.0;\n    if (a + b > c) {\n  \
    \      area = (a * b) / c;\n    }\n    return area;", "    float s = (a + b +\
    \ c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area;", "    float s = (a + b + c) / 2;\n  \
    \  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", " \
    \   float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area;", "    float s = (a+b+c)/2;\n    if (s > a+b+c)\
    \ {\n        return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return round(area,2);", "    float s = (a + b + c) / 2;\n    float area =\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a\
    \ + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n   \
    \ return area;", "    float area;\n    if (a + b > c) {\n        area = (a * b)\
    \ / c;\n    } else {\n        area = -1;\n    }\n    return area;", "    float\
    \ s = (a + b + c) / 2;\n    if (s > 0 && s <= a && s <= b && s <= c) {\n     \
    \   return s * s;\n    }\n    return -1;", "    float s = a + b + c;\n    float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float\
    \ s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "    float s = (a + b + c) / 2;\n    float area = (sqrt(s * (s - a) * (s - b) *\
    \ (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return round(area, 2);", " \
    \   float s = (a+b+c)/2;\n    if (s > a+b+c) return -1;\n    else return s;",
  "    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s =\
    \ 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n   \
    \ float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area =\
    \ 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float\
    \ area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n\
    \    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float s\
    \ = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n \
    \   float s = 0.0;\n    float area = 0.0;\n    float s = 0.0;\n    float area\
    \ = 0.0;\n    float s = 0.0;\n    float area = 0.0;\n    float ", "  assert(a\
    \ >= 0 && b >= 0 && c >= 0);\n  long s = a + b + c;\n  float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n  return area;", "    float s = (a + b + c) / 2;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", " \
    \   float area;\n    long sum = a+b+c;\n    if (sum > 0) {\n        area = (a*b*c)/sum;\n\
    \    } else {\n        area = -1;\n    }\n    return area;", "    float area =\
    \ 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\n    return area;",
  "  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b + c) / 2;\n  float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n  return area;", "  assert(a < b);\n\
    \  assert(b < c);\n  assert(c > a + b);\n  float s = (a + b + c) / 2;\n  float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return area;", "    float s\
    \ = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n    }\n    return sqrt(s*(s-a)*(s-b)*(s-c));",
  "    float area = 0.0f;\n    if (a + b > c) {\n        area = (a * b) / c;\n   \
    \ }\n    return area;", "    float s = (a + b + c) / 2;\n    float area = (sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return\
    \ area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float s = (a + b + c) / 2;\n    if (s > 0 && s <= a) {\n        return s;\n\
    \    }\n    if (s > a && s <= b) {\n        return s;\n    }\n    if (s > b &&\
    \ s <= c) {\n        return s;\n    }\n    return -1;", "    float s = (a + b\
    \ + c) / 2;\n    if (s > 0 && s <= a && s <= b && s <= c) {\n        return s;\n\
    \    }\n    return -1;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "  float s = (a+b+c)/2;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  return round(area,2);", "  assert(a > 0 && b > 0 && c > 0);\n  long s = (a\
    \ + b + c) / 2;\n  long area = (a + b) * (s + c) / 2;\n  return (area > s) ? area\
    \ : -1;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area;", "    float s = (a + b + c) / 2;\n  \
    \  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", " \
    \   float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area;", "    float s = (a+b+c)/2;\n    if (s > a+b+c)\
    \ {\n        return -1;\n    }\n    return sqrt(s*(s-a)*(s-b)*(s-c));", "    float\
    \ s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float area = 0.0;\n \
    \   if (a + b > c) {\n        area = (a * b) / c;\n    } else if (b + c > a) {\n\
    \        area = (b * c) / a;\n    } else {\n        area = -1;\n    }\n    return\
    \ round(area, 2);", "  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b +\
    \ c) / 2;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return area;",
  "  assert(a > 0 && b > 0 && c > 0);\n  float s = a + b + c;\n  float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  return round(area, 2);", "    float s = (a\
    \ + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n   \
    \ return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c) /\
    \ 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\n\
    \    return area;", "    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return\
    \ -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return round(area*100)/100;",
  "    float s = (a + b + c) / 2;\n    float area;\n    if (s > 0 && s <= a && s <=\
    \ b && s <= c) {\n        area = s * s;\n    } else if (s > a && s <= b) {\n \
    \       area = s * b;\n    } else if (s > b && s <= c) {\n        area = s * c;\n\
    \    } else {\n        area = -1;\n    }\n    return round(area, 2);", "  assert(a\
    \ > 0 && b > 0 && c > 0);\n  float s = (a+b+c)/2;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  return (area > 0)? round(area) : -1;", "    float s = (a + b + c) / 2;\n  \
    \  if (s > 0 && s <= a) {\n        return s;\n    }\n    if (s > 0 && s <= b)\
    \ {\n        return s;\n    }\n    if (s > 0 && s <= c) {\n        return s;\n\
    \    }\n    return -1;", "    float area = 0.0f;\n    if (a + b > c) {\n     \
    \   area = (a * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area\
    \ * 100.0) / 100.0;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b +\
    \ c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area;", "    float s = (a+b+c)/2;\n    if (s\
    \ > a+b+c) {\n        return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return round(area*100)/100;", "  assert(a < b);\n  assert(b < c);\n  assert(c\
    \ > 0);\n  long s = a + b + c;\n  float area = s / 2.0f;\n  return area;", " \
    \   float area = 0.0f;\n    if (a + b > c) {\n        area = (a * b) / c;\n  \
    \  }\n    return round(area, 2);", "    float s = (a + b + c) / 2;\n    float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float\
    \ area = 0.0f;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\n   \
    \ return area;", "    float area;\n    if (a + b > c) {\n        area = (a * b)\
    \ / c;\n    } else {\n        area = -1;\n    }\n    return round(area, 2);",
  "    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\n\
    \    return area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c)\
    \ / 2;\n    float area = (sqrt(s * (s - a) * (s - b) * (s - c)) * (s - a) * (s\
    \ - b) * (s - c)) / 2;\n    return round(area, 2);", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float s = (a + b + c) / 2;\n    if (s > 0 && s <= a && s <= b && s <= c) {\n\
    \        return s;\n    }\n    return -1;", "    float s = (a + b + c) / 2;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", " \
    \   float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area;", "    float s = (a + b + c) / 2;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float area;\n\
    \    long sum = a+b+c;\n    if (sum > c) {\n        area = -1;\n    } else {\n\
    \        area = (float)(a*b*c)/(float)sum;\n    }\n    return area;", "    float\
    \ area = 0.0;\n    long sum = a+b+c;\n    if (sum > 0) {\n        area = 0.5 *\
    \ (a + b + c) / sum;\n    }\n    return area;", "    float s = (a + b + c) / 2;\n\
    \    float area;\n    if (s > 0 && s <= a) {\n        area = s * s;\n    } else\
    \ if (s > a && s <= b) {\n        area = s * (s - a);\n    } else if (s > b &&\
    \ s <= c) {\n        area = s * (s - b);\n    } else {\n        area = -1;\n \
    \   }\n    return std::round(area * 100) / 100;", "    float s = (a + b + c) /\
    \ 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float s = (a + b + c) / 2;\n    float area = (sqrt(s * (s - a) * (s - b) *\
    \ (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return round(area, 2);", " \
    \   float area = 0.0f;\n    if (a + b > c) {\n        area = (a * b) / c;\n  \
    \  } else {\n        area = -1;\n    }\n    return round(area, 2);", "    float\
    \ s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area;", "    float area = 0.0f;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    } else if (a + c > b) {\n        area = (b * c) / a;\n \
    \   } else {\n        area = (a * c) / b;\n    }\n    return round(area, 2);",
  "    float s = (a+b+c)/2.0f;\n    float area;\n    if (s > a&&s > b&&s > c) {\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else {\n        area =\
    \ -1;\n    }\n    return area;", "    float s = (a + b + c) / 2;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float s =\
    \ (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;", "    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b)\
    \ / c;\n    }\n    else {\n        area = -1;\n    }\n    return round(area *\
    \ 100.0) / 100.0;", "    float area;\n    if (a + b > c) {\n        area = (a\
    \ * b) / c;\n    } else {\n        area = -1;\n    }\n    return round(area, 2);",
  "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area;", "    float s = a + b + c;\n    float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return round(area, 2);",
  "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;", "    float s = (a + b + c) / 2;\n    float area =\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "  assert(a > 0 &&\
    \ b > 0 && c > 0);\n  float s = (a + b + c) / 2;\n  float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n  return round(area, 2);", "    float s = (a + b +\
    \ c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a+b+c)/2;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;", "    float s\
    \ = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area = -1;\n\
    \    }\n    else {\n        area = (a+b+c)/2;\n    }\n    return area;", "   \
    \ float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;", "    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n\
    \    }\n    if (s == a+b+c) {\n        return 0;\n    }\n    if (s == a+b) {\n\
    \        return 0.5*(b+c);\n    }\n    if (s == b) {\n        return 0.5*(a+c);\n\
    \    }\n    if (s == c) {\n        return 0.5*(a+b);\n    }", "    float area\
    \ = (a+b+c)/2;\n    if (area > 0)\n        return area;\n    else\n        return\
    \ -1;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    if (s > 0)\n        return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    else\n        return -1;", "   \
    \ float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;", "    float s = (a + b + c) / 2;\n    float area =\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float area =\
    \ 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\n    else {\n\
    \        area = -1;\n    }\n    return area;", "    float s = (a + b + c) / 2;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", " \
    \   float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area;", "    float s = (a + b + c) / 2;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float s =\
    \ (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float s = (a + b + c) / 2;\n    float area = (sqrt(s * (s - a) * (s - b) *\
    \ (s - c)) * (s - a) * (s - b) * (s - c)) / 2;\n    return area;", "  assert(a\
    \ >= 0 && b >= 0 && c >= 0);\n  long d = b - a;\n  long e = c - a;\n  long f =\
    \ a + b;\n  long g = a + c;\n  long h = b + c;\n  long s = a + b + c;\n  long\
    \ t = b + c + a;\n  long u = a + c + b;\n  long v = b + c + a;\n  long w = a +\
    \ c + b;\n  long x = b + c + a;\n  long y = a + c + b;\n  long z = a + b + c;\n\
    \  long x1 = b + c + a;\n  long y1 = a + c + b;\n  long z1 = a + b + c;\n  long\
    \ x2 = a + c + b;\n  long y2 = b + c + a;\n  long z2 = a + b + c;\n  long x3 =\
    \ a + b + c;\n  long y3 = b + c + a;\n  long z3 = a + b + c;\n  long x4 = b +\
    \ c + a;\n  long y4 = a + c + b;\n  long z4 = a + b + c;\n  long x5 = a + c +\
    \ b;\n  long y5 = b + c + a;\n  long z5 = a + b + c;\n  long x6 = a + b + c;\n\
    \  long y6 = b + c + a;\n  long z6 = a + b + c;\n  long x7 = a + c + b;\n  long\
    \ y7 = b + c + a;\n  long z7 = a + b + c;\n  long x8 = b + c + a;\n  long y8 =\
    \ a + c + b;\n  long z8 = a + b + c;\n  long x9 = a + b + c;\n  long y9 = b +\
    \ c + a;\n  long z9 = a + b + c;\n  long x10 = b + c + a;\n  long y10 = a + c\
    \ + b;\n  long z10 = a + b + c;\n  long x11 = a + c + b;\n  long y11 = b + c +\
    \ a;\n  long z11 = a + b + c;\n  long x12 = a + b + c;\n  long y12 = b + c + a;\n\
    \  long z12 = a + b + c;\n  long x13 = a + c + b;\n  long y13 = c + a + b;\n \
    \ long z13 = a + b + c;\n  long x14 = a + c + b;\n  long y14 = c + a + b;\n  long\
    \ z14 = a + b + c;\n  long x15 = a + b + c;\n  long y15 = c + a + b;\n  long z15\
    \ = a + b + c;\n  long x16 = a + b + c;\n  ", "    float area = 0.0;\n    float\
    \ s = a + b + c;\n    if (s > 0) {\n        area = (a * b) / s;\n    }\n    return\
    \ round(area, 2);", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;", "    float area = 0.0f;\n    if (a + b > c) {\n        area = (a * b)\
    \ / c;\n    }\n    return area;", "    float s = (a + b + c) / 2;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float s =\
    \ (a + b + c) / 2;\n    if (s > 0 && s <= a && s <= b && s <= c) {\n        return\
    \ s;\n    }\n    return -1;", "    float s = (a + b + c) / 2;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "  assert(a >=\
    \ 0 && b >= 0 && c >= 0);\n  long d = b - a;\n  long e = c - a;\n  long f = d\
    \ - e;\n  long g = a + b + c;\n  long h = g - 2 * a + 2 * b + c;\n  long i = 2\
    \ * a + 2 * b + c;\n  long j = 2 * a + b + c;\n  long k = a + b + c;\n  long l\
    \ = a + b + d;\n  long m = a + c + d;\n  long n = a + c + e;\n  long o = a + d\
    \ + e;\n  long p = a + d + f;\n  long q = a + e + f;\n  long r = a + e + g;\n\
    \  long s = a + f + g;\n  long t = a + f + h;\n  long u = a + g + h;\n  long v\
    \ = a + g + i;\n  long w = a + h + i;\n  long x = a + h + j;\n  long y = a + i\
    \ + j;\n  long z = a + i + k;\n  long a = a + b + c + d + e + f + g + h + i +\
    \ j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z;\n  float\
    \ ans = a / 2;\n  return ans;", "    float s = (a + b + c) / 2;\n    if (s > 0)\
    \ {\n        float area = sqrt(s * (s - a) * (s - b) * (s - c));\n        return\
    \ round(area, 2);\n    }\n    return -1;", "    float s = (a + b + c) / 2;\n \
    \   if (s > 0 && s <= a && s <= b && s <= c) {\n        return s * s;\n    }\n\
    \    return -1;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float area = 0.0;\n \
    \   if (a + b > c) {\n        area = (a * b) / c;\n    }\n    else {\n       \
    \ area = -1;\n    }\n    return area;", "    float s = (a+b+c)/2;\n    float area;\n\
    \    if (s > 0)\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n    else\n       \
    \ area = -1;\n    return area;", "    float s = (a + b + c) / 2;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float area\
    \ = 0.0f;\n    if (a >= b && a >= c) {\n        area = (a * b) / 2.0f;\n    }\
    \ else if (b >= c && b >= a) {\n        area = (b * c) / 2.0f;\n    } else {\n\
    \        area = -1f;\n    }\n    return round(area, 2);", "    float area;\n \
    \   long abc = a + b + c;\n    if (abc > 0)\n        area = (a * b * c) / abc;\n\
    \    else\n        area = -1;\n    return round(area, 2);", "    float s = (a+b+c)/2;\n\
    \    if (s > a+b+c) {\n        return -1;\n    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return round(area,2);", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float area = (a * b) / c;\n    return std::round(area * 100) / 100;", "  assert(a\
    \ >= 0 && b >= 0 && c >= 0);\n  long s = a + b + c;\n  float area = 0.0;\n  if\
    \ (s > 0) {\n    area = sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return\
    \ area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "  assert(a >= 0 && b >= 0\
    \ && c >= 0);\n  float area = (a * b + c) * 0.5;\n  return std::round(area);",
  "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area;", "    float area = 0.0;\n    if (a >\
    \ b + c) {\n        area = (a * b) / c;\n    } else if (b > a + c) {\n       \
    \ area = (b * a) / c;\n    } else {\n        area = (a * c) / b;\n    }\n    return\
    \ round(area, 2);", "    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float area = 0.0;\n    long s = a + b + c;\n    if (s > 0) {\n        area\
    \ = 0.5 * (a + b + c - s);\n    }\n    return area;", "    float s = (a + b +\
    \ c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ area;", "    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    } else {\n        area = -1;\n    }\n    return round(area, 2);", "  assert(a\
    \ >= 0 && b >= 0 && c >= 0);\n  long d = b - a;\n  long e = c - a;\n  long f =\
    \ d - e;\n  long g = e + f;\n  long h = a + b;\n  long i = a + c;\n  long j =\
    \ b + c;\n  long k = a + d;\n  long l = b + d;\n  long m = c + d;\n  long n =\
    \ a + e;\n  long o = b + e;\n  long p = c + e;\n  long q = d + e;\n  long r =\
    \ a + f;\n  long s = b + f;\n  long t = c + f;\n  long u = d + f;\n  long v =\
    \ a + g;\n  long w = b + g;\n  long x = c + g;\n  long y = d + g;\n  long z =\
    \ a + h;\n  long A = b + h;\n  long B = c+ h;\n  long C = d+ h;\n  long D = a+\
    \ i;\n  long E = b+ i;\n  long F = c+ i;\n  long G = d+ i;\n  long H = a+ j;\n\
    \  long I = b+ j;\n  long J = c+ j;\n  long K = d+ j;\n  long L = a+ k;\n  long\
    \ M = b+ k;\n  long N = c+ k;\n  long O = d+ k;\n  long P = a+ l;\n  long Q =\
    \ b+ l;\n  long R = c+ l;\n  long S = d+ l;\n  long T = a + m;\n  long U = b+\
    \ m;\n  long V = c+ m;\n  long W = d+ m;\n  long X = a + n;\n  long Y = b+ n;\n\
    \  long Z = c+ n;\n  long AA = d+ n;\n  long AB = a+ o;\n  long AC = b+ o;\n \
    \ long AD = c+ o;\n  long AE = d+ o;\n  long AF = a+ p;\n  long AG = b+ p;\n \
    \ long AH = c+ p;\n  long AI = d+ p;\n  long AJ = a+ q;\n  long AK = b+ q;\n \
    \ long AL = c+ q;\n  long AM = d+ q;\n  long AN = a+ r;\n  long AO = b+ r;\n \
    \ long AP = c+ r;\n  long AQ = d+ r;\n  long AR = a+ s;\n  long AS = b+ s;\n \
    \ long AT = c+ s;\n  long AU = d+ s;\n  long AV = a+ t;\n  long AW = b", "   \
    \ float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return\
    \ -1;\n    }\n    return sqrt(s*(s-a)*(s-b)*(s-c));", "    float s = (a + b +\
    \ c) / 2;\n    if (s > 0) {\n        return sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    }\n    return -1;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;", "    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n\
    \    }\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return round(area*100)/100;",
  "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;", "    float area = 0.0;\n    long sum = a+b+c;\n \
    \   if (sum > c) {\n        area = -1;\n    }\n    else {\n        float s = (a+b+c)/2;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return area;", " \
    \   float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area;", "    float s = (a + b + c) / 2;\n    float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float s =\
    \ (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n    }\n   \
    \ return sqrt(s*(s-a)*(s-b)*(s-c));", "    float s = (a + b + c) / 2;\n    float\
    \ area = (sqrt(s * (s - a) * (s - b) * (s - c)) * (float)pow(10, 2));\n    return\
    \ area;", "    float s = (a+b+c)/2;\n    if (s > a+b+c) return -1;\n    if (s\
    \ > a+b) return s;\n    if (s > a) return s;\n    return s;", "    float s = (a\
    \ + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n   \
    \ return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return area;", "    float s = (a+b+c)/2;\n \
    \   float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;", "    float s =\
    \ (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area;", "    float area = (a * b) / c;\n    return std::round(area\
    \ * 100.0) / 100.0;", "    float area = 0.0f;\n    if (a + b > c) {\n        area\
    \ = (a * b) / c;\n    }\n    else {\n        area = -1;\n    }\n    return area;",
  "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;", "    float s = (a + b + c) / 2;\n    float area =\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;", "    float s = (a+b+c)/2;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;", "    float s\
    \ = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    } else\
    \ {\n        area = -1;\n    }\n    return round(area * 100) / 100;", "    float\
    \ s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;",
  "    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n    return area;", "  assert(a >= 0 && b >= 0 && c >= 0);\n\
    \  long d = b - a;\n  long e = c - a;\n  long f = d - e;\n  long g = e + f;\n\
    \  long h = a + b;\n  long i = a + c;\n  long j = b + c;\n  long k = a + d;\n\
    \  long l = b + d;\n  long m = c + d;\n  long n = a + e;\n  long o = b + e;\n\
    \  long p = c + e;\n  long q = d + e;\n  long r = a + f;\n  long s = b + f;\n\
    \  long t = c + f;\n  long u = d + f;\n  long v = e + f;\n  long w = a + g;\n\
    \  long x = b + g;\n  long y = c + g;\n  long z = d + g;\n  long a = a + h;\n\
    \  long b = b + h;\n  long c = c + h;\n  long d = d + h;\n  long e = e + i;\n\
    \  long f = f + i;\n  long g = g + i;\n  long h = h + i;\n  long i = i + j;\n\
    \  long j = j + k;\n  long k = k + l;\n  long l = l + m;\n  long m = m + n;\n\
    \  long n = n + o;\n  long o = o + p;\n  long p = p + q;\n  long q = q + r;\n\
    \  long r = r + s;\n  long s = s + t;\n  long t = t + u;\n  long u = u + v;\n\
    \  long v = v + w;\n  long w = w + x;\n  long x = x + y;\n  long y = y + z;\n\
    \  long z = z + a;\n  long a = a + b;\n  long b = b + c;\n  long c = c + d;\n\
    \  long d = d + e;\n  long e = e + f;\n  long f = f + g;\n  long g = g + h;\n\
    \  long h = h + i;\n  long i = i + j;\n  long j = j + k;\n  long k = k + l;\n\
    \  long l = l + m;\n  long m = m + n;\n  long n = n + o;\n  long o = o + p;\n\
    \  long p = p + q;\n  long q = q + r;\n  long r = r + s;\n  long s = s + t;\n\
    \  long t = t + u;\n  long u = u + v;\n  long v = v + w;\n  long w = w + x;\n\
    \  long x = x + y;\n  long y = y + z;\n  long z = ", "    float s = (a + b + c)\
    \ / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;",
  "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;", "  float s = (a+b+c)/2;\n  float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  return area;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return area;", "    float area = 0.0;\n    long\
    \ sum = a+b+c;\n    if (sum > 0) {\n        float s = (a+b+c)/sum;\n        float\
    \ area = sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return area;", "    float s =\
    \ (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area;", "    float s = (a + b + c) / 2;\n    if (s > 0 && s <= a &&\
    \ s <= b && s <= c) {\n        return s;\n    }\n    return -1;", "  assert(a\
    \ < b);\n  assert(b < c);\n  assert(c > 0);\n  long d = b - a;\n  long e = c -\
    \ b;\n  long f = d - e;\n  long g = a + b + c;\n  float h = sqrt(g*g + f*f);\n\
    \  return h;", "    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area;", "    float area = 0.0;\n    if\
    \ (a + b > c) {\n        area = (a * b) / c;\n    }\n    return round(area, 2);"]
stop_tokens:
- "\n}"

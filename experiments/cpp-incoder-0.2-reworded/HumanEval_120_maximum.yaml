name: HumanEval_120_maximum
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector arr of integers\
  \ and a positive integer k, return a sorted vector \n// of length k with the maximum\
  \ k numbers in arr.\n// Example 1:\n// >>> maximum((std::vector<long>({(long)-3,\
  \ (long)-4, (long)5})), (3))\n// (std::vector<long>({(long)-4, (long)-3, (long)5}))\n\
  // Example 2:\n// >>> maximum((std::vector<long>({(long)4, (long)-4, (long)4})),\
  \ (2))\n// (std::vector<long>({(long)4, (long)4}))\n// Example 3:\n// >>> maximum((std::vector<long>({(long)-3,\
  \ (long)2, (long)1, (long)2, (long)-1, (long)-2, (long)1})), (1))\n// (std::vector<long>({(long)2}))\n\
  // Note:\n// 1. The length of the vector will be in the range of [1, 1000].\n//\
  \ 2. The elements in the vector will be in the range of [-1000, 1000].\n// 3. 0\
  \ <= k <= len(arr)\nstd::vector<long> maximum(std::vector<long> arr, long k) {\n"
tests: "}\nint main() {\n    auto candidate = maximum;\n    assert(candidate((std::vector<long>({(long)-3,\
  \ (long)-4, (long)5})), (3)) == (std::vector<long>({(long)-4, (long)-3, (long)5})));\n\
  \    assert(candidate((std::vector<long>({(long)4, (long)-4, (long)4})), (2)) ==\
  \ (std::vector<long>({(long)4, (long)4})));\n    assert(candidate((std::vector<long>({(long)-3,\
  \ (long)2, (long)1, (long)2, (long)-1, (long)-2, (long)1})), (1)) == (std::vector<long>({(long)2})));\n\
  \    assert(candidate((std::vector<long>({(long)123, (long)-123, (long)20, (long)0,\
  \ (long)1, (long)2, (long)-3})), (3)) == (std::vector<long>({(long)2, (long)20,\
  \ (long)123})));\n    assert(candidate((std::vector<long>({(long)-123, (long)20,\
  \ (long)0, (long)1, (long)2, (long)-3})), (4)) == (std::vector<long>({(long)0, (long)1,\
  \ (long)2, (long)20})));\n    assert(candidate((std::vector<long>({(long)5, (long)15,\
  \ (long)0, (long)3, (long)-13, (long)-8, (long)0})), (7)) == (std::vector<long>({(long)-13,\
  \ (long)-8, (long)0, (long)0, (long)3, (long)5, (long)15})));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)0, (long)2, (long)5, (long)3, (long)-10})), (2)) == (std::vector<long>({(long)3,\
  \ (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)5,\
  \ (long)-7})), (1)) == (std::vector<long>({(long)5})));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)-4})), (2)) == (std::vector<long>({(long)-4, (long)4})));\n    assert(candidate((std::vector<long>({(long)-10,\
  \ (long)10})), (2)) == (std::vector<long>({(long)-10, (long)10})));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)-23, (long)243, (long)-400, (long)0})), (0)) == (std::vector<long>()));\n\
  }\n"
completions: ["    // Your code here\n    std::vector<long> ans;\n    long max = 0;\n\
    \    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n    \
    \        max = arr[i];\n        }\n    }\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max && arr[i] % k == 0) {\n            ans.push_back(arr[i]);\n\
    \        }\n    }\n    return ans;", "    // Your code here\n    std::vector<long>\
    \ ans;\n    long max = 0;\n    long min = 0;\n    for(long i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n \
    \       if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    long\
    \ mid = max - (max - min) / 2;\n    long mid2 = mid / 2;\n    long mid3 = mid\
    \ - mid2;\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > mid)\
    \ {\n            ans.push_back(arr[i]);\n        }\n        if(arr[i] < mid2)\
    \ {\n            ans.push_back(arr[i]);\n        }\n        if(arr[i] < mid3)\
    \ {\n            ans.push_back(arr[i]);\n        }\n    }\n    return ans;", " \
    \   // Your code here\n    std::vector<long> result;\n    long max_val = arr[0];\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n        }\n    }\n    long count = 0;\n    for\
    \ (long i = 0; i < arr.size(); i++) {\n        if (arr[i] == max_val) {\n    \
    \        result.push_back(arr[i]);\n            count++;\n        }\n    }\n \
    \   if (count > k) {\n        return result;\n    }\n    for (long i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] > max_val) {\n            result.push_back(arr[i]);\n\
    \        }\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ ans;\n    long max = 0;\n    long index = 0;\n    for(long i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] > max){\n            max = arr[i];\n            index\
    \ = i;\n        }\n    }\n    ans.push_back(max);\n    for(long i = index; i <\
    \ arr.size(); i++){\n        if(arr[i] > max){\n            max = arr[i];\n  \
    \      }\n    }\n    for(long i = index; i < k; i++){\n        ans.push_back(arr[i]);\n\
    \    }\n    return ans;", "    // Your code here\n    std::vector<long> result;\n\
    \    long max_val = arr[0];\n    long max_index = 0;\n    for (long i = 1; i <\
    \ arr.size(); i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    for (long i = 0; i < k; i++)\
    \ {\n        result.push_back(arr[max_index]);\n        max_index++;\n    }\n\
    \    return result;", "    // Your code here\n    long ans = 0;\n    long max_val\
    \ = arr[0];\n    long max_idx = -1;\n    for(long i = 1; i < arr.size(); i++)\
    \ {\n        if(arr[i] > max_val) {\n            max_val = arr[i];\n         \
    \   max_idx = i;\n        }\n    }\n    for(long i = 0; i < k; i++) {\n      \
    \  ans = max(ans, max_idx);\n    }\n    std::vector<long> ans_vec;\n    for(long\
    \ i = 0; i < k; i++) {\n        ans_vec.push_back(arr[ans]);\n    }\n    return\
    \ ans_vec;", "    // Your code here\n    std::vector<long> ans;\n    long max\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max)\
    \ {\n            max = arr[i];\n        }\n    }\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max && arr[i] != max) {\n            ans.push_back(max);\n\
    \            max = arr[i];\n        }\n    }\n    ans.push_back(max);\n    return\
    \ ans;", "    // Your code here\n    long max = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long ans = 0;\n    long temp = 0;\n    long count = 0;\n    long\
    \ sum = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n  \
    \  long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 =\
    \ 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long\
    \ temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n\
    \    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19\
    \ = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n   \
    \ long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26\
    \ = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n   \
    \ long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33\
    \ = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n   \
    \ long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40\
    \ = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n   \
    \ long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47\
    \ = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n   \
    \ long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54\
    \ = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n   \
    \ long temp58 = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61\
    \ = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n   \
    \ long temp65 = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68\
    \ = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n   \
    \ long temp72 = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75\
    \ = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n   \
    \ long temp79 = 0;\n    long temp80 = 0;\n    long temp81", "    // Your code\
    \ goes here\n    long max_val = arr[0];\n    std::vector<long> max_arr;\n    for(long\
    \ i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n        }\n    }\n    for(long i = 0; i < k; i++) {\n        max_arr.push_back(max_val);\n\
    \    }\n    return max_arr;", "    // Your code here\n    long n = arr.size();\n\
    \    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_idx = 1;\n\
    \    long max_idx2 = 1;\n    long max_idx3 = 1;\n    long max_idx4 = 1;\n    long\
    \ max_idx5 = 1;\n    long max_idx6 = 1;\n    long max_idx7 = 1;\n    long max_idx8\
    \ = 1;\n    long max_idx9 = 1;\n    long max_idx10 = 1;\n    long max_idx11 =\
    \ 1;\n    long max_idx12 = 1;\n    long max_idx13 = 1;\n    long max_idx14 = 1;\n\
    \    long max_idx15 = 1;\n    long max_idx16 = 1;\n    long max_idx17 = 1;\n \
    \   long max_idx18 = 1;\n    long max_idx19 = 1;\n    long max_idx20 = 1;\n  \
    \  long max_idx21 = 1;\n    long max_idx22 = 1;\n    long max_idx23 = 1;\n   \
    \ long max_idx24 = 1;\n    long max_idx25 = 1;\n    long max_idx26 = 1;\n    long\
    \ max_idx27 = 1;\n    long max_idx28 = 1;\n    long max_idx29 = 1;\n    long max_idx30\
    \ = 1;\n    long max_idx31 = 1;\n    long max_idx32 = 1;\n    long max_idx33 =\
    \ 1;\n    long max_idx34 = 1;\n    long max_idx35 = 1;\n    long max_idx36 = 1;\n\
    \    long max_idx37 = 1;\n    long max_idx38 = 1;\n    long max_idx39 = 1;\n \
    \   long max_idx40 = 1;\n    long max_idx41 = 1;\n    long max_idx42 = 1;\n  \
    \  long max_idx43 = 1;\n    long max_idx44 = 1;\n    long max_idx45 = 1;\n   \
    \ long max_idx46 = 1;\n    long max_idx47 = 1;\n    long max_idx48 = 1;\n    long\
    \ max_idx49 = 1;\n    long max_idx50 = 1;\n    long max_idx51 = 1;\n    long max_idx52\
    \ = 1;\n    long max_idx53 = 1;\n    long max_idx54 = 1;\n    long max_idx55 =\
    \ 1;\n    long max_idx56 = 1;\n    long max_idx57 = 1;\n    long max_idx58 = 1;\n\
    \    long max_idx59 = 1;\n    long max_idx60 = 1;\n    long max_idx61 = 1;\n \
    \   long max_idx62 = 1;\n    long max_idx63 = 1;\n    long max_idx64 = 1;\n  \
    \  long max_idx65 = 1;\n    long max_idx66 = 1;\n    long max_idx67 = 1;\n   \
    \ long max_idx68 = 1;\n    long max_idx69 = 1;\n", "    // Your code here\n  \
    \  long ans = 0;\n    long max_val = arr[0];\n    long max_pos = 0;\n    for(long\
    \ i = 1; i < arr.size(); i++) {\n        if(arr[i] > max_val) {\n            max_val\
    \ = arr[i];\n            max_pos = i;\n        }\n    }\n    for(long i = 0; i\
    \ < k; i++) {\n        ans = max(ans, arr[i]);\n    }\n    ans = max(ans, max_val);\n\
    \    ans = max(ans, max_pos);\n    return std::vector<long>{ans};", "    // Your\
    \ code here\n    std::vector<long> ans;\n    long max = 0;\n    for(long i = 0;\
    \ i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n\
    \        }\n    }\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i]\
    \ == max) {\n            ans.push_back(max);\n        }\n    }\n    return ans;",
  "    // Your code here\n    long n = arr.size();\n    long max_num = arr[0];\n \
    \   std::vector<long> ans;\n    for(long i = 1; i < n; i++) {\n        if(arr[i]\
    \ > max_num) {\n            max_num = arr[i];\n        }\n    }\n    for(long\
    \ i = 0; i < k; i++) {\n        ans.push_back(max_num);\n    }\n    return ans;",
  "    // Your code here\n    long long ans = 0;\n    long long max = 0;\n    long\
    \ long i = 0;\n    long long j = 0;\n    long long k1 = k;\n    long long k2 =\
    \ k1;\n    long long k3 = k2;\n    long long k4 = k3;\n    long long k5 = k4;\n\
    \    long long k6 = k5;\n    long long k7 = k6;\n    long long k8 = k7;\n    long\
    \ long k9 = k8;\n    long long k10 = k9;\n    long long k11 = k10;\n    long long\
    \ k12 = k11;\n    long long k13 = k12;\n    long long k14 = k13;\n    long long\
    \ k15 = k14;\n    long long k16 = k15;\n    long long k17 = k16;\n    long long\
    \ k18 = k17;\n    long long k19 = k18;\n    long long k20 = k19;\n    long long\
    \ k21 = k20;\n    long long k22 = k21;\n    long long k23 = k22;\n    long long\
    \ k24 = k23;\n    long long k25 = k24;\n    long long k26 = k25;\n    long long\
    \ k27 = k26;\n    long long k28 = k27;\n    long long k29 = k28;\n    long long\
    \ k30 = k29;\n    long long k31 = k30;\n    long long k32 = k31;\n    long long\
    \ k33 = k32;\n    long long k34 = k33;\n    long long k35 = k34;\n    long long\
    \ k36 = k35;\n    long long k37 = k36;\n    long long k38 = k37;\n    long long\
    \ k39 = k38;\n    long long k40 = k39;\n    long long k41 = k40;\n    long long\
    \ k42 = k41;\n    long long k43 = k42;\n    long long k44 = k43;\n    long long\
    \ k45 = k44;\n    long long k46 = k45;\n    long long k47 = k46;\n    long long\
    \ k48 = k47;\n    long long k49 = k48;\n    long long k50 = k49;\n    long long\
    \ k51 = k50;\n    long long k52 = k51;", "    long n = arr.size();\n    std::vector<long>\
    \ ans;\n    long max_val = arr[0];\n    long min_val = arr[0];\n    for (long\
    \ i = 0; i < n; i++) {\n        if (arr[i] > max_val) {\n            max_val =\
    \ arr[i];\n        }\n        if (arr[i] < min_val) {\n            min_val = arr[i];\n\
    \        }\n    }\n    long mid = max_val - min_val;\n    long diff = k - mid;\n\
    \    if (diff > 0) {\n        ans.push_back(max_val);\n        ans.push_back(max_val\
    \ + diff);\n        ans.push_back(max_val + diff * 2);\n        ans.push_back(max_val\
    \ + diff * 3);\n        ans.push_back(max_val + diff * 4);\n        ans.push_back(max_val\
    \ + diff * 5);\n        ans.push_back(max_val + diff * 6);\n        ans.push_back(max_val\
    \ + diff * 7);\n        ans.push_back(max_val + diff * 8);\n        ans.push_back(max_val\
    \ + diff * 9);\n        ans.push_back(max_val + diff * 10);\n        ans.push_back(max_val\
    \ + diff * 11);\n        ans.push_back(max_val + diff * 12);\n        ans.push_back(max_val\
    \ + diff * 13);\n        ans.push_back(max_val + diff * 14);\n        ans.push_back(max_val\
    \ + diff * 15);\n        ans.push_back(max_val + diff * 16);\n        ans.push_back(max_val\
    \ + diff * 17);\n        ans.push_back(max_val + diff * 18);\n        ans.push_back(max_val\
    \ + diff * 19);\n        ans.push_back(max_val + diff * 20);\n        ans.push_back(max_val\
    \ + diff * 21);\n        ans.push_back(max_val + diff * 22);\n        ans.push_back(max_val\
    \ + diff * 23);\n        ans.push_back(max_val + diff * 24);\n        ans.push_back(max_val\
    \ + diff * 25);\n        ans.push_back(max_val + diff * 26);\n        ans.push_back(max_val\
    \ + diff * 27);\n        ans.push_back(max_val + diff * 28);\n        ans.push_back(max_val\
    \ + diff * 29);\n        ans.push_back(max_val + diff * 30);\n        ans.push_back(max_val\
    \ + diff * 31);\n        ans.push_back(max_val + diff * 32);\n        ans.push_back(max_val\
    \ + diff * 33);\n        ans.push_back(max_val + diff * 34);\n        ans.push_back(max_val\
    \ + diff * 35);\n        ans.push_back(max_val + diff * 36);\n        ans.push_back(max_val\
    \ + ", "    long n = arr.size();\n    std::vector<long> result(n);\n    long max_val\
    \ = arr[0];\n    long max_idx = 1;\n    long min_val = arr[0];\n    long min_idx\
    \ = 1;\n    long mid = 0;\n    long mid_idx = 0;\n    long mid_idx2 = 0;\n   \
    \ long mid_idx3 = 0;\n    long mid_idx4 = 0;\n    long mid_idx5 = 0;\n    long\
    \ mid_idx6 = 0;\n    long mid_idx7 = 0;\n    long mid_idx8 = 0;\n    long mid_idx9\
    \ = 0;\n    long mid_idx10 = 0;\n    long mid_idx11 = 0;\n    long mid_idx12 =\
    \ 0;\n    long mid_idx13 = 0;\n    long mid_idx14 = 0;\n    long mid_idx15 = 0;\n\
    \    long mid_idx16 = 0;\n    long mid_idx17 = 0;\n    long mid_idx18 = 0;\n \
    \   long mid_idx19 = 0;\n    long mid_idx20 = 0;\n    long mid_idx21 = 0;\n  \
    \  long mid_idx22 = 0;\n    long mid_idx23 = 0;\n    long mid_idx24 = 0;\n   \
    \ long mid_idx25 = 0;\n    long mid_idx26 = 0;\n    long mid_idx27 = 0;\n    long\
    \ mid_idx28 = 0;\n    long mid_idx29 = 0;\n    long mid_idx30 = 0;\n    long mid_idx31\
    \ = 0;\n    long mid_idx32 = 0;\n    long mid_idx33 = 0;\n    long mid_idx34 =\
    \ 0;\n    long mid_idx35 = 0;\n    long mid_idx36 = 0;\n    long mid_idx37 = 0;\n\
    \    long mid_idx38 = 0;\n    long mid_idx39 = 0;\n    long mid_idx40 = 0;\n \
    \   long mid_idx41 = 0;\n    long mid_idx42 = 0;\n    long mid_idx43 = 0;\n  \
    \  long mid_idx44 = 0;\n    long mid_idx45 = 0;\n    long mid_idx46 = 0;\n   \
    \ long mid_idx47 = 0;\n    long mid_idx48 = 0;\n    long mid_idx49 = 0;\n    long\
    \ mid_idx50 = 0;\n    long mid_idx51 = 0;\n    long mid_idx52 = 0;\n    long mid_idx53\
    \ = 0;\n    long mid_idx54 = 0;\n    long mid_idx55 = 0;\n    long mid_idx56 =\
    \ 0;\n    long mid_idx57 = 0;\n    long mid_idx58 = 0;\n    long mid_idx59 = 0;\n\
    \    long mid_idx60 = 0;\n    long mid_idx61 = 0;\n    long mid_idx62 = 0;\n \
    \   long mid_idx63 = 0;\n    long mid_idx64 = 0;\n    long mid_idx65 = 0;\n  \
    \  long mid_idx66 = 0;\n    long mid_idx67 = 0;\n    long ", "    // Your code\
    \ here\n    long long max = 0;\n    long long maxIndex = 0;\n    long long maxCount\
    \ = 0;\n    long long count = 0;\n    long long index = 0;\n    long long sum\
    \ = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 =\
    \ 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n\
    \    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n\
    \    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n\
    \    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n\
    \    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n\
    \    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n\
    \    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n\
    \    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n\
    \    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n\
    \    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n\
    \    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n\
    \    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n\
    \    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n\
    \    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n\
    \    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n\
    \    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n\
    \    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n\
    \    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n\
    \    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n\
    \    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n\
    \    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n\
    \    long long sum68 = 0;\n    long long sum69", "    // Your code here\n    long\
    \ max = 0;\n    long index = 0;\n    long temp = 0;\n    long count = 0;\n   \
    \ long sum = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n\
    \    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8\
    \ = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long\
    \ temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n\
    \    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19\
    \ = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n   \
    \ long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26\
    \ = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n   \
    \ long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33\
    \ = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n   \
    \ long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40\
    \ = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n   \
    \ long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47\
    \ = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n   \
    \ long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54\
    \ = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n   \
    \ long temp58 = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61\
    \ = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n   \
    \ long temp65 = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68\
    \ = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n   \
    \ long temp72 = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75\
    \ = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n   \
    \ long temp79 = 0;\n    long temp80 = 0;\n    long temp81 = 0;\n    long temp82\
    \ = 0;\n    ", "    std::vector<long> max_arr;\n    long max_num = arr[0];\n \
    \   for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_num) {\n\
    \            max_num = arr[i];\n        }\n    }\n    for (long i = 0; i < k;\
    \ i++) {\n        max_arr.push_back(max_num);\n    }\n    return max_arr;", " \
    \   // Your code here\n    long n = arr.size();\n    long m = std::min(n, k);\n\
    \    std::vector<long> ans;\n    long max_val = arr[0];\n    long max_pos = 0;\n\
    \    for (long i = 1; i < m; i++) {\n        if (arr[i] > max_val) {\n       \
    \     max_val = arr[i];\n            max_pos = i;\n        }\n    }\n    ans.push_back(max_val);\n\
    \    for (long i = max_pos + 1; i < n; i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_pos = i;\n        }\n    }\n \
    \   ans.push_back(max_val);\n    return ans;"]
stop_tokens:
- "\n}"

name: HumanEval_102_choose_num
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two positive\
  \ numbers x and y and returns the\n// biggest even integer number that is in the\
  \ range [x, y] inclusive. If \n// there's no such number, then the function should\
  \ return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n// >>> choose_num((13),\
  \ (12))\n// (-1)\nlong choose_num(long x, long y) {\n"
tests: "}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
  \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
  \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
  \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
  \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
completions: ["    if (x > y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    long ans = -1;\n    for (long i = 0; i <= y; i++) {\n  \
    \      if ((x % 2) == 0) {\n            ans = i;\n            break;\n       \
    \ }\n        x /= 2;\n    }\n    return ans;", "    long ans = -1;\n    long mid\
    \ = (x + y) / 2;\n    if (x <= mid) {\n        ans = x;\n    } else if (mid <=\
    \ y) {\n        ans = mid;\n    } else {\n        ans = y;\n    }\n    return\
    \ ans;", "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y)\
    \ / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    } else {\n        return\
    \ choose_num(mid, y);\n    }", "    long ans = -1;\n    if (x >= y) {\n      \
    \  long mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n        if\
    \ (ans == -1) {\n            ans = mid;\n        }\n    } else {\n        long\
    \ mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n        if (ans ==\
    \ -1) {\n            ans = mid;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    while (x % 2 == 0 && y % 2 == 0) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    if (x == 0 || y == 0) {\n\
    \        return -1;\n    }\n    while (x % 2 == 0) {\n        x = x / 2;\n   \
    \ }\n    while (y % 2 == 0) {\n        y = y / 2;\n    }\n    long temp = 0;\n\
    \    while (x != 0) {\n        temp += x;\n        x = x / 2;\n    }\n    while\
    \ (y != 0) {\n        temp += y;\n        y = y / 2;\n    }\n    ans = temp;\n\
    \    return ans;", "    // Write your code here\n    long ans = -1;\n    if (x\
    \ >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n\
    \            ans = mid;\n        }\n    }\n    return ans;", "    if (x < y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid\
    \ = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    }\n    if\
    \ (mid % 2 == 1) {\n        return -1;\n    }\n    return choose_num(x, mid);",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while (x <= y)\
    \ {\n        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n\
    \        }\n        mid++;\n    }\n    return ans;", "    long ans = -1;\n   \
    \ if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    // Write\
    \ your code here\n    long ans = -1;\n    if (x >= y) {\n        long mid = x\
    \ + (y - x) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n      \
    \  }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n      \
    \  long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 <\
    \ y) {\n        long mid = x + (y-x)/2;\n        if (mid % 2 == 0) {\n       \
    \     ans = mid;\n            break;\n        }\n        if (mid < y) {\n    \
    \        x = mid;\n        } else {\n            y = mid;\n        }\n    }\n\
    \    return ans;", "    if (x > y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    long ans = -1;\n    while (x != y) {\n        if\
    \ ((x & 1) == 0) {\n            ans = x;\n            break;\n        }\n    \
    \    x >>= 1;\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n\
    \    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n\
    \    } else {\n        return choose_num(mid, y);\n    }", "    // Write your\
    \ code here\n    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid)\
    \ {\n        if (mid <= y) {\n            ans = mid;\n        } else {\n     \
    \       ans = y;\n        }\n    } else {\n        if (mid <= x) {\n         \
    \   ans = mid;\n        } else {\n            ans = x;\n        }\n    }\n   \
    \ return ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = (x\
    \ + y) / 2;\n        ans = choose_num(mid, y);\n        if (ans == -1) {\n   \
    \         ans = choose_num(x, mid);\n        }\n    } else {\n        long mid\
    \ = (y + x) / 2;\n        ans = choose_num(x, mid);\n        if (ans == -1) {\n\
    \            ans = choose_num(y, mid);\n        }\n    }\n    return ans;", " \
    \   long max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num\
    \ < min_num) {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 ==\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;", "    assert(x >= 0 && y >= 0);\n    if\
    \ (x < y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    long ans = -1;\n    long mid = (x + y) / 2;\n    while (true) {\n       \
    \ if (mid % 2 == 0) {\n            if (mid > ans) {\n                ans = mid;\n\
    \            }\n            mid = (x + y) / 2;\n        } else {\n           \
    \ if (mid < ans) {\n                ans = mid;\n            }\n            mid\
    \ = (x + y) / 2;\n        }\n    }\n    return ans;", "    long ans = -1;\n  \
    \  if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x+1 < y) {\n        if ((x % 2) == 0) {\n            ans =\
    \ x;\n            break;\n        }\n        ans = x+1;\n        x++;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    if (x > 0 && y > 0) {\n  \
    \      long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans =\
    \ mid;\n        }\n    }\n    return ans;", "    // Write your code here\n   \
    \ long ans = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 == 0;\n\
    \    if (x_even && y_even) {\n        ans = x;\n    } else if (x_even && !y_even)\
    \ {\n        ans = y;\n    } else if (!x_even && y_even) {\n        ans = x;\n\
    \    } else {\n        ans = y;\n    }\n    return ans;", "    long ans = -1;\n\
    \    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans = x;\n    } else\
    \ if (y <= mid) {\n        ans = y;\n    } else {\n        ans = mid;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n\
    \    while (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n \
    \           break;\n        }\n        mid = (mid + y) / 2;\n    }\n    return\
    \ ans;", "    // Write your code here\n    long ans = -1;\n    long mid = (x +\
    \ y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    } else {\n       \
    \ if (x > y) {\n            ans = mid;\n        } else {\n            ans = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x <=\
    \ y) {\n        long temp = y;\n        y = x;\n        x = temp;\n    }\n   \
    \ while (x <= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \        if (y % 2 == 0) {\n            ans = y;\n            break;\n       \
    \ }\n    }\n    return ans;", "    long max_num = x;\n    long min_num = y;\n\
    \    long mid;\n    while (max_num < min_num) {\n        mid = (max_num + min_num)\
    \ / 2;\n        if (mid % 2 == 0) {\n            max_num = mid;\n        } else\
    \ {\n            min_num = mid;\n        }\n    }\n    return max_num;", "   \
    \ // Write your code here\n    long ans = -1;\n    long mid = (x + y) / 2;\n \
    \   if (x <= mid) {\n        ans = x;\n    } else if (mid <= y) {\n        ans\
    \ = mid;\n    } else {\n        ans = y;\n    }\n    return ans;", "    if (x\
    \ > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n \
    \   long ans = -1;\n    long mid = (x + y) / 2;\n    while (x <= y) {\n      \
    \  if (mid % 2 == 0) {\n            ans = mid;\n            break;\n        }\n\
    \        mid = (x + y) / 2;\n    }\n    return ans;", "    // Write your code\
    \ here\n    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while\
    \ (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n          \
    \  break;\n        }\n        mid++;\n    }\n    return ans;", "    assert(x >=\
    \ 0 && y >= 0);\n    if (x > y) {\n        long temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    long ans = -1;\n    long mid = (x + y) / 2;\n   \
    \ while (x != mid && y != mid) {\n        if (x % 2 == 0 && y % 2 == 0) {\n  \
    \          ans = mid;\n            break;\n        }\n        if (x % 2 == 1)\
    \ {\n            y = mid;\n        } else {\n            x = mid;\n        }\n\
    \        mid = (x + y) / 2;\n    }\n    return ans;", "    long ans = -1;\n  \
    \  long m = 1;\n    long n = y;\n    long q = x;\n    long r = y;\n    long s\
    \ = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n \
    \   long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b\
    \ = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n \
    \   long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k\
    \ = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n \
    \   long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t\
    \ = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n \
    \   long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c\
    \ = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n \
    \   long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l\
    \ = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u\
    \ = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n \
    \   long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d\
    \ = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n \
    \   long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m\
    \ = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n \
    \   long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v\
    \ = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n \
    \   long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e\
    \ = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n \
    \   long j = 1;\n    long k = 1;\n    ", "    // Write your code here\n    long\
    \ ans = -1;\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans\
    \ = mid;\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n  \
    \  }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n\
    \    } else {\n        return choose_num(mid, y);\n    }", "    if (x > y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    long ans\
    \ = -1;\n    long mid = (x + y) / 2;\n    while (x <= y) {\n        if ((x % 2)\
    \ == 0) {\n            if (mid % 2 == 0) {\n                ans = mid;\n     \
    \           break;\n            }\n            mid = (mid + y) / 2;\n        }\n\
    \        else {\n            if (mid % 2 == 1) {\n                ans = mid;\n\
    \                break;\n            }\n            mid = (mid + x) / 2;\n   \
    \     }\n        x++;\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    if (x <= mid) {\n        ans = x;\n    } else if (mid\
    \ <= y) {\n        ans = mid;\n    } else {\n        ans = y;\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x)\
    \ / 2;\n        ans = choose_num(x, mid);\n        if (ans == -1) {\n        \
    \    ans = choose_num(mid + 1, y);\n        }\n    } else {\n        long mid\
    \ = y + (x - y) / 2;\n        ans = choose_num(y, mid);\n        if (ans == -1)\
    \ {\n            ans = choose_num(x, mid + 1);\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans\
    \ = mid;\n    } else if (mid <= y) {\n        ans = x;\n    }\n    return ans;",
  "    // Write your code here\n    long ans = -1;\n    long mid = (x + y) / 2;\n\
    \    long left = x - mid;\n    long right = y - mid;\n    if (left > right) {\n\
    \        ans = mid;\n    } else {\n        ans = x + mid;\n    }\n    return ans;",
  "    long ans = -1;\n    long m = ((x + y) / 2);\n    if (m % 2 == 0) {\n      \
    \  ans = m;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x\
    \ < y) {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n     \
    \       ans = mid;\n            break;\n        }\n        if (mid < y) {\n  \
    \          y = mid;\n        } else {\n            x = mid;\n        }\n    }\n\
    \    return ans;", "    assert(x >= 0 && y >= 0);\n    if (x > y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    long ans = -1;\n  \
    \  for (long i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n            ans\
    \ = i;\n            break;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    while (y) {\n        long mid = (x + y) / 2;\n        if\
    \ (mid * mid <= y) {\n            x = mid;\n        } else {\n            y =\
    \ mid;\n        }\n    }\n    if (x == y) {\n        ans = x;\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while\
    \ (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n          \
    \  break;\n        }\n        mid++;\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        ans = choose_num(mid,\
    \ y);\n        if (ans == -1) {\n            ans = mid;\n        }\n    } else\
    \ {\n        long mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n\
    \        if (ans == -1) {\n            ans = mid;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while\
    \ (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n          \
    \  break;\n        }\n        mid++;\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n \
    \       ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans =\
    \ choose_num(mid + 1, y);\n        }\n    } else {\n        long mid = y + (x\
    \ - y) / 2;\n        ans = choose_num(y, mid);\n        if (ans == -1) {\n   \
    \         ans = choose_num(x, mid - 1);\n        }\n    }\n    return ans;", " \
    \   if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n  \
    \  if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    long ans = -1;\n    if (x > y) {\n        long temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while\
    \ (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n          \
    \  break;\n        }\n        mid++;\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    long mid = (x + y) / 2;\n    while (x != mid && y != mid &&\
    \ x % 2 == 0 && y % 2 == 0) {\n        if (x <= mid) {\n            x = mid +\
    \ 1;\n        } else {\n            y = mid + 1;\n        }\n        mid = (x\
    \ + y) / 2;\n    }\n    if (x == mid && y == mid) {\n        ans = mid;\n    }\n\
    \    return ans;", "    if (x >= y) {\n        return -1;\n    }\n    long mid\
    \ = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    }\n    return\
    \ choose_num(mid, y);", "    // Write your code here\n    long ans = -1;\n   \
    \ long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    }\n\
    \    return ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n    \
    \        ans = mid;\n            break;\n        }\n        mid = (mid + y) /\
    \ 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n      \
    \  long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x <= y)\
    \ {\n        if (x % 2 == 0) {\n            ans = x;\n            break;\n   \
    \     }\n        x += 2;\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long mid = x + (y - x) / 2;\n        long a = choose_num(x,\
    \ mid);\n        long b = choose_num(mid, y);\n        long c = choose_num(mid,\
    \ y);\n        long d = choose_num(mid, y);\n        if (a >= 0 && b >= 0 && c\
    \ >= 0 && d >= 0) {\n            ans = max(ans, min(a, b, c));\n            ans\
    \ = max(ans, min(a, b, c));\n            ans = max(ans, min(a, b, c));\n     \
    \       ans = max(ans, min(a, b, c));\n        }\n    }\n    return ans;", " \
    \   if (x < y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long ans = -1;\n    while (x != y) {\n        long mid = (x + y) /\
    \ 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n            x = mid;\n\
    \        } else {\n            y = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x + y) / 2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            x = mid + 1;\n\
    \        } else {\n            y = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 ==\
    \ 0;\n    if (x_even && y_even) {\n        long x_odd = x % 2 == 1;\n        long\
    \ y_odd = y % 2 == 1;\n        if (x_odd && y_odd) {\n            long x_even\
    \ = x % 2 == 0;\n            long y_even = y % 2 == 0;\n            if (x_even\
    \ && y_even) {\n                long x_odd = x % 2 == 1;\n                long\
    \ y_odd = y % 2 == 1;\n                if (x_odd && y_odd) {\n               \
    \     long x_even = x % 2 == 0;\n                    long y_even = y % 2 == 0;\n\
    \                    if (x_even && y_even) {\n                        long x_odd\
    \ = x % 2 == 1;\n                        long y_odd = y % 2 == 1;\n          \
    \              if (x_odd && y_odd) {\n                            long x_even\
    \ = x % 2 == 0;\n                            long y_even = y % 2 == 0;\n     \
    \                       if (x_even && y_even) {\n                            \
    \    long x_odd = x % 2 == 1;\n                                long y_odd = y\
    \ % 2 == 1;\n                                if (x_odd && y_odd) {\n         \
    \                           long x_even = x % 2 == 0;\n                      \
    \              long y_even = y % 2 == 0;\n                                   \
    \ if (x_even && y_even) {\n                                        long x_odd\
    \ = x % 2 == 1;\n                                        long y_odd = y % 2 ==\
    \ 1;\n                                        if (x_odd && y_odd) {\n        \
    \                                    long x_even = x % 2 == 0;\n             \
    \                               long y_even = y % 2 == 0;\n                  \
    \                          if (x_even && y_even) {\n                         \
    \                       long x_odd = x % 2 == 1;\n                           \
    \                     long y_odd = y % 2 == 1;\n                             \
    \                   if (x_odd && y_odd) {\n                                  \
    \                  long x_even = x % 2 == 0;\n                               \
    \                     long y_even = y % 2 == 0;\n                            \
    \                        if (x_even && y_even) {\n                           \
    \                             long x_odd = x % 2 == 1;\n                     \
    \                                   long y_odd = y % 2 == 1;\n               \
    \                                         if (x_odd && y_odd) {\n            \
    \                                                long x_even = x % 2 == 0;\n \
    \                                                           long y_even = y %\
    \ 2 == 0;\n                                                            if (x_even\
    \ && y_even) {\n                                                             \
    \   long x_odd = x % 2 == 1;\n                                               \
    \                 long y_odd = y % 2 == 1;\n                                 \
    \                               if (x_odd && y_odd) {\n                      \
    \                                              long x_even = x % 2 == 0;\n   \
    \                                                                 long y_even\
    \ = y % 2 == 0;\n                                                            \
    \        if (x_even && y_even) {\n                                           \
    \                             long x_odd = x % 2 == 1;\n                     \
    \                                                   long y_od", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid %\
    \ 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;", "   \
    \ // Write your code here\n    long ans = -1;\n    long mid = (x + y) / 2;\n \
    \   if (x <= mid) {\n        ans = x;\n    } else if (y <= mid) {\n        ans\
    \ = y;\n    } else {\n        if (x <= y) {\n            ans = x;\n        } else\
    \ {\n            ans = y;\n        }\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    while (x < y) {\n        long mid = (x + y) / 2;\n       \
    \ if (mid % 2 == 0) {\n            ans = mid;\n            break;\n        }\n\
    \        if (mid > y) {\n            y = mid;\n        } else {\n            x\
    \ = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ while (x<y) {\n        long mid = x + (y-x)/2;\n        if (mid%2 == 0) {\n\
    \            ans = mid;\n            break;\n        }\n        x = mid;\n   \
    \ }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    while (x <= y) {\n     \
    \   long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n\
    \            break;\n        }\n        if (mid < y) {\n            y = mid;\n\
    \        } else {\n            x = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    if (y > x) {\n        long temp = y;\n        y\
    \ = x;\n        x = temp;\n    }\n    while (x <= y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n        if (y % 2 == 0) {\n            ans\
    \ = y;\n            break;\n        }\n    }\n    return ans;", "    assert(x\
    \ >= 0 && y >= 0);\n    long ans = -1;\n    if (x > y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n\
    \    while (x <= y) {\n        if ((x % 2) == 0) {\n            ans = mid;\n \
    \           break;\n        }\n        mid = (mid + x) / 2;\n        x++;\n  \
    \  }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    if (x == 0 || y == 0) {\n\
    \        return 0;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0)\
    \ {\n        ans = mid;\n    } else {\n        ans = choose_num(mid, y);\n   \
    \ }\n    return ans;", "    long max_num = x;\n    long min_num = y;\n    long\
    \ mid;\n    while (max_num < min_num) {\n        mid = (max_num + min_num) / 2;\n\
    \        if (mid % 2 == 0) {\n            max_num = mid;\n        } else {\n \
    \           min_num = mid;\n        }\n    }\n    return max_num;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if\
    \ (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = x + (y-x)/2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        x = mid;\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long mid = (x + y)\
    \ / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    } else {\n        ans\
    \ = choose_num(mid, y);\n    }\n    return ans;", "    if (x >= y) {\n       \
    \ return -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n  \
    \      return mid;\n    }\n    return choose_num(mid, y);", "    long ans = -1;\n\
    \    long mid = (x + y) / 2;\n    if (mid > 0 && mid < y) {\n        ans = mid;\n\
    \    }\n    return ans;", "    assert(x >= 0 && y >= 0);\n    if (x > y) {\n \
    \       long temp = x;\n        x = y;\n        y = temp;\n    }\n    long ans\
    \ = -1;\n    long mid = (x + y) / 2;\n    while (x <= y) {\n        if ((x % 2)\
    \ == 0) {\n            ans = mid;\n            break;\n        }\n        mid\
    \ = (mid + x) / 2;\n        x++;\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n\
    \    } else {\n        if (x <= mid) {\n            ans = mid;\n        } else\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 == 0;\n    if\
    \ (x_even && y_even) {\n        long x_odd = x % 2 == 1;\n        long y_odd =\
    \ y % 2 == 1;\n        if (x_odd && y_odd) {\n            long x_even = x % 2\
    \ == 0;\n            long y_even = y % 2 == 0;\n            if (x_even && y_even)\
    \ {\n                long x_odd = x % 2 == 1;\n                long y_odd = y\
    \ % 2 == 1;\n                if (x_odd && y_odd) {\n                    long x_even\
    \ = x % 2 == 0;\n                    long y_even = y % 2 == 0;\n             \
    \       if (x_even && y_even) {\n                        long x_odd = x % 2 ==\
    \ 1;\n                        long y_odd = y % 2 == 1;\n                     \
    \   if (x_odd && y_odd) {\n                            long x_even = x % 2 ==\
    \ 0;\n                            long y_even = y % 2 == 0;\n                \
    \            if (x_even && y_even) {\n                                long x_odd\
    \ = x % 2 == 1;\n                                long y_odd = y % 2 == 1;\n  \
    \                              if (x_odd && y_odd) {\n                       \
    \             long x_even = x % 2 == 0;\n                                    long\
    \ y_even = y % 2 == 0;\n                                    if (x_even && y_even)\
    \ {\n                                        long x_odd = x % 2 == 1;\n      \
    \                                  long y_odd = y % 2 == 1;\n                \
    \                        if (x_odd && y_odd) {\n                             \
    \               long x_even = x % 2 == 0;\n                                  \
    \          long y_even = y % 2 == 0;\n                                       \
    \     if (x_even && y_even) {\n                                              \
    \  long x_odd = x % 2 == 1;\n                                                long\
    \ y_odd = y % 2 == 1;\n                                                if (x_odd\
    \ && y_odd) {\n                                                    long x_even\
    \ = x % 2 == 0;\n                                                    long y_even\
    \ = y % 2 == 0;\n                                                    if (x_even\
    \ && y_even) {\n                                                        long x_odd\
    \ = x % 2 == 1;\n                                                        long\
    \ y_odd = y % 2 == 1;\n                                                      \
    \  if (x_odd && y_odd) {\n                                                   \
    \         long x_even = x % 2 == 0;\n                                        \
    \                    long y_even = y % 2 == 0;\n                             \
    \                               if (x_even && y_even) {\n                    \
    \                                            long x_odd = x % 2 == 1;\n      \
    \                                                          long y_odd = y % 2\
    \ == 1;\n                                                                if (x_odd\
    \ && y_odd) {\n                                                              \
    \      long x_even = x % 2 == 0;\n                                           \
    \                         long y_even = y % 2 == 0;\n                        \
    \                                            if (x_even && y_even) {\n       \
    \                                                                 long x_odd =\
    \ x % 2 == 1;\n                                                              \
    \          long y_od", "    long ans = -1;\n    if (x >= y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    while (x < y) {\n      \
    \  long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n\
    \            break;\n        }\n        if (mid > y) {\n            y = mid;\n\
    \        } else {\n            x = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n \
    \       ans = choose_num(mid, y);\n        if (ans == -1) {\n            ans =\
    \ mid;\n        }\n    } else {\n        long mid = y + (x - y) / 2;\n       \
    \ ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long mid = x + (y - x) / 2;\n        if (mid > y) {\n            mid\
    \ = y;\n        }\n        if (mid < x) {\n            mid = x;\n        }\n \
    \       ans = mid;\n    }\n    return ans;", "    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    }\n\
    \    else {\n        if (mid < x && mid < y) {\n            ans = mid;\n     \
    \   }\n        else if (mid > x && mid > y) {\n            ans = mid;\n      \
    \  }\n    }\n    return ans;", "    assert(x >= 0 && y >= 0);\n    long ans =\
    \ -1;\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n\
    \    } else {\n        if (x <= mid) {\n            ans = mid;\n        } else\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x > y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    if (x == 0) {\n        return y;\n    }\n    long mid = (x\
    \ + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    }\n    if (mid >\
    \ y) {\n        ans = mid;\n    }\n    return ans;", "    long ans = -1;\n   \
    \ long m = ((x + y) / 2);\n    if (m % 2 == 0) {\n        ans = m;\n    }\n  \
    \  return ans;", "    // Write your code here\n    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ while (x <= y) {\n        if (x % 2 == 0) {\n            ans = x;\n        \
    \    break;\n        }\n        x++;\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    long mid = (x + y) / 2;\n    while (x <= y) {\n        if\
    \ (mid % 2 == 0) {\n            ans = mid;\n            break;\n        }\n  \
    \      mid = (mid + y) / 2;\n    }\n    return ans;", "    long ans = -1;\n  \
    \  if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x <= y) {\n        long mid = (x + y) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n            break;\n        }\n       \
    \ if (mid > y) {\n            y = mid;\n        } else {\n            x = mid;\n\
    \        }\n    }\n    return ans;", "    // Write your code here\n    long ans\
    \ = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x+y)/2;\n  \
    \      if (mid % 2 == 0) {\n            ans = mid;\n            break;\n     \
    \   }\n        if (mid > y) {\n            y = mid;\n        } else {\n      \
    \      x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n   \
    \ if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    while (x <= y) {\n        if (x%2 == 0) {\n            ans = x;\n \
    \           break;\n        }\n        x++;\n    }\n    return ans;", "    //\
    \ Write your code here\n    long ans = -1;\n    long mid = (x + y) / 2;\n    if\
    \ (mid % 2 == 0) {\n        ans = mid;\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    while (x < y) {\n        long mid = (x + y) / 2;\n     \
    \   if (mid * mid > ans) {\n            ans = mid;\n        }\n        if (mid\
    \ * mid > y) {\n            y = mid;\n        }\n        if (mid * mid < x) {\n\
    \            x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long m = 1;\n    long n = y;\n    while (m <= n) {\n        if (m % 2 ==\
    \ 0) {\n            ans = m;\n            break;\n        }\n        m += 2;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x <= y) {\n\
    \        if ((x & 1) == 0) {\n            ans = x;\n            break;\n     \
    \   }\n        x <<= 1;\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    while (x != 0) {\n        long remainder = x % 2;\n        if (remainder\
    \ == 0) {\n            ans = x;\n            break;\n        }\n        x = x\
    \ + 1;\n    }\n    return ans;", "    long ans = -1;\n    long mid = (x + y) /\
    \ 2;\n    long diff = x - mid;\n    if (diff > y) {\n        diff = y - mid;\n\
    \        ans = mid;\n    }\n    if (diff < y) {\n        diff = y - mid;\n   \
    \     ans = mid;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y)\
    \ {\n        long mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n\
    \        if (ans == -1) {\n            ans = mid;\n        }\n    } else {\n \
    \       long mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n     \
    \   if (ans == -1) {\n            ans = mid;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n\
    \        if (mid%2 == 0) {\n            x = mid+1;\n        } else {\n       \
    \     y = mid;\n        }\n    }\n    if (x%2 == 0) {\n        ans = x;\n    }\n\
    \    return ans;", "    // Write your code here\n    long ans = -1;\n    if (x\
    \ >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    while (x<y) {\n        long mid = (x+y)/2;\n        if (mid%2 == 0) {\n \
    \           ans = mid;\n            break;\n        }\n        if (mid%2 != 0)\
    \ {\n            x = mid;\n        }\n        else {\n            y = mid;\n \
    \       }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n \
    \       long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x\
    \ <= y) {\n        if ((x & 1) == 0) {\n            ans = x;\n            break;\n\
    \        }\n        x <<= 1;\n    }\n    return ans;", "    assert(x >= 0 && y\
    \ >= 0);\n    if (x == y) {\n        return -1;\n    }\n    long mid = (x + y)\
    \ / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    } else {\n        return\
    \ choose_num(mid, y);\n    }", "    long ans = -1;\n    if (x >= y) {\n      \
    \  long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 <\
    \ y) {\n        long mid = (x+y)/2;\n        if (mid%2 == 0) {\n            ans\
    \ = mid;\n            x = mid+1;\n        }\n        else {\n            y = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long mid = (x +\
    \ y) / 2;\n    if (x <= mid) {\n        ans = mid;\n    } else if (mid <= y) {\n\
    \        ans = x;\n    } else {\n        ans = y;\n    }\n    return ans;", " \
    \   if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n  \
    \  if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    long ans = -1;\n    long x_even = x % 2;\n    long y_even = y % 2;\n\
    \    if (x_even > y_even) {\n        ans = x;\n    } else {\n        ans = y;\n\
    \    }\n    while (ans < x || ans > y) {\n        if (ans == x && x_even > y_even)\
    \ {\n            ans += 2;\n        } else if (ans == y && y_even > x_even) {\n\
    \            ans += 2;\n        } else {\n            ans += 1;\n        }\n \
    \   }\n    return ans;", "    if (x > y) {\n        long temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    long ans = -1;\n    for (long i = x; i <=\
    \ y; i++) {\n        if (i % 2 == 0) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long max_num = x;\n    long min_num\
    \ = y;\n    long mid;\n    while (max_num < min_num) {\n        mid = (max_num\
    \ + min_num) / 2;\n        if (mid % 2 == 0) {\n            max_num = mid;\n \
    \       } else {\n            min_num = mid;\n        }\n    }\n    return max_num;",
  "    long ans = -1;\n    if (x > y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n\
    \        if (mid%2 == 0) {\n            ans = mid;\n            x = mid+1;\n \
    \       }\n        else {\n            y = mid;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= y) {\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    else\
    \ {\n        if (mid % 2 == 1) {\n            ans = mid;\n        }\n    }\n \
    \   return ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = x\
    \ + (y - x) / 2;\n        if (mid > ans) {\n            ans = mid;\n        }\n\
    \    }\n    return ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n\
    \    if (x > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long mid = x + (y - x) / 2;\n    long low = mid;\n    long high =\
    \ mid;\n    while (low < high) {\n        long mid = low + (high - low) / 2;\n\
    \        if (mid % 2 == 0) {\n            high = mid;\n        } else {\n    \
    \        low = mid;\n        }\n    }\n    if (low == high) {\n        ans = low;\n\
    \    }\n    return ans;", "    long ans = -1;\n    long mid = (x + y) / 2;\n \
    \   if (mid % 2 == 0) {\n        ans = mid;\n    } else {\n        if (x <= mid)\
    \ {\n            ans = mid;\n        } else if (y <= mid) {\n            ans =\
    \ mid;\n        } else {\n            ans = -1;\n        }\n    }\n    return\
    \ ans;", "    assert(x >= 0 && y >= 0);\n    if (x < y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    long ans = -1;\n    long p\
    \ = 1;\n    long q = y;\n    while (p <= q) {\n        long mid = (p + q) / 2;\n\
    \        if (mid * mid <= x) {\n            p = mid + 1;\n        } else {\n \
    \           q = mid;\n        }\n    }\n    if (p * p <= x) {\n        ans = p;\n\
    \    } else {\n        ans = -1;\n    }\n    return ans;", "    if (x > y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    long ans\
    \ = -1;\n    while (x != y) {\n        long mid = (x + y) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n            break;\n        }\n       \
    \ if (mid > y) {\n            y = mid;\n        } else {\n            x = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid\
    \ = (x + y) / 2;\n    while (x <= y) {\n        if ((x % 2) == 0) {\n        \
    \    ans = mid;\n            break;\n        }\n        mid = (mid + y) / 2;\n\
    \        x++;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    if (y >\
    \ x) {\n        long temp = y;\n        y = x;\n        x = temp;\n    }\n   \
    \ while (x % 2 == 0) {\n        x /= 2;\n        ans++;\n    }\n    while (y %\
    \ 2 == 0) {\n        y /= 2;\n        ans++;\n    }\n    while (x < y) {\n   \
    \     long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x >\
    \ y) {\n        long temp = y;\n        y = x;\n        x = temp;\n    }\n   \
    \ return ans;", "    // Write your code here\n    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ if (x == 0 || y == 0) {\n        return -1;\n    }\n    long mid = x + (y -\
    \ x) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x+y)/2;\n  \
    \      if (mid%2 == 0) {\n            ans = mid;\n            break;\n       \
    \ }\n        if (mid%2 == 1) {\n            y = mid;\n        }\n        else\
    \ {\n            x = mid;\n        }\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    while (x<y) {\n        long mid = (x+y)/2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n            break;\n        }\n       \
    \ if (mid > y) {\n            y = mid;\n        } else {\n            x = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n    \
    \    if (ans == -1) {\n            ans = choose_num(x, mid);\n        }\n    }\
    \ else {\n        long mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n\
    \        if (ans == -1) {\n            ans = choose_num(y, mid);\n        }\n\
    \    }\n    return ans;", "    long ans = -1;\n    long mid = (x + y) / 2;\n \
    \   if (x <= mid) {\n        ans = x;\n    } else if (mid <= y) {\n        ans\
    \ = mid;\n    } else {\n        ans = y;\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    if (y > x) {\n        long temp = y;\n        y = x;\n \
    \       x = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while (x <= y)\
    \ {\n        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n\
    \        }\n        mid++;\n    }\n    return ans;", "    assert(x >= 0 && y >=\
    \ 0);\n    long ans = -1;\n    long m = 1;\n    long n = 1;\n    long k = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = x;\n\
    \    long y = y;\n    long z = y;\n    long a = x;\n    long b = y;\n    long\
    \ c = x;\n    long d = y;\n    long e = x;\n    long f = y;\n    long g = x;\n\
    \    long h = y;\n    long i = x;\n    long j = y;\n    long k = x;\n    long\
    \ l = y;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = x;\n    long y = y;\n\
    \    long z = y;\n    long a = x;\n    long b = y;\n    long c = x;\n    long\
    \ d = y;\n    long e = x;\n    long f = y;\n    long g = x;\n    long h = y;\n\
    \    long i = x;\n    long j = y;\n    long k = x;\n    long l = y;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = x;\n    long y = y;\n    long z = y;\n\
    \    long a = x;\n    long b = y;\n    long c = x;\n    long d = y;\n    long\
    \ e = x;\n    long f = y;\n    long g = x;\n    long h = y;\n    long i = x;\n\
    \    long j = y;\n    long k = x;\n    long l = y;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = x;\n    long y = y;\n    long z = y;\n    long a = x;\n\
    \    long b = y;\n    long c = x;\n    long d = y;\n    long e = x;\n    long\
    \ f = y;\n    long g = x;\n    long h = y;", "    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ while (x<y) {\n        if (x%2 == 0) {\n            ans = x;\n            break;\n\
    \        }\n        x++;\n    }\n    return ans;", "    assert(x >= 0 && y >=\
    \ 0);\n    long ans = -1;\n    long m = 1;\n    long n = y;\n    long k = 0;\n\
    \    while (m <= n) {\n        long mid = (m + n) / 2;\n        if (mid * mid\
    \ > x * x) {\n            n = mid;\n        } else {\n            m = mid;\n \
    \       }\n        k++;\n    }\n    ans = m;\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    while (x+1 < y) {\n        long mid = x + (y-x)/2;\n   \
    \     if (mid % 2 == 0) {\n            ans = mid;\n            x = mid;\n    \
    \    }\n        else {\n            y = mid;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      long left = choose_num(x, mid);\n        long right = choose_num(mid +\
    \ 1, y);\n        if (left >= right) {\n            ans = mid;\n        } else\
    \ {\n            ans = left;\n        }\n    } else {\n        long mid = y +\
    \ (x - y) / 2;\n        long left = choose_num(x, mid);\n        long right =\
    \ choose_num(mid + 1, y);\n        if (left >= right) {\n            ans = mid;\n\
    \        } else {\n            ans = left;\n        }\n    }\n    return ans;",
  "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x)\
    \ / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n\
    \    while (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n \
    \           break;\n        }\n        mid = (mid + y) / 2;\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    while (x <= y) {\n        if (x % 2\
    \ == 0) {\n            ans = x;\n            break;\n        }\n        x += 2;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x<y) {\n   \
    \     long mid = x + (y-x)/2;\n        if (mid%2 == 0) {\n            ans = mid;\n\
    \            break;\n        }\n        if (mid%2 != 0) {\n            x = mid;\n\
    \        } else {\n            y = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 ==\
    \ 0;\n    if (x_even && y_even) {\n        long x_odd = x % 2 == 1;\n        long\
    \ y_odd = y % 2 == 1;\n        if (x_odd && y_odd) {\n            long x_even\
    \ = x % 2 == 0;\n            long y_even = y % 2 == 0;\n            if (x_even\
    \ && y_even) {\n                long x_odd = x % 2 == 1;\n                long\
    \ y_odd = y % 2 == 1;\n                if (x_odd && y_odd) {\n               \
    \     long x_even = x % 2 == 0;\n                    long y_even = y % 2 == 0;\n\
    \                    if (x_even && y_even) {\n                        long x_odd\
    \ = x % 2 == 1;\n                        long y_odd = y % 2 == 1;\n          \
    \              if (x_odd && y_odd) {\n                            long x_even\
    \ = x % 2 == 0;\n                            long y_even = y % 2 == 0;\n     \
    \                       if (x_even && y_even) {\n                            \
    \    long x_odd = x % 2 == 1;\n                                long y_odd = y\
    \ % 2 == 1;\n                                if (x_odd && y_odd) {\n         \
    \                           long x_even = x % 2 == 0;\n                      \
    \              long y_even = y % 2 == 0;\n                                   \
    \ if (x_even && y_even) {\n                                        long x_odd\
    \ = x % 2 == 1;\n                                        long y_odd = y % 2 ==\
    \ 1;\n                                        if (x_odd && y_odd) {\n        \
    \                                    long x_even = x % 2 == 0;\n             \
    \                               long y_even = y % 2 == 0;\n                  \
    \                          if (x_even && y_even) {\n                         \
    \                       long x_odd = x % 2 == 1;\n                           \
    \                     long y_odd = y % 2 == 1;\n                             \
    \                   if (x_odd && y_odd) {\n                                  \
    \                  long x_even = x % 2 == 0;\n                               \
    \                     long y_even = y % 2 == 0;\n                            \
    \                        if (x_even && y_even) {\n                           \
    \                             long x_odd = x % 2 == 1;\n                     \
    \                                   long y_odd = y % 2 == 1;\n               \
    \                                         if (x_odd && y_odd) {\n            \
    \                                                long x_even = x % 2 == 0;\n \
    \                                                           long y_even = y %\
    \ 2 == 0;\n                                                            if (x_even\
    \ && y_even) {\n                                                             \
    \   long x_odd = x % 2 == 1;\n                                               \
    \                 long y_odd = y % 2 == 1;\n                                 \
    \                               if (x_odd && y_odd) {\n                      \
    \                                              long x_even = x % 2 == 0;\n   \
    \                                                                 long y_even\
    \ = y % 2 == 0;\n                                                            \
    \        if (x_even && y_even) {\n                                           \
    \                             long x_odd = x % 2 == 1;\n                     \
    \                                                   long y_od", "    long ans\
    \ = -1;\n    long m = ((x + y) / 2);\n    if (m % 2 == 0) {\n        ans = m;\n\
    \    }\n    return ans;", "    long ans = -1;\n    long mid = (x + y) / 2;\n \
    \   if (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n     \
    \   }\n    }\n    else {\n        if (mid % 2 == 1) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1\
    \ < y) {\n        long mid = x + (y-x)/2;\n        if (mid % 2 == 0) {\n     \
    \       ans = mid;\n            break;\n        }\n        x = mid;\n    }\n \
    \   return ans;", "    long ans = -1;\n    if (x > y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    if (x == 0) {\n        return y;\n\
    \    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n\
    \    } else {\n        ans = choose_num(mid, y);\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n \
    \       if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (mid % 2 ==\
    \ 0) {\n        ans = mid;\n    } else {\n        if (x <= mid) {\n          \
    \  ans = mid;\n        } else {\n            ans = mid;\n        }\n    }\n  \
    \  return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n \
    \   while (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n  \
    \          break;\n        }\n        mid++;\n    }\n    return ans;", "    long\
    \ max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num < min_num)\
    \ {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 == 0) {\n   \
    \         max_num = mid;\n        } else {\n            min_num = mid;\n     \
    \   }\n    }\n    return max_num;", "    long ans = -1;\n    if (x >= y) {\n \
    \       long temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid\
    \ = x + (y - x) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n    \
    \        ans = mid;\n            break;\n        }\n        mid++;\n    }\n  \
    \  return ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = x\
    \ + (y - x) / 2;\n        ans = choose_num(mid, y);\n        if (ans == -1) {\n\
    \            ans = choose_num(x, mid);\n        }\n    } else {\n        long\
    \ mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n        if (ans ==\
    \ -1) {\n            ans = choose_num(y, mid);\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return\
    \ ans;", "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y)\
    \ / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n     \
    \   x = y;\n        y = temp;\n    }\n    while (x<y) {\n        long mid = (x\
    \ + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n           \
    \ x = mid + 1;\n        } else {\n            y = mid;\n        }\n    }\n   \
    \ return ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = x +\
    \ (y - x) / 2;\n        ans = choose_num(mid, y);\n        if (ans == -1) {\n\
    \            ans = mid;\n        }\n    } else {\n        long mid = y + (x -\
    \ y) / 2;\n        ans = choose_num(x, mid);\n        if (ans == -1) {\n     \
    \       ans = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long mid = (x + y) / 2;\n    while (x != mid && y != mid && mid %\
    \ 2 == 0) {\n        if (x <= mid) {\n            x = mid + 1;\n        } else\
    \ {\n            y = mid - 1;\n        }\n        mid = (x + y) / 2;\n    }\n\
    \    if (x == mid) {\n        ans = mid;\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid\
    \ > y) {\n            mid = y;\n        }\n        if (mid > x) {\n          \
    \  mid = x;\n        }\n        ans = mid;\n    } else {\n        long mid = y\
    \ + (x - y) / 2;\n        if (mid > x) {\n            mid = x;\n        }\n  \
    \      if (mid > y) {\n            mid = y;\n        }\n        ans = mid;\n \
    \   }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid = (x + y)\
    \ / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n\
    \            break;\n        }\n        mid = (mid + y) / 2;\n    }\n    return\
    \ ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    long m = 1;\n\
    \    long n = y;\n    long k = 0;\n    long t = x;\n    while (m <= n) {\n   \
    \     if (m % 2 == 0) {\n            ans = m;\n            break;\n        }\n\
    \        m += 2;\n    }\n    return ans;", "    long ans = -1;\n    long mid =\
    \ (x + y) / 2;\n    long lcm = x * y;\n    long lcm2 = lcm * lcm;\n    long lcm3\
    \ = lcm2 * lcm;\n    long lcm4 = lcm3 * lcm;\n    long lcm5 = lcm4 * lcm;\n  \
    \  long lcm6 = lcm5 * lcm;\n    long lcm7 = lcm6 * lcm;\n    long lcm8 = lcm7\
    \ * lcm;\n    long lcm9 = lcm8 * lcm;\n    long lcm10 = lcm9 * lcm;\n    long\
    \ lcm11 = lcm10 * lcm;\n    long lcm12 = lcm11 * lcm;\n    long lcm13 = lcm12\
    \ * lcm;\n    long lcm14 = lcm13 * lcm;\n    long lcm15 = lcm14 * lcm;\n    long\
    \ lcm16 = lcm15 * lcm;\n    long lcm17 = lcm16 * lcm;\n    long lcm18 = lcm17\
    \ * lcm;\n    long lcm19 = lcm18 * lcm;\n    long lcm20 = lcm19 * lcm;\n    long\
    \ lcm21 = lcm20 * lcm;\n    long lcm22 = lcm21 * lcm;\n    long lcm23 = lcm22\
    \ * lcm;\n    long lcm24 = lcm23 * lcm;\n    long lcm25 = lcm24 * lcm;\n    long\
    \ lcm26 = lcm25 * lcm;\n    long lcm27 = lcm26 * lcm;\n    long lcm28 = lcm27\
    \ * lcm;\n    long lcm29 = lcm28 * lcm;\n    long lcm30 = lcm29 * lcm;\n    long\
    \ lcm31 = lcm30 * lcm;\n    long lcm32 = lcm31 * lcm;\n    long lcm33 = lcm32\
    \ * lcm;\n    long lcm34 = lcm33 * lcm;\n    long lcm35 = lcm34 * lcm;\n    long\
    \ lcm36 = lcm35 * lcm;\n    long lcm37 = lcm36 * lcm;\n    long l", "    if (x\
    \ >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid\
    \ % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid, y);", " \
    \   long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n \
    \       if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n        long mid\
    \ = x + (y-x)/2;\n        if (mid % 2 == 0) {\n            ans = mid;\n      \
    \      break;\n        }\n        if (mid > y) {\n            y = mid;\n     \
    \   } else {\n            x = mid;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n \
    \       ans = mid;\n    } else {\n        long mid1 = (x + y) / 2;\n        long\
    \ mid2 = (x + y) / 2;\n        if (mid1 < mid2) {\n            ans = mid1;\n \
    \       } else {\n            ans = mid2;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans\
    \ = x;\n    } else if (mid <= y) {\n        ans = mid;\n    } else {\n       \
    \ ans = y;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (y)\
    \ {\n        long mid = y / 2;\n        if (mid * 2 > x) {\n            y = mid\
    \ - 1;\n        } else {\n            x = mid;\n        }\n    }\n    if (x <\
    \ y) {\n        ans = x;\n    } else {\n        ans = y;\n    }\n    return ans;",
  "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    assert(x >= 0 && y >= 0);\n    if (x < y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    long ans = -1;\n    while\
    \ (x % 2 == 0 && y % 2 == 0) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    if (x == y) {\n        ans = x;\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        if (mid > y) {\n            y = mid;\n        } else {\n    \
    \        x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n \
    \   long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans = x;\n    } else\
    \ if (mid <= y) {\n        ans = mid;\n    } else {\n        ans = y;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid =\
    \ x + (y - x) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n    \
    \    }\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n    }\n\
    \    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n \
    \   } else {\n        return choose_num(x, mid);\n    }", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    if (x > 0 && y > 0) {\n        long mid = (x + y) / 2;\n        if\
    \ (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;",
  "    if (x > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    long ans = -1;\n    while (x != y) {\n        if (x % 2 == 0) {\n \
    \           ans = x;\n            break;\n        }\n        x /= 2;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x > y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    if (x == 0 || y == 0) {\n\
    \        return 0;\n    }\n    while (x % 2 == 0 && y % 2 == 0) {\n        x /=\
    \ 2;\n        y /= 2;\n    }\n    while (x % 2 == 0) {\n        x /= 2;\n    \
    \    ans++;\n    }\n    while (y % 2 == 0) {\n        y /= 2;\n        ans--;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x <= y) {\n\
    \        if (x % 2 == 0) {\n            ans = x;\n            break;\n       \
    \ }\n        x += 2;\n    }\n    return ans;", "    // Write your code here\n\
    \    long ans = -1;\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n  \
    \      ans = mid;\n    }\n    return ans;", "    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ long mid = (x + y) / 2;\n    while (x <= y) {\n        if ((x % 2) == 0) {\n\
    \            ans = mid;\n            break;\n        }\n        mid = (mid + y)\
    \ / 2;\n        x++;\n    }\n    return ans;", "    long ans = -1;\n    if (x\
    \ >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    while (x+1 < y) {\n        long mid = (x+y)/2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n            break;\n        }\n        else if (mid\
    \ % 2 == 1) {\n            y = mid;\n        }\n        else {\n            x\
    \ = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ while (x <= y) {\n        if (x % 2 == 0) {\n            ans = x;\n        \
    \    break;\n        }\n        x++;\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        ans = choose_num(mid,\
    \ y);\n        if (ans == -1) {\n            ans = choose_num(x, mid);\n     \
    \   }\n    } else {\n        long mid = y + (x - y) / 2;\n        ans = choose_num(x,\
    \ mid);\n        if (ans == -1) {\n            ans = choose_num(y, mid);\n   \
    \     }\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n   \
    \ }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n\
    \    }\n    return choose_num(mid, y);", "    long ans = -1;\n    long mid = (x\
    \ + y) / 2;\n    if (x <= mid) {\n        ans = mid;\n    } else if (mid <= y)\
    \ {\n        ans = x;\n    } else {\n        ans = y;\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        if (x%2 == 0) {\n  \
    \          ans = x;\n            break;\n        }\n        x++;\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x > y) {\n        long temp = x;\n     \
    \   x = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n    while (x\
    \ != mid && y != mid) {\n        if (x % 2 == 0 && y % 2 == 0) {\n           \
    \ ans = mid;\n            break;\n        } else if (x % 2 == 0 && y % 2 != 0)\
    \ {\n            y = mid;\n        } else if (x % 2 != 0 && y % 2 == 0) {\n  \
    \          x = mid;\n        } else {\n            x = mid;\n            y = mid;\n\
    \        }\n        mid = (x + y) / 2;\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    long mid = (x + y) / 2;\n    while (x <= y) {\n        if\
    \ (mid % 2 == 0) {\n            ans = mid;\n            break;\n        }\n  \
    \      mid = (mid + y) / 2;\n    }\n    return ans;", "    long ans = -1;\n  \
    \  if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x < y) {\n        long mid = (x + y) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n            break;\n        }\n       \
    \ if (mid > y) {\n            y = mid;\n        } else {\n            x = mid;\n\
    \        }\n    }\n    return ans;", "    // Write your code here\n    long ans\
    \ = -1;\n    long mid = (x + y) / 2;\n    if (x >= y) {\n        if (mid % 2 ==\
    \ 0) {\n            ans = mid;\n        }\n    } else {\n        if (mid % 2 ==\
    \ 1) {\n            ans = mid;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    while (x+1 < y) {\n        long mid = x + y/2;\n   \
    \     if (mid % 2 == 0) {\n            ans = mid;\n            break;\n      \
    \  }\n        mid = y + x/2;\n        if (mid % 2 == 0) {\n            ans = mid;\n\
    \            break;\n        }\n        x = mid;\n        y = mid;\n    }\n  \
    \  return ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    long diff = x - mid;\n    if (diff > y) {\n        diff\
    \ = y - mid;\n        ans = mid;\n    }\n    if (diff > x) {\n        ans = mid;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n  \
    \      }\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n  \
    \  }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n\
    \    }\n    return choose_num(mid, y);", "    if (x < y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    long ans = -1;\n    while\
    \ (x != y) {\n        if (x % 2 == 0) {\n            x = x / 2;\n            ans\
    \ = ans * 2 + x;\n        } else {\n            y = y / 2;\n            ans =\
    \ ans * 2 + y;\n        }\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long mid = x + (y - x) / 2;\n        ans = choose_num(mid,\
    \ y);\n        if (ans == -1) {\n            ans = mid;\n        }\n    } else\
    \ {\n        long mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n\
    \        if (ans == -1) {\n            ans = mid;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x > y) {\n        long temp = x;\n     \
    \   x = y;\n        y = temp;\n    }\n    while (x++ < y) {\n        if (x % 2\
    \ == 0) {\n            ans = x;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    while (x != 0) {\n        long temp\
    \ = x % 10;\n        if (temp % 2 == 0) {\n            ans = temp;\n         \
    \   break;\n        }\n        x = x / 10;\n    }\n    while (y != 0) {\n    \
    \    long temp = y % 10;\n        if (temp % 2 == 0) {\n            ans = temp;\n\
    \            break;\n        }\n        y = y / 10;\n    }\n    return ans;",
  "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x)\
    \ / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    while (x<y) {\n        long\
    \ mid = (x+y)/2;\n        if (mid%2 == 0) {\n            ans = mid;\n        \
    \    break;\n        }\n        if (mid%2 != 0) {\n            ans = mid;\n  \
    \          x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n  \
    \  }\n    if (ans == -1) {\n        ans = x;\n    }\n    if (ans > y) {\n    \
    \    ans = y;\n    }\n    return ans;", "    long ans = -1;\n    if (x > y) {\n\
    \        swap(x, y);\n    }\n    // The range is [x, y]\n    // We need to find\
    \ out whether x is even or odd\n    // If x is even, then the biggest even number\
    \ must be in the range [x, y \u2212 1]\n    // If x is odd, then the biggest even\
    \ number must be in the range [x + 1, y]\n    // So we only need to check whether\
    \ x is even or odd\n    if (x % 2 == 0) {\n        // x is even\n        if (x\
    \ > y) {\n            swap(x, y);\n        }\n        // x is even\n        long\
    \ mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n  \
    \      }\n    }\n    else {\n        // x is odd\n        if (x > y) {\n     \
    \       swap(x, y);\n        }\n        // x is odd\n        long mid = (x + y)\
    \ / 2;\n        if (mid % 2 == 1) {\n            ans = mid;\n        }\n    }\n\
    \    return ans;", "    // Write your code here\n    long ans = -1;\n    long\
    \ x_even = x % 2 == 0;\n    long y_even = y % 2 == 0;\n    if (x_even && y_even)\
    \ {\n        long x_odd = x % 2 == 1;\n        long y_odd = y % 2 == 1;\n    \
    \    if (x_odd && y_odd) {\n            long x_even = x % 2 == 0;\n          \
    \  long y_even = y % 2 == 0;\n            if (x_even && y_even) {\n          \
    \      long x_odd = x % 2 == 1;\n                long y_odd = y % 2 == 1;\n  \
    \              if (x_odd && y_odd) {\n                    long x_even = x % 2\
    \ == 0;\n                    long y_even = y % 2 == 0;\n                    if\
    \ (x_even && y_even) {\n                        long x_odd = x % 2 == 1;\n   \
    \                     long y_odd = y % 2 == 1;\n                        if (x_odd\
    \ && y_odd) {\n                            long x_even = x % 2 == 0;\n       \
    \                     long y_even = y % 2 == 0;\n                            if\
    \ (x_even && y_even) {\n                                long x_odd = x % 2 ==\
    \ 1;\n                                long y_odd = y % 2 == 1;\n             \
    \                   if (x_odd && y_odd) {\n                                  \
    \  long x_even = x % 2 == 0;\n                                    long y_even\
    \ = y % 2 == 0;\n                                    if (x_even && y_even) {\n\
    \                                        long x_odd = x % 2 == 1;\n          \
    \                              long y_odd = y % 2 == 1;\n                    \
    \                    if (x_odd && y_odd) {\n                                 \
    \           long x_even = x % 2 == 0;\n                                      \
    \      long y_even = y % 2 == 0;\n                                           \
    \ if (x_even && y_even) {\n                                                long\
    \ x_odd = x % 2 == 1;\n                                                long y_odd\
    \ = y % 2 == 1;\n                                                if (x_odd &&\
    \ y_odd) {\n                                                    long x_even =\
    \ x % 2 == 0;\n                                                    long y_even\
    \ = y % 2 == 0;\n                                                    if (x_even\
    \ && y_even) {\n                                                        long x_odd\
    \ = x % 2 == 1;\n                                                        long\
    \ y_odd = y % 2 == 1;\n                                                      \
    \  if (x_odd && y_odd) {\n                                                   \
    \         long x_even = x % 2 == 0;\n                                        \
    \                    long y_even = y % 2 == 0;\n                             \
    \                               if (x_even && y_even) {\n                    \
    \                                            long x_odd = x % 2 == 1;\n      \
    \                                                          long y_odd = y % 2\
    \ == 1;\n                                                                if (x_odd\
    \ && y_odd) {\n                                                              \
    \      long x_even = x % 2 == 0;\n                                           \
    \                         long y_even = y % 2 == 0;\n                        \
    \                                            if (x_even && y_even) {\n       \
    \                                                                 long x_odd =\
    \ x % 2 == 1;\n", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    } else\
    \ {\n        if (mid < x) {\n            ans = mid;\n        } else if (mid >\
    \ y) {\n            ans = mid;\n        } else {\n            ans = -1;\n    \
    \    }\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n    }\n\
    \    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n \
    \   } else {\n        return choose_num(mid, y);\n    }", "    // Write your code\
    \ here\n    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x)\
    \ / 2;\n        ans = choose_num(mid, y);\n        if (ans == -1) {\n        \
    \    ans = mid;\n        }\n    } else {\n        long mid = x + (y - x) / 2;\n\
    \        ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans\
    \ = mid;\n        }\n    }\n    return ans;", "    // Write your code here\n \
    \   long ans = -1;\n    if (x >= y) {\n        ans = x;\n    }\n    else {\n \
    \       ans = y;\n    }\n    while (ans % 2 == 0) {\n        ans /= 2;\n    }\n\
    \    return ans;", "    if (x >= y) {\n        return -1;\n    }\n    long mid\
    \ = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    }\n    return\
    \ choose_num(mid, y);", "    long max_num = x;\n    long min_num = y;\n    long\
    \ mid;\n    while (max_num < min_num) {\n        mid = (max_num + min_num) / 2;\n\
    \        if (mid % 2 == 0) {\n            max_num = mid;\n        } else {\n \
    \           min_num = mid;\n        }\n    }\n    return max_num;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    while (x <= y) {\n        long mid = (x + y) / 2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            x = mid + 1;\n\
    \        } else {\n            y = mid - 1;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans\
    \ = x;\n    } else if (y <= mid) {\n        ans = y;\n    } else {\n        ans\
    \ = mid;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n  \
    \      long mid = x + (y - x) / 2;\n        long a = choose_num(x, mid);\n   \
    \     long b = choose_num(mid + 1, y);\n        ans = a > b ? a : b;\n    } else\
    \ {\n        long mid = y + (x - y) / 2;\n        long a = choose_num(x, mid);\n\
    \        long b = choose_num(mid + 1, y);\n        ans = a > b ? a : b;\n    }\n\
    \    return ans;"]
stop_tokens:
- "\n}"

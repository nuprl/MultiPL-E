name: HumanEval_102_choose_num
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two positive\
  \ numbers x and y and returns the\n// biggest even integer number that is in the\
  \ range [x, y] inclusive. If \n// there's no such number, then the function should\
  \ return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n// >>> choose_num((13),\
  \ (12))\n// (-1)\nlong choose_num(long x, long y) {\n"
tests: "}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
  \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
  \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
  \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
  \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
completions: ["    if (x > y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    long ans = -1;\n    for (long i = 0; i <= y; i++) {\n  \
    \      if ((x % 2) == 0) {\n            ans = i;\n            break;\n       \
    \ }\n        x /= 2;\n    }\n    return ans;", "    long ans = -1;\n    long mid\
    \ = (x + y) / 2;\n    if (x <= mid) {\n        ans = x;\n    } else if (mid <=\
    \ y) {\n        ans = mid;\n    } else {\n        ans = y;\n    }\n    return\
    \ ans;", "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y)\
    \ / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    } else {\n        return\
    \ choose_num(mid, y);\n    }", "    long ans = -1;\n    if (x >= y) {\n      \
    \  long mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n        if\
    \ (ans == -1) {\n            ans = mid;\n        }\n    } else {\n        long\
    \ mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n        if (ans ==\
    \ -1) {\n            ans = mid;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    while (x % 2 == 0 && y % 2 == 0) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    if (x == 0 || y == 0) {\n\
    \        return -1;\n    }\n    while (x % 2 == 0) {\n        x = x / 2;\n   \
    \ }\n    while (y % 2 == 0) {\n        y = y / 2;\n    }\n    long temp = 0;\n\
    \    while (x != 0) {\n        temp += x;\n        x = x / 2;\n    }\n    while\
    \ (y != 0) {\n        temp += y;\n        y = y / 2;\n    }\n    ans = temp;\n\
    \    return ans;", "    // Write your code here\n    long ans = -1;\n    if (x\
    \ >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n\
    \            ans = mid;\n        }\n    }\n    return ans;", "    if (x < y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid\
    \ = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    }\n    if\
    \ (mid % 2 == 1) {\n        return -1;\n    }\n    return choose_num(x, mid);",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while (x <= y)\
    \ {\n        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n\
    \        }\n        mid++;\n    }\n    return ans;", "    long ans = -1;\n   \
    \ if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    // Write\
    \ your code here\n    long ans = -1;\n    if (x >= y) {\n        long mid = x\
    \ + (y - x) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n      \
    \  }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n      \
    \  long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 <\
    \ y) {\n        long mid = x + (y-x)/2;\n        if (mid % 2 == 0) {\n       \
    \     ans = mid;\n            break;\n        }\n        if (mid < y) {\n    \
    \        x = mid;\n        } else {\n            y = mid;\n        }\n    }\n\
    \    return ans;", "    if (x > y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    long ans = -1;\n    while (x != y) {\n        if\
    \ ((x & 1) == 0) {\n            ans = x;\n            break;\n        }\n    \
    \    x >>= 1;\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n\
    \    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n\
    \    } else {\n        return choose_num(mid, y);\n    }", "    // Write your\
    \ code here\n    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid)\
    \ {\n        if (mid <= y) {\n            ans = mid;\n        } else {\n     \
    \       ans = y;\n        }\n    } else {\n        if (mid <= x) {\n         \
    \   ans = mid;\n        } else {\n            ans = x;\n        }\n    }\n   \
    \ return ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = (x\
    \ + y) / 2;\n        ans = choose_num(mid, y);\n        if (ans == -1) {\n   \
    \         ans = choose_num(x, mid);\n        }\n    } else {\n        long mid\
    \ = (y + x) / 2;\n        ans = choose_num(x, mid);\n        if (ans == -1) {\n\
    \            ans = choose_num(y, mid);\n        }\n    }\n    return ans;", " \
    \   long max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num\
    \ < min_num) {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 ==\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;", "    assert(x >= 0 && y >= 0);\n    if\
    \ (x < y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    long ans = -1;\n    long mid = (x + y) / 2;\n    while (true) {\n       \
    \ if (mid % 2 == 0) {\n            if (mid > ans) {\n                ans = mid;\n\
    \            }\n            mid = (x + y) / 2;\n        } else {\n           \
    \ if (mid < ans) {\n                ans = mid;\n            }\n            mid\
    \ = (x + y) / 2;\n        }\n    }\n    return ans;", "    long ans = -1;\n  \
    \  if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x+1 < y) {\n        if ((x % 2) == 0) {\n            ans =\
    \ x;\n            break;\n        }\n        ans = x+1;\n        x++;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    if (x > 0 && y > 0) {\n  \
    \      long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans =\
    \ mid;\n        }\n    }\n    return ans;", "    // Write your code here\n   \
    \ long ans = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 == 0;\n\
    \    if (x_even && y_even) {\n        ans = x;\n    } else if (x_even && !y_even)\
    \ {\n        ans = y;\n    } else if (!x_even && y_even) {\n        ans = x;\n\
    \    } else {\n        ans = y;\n    }\n    return ans;"]
stop_tokens:
- "\n}"

name: HumanEval_116_sort_array
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this Kata, you have to\
  \ sort a vector of non-negative integers according to\n// number of ones in their\
  \ binary representation in ascending order.\n// For similar number of ones, sort\
  \ based on decimal value.\n// It must be implemented like this:\n// >>> sort_array((std::vector<long>({(long)1,\
  \ (long)5, (long)2, (long)3, (long)4})))\n// (std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5}))\n// >>> sort_array((std::vector<long>({(long)-2,\
  \ (long)-3, (long)-4, (long)-5, (long)-6})))\n// (std::vector<long>({(long)-6, (long)-5,\
  \ (long)-4, (long)-3, (long)-2}))\n// >>> sort_array((std::vector<long>({(long)1,\
  \ (long)0, (long)2, (long)3, (long)4})))\n// (std::vector<long>({(long)0, (long)1,\
  \ (long)2, (long)3, (long)4}))\nstd::vector<long> sort_array(std::vector<long> arr)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = sort_array;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)5, (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2,\
  \ (long)4, (long)3, (long)5})));\n    assert(candidate((std::vector<long>({(long)-2,\
  \ (long)-3, (long)-4, (long)-5, (long)-6}))) == (std::vector<long>({(long)-4, (long)-2,\
  \ (long)-6, (long)-5, (long)-3})));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)0, (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)0, (long)1,\
  \ (long)2, (long)4, (long)3})));\n    assert(candidate((std::vector<long>())) ==\
  \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)2, (long)5,\
  \ (long)77, (long)4, (long)5, (long)3, (long)5, (long)7, (long)2, (long)3, (long)4})))\
  \ == (std::vector<long>({(long)2, (long)2, (long)4, (long)4, (long)3, (long)3, (long)5,\
  \ (long)5, (long)5, (long)7, (long)77})));\n    assert(candidate((std::vector<long>({(long)3,\
  \ (long)6, (long)44, (long)12, (long)32, (long)5}))) == (std::vector<long>({(long)32,\
  \ (long)3, (long)5, (long)6, (long)12, (long)44})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)8, (long)16, (long)32}))) == (std::vector<long>({(long)2, (long)4,\
  \ (long)8, (long)16, (long)32})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)8, (long)16, (long)32}))) == (std::vector<long>({(long)2, (long)4,\
  \ (long)8, (long)16, (long)32})));\n}\n"
completions: ["    std::vector<long> sorted_arr(arr.size());\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        long count = 0;\n        for (long j = 0; j\
    \ < arr.size(); j++) {\n            if (arr[j] == i) {\n                count++;\n\
    \            }\n        }\n        if (count == 0) {\n            sorted_arr[i]\
    \ = i;\n        } else {\n            sorted_arr[i] = count;\n        }\n    }\n\
    \    long max_val = sorted_arr[0];\n    for (long i = 1; i < sorted_arr.size();\
    \ i++) {\n        if (sorted_arr[i] > max_val) {\n            max_val = sorted_arr[i];\n\
    \        }\n    }\n    for (long i = 0; i < arr.size(); i++) {\n        long count\
    \ = 0;\n        for (long j = 0; j < arr.size(); j++) {\n            if (arr[j]\
    \ == i) {\n                count++;\n            }\n        }\n        if (count\
    \ == 0) {\n            sorted_arr[i] = i;\n        } else {\n            sorted_arr[i]\
    \ = count * max_val;\n        }\n    }\n    return sorted_arr;", "    long long\
    \ ones = 0;\n    long long zeros = 0;\n    for (long long i : arr) {\n       \
    \ if (i == 1) {\n            ones++;\n        } else {\n            zeros++;\n\
    \        }\n    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long a, long long b) {\n            return a > b;\n        });\n   \
    \ } else if (ones < zeros) {\n        std::sort(arr.begin(), arr.end(), [](long\
    \ long a, long long b) {\n            return a < b;\n        });\n    }\n    return\
    \ arr;", "    // Your code here\n    long long int sum = 0;\n    long long int\
    \ count = 0;\n    for (long long int i : arr) {\n        sum += i;\n        count\
    \ += 1;\n    }\n    long long int max = (long long)count;\n    long long int min\
    \ = (long long)sum;\n    long long int mid = (long long)sum / 2;\n    long long\
    \ int mid1 = (long long)sum / 2;\n    long long int mid2 = (long long)sum / 2;\n\
    \    long long int mid3 = (long long)sum / 2;\n    long long int mid4 = (long\
    \ long)sum / 2;\n    long long int mid5 = (long long)sum / 2;\n    long long int\
    \ mid6 = (long long)sum / 2;\n    long long int mid7 = (long long)sum / 2;\n \
    \   long long int mid8 = (long long)sum / 2;\n    long long int mid9 = (long long)sum\
    \ / 2;\n    long long int mid10 = (long long)sum / 2;\n    long long int mid11\
    \ = (long long)sum / 2;\n    long long int mid12 = (long long)sum / 2;\n    long\
    \ long int mid13 = (long long)sum / 2;\n    long long int mid14 = (long long)sum\
    \ / 2;\n    long long int mid15 = (long long)sum / 2;\n    long long int mid16\
    \ = (long long)sum / 2;\n    long long int mid17 = (long long)sum / 2;\n    long\
    \ long int mid18 = (long long)sum / 2;\n    long long int mid19 = (long long)sum\
    \ / 2;\n    long long int mid20 = (long long)sum / 2;\n    long long int mid21\
    \ = (long long)sum / 2;\n    long long int mid22 = (long long)sum / 2;\n    long\
    \ long int mid23 = (long long)sum / 2;\n    long long int mid24 = (long long)sum\
    \ / 2;\n    long long int mid25 = (long long)sum / 2;\n    long long int mid26\
    \ = (long long)sum / 2;\n    long long int mid27 = (long long)sum / 2;\n    long\
    \ long int mid28 = (long long)sum / 2;\n    long long int mid29 = (long long)sum\
    \ / 2;\n    long long int mid30 = (long long)sum / 2;\n    long long int mid31\
    \ = (long long)sum / 2;\n    long long int mid32 = (long long)sum / 2;\n    long\
    \ long int mid33 = (long long)sum / 2;\n    long long int mid34 = (long long)sum\
    \ / 2;\n    long long int mid35 = (long long)sum / 2;\n    long long int mid36\
    \ = (long long)sum / 2;\n    long long int mid37 = (long long)sum / 2;", "   \
    \ long long ones = 0;\n    for (long long i : arr) {\n        ones += i;\n   \
    \ }\n    long long tens = ones / 10;\n    long long ones = ones - tens * 10;\n\
    \    long long tens10 = tens / 10;\n    long long tens9 = tens - tens10 * 10;\n\
    \    long long tens100 = tens9 / 10;\n    long long tens99 = tens9 - tens100 *\
    \ 10;\n    long long tens999 = tens99 / 10;\n    long long tens9999 = tens99 -\
    \ tens999 * 10;\n    long long tens99999 = tens999 / 10;\n    long long tens999999\
    \ = tens999 - tens9999 * 10;\n    long long tens9999999 = tens9999 / 10;\n   \
    \ long long tens99999999 = tens9999 - tens99999 * 10;\n    long long tens999999999\
    \ = tens99999 / 10;\n    long long tens9999999999 = tens99999 - tens9999999 *\
    \ 10;\n    long long tens99999999999 = tens9999999 / 10;\n    long long tens99999999999999\
    \ = tens9999999 - tens999999999 * 10;\n    long long tens999999999 = tens999999999\
    \ / 10;\n    long long tens9999999999999 = tens999999999 - tens99999999999 * 10;\n\
    \    long long tens999999999999999 = tens99999999999 / 10;\n    long long tens9999999999999999\
    \ = tens999999999999999 - tens9999999999999 * 10;\n    long long tens9999999999999\
    \ = tens9999999999999 / 10;\n    long long tens9999999999999 = tens9999999999999\
    \ - tens999999999999999 * 10;\n    long long tens9999999999999999 = tens9999999999999999\
    \ - tens9999999999999 * 10;\n    long long tens9999999999999 = tens9999999999999\
    \ / 10;\n    long long tens9999999999999 = tens9999999999999 - tens999999999999999\
    \ * 10;\n    long long tens9999999999999999 = tens9999999999999999 - tens9999999999999\
    \ * 10;\n    long long tens9999999999999 = tens9999999999999 / 10;\n    long long\
    \ tens9999999999999 = tens9999999999999 - tens999999999999999 * 10;\n    long\
    \ long tens9999999999999999 = tens9999999999999999", "    long long ones = 0;\n\
    \    long long zeros = 0;\n    for (long long i : arr) {\n        if (i == 1)\
    \ {\n            ones++;\n        } else {\n            zeros++;\n        }\n\
    \    }\n    std::vector<long> res;\n    if (zeros > ones) {\n        std::sort(arr.begin(),\
    \ arr.end(), [](long long a, long long b) { return b - a; });\n        for (long\
    \ long i : arr) {\n            if (i == 1) {\n                res.push_back(i);\n\
    \            }\n        }\n    } else {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long a, long long b) { return a - b; });\n        for (long long i :\
    \ arr) {\n            if (i == 0) {\n                res.push_back(i);\n     \
    \       }\n        }\n    }\n    return res;", "    std::vector<long> sorted_arr(arr.size());\n\
    \    for (size_t i = 0; i < arr.size(); i++) {\n        long ones = 0;\n     \
    \   for (size_t j = 0; j < arr.size(); j++) {\n            if (arr[j] == 1) {\n\
    \                ones++;\n            }\n        }\n        if (ones == 0) {\n\
    \            sorted_arr[i] = arr[i];\n        } else {\n            sorted_arr[i]\
    \ = ones;\n        }\n    }\n    long max_ones = 0;\n    for (size_t i = 0; i\
    \ < arr.size(); i++) {\n        if (sorted_arr[i] > max_ones) {\n            max_ones\
    \ = sorted_arr[i];\n        }\n    }\n    for (size_t i = 0; i < arr.size(); i++)\
    \ {\n        if (sorted_arr[i] > max_ones) {\n            sorted_arr[i] = max_ones;\n\
    \        }\n    }\n    return sorted_arr;", "    long long ones = 0;\n    for\
    \ (long long i : arr) {\n        ones += i;\n    }\n    long long ones_count =\
    \ ones;\n    long long ones_sum = 0;\n    for (long long i : arr) {\n        ones_sum\
    \ += i;\n    }\n    long long ones_sum = ones_sum / ones_count;\n    long long\
    \ ones_sum2 = ones_sum * ones_sum;\n    long long ones_sum3 = ones_sum2 * ones_sum;\n\
    \    long long ones_sum4 = ones_sum3 * ones_sum;\n    long long ones_sum5 = ones_sum4\
    \ * ones_sum;\n    long long ones_sum6 = ones_sum5 * ones_sum;\n    long long\
    \ ones_sum7 = ones_sum6 * ones_sum;\n    long long ones_sum8 = ones_sum7 * ones_sum;\n\
    \    long long ones_sum9 = ones_sum8 * ones_sum;\n    long long ones_sum10 = ones_sum9\
    \ * ones_sum;\n    long long ones_sum11 = ones_sum10 * ones_sum;\n    long long\
    \ ones_sum12 = ones_sum11 * ones_sum;\n    long long ones_sum13 = ones_sum12 *\
    \ ones_sum;\n    long long ones_sum14 = ones_sum13 * ones_sum;\n    long long\
    \ ones_sum15 = ones_sum14 * ones_sum;\n    long long ones_sum16 = ones_sum15 *\
    \ ones_sum;\n    long long ones_sum17 = ones_sum16 * ones_sum;\n    long long\
    \ ones_sum18 = ones_sum17 * ones_sum;\n    long long ones_sum19 = ones_sum18 *\
    \ ones_sum;\n    long long ones_sum20 = ones_sum19 * ones_sum;\n    long long\
    \ ones_sum21 = ones_sum20 * ones_sum;\n    long long ones_sum22 = ones_sum21 *\
    \ ones_sum;\n    long long ones_sum23 = ones_sum22 * ones_sum;\n    long long\
    \ ones_sum24 = ones_sum23 * ones_sum;\n    long long ones_sum25 = ones_sum24 *\
    \ ones_sum;\n    long long ones_sum26 = ones_sum25 * ones_sum;\n    long long\
    \ ones_sum27 = ones_sum26", "    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int ones = 0;\n    for (long\
    \ long int i : arr) {\n        ones += i;\n    }\n    long long int max = 0;\n\
    \    for (long long int i : arr) {\n        max = std::max(max, i);\n    }\n \
    \   long long int min = 0;\n    for (long long int i : arr) {\n        min = std::min(min,\
    \ i);\n    }\n    long long int mid = sum / 2;\n    long long int midOnes = ones\
    \ / 2;\n    long long int midMax = max / 2;\n    long long int midMin = min /\
    \ 2;\n    long long int midMid = (sum - ones) / 2;\n    long long int midMidOnes\
    \ = (ones - max) / 2;\n    long long int midMidMax = (max - min) / 2;\n    long\
    \ long int midMidMin = (min - mid) / 2;\n    long long int midMidMid = (sum -\
    \ ones - max) / 2;\n    long long int midMidOnes = (ones - max - min) / 2;\n \
    \   long long int midMidMax = (max - min - mid) / 2;\n    long long int midMidMin\
    \ = (min - mid - mid) / 2;\n    long long int midMidMid = (sum - ones - max -\
    \ min) / 2;\n    long long int midMidOnes = (ones - max - min - mid) / 2;\n  \
    \  long long int midMidMax = (max - min - mid - mid) / 2;\n    long long int midMidMin\
    \ = (min - mid - mid - mid) / 2;\n    long long int midMidMid = (sum - ones -\
    \ max - min - mid) / 2;\n    long long int midMidOnes = (ones - max - min - mid\
    \ - mid) / 2;\n    long long int midMidMax = (max - min - mid - mid - mid) / 2;\n\
    \    long long int midMidMin = (min - mid - mid - mid - mid) / 2;\n    long long\
    \ int midMidMid = (sum - ones - max - min - mid - mid) / 2;\n    long long int\
    \ midMidOnes = (ones - max - min - mid - mid - mid) / 2;\n    long long int midMidMax\
    \ = (max - min - mid - mid - mid - mid) / 2;\n    long long int midMidMin = (min\
    \ - mid - mid - mid - mid - mid) / 2;\n    long long int midMid", "    // Write\
    \ your code here\n    long long ones = 0;\n    long long zeros = 0;\n    long\
    \ long max = 0;\n    for (long long i : arr) {\n        if (i == 1) {\n      \
    \      ones++;\n        } else {\n            zeros++;\n        }\n        if\
    \ (ones > zeros) {\n            max = i;\n        }\n    }\n    std::vector<long>\
    \ result;\n    for (long long i : arr) {\n        if (i == 1) {\n            result.push_back(1);\n\
    \        } else {\n            result.push_back(0);\n        }\n    }\n    for\
    \ (long long i = 0; i < result.size(); i++) {\n        if (result[i] > max) {\n\
    \            std::swap(result[i], result[max]);\n        }\n    }\n    return\
    \ result;", "    long long ans = 0;\n    for (long long i : arr) {\n        ans\
    \ += i;\n    }\n    long long ones = 0;\n    for (long long i : arr) {\n     \
    \   ones += (i & 1);\n    }\n    long long dec = ones / ans;\n    long long rem\
    \ = ones - dec * ans;\n    std::vector<long> ans_list;\n    for (long long i :\
    \ arr) {\n        if (i & 1) {\n            ans_list.push_back(rem);\n       \
    \ } else {\n            ans_list.push_back(dec);\n        }\n    }\n    return\
    \ ans_list;", "    // Write your code here\n    long long int sum = 0;\n    for\
    \ (long long int i : arr) {\n        sum += i;\n    }\n    long long int ans =\
    \ 0;\n    for (long long int i : arr) {\n        ans += (i & 1);\n    }\n    long\
    \ long int temp = 0;\n    for (long long int i : arr) {\n        temp += (i &\
    \ 1);\n    }\n    long long int temp2 = 0;\n    for (long long int i : arr) {\n\
    \        temp2 += (i & 1);\n    }\n    long long int temp3 = 0;\n    for (long\
    \ long int i : arr) {\n        temp3 += (i & 1);\n    }\n    long long int temp4\
    \ = 0;\n    for (long long int i : arr) {\n        temp4 += (i & 1);\n    }\n\
    \    long long int temp5 = 0;\n    for (long long int i : arr) {\n        temp5\
    \ += (i & 1);\n    }\n    long long int temp6 = 0;\n    for (long long int i :\
    \ arr) {\n        temp6 += (i & 1);\n    }\n    long long int temp7 = 0;\n   \
    \ for (long long int i : arr) {\n        temp7 += (i & 1);\n    }\n    long long\
    \ int temp8 = 0;\n    for (long long int i : arr) {\n        temp8 += (i & 1);\n\
    \    }\n    long long int temp9 = 0;\n    for (long long int i : arr) {\n    \
    \    temp9 += (i & 1);\n    }\n    long long int temp10 = 0;\n    for (long long\
    \ int i : arr) {\n        temp10 += (i & 1);\n    }\n    long long int temp11\
    \ = 0;\n    for (long long int i : arr) {\n        temp11 += (i & 1);\n    }\n\
    \    long long int temp12 = 0;\n    for (long long int i : arr) {\n        temp12\
    \ += (i & 1);\n    }\n    long long int temp13 = 0;\n    for (long long int i\
    \ : arr) {\n        temp13 += (i & 1);\n    }\n    long long int temp14 = 0;\n\
    \    for (long long int i : arr) {\n        temp14 += (i & 1);\n    }\n    long\
    \ long int temp15 = 0;\n    for (long long int i : arr) {\n        temp15 += (i\
    \ & 1);\n    }\n    long long int temp16 = 0;\n    for (long long int i : arr)\
    \ {\n        temp16 += (i & 1);\n    }\n    long long int temp17 = 0;\n    for\
    \ (long long int i : arr) {\n        temp17 += (i & 1);\n    }\n    long long\
    \ int temp18 = 0;\n    for (long long ", "    // Write your code here\n    long\
    \ long int sum = 0;\n    long long int temp = 0;\n    long long int count = 0;\n\
    \    long long int max = 0;\n    for (long long int i = 0; i < arr.size(); i++)\
    \ {\n        temp = arr[i];\n        sum += temp;\n        count += 1;\n     \
    \   if (temp > max) {\n            max = temp;\n        }\n    }\n    long long\
    \ int ones = sum / count;\n    long long int zeros = sum % count;\n    long long\
    \ int temp = ones;\n    long long int temp2 = zeros;\n    long long int temp3\
    \ = ones;\n    long long int temp4 = zeros;\n    long long int temp5 = ones;\n\
    \    long long int temp6 = zeros;\n    long long int temp7 = ones;\n    long long\
    \ int temp8 = zeros;\n    long long int temp9 = ones;\n    long long int temp10\
    \ = zeros;\n    long long int temp11 = ones;\n    long long int temp12 = zeros;\n\
    \    long long int temp13 = ones;\n    long long int temp14 = zeros;\n    long\
    \ long int temp15 = ones;\n    long long int temp16 = zeros;\n    long long int\
    \ temp17 = ones;\n    long long int temp18 = zeros;\n    long long int temp19\
    \ = ones;\n    long long int temp20 = zeros;\n    long long int temp21 = ones;\n\
    \    long long int temp22 = zeros;\n    long long int temp23 = ones;\n    long\
    \ long int temp24 = zeros;\n    long long int temp25 = ones;\n    long long int\
    \ temp26 = zeros;\n    long long int temp27 = ones;\n    long long int temp28\
    \ = zeros;\n    long long int temp29 = ones;\n    long long int temp30 = zeros;\n\
    \    long long int temp31 = ones;\n    long long int temp32 = zeros;\n    long\
    \ long int temp33 = ones;\n    long long int temp34 = zeros;\n    long long int\
    \ temp35 = ones;\n    long long int temp36 = zeros;\n    long long int temp37\
    \ = ones;\n    long long int temp38 = zeros;\n    long long int temp39 = ones;\n\
    \    long long int temp40 = zeros;\n    long long int temp41 = ones;\n    long\
    \ long int temp42 = zeros;\n    long long int temp43 = ones;\n    long long int ",
  "    std::vector<long> res(arr.size());\n    for (size_t i = 0; i < arr.size();\
    \ i++) {\n        long count = 0;\n        while (arr[i] & 1) count++;\n     \
    \   res[i] = count;\n    }\n    std::sort(res.begin(), res.end());\n    return\
    \ res;", "    // Your code goes here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : arr) {\n        sum += i;\n     \
    \   count += 1;\n    }\n    long long int max = 0;\n    for (long long int i :\
    \ arr) {\n        if (i == 1) {\n            max = i;\n        }\n    }\n    long\
    \ long int temp = 0;\n    for (long long int i : arr) {\n        if (i == max)\
    \ {\n            temp = i;\n        }\n    }\n    long long int temp2 = 0;\n \
    \   for (long long int i : arr) {\n        if (i == temp) {\n            temp2\
    \ = i;\n        }\n    }\n    long long int temp3 = 0;\n    for (long long int\
    \ i : arr) {\n        if (i == temp2) {\n            temp3 = i;\n        }\n \
    \   }\n    long long int temp4 = 0;\n    for (long long int i : arr) {\n     \
    \   if (i == temp3) {\n            temp4 = i;\n        }\n    }\n    long long\
    \ int temp5 = 0;\n    for (long long int i : arr) {\n        if (i == temp4) {\n\
    \            temp5 = i;\n        }\n    }\n    long long int temp6 = 0;\n    for\
    \ (long long int i : arr) {\n        if (i == temp5) {\n            temp6 = i;\n\
    \        }\n    }\n    long long int temp7 = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == temp6) {\n            temp7 = i;\n        }\n    }\n   \
    \ long long int temp8 = 0;\n    for (long long int i : arr) {\n        if (i ==\
    \ temp7) {\n            temp8 = i;\n        }\n    }\n    long long int temp9\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == temp8) {\n       \
    \     temp9 = i;\n        }\n    }\n    long long int temp10 = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == temp9) {\n            temp10 = i;\n  \
    \      }\n    }\n    long long int temp11 = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == temp10) {\n            temp11 = i;\n        }\n    }\n \
    \   long long int temp12 = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == temp11) {\n            temp12 = i;\n        }\n    }\n    long long int temp13\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == temp12) {\n      \
    \      temp13 = i;\n        }\n    }\n    long long int temp14 = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == temp13) {\n            temp14 = i;\n \
    \       }\n    }\n    long long int temp15 = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == ", "    std::vector<long> sorted_arr;\n    long ones = 0;\n\
    \    long zeros = 0;\n    for (auto i : arr) {\n        if (i == 1) {\n      \
    \      ones++;\n        } else {\n            zeros++;\n        }\n    }\n   \
    \ if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(), [](long a, long\
    \ b) {\n            return a > b;\n        });\n        sorted_arr.insert(sorted_arr.end(),\
    \ arr.begin(), arr.end());\n    } else {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long a, long b) {\n            return a < b;\n        });\n        sorted_arr.insert(sorted_arr.end(),\
    \ arr.begin(), arr.end());\n    }\n    return sorted_arr;", "    long long ans\
    \ = 0;\n    for (long long i : arr) {\n        ans += i;\n    }\n    long long\
    \ ones = 0;\n    for (long long i : arr) {\n        ones += i & 1;\n    }\n  \
    \  long long dec = ans - ones;\n    long long rev = dec;\n    for (long long i\
    \ : arr) {\n        rev = rev * 10 + i & 1;\n    }\n    std::vector<long> ans_list;\n\
    \    long long i = rev;\n    while (i > 0) {\n        ans_list.push_back(i);\n\
    \        i /= 10;\n    }\n    std::sort(ans_list.begin(), ans_list.end());\n \
    \   return ans_list;", "    // Your code goes here\n    long long int sum = 0;\n\
    \    long long int count = 0;\n    long long int max = 0;\n    long long int min\
    \ = 0;\n    for (long long int i : arr) {\n        sum += i;\n        count +=\
    \ 1;\n        if (i > max) {\n            max = i;\n        }\n        if (i <\
    \ min) {\n            min = i;\n        }\n    }\n    long long int mid = sum\
    \ / count;\n    long long int mid1 = sum % count;\n    long long int mid2 = sum\
    \ / count;\n    long long int mid3 = sum % count;\n    long long int mid4 = sum\
    \ / count;\n    long long int mid5 = sum % count;\n    long long int mid6 = sum\
    \ / count;\n    long long int mid7 = sum % count;\n    long long int mid8 = sum\
    \ / count;\n    long long int mid9 = sum % count;\n    long long int mid10 = sum\
    \ / count;\n    long long int mid11 = sum % count;\n    long long int mid12 =\
    \ sum / count;\n    long long int mid13 = sum % count;\n    long long int mid14\
    \ = sum / count;\n    long long int mid15 = sum % count;\n    long long int mid16\
    \ = sum / count;\n    long long int mid17 = sum % count;\n    long long int mid18\
    \ = sum / count;\n    long long int mid19 = sum % count;\n    long long int mid20\
    \ = sum / count;\n    long long int mid21 = sum % count;\n    long long int mid22\
    \ = sum / count;\n    long long int mid23 = sum % count;\n    long long int mid24\
    \ = sum / count;\n    long long int mid25 = sum % count;\n    long long int mid26\
    \ = sum / count;\n    long long int mid27 = sum % count;\n    long long int mid28\
    \ = sum / count;\n    long long int mid29 = sum % count;\n    long long int mid30\
    \ = sum / count;\n    long long int mid31 = sum % count;\n    long long int mid32\
    \ = sum / count;\n    long long int mid33 = sum % count;\n    long long int mid34\
    \ = sum / count;\n    long long int mid35 = sum % count;\n    long long int mid36\
    \ = sum / count;\n    long long int mid37 = sum % count;\n    long long int mid38\
    \ = sum / count;\n    long long int mid39 = sum % count;\n    long long int mid40\
    \ = sum / count;", "    // Your code goes here\n    long long int sum = 0;\n \
    \   long long int count = 0;\n    for (long long int i : arr) {\n        sum +=\
    \ i;\n        count += 1;\n    }\n    long long int mod = sum % 10;\n    long\
    \ long int temp = sum / 10;\n    long long int temp2 = temp % 10;\n    long long\
    \ int temp3 = temp / 10;\n    long long int temp4 = temp3 % 10;\n    long long\
    \ int temp5 = temp3 / 10;\n    long long int temp6 = temp5 % 10;\n    long long\
    \ int temp7 = temp5 / 10;\n    long long int temp8 = temp7 % 10;\n    long long\
    \ int temp9 = temp7 / 10;\n    long long int temp10 = temp9 % 10;\n    long long\
    \ int temp11 = temp9 / 10;\n    long long int temp12 = temp11 % 10;\n    long\
    \ long int temp13 = temp11 / 10;\n    long long int temp14 = temp13 % 10;\n  \
    \  long long int temp15 = temp13 / 10;\n    long long int temp16 = temp15 % 10;\n\
    \    long long int temp17 = temp15 / 10;\n    long long int temp18 = temp17 %\
    \ 10;\n    long long int temp19 = temp17 / 10;\n    long long int temp20 = temp18\
    \ % 10;\n    long long int temp21 = temp18 / 10;\n    long long int temp22 = temp21\
    \ % 10;\n    long long int temp23 = temp21 / 10;\n    long long int temp24 = temp23\
    \ % 10;\n    long long int temp25 = temp23 / 10;\n    long long int temp26 = temp25\
    \ % 10;\n    long long int temp27 = temp25 / 10;\n    long long int temp28 = temp27\
    \ % 10;\n    long long int temp29 = temp27 / 10;\n    long long int temp30 = temp28\
    \ % 10;\n    long long int temp31 = temp28 / 10;\n    long long int temp32 = temp31\
    \ % 10;\n    long long int temp33 = temp31 / 10;\n    long long int temp34 = temp33\
    \ % 10;\n    long long int temp35 = temp33 / 10;\n    long long int temp36 = temp35\
    \ % 10;\n    long long int temp37 = temp35 / 10;\n    long long int temp38 = temp37\
    \ % 10;\n    long long int temp39 = temp37 / 10;\n    long long int temp40 = temp38\
    \ % 10;\n", "    long long int sum = 0;\n    for (long long int i : arr) {\n \
    \       sum += i;\n    }\n    long long int max = 0;\n    for (long long int i\
    \ : arr) {\n        if (i > max) {\n            max = i;\n        }\n    }\n \
    \   std::vector<long> ans;\n    for (long long int i : arr) {\n        if (i ==\
    \ max) {\n            ans.push_back(i);\n        }\n    }\n    for (long long\
    \ int i : arr) {\n        if (i != max) {\n            long long int count = 0;\n\
    \            for (long long int j : ans) {\n                if (i == j) {\n  \
    \                  count++;\n                }\n            }\n            long\
    \ long int temp = count * i;\n            ans.push_back(temp);\n        }\n  \
    \  }\n    return ans;", "    // Write your code here\n    long long int sum =\
    \ 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n    long long\
    \ int ans = 0;\n    for (long long int i : arr) {\n        ans += (i & 1);\n \
    \   }\n    long long int temp = 0;\n    for (long long int i : arr) {\n      \
    \  temp += (i & 1);\n    }\n    long long int temp2 = temp;\n    for (long long\
    \ int i : arr) {\n        temp2 += (i & 1);\n    }\n    long long int temp3 =\
    \ temp2;\n    for (long long int i : arr) {\n        temp3 += (i & 1);\n    }\n\
    \    long long int temp4 = temp3;\n    for (long long int i : arr) {\n       \
    \ temp4 += (i & 1);\n    }\n    long long int temp5 = temp4;\n    for (long long\
    \ int i : arr) {\n        temp5 += (i & 1);\n    }\n    long long int temp6 =\
    \ temp5;\n    for (long long int i : arr) {\n        temp6 += (i & 1);\n    }\n\
    \    long long int temp7 = temp6;\n    for (long long int i : arr) {\n       \
    \ temp7 += (i & 1);\n    }\n    long long int temp8 = temp7;\n    for (long long\
    \ int i : arr) {\n        temp8 += (i & 1);\n    }\n    long long int temp9 =\
    \ temp8;\n    for (long long int i : arr) {\n        temp9 += (i & 1);\n    }\n\
    \    long long int temp10 = temp9;\n    for (long long int i : arr) {\n      \
    \  temp10 += (i & 1);\n    }\n    long long int temp11 = temp10;\n    for (long\
    \ long int i : arr) {\n        temp11 += (i & 1);\n    }\n    long long int temp12\
    \ = temp11;\n    for (long long int i : arr) {\n        temp12 += (i & 1);\n \
    \   }\n    long long int temp13 = temp12;\n    for (long long int i : arr) {\n\
    \        temp13 += (i & 1);\n    }\n    long long int temp14 = temp13;\n    for\
    \ (long long int i : arr) {\n        temp14 += (i & 1);\n    }\n    long long\
    \ int temp15 = temp14;\n    for (long long int i : arr) {\n        temp15 += (i\
    \ & 1);\n    }\n    long long int temp16 = temp15;\n    for (long long int i :\
    \ arr) {\n        temp16 += (i & 1);\n    }\n    long long int temp17 = temp16;\n\
    \    for (long long int i "]
stop_tokens:
- "\n}"

name: HumanEval_116_sort_array
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this Kata, you have to\
  \ sort a vector of non-negative integers according to\n// number of ones in their\
  \ binary representation in ascending order.\n// For similar number of ones, sort\
  \ based on decimal value.\n// It must be implemented like this:\n// >>> sort_array((std::vector<long>({(long)1,\
  \ (long)5, (long)2, (long)3, (long)4})))\n// (std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5}))\n// >>> sort_array((std::vector<long>({(long)-2,\
  \ (long)-3, (long)-4, (long)-5, (long)-6})))\n// (std::vector<long>({(long)-6, (long)-5,\
  \ (long)-4, (long)-3, (long)-2}))\n// >>> sort_array((std::vector<long>({(long)1,\
  \ (long)0, (long)2, (long)3, (long)4})))\n// (std::vector<long>({(long)0, (long)1,\
  \ (long)2, (long)3, (long)4}))\nstd::vector<long> sort_array(std::vector<long> arr)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = sort_array;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)5, (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2,\
  \ (long)4, (long)3, (long)5})));\n    assert(candidate((std::vector<long>({(long)-2,\
  \ (long)-3, (long)-4, (long)-5, (long)-6}))) == (std::vector<long>({(long)-4, (long)-2,\
  \ (long)-6, (long)-5, (long)-3})));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)0, (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)0, (long)1,\
  \ (long)2, (long)4, (long)3})));\n    assert(candidate((std::vector<long>())) ==\
  \ (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)2, (long)5,\
  \ (long)77, (long)4, (long)5, (long)3, (long)5, (long)7, (long)2, (long)3, (long)4})))\
  \ == (std::vector<long>({(long)2, (long)2, (long)4, (long)4, (long)3, (long)3, (long)5,\
  \ (long)5, (long)5, (long)7, (long)77})));\n    assert(candidate((std::vector<long>({(long)3,\
  \ (long)6, (long)44, (long)12, (long)32, (long)5}))) == (std::vector<long>({(long)32,\
  \ (long)3, (long)5, (long)6, (long)12, (long)44})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)8, (long)16, (long)32}))) == (std::vector<long>({(long)2, (long)4,\
  \ (long)8, (long)16, (long)32})));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)4, (long)8, (long)16, (long)32}))) == (std::vector<long>({(long)2, (long)4,\
  \ (long)8, (long)16, (long)32})));\n}\n"
completions: ["    std::vector<long> sorted_arr(arr.size());\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        long count = 0;\n        for (long j = 0; j\
    \ < arr.size(); j++) {\n            if (arr[j] == i) {\n                count++;\n\
    \            }\n        }\n        if (count == 0) {\n            sorted_arr[i]\
    \ = i;\n        } else {\n            sorted_arr[i] = count;\n        }\n    }\n\
    \    long max_val = sorted_arr[0];\n    for (long i = 1; i < sorted_arr.size();\
    \ i++) {\n        if (sorted_arr[i] > max_val) {\n            max_val = sorted_arr[i];\n\
    \        }\n    }\n    for (long i = 0; i < arr.size(); i++) {\n        long count\
    \ = 0;\n        for (long j = 0; j < arr.size(); j++) {\n            if (arr[j]\
    \ == i) {\n                count++;\n            }\n        }\n        if (count\
    \ == 0) {\n            sorted_arr[i] = i;\n        } else {\n            sorted_arr[i]\
    \ = count * max_val;\n        }\n    }\n    return sorted_arr;", "    long long\
    \ ones = 0;\n    long long zeros = 0;\n    for (long long i : arr) {\n       \
    \ if (i == 1) {\n            ones++;\n        } else {\n            zeros++;\n\
    \        }\n    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long a, long long b) {\n            return a > b;\n        });\n   \
    \ } else if (ones < zeros) {\n        std::sort(arr.begin(), arr.end(), [](long\
    \ long a, long long b) {\n            return a < b;\n        });\n    }\n    return\
    \ arr;", "    // Your code here\n    long long int sum = 0;\n    long long int\
    \ count = 0;\n    for (long long int i : arr) {\n        sum += i;\n        count\
    \ += 1;\n    }\n    long long int max = (long long)count;\n    long long int min\
    \ = (long long)sum;\n    long long int mid = (long long)sum / 2;\n    long long\
    \ int mid1 = (long long)sum / 2;\n    long long int mid2 = (long long)sum / 2;\n\
    \    long long int mid3 = (long long)sum / 2;\n    long long int mid4 = (long\
    \ long)sum / 2;\n    long long int mid5 = (long long)sum / 2;\n    long long int\
    \ mid6 = (long long)sum / 2;\n    long long int mid7 = (long long)sum / 2;\n \
    \   long long int mid8 = (long long)sum / 2;\n    long long int mid9 = (long long)sum\
    \ / 2;\n    long long int mid10 = (long long)sum / 2;\n    long long int mid11\
    \ = (long long)sum / 2;\n    long long int mid12 = (long long)sum / 2;\n    long\
    \ long int mid13 = (long long)sum / 2;\n    long long int mid14 = (long long)sum\
    \ / 2;\n    long long int mid15 = (long long)sum / 2;\n    long long int mid16\
    \ = (long long)sum / 2;\n    long long int mid17 = (long long)sum / 2;\n    long\
    \ long int mid18 = (long long)sum / 2;\n    long long int mid19 = (long long)sum\
    \ / 2;\n    long long int mid20 = (long long)sum / 2;\n    long long int mid21\
    \ = (long long)sum / 2;\n    long long int mid22 = (long long)sum / 2;\n    long\
    \ long int mid23 = (long long)sum / 2;\n    long long int mid24 = (long long)sum\
    \ / 2;\n    long long int mid25 = (long long)sum / 2;\n    long long int mid26\
    \ = (long long)sum / 2;\n    long long int mid27 = (long long)sum / 2;\n    long\
    \ long int mid28 = (long long)sum / 2;\n    long long int mid29 = (long long)sum\
    \ / 2;\n    long long int mid30 = (long long)sum / 2;\n    long long int mid31\
    \ = (long long)sum / 2;\n    long long int mid32 = (long long)sum / 2;\n    long\
    \ long int mid33 = (long long)sum / 2;\n    long long int mid34 = (long long)sum\
    \ / 2;\n    long long int mid35 = (long long)sum / 2;\n    long long int mid36\
    \ = (long long)sum / 2;\n    long long int mid37 = (long long)sum / 2;", "   \
    \ long long ones = 0;\n    for (long long i : arr) {\n        ones += i;\n   \
    \ }\n    long long tens = ones / 10;\n    long long ones = ones - tens * 10;\n\
    \    long long tens10 = tens / 10;\n    long long tens9 = tens - tens10 * 10;\n\
    \    long long tens100 = tens9 / 10;\n    long long tens99 = tens9 - tens100 *\
    \ 10;\n    long long tens999 = tens99 / 10;\n    long long tens9999 = tens99 -\
    \ tens999 * 10;\n    long long tens99999 = tens999 / 10;\n    long long tens999999\
    \ = tens999 - tens9999 * 10;\n    long long tens9999999 = tens9999 / 10;\n   \
    \ long long tens99999999 = tens9999 - tens99999 * 10;\n    long long tens999999999\
    \ = tens99999 / 10;\n    long long tens9999999999 = tens99999 - tens9999999 *\
    \ 10;\n    long long tens99999999999 = tens9999999 / 10;\n    long long tens99999999999999\
    \ = tens9999999 - tens999999999 * 10;\n    long long tens999999999 = tens999999999\
    \ / 10;\n    long long tens9999999999999 = tens999999999 - tens99999999999 * 10;\n\
    \    long long tens999999999999999 = tens99999999999 / 10;\n    long long tens9999999999999999\
    \ = tens999999999999999 - tens9999999999999 * 10;\n    long long tens9999999999999\
    \ = tens9999999999999 / 10;\n    long long tens9999999999999 = tens9999999999999\
    \ - tens999999999999999 * 10;\n    long long tens9999999999999999 = tens9999999999999999\
    \ - tens9999999999999 * 10;\n    long long tens9999999999999 = tens9999999999999\
    \ / 10;\n    long long tens9999999999999 = tens9999999999999 - tens999999999999999\
    \ * 10;\n    long long tens9999999999999999 = tens9999999999999999 - tens9999999999999\
    \ * 10;\n    long long tens9999999999999 = tens9999999999999 / 10;\n    long long\
    \ tens9999999999999 = tens9999999999999 - tens999999999999999 * 10;\n    long\
    \ long tens9999999999999999 = tens9999999999999999", "    long long ones = 0;\n\
    \    long long zeros = 0;\n    for (long long i : arr) {\n        if (i == 1)\
    \ {\n            ones++;\n        } else {\n            zeros++;\n        }\n\
    \    }\n    std::vector<long> res;\n    if (zeros > ones) {\n        std::sort(arr.begin(),\
    \ arr.end(), [](long long a, long long b) { return b - a; });\n        for (long\
    \ long i : arr) {\n            if (i == 1) {\n                res.push_back(i);\n\
    \            }\n        }\n    } else {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long a, long long b) { return a - b; });\n        for (long long i :\
    \ arr) {\n            if (i == 0) {\n                res.push_back(i);\n     \
    \       }\n        }\n    }\n    return res;", "    std::vector<long> sorted_arr(arr.size());\n\
    \    for (size_t i = 0; i < arr.size(); i++) {\n        long ones = 0;\n     \
    \   for (size_t j = 0; j < arr.size(); j++) {\n            if (arr[j] == 1) {\n\
    \                ones++;\n            }\n        }\n        if (ones == 0) {\n\
    \            sorted_arr[i] = arr[i];\n        } else {\n            sorted_arr[i]\
    \ = ones;\n        }\n    }\n    long max_ones = 0;\n    for (size_t i = 0; i\
    \ < arr.size(); i++) {\n        if (sorted_arr[i] > max_ones) {\n            max_ones\
    \ = sorted_arr[i];\n        }\n    }\n    for (size_t i = 0; i < arr.size(); i++)\
    \ {\n        if (sorted_arr[i] > max_ones) {\n            sorted_arr[i] = max_ones;\n\
    \        }\n    }\n    return sorted_arr;", "    long long ones = 0;\n    for\
    \ (long long i : arr) {\n        ones += i;\n    }\n    long long ones_count =\
    \ ones;\n    long long ones_sum = 0;\n    for (long long i : arr) {\n        ones_sum\
    \ += i;\n    }\n    long long ones_sum = ones_sum / ones_count;\n    long long\
    \ ones_sum2 = ones_sum * ones_sum;\n    long long ones_sum3 = ones_sum2 * ones_sum;\n\
    \    long long ones_sum4 = ones_sum3 * ones_sum;\n    long long ones_sum5 = ones_sum4\
    \ * ones_sum;\n    long long ones_sum6 = ones_sum5 * ones_sum;\n    long long\
    \ ones_sum7 = ones_sum6 * ones_sum;\n    long long ones_sum8 = ones_sum7 * ones_sum;\n\
    \    long long ones_sum9 = ones_sum8 * ones_sum;\n    long long ones_sum10 = ones_sum9\
    \ * ones_sum;\n    long long ones_sum11 = ones_sum10 * ones_sum;\n    long long\
    \ ones_sum12 = ones_sum11 * ones_sum;\n    long long ones_sum13 = ones_sum12 *\
    \ ones_sum;\n    long long ones_sum14 = ones_sum13 * ones_sum;\n    long long\
    \ ones_sum15 = ones_sum14 * ones_sum;\n    long long ones_sum16 = ones_sum15 *\
    \ ones_sum;\n    long long ones_sum17 = ones_sum16 * ones_sum;\n    long long\
    \ ones_sum18 = ones_sum17 * ones_sum;\n    long long ones_sum19 = ones_sum18 *\
    \ ones_sum;\n    long long ones_sum20 = ones_sum19 * ones_sum;\n    long long\
    \ ones_sum21 = ones_sum20 * ones_sum;\n    long long ones_sum22 = ones_sum21 *\
    \ ones_sum;\n    long long ones_sum23 = ones_sum22 * ones_sum;\n    long long\
    \ ones_sum24 = ones_sum23 * ones_sum;\n    long long ones_sum25 = ones_sum24 *\
    \ ones_sum;\n    long long ones_sum26 = ones_sum25 * ones_sum;\n    long long\
    \ ones_sum27 = ones_sum26", "    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int ones = 0;\n    for (long\
    \ long int i : arr) {\n        ones += i;\n    }\n    long long int max = 0;\n\
    \    for (long long int i : arr) {\n        max = std::max(max, i);\n    }\n \
    \   long long int min = 0;\n    for (long long int i : arr) {\n        min = std::min(min,\
    \ i);\n    }\n    long long int mid = sum / 2;\n    long long int midOnes = ones\
    \ / 2;\n    long long int midMax = max / 2;\n    long long int midMin = min /\
    \ 2;\n    long long int midMid = (sum - ones) / 2;\n    long long int midMidOnes\
    \ = (ones - max) / 2;\n    long long int midMidMax = (max - min) / 2;\n    long\
    \ long int midMidMin = (min - mid) / 2;\n    long long int midMidMid = (sum -\
    \ ones - max) / 2;\n    long long int midMidOnes = (ones - max - min) / 2;\n \
    \   long long int midMidMax = (max - min - mid) / 2;\n    long long int midMidMin\
    \ = (min - mid - mid) / 2;\n    long long int midMidMid = (sum - ones - max -\
    \ min) / 2;\n    long long int midMidOnes = (ones - max - min - mid) / 2;\n  \
    \  long long int midMidMax = (max - min - mid - mid) / 2;\n    long long int midMidMin\
    \ = (min - mid - mid - mid) / 2;\n    long long int midMidMid = (sum - ones -\
    \ max - min - mid) / 2;\n    long long int midMidOnes = (ones - max - min - mid\
    \ - mid) / 2;\n    long long int midMidMax = (max - min - mid - mid - mid) / 2;\n\
    \    long long int midMidMin = (min - mid - mid - mid - mid) / 2;\n    long long\
    \ int midMidMid = (sum - ones - max - min - mid - mid) / 2;\n    long long int\
    \ midMidOnes = (ones - max - min - mid - mid - mid) / 2;\n    long long int midMidMax\
    \ = (max - min - mid - mid - mid - mid) / 2;\n    long long int midMidMin = (min\
    \ - mid - mid - mid - mid - mid) / 2;\n    long long int midMid", "    // Write\
    \ your code here\n    long long ones = 0;\n    long long zeros = 0;\n    long\
    \ long max = 0;\n    for (long long i : arr) {\n        if (i == 1) {\n      \
    \      ones++;\n        } else {\n            zeros++;\n        }\n        if\
    \ (ones > zeros) {\n            max = i;\n        }\n    }\n    std::vector<long>\
    \ result;\n    for (long long i : arr) {\n        if (i == 1) {\n            result.push_back(1);\n\
    \        } else {\n            result.push_back(0);\n        }\n    }\n    for\
    \ (long long i = 0; i < result.size(); i++) {\n        if (result[i] > max) {\n\
    \            std::swap(result[i], result[max]);\n        }\n    }\n    return\
    \ result;", "    long long ans = 0;\n    for (long long i : arr) {\n        ans\
    \ += i;\n    }\n    long long ones = 0;\n    for (long long i : arr) {\n     \
    \   ones += (i & 1);\n    }\n    long long dec = ones / ans;\n    long long rem\
    \ = ones - dec * ans;\n    std::vector<long> ans_list;\n    for (long long i :\
    \ arr) {\n        if (i & 1) {\n            ans_list.push_back(rem);\n       \
    \ } else {\n            ans_list.push_back(dec);\n        }\n    }\n    return\
    \ ans_list;", "    // Write your code here\n    long long int sum = 0;\n    for\
    \ (long long int i : arr) {\n        sum += i;\n    }\n    long long int ans =\
    \ 0;\n    for (long long int i : arr) {\n        ans += (i & 1);\n    }\n    long\
    \ long int temp = 0;\n    for (long long int i : arr) {\n        temp += (i &\
    \ 1);\n    }\n    long long int temp2 = 0;\n    for (long long int i : arr) {\n\
    \        temp2 += (i & 1);\n    }\n    long long int temp3 = 0;\n    for (long\
    \ long int i : arr) {\n        temp3 += (i & 1);\n    }\n    long long int temp4\
    \ = 0;\n    for (long long int i : arr) {\n        temp4 += (i & 1);\n    }\n\
    \    long long int temp5 = 0;\n    for (long long int i : arr) {\n        temp5\
    \ += (i & 1);\n    }\n    long long int temp6 = 0;\n    for (long long int i :\
    \ arr) {\n        temp6 += (i & 1);\n    }\n    long long int temp7 = 0;\n   \
    \ for (long long int i : arr) {\n        temp7 += (i & 1);\n    }\n    long long\
    \ int temp8 = 0;\n    for (long long int i : arr) {\n        temp8 += (i & 1);\n\
    \    }\n    long long int temp9 = 0;\n    for (long long int i : arr) {\n    \
    \    temp9 += (i & 1);\n    }\n    long long int temp10 = 0;\n    for (long long\
    \ int i : arr) {\n        temp10 += (i & 1);\n    }\n    long long int temp11\
    \ = 0;\n    for (long long int i : arr) {\n        temp11 += (i & 1);\n    }\n\
    \    long long int temp12 = 0;\n    for (long long int i : arr) {\n        temp12\
    \ += (i & 1);\n    }\n    long long int temp13 = 0;\n    for (long long int i\
    \ : arr) {\n        temp13 += (i & 1);\n    }\n    long long int temp14 = 0;\n\
    \    for (long long int i : arr) {\n        temp14 += (i & 1);\n    }\n    long\
    \ long int temp15 = 0;\n    for (long long int i : arr) {\n        temp15 += (i\
    \ & 1);\n    }\n    long long int temp16 = 0;\n    for (long long int i : arr)\
    \ {\n        temp16 += (i & 1);\n    }\n    long long int temp17 = 0;\n    for\
    \ (long long int i : arr) {\n        temp17 += (i & 1);\n    }\n    long long\
    \ int temp18 = 0;\n    for (long long ", "    // Write your code here\n    long\
    \ long int sum = 0;\n    long long int temp = 0;\n    long long int count = 0;\n\
    \    long long int max = 0;\n    for (long long int i = 0; i < arr.size(); i++)\
    \ {\n        temp = arr[i];\n        sum += temp;\n        count += 1;\n     \
    \   if (temp > max) {\n            max = temp;\n        }\n    }\n    long long\
    \ int ones = sum / count;\n    long long int zeros = sum % count;\n    long long\
    \ int temp = ones;\n    long long int temp2 = zeros;\n    long long int temp3\
    \ = ones;\n    long long int temp4 = zeros;\n    long long int temp5 = ones;\n\
    \    long long int temp6 = zeros;\n    long long int temp7 = ones;\n    long long\
    \ int temp8 = zeros;\n    long long int temp9 = ones;\n    long long int temp10\
    \ = zeros;\n    long long int temp11 = ones;\n    long long int temp12 = zeros;\n\
    \    long long int temp13 = ones;\n    long long int temp14 = zeros;\n    long\
    \ long int temp15 = ones;\n    long long int temp16 = zeros;\n    long long int\
    \ temp17 = ones;\n    long long int temp18 = zeros;\n    long long int temp19\
    \ = ones;\n    long long int temp20 = zeros;\n    long long int temp21 = ones;\n\
    \    long long int temp22 = zeros;\n    long long int temp23 = ones;\n    long\
    \ long int temp24 = zeros;\n    long long int temp25 = ones;\n    long long int\
    \ temp26 = zeros;\n    long long int temp27 = ones;\n    long long int temp28\
    \ = zeros;\n    long long int temp29 = ones;\n    long long int temp30 = zeros;\n\
    \    long long int temp31 = ones;\n    long long int temp32 = zeros;\n    long\
    \ long int temp33 = ones;\n    long long int temp34 = zeros;\n    long long int\
    \ temp35 = ones;\n    long long int temp36 = zeros;\n    long long int temp37\
    \ = ones;\n    long long int temp38 = zeros;\n    long long int temp39 = ones;\n\
    \    long long int temp40 = zeros;\n    long long int temp41 = ones;\n    long\
    \ long int temp42 = zeros;\n    long long int temp43 = ones;\n    long long int ",
  "    std::vector<long> res(arr.size());\n    for (size_t i = 0; i < arr.size();\
    \ i++) {\n        long count = 0;\n        while (arr[i] & 1) count++;\n     \
    \   res[i] = count;\n    }\n    std::sort(res.begin(), res.end());\n    return\
    \ res;", "    // Your code goes here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : arr) {\n        sum += i;\n     \
    \   count += 1;\n    }\n    long long int max = 0;\n    for (long long int i :\
    \ arr) {\n        if (i == 1) {\n            max = i;\n        }\n    }\n    long\
    \ long int temp = 0;\n    for (long long int i : arr) {\n        if (i == max)\
    \ {\n            temp = i;\n        }\n    }\n    long long int temp2 = 0;\n \
    \   for (long long int i : arr) {\n        if (i == temp) {\n            temp2\
    \ = i;\n        }\n    }\n    long long int temp3 = 0;\n    for (long long int\
    \ i : arr) {\n        if (i == temp2) {\n            temp3 = i;\n        }\n \
    \   }\n    long long int temp4 = 0;\n    for (long long int i : arr) {\n     \
    \   if (i == temp3) {\n            temp4 = i;\n        }\n    }\n    long long\
    \ int temp5 = 0;\n    for (long long int i : arr) {\n        if (i == temp4) {\n\
    \            temp5 = i;\n        }\n    }\n    long long int temp6 = 0;\n    for\
    \ (long long int i : arr) {\n        if (i == temp5) {\n            temp6 = i;\n\
    \        }\n    }\n    long long int temp7 = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == temp6) {\n            temp7 = i;\n        }\n    }\n   \
    \ long long int temp8 = 0;\n    for (long long int i : arr) {\n        if (i ==\
    \ temp7) {\n            temp8 = i;\n        }\n    }\n    long long int temp9\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == temp8) {\n       \
    \     temp9 = i;\n        }\n    }\n    long long int temp10 = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == temp9) {\n            temp10 = i;\n  \
    \      }\n    }\n    long long int temp11 = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == temp10) {\n            temp11 = i;\n        }\n    }\n \
    \   long long int temp12 = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == temp11) {\n            temp12 = i;\n        }\n    }\n    long long int temp13\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == temp12) {\n      \
    \      temp13 = i;\n        }\n    }\n    long long int temp14 = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == temp13) {\n            temp14 = i;\n \
    \       }\n    }\n    long long int temp15 = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == ", "    std::vector<long> sorted_arr;\n    long ones = 0;\n\
    \    long zeros = 0;\n    for (auto i : arr) {\n        if (i == 1) {\n      \
    \      ones++;\n        } else {\n            zeros++;\n        }\n    }\n   \
    \ if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(), [](long a, long\
    \ b) {\n            return a > b;\n        });\n        sorted_arr.insert(sorted_arr.end(),\
    \ arr.begin(), arr.end());\n    } else {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long a, long b) {\n            return a < b;\n        });\n        sorted_arr.insert(sorted_arr.end(),\
    \ arr.begin(), arr.end());\n    }\n    return sorted_arr;", "    long long ans\
    \ = 0;\n    for (long long i : arr) {\n        ans += i;\n    }\n    long long\
    \ ones = 0;\n    for (long long i : arr) {\n        ones += i & 1;\n    }\n  \
    \  long long dec = ans - ones;\n    long long rev = dec;\n    for (long long i\
    \ : arr) {\n        rev = rev * 10 + i & 1;\n    }\n    std::vector<long> ans_list;\n\
    \    long long i = rev;\n    while (i > 0) {\n        ans_list.push_back(i);\n\
    \        i /= 10;\n    }\n    std::sort(ans_list.begin(), ans_list.end());\n \
    \   return ans_list;", "    // Your code goes here\n    long long int sum = 0;\n\
    \    long long int count = 0;\n    long long int max = 0;\n    long long int min\
    \ = 0;\n    for (long long int i : arr) {\n        sum += i;\n        count +=\
    \ 1;\n        if (i > max) {\n            max = i;\n        }\n        if (i <\
    \ min) {\n            min = i;\n        }\n    }\n    long long int mid = sum\
    \ / count;\n    long long int mid1 = sum % count;\n    long long int mid2 = sum\
    \ / count;\n    long long int mid3 = sum % count;\n    long long int mid4 = sum\
    \ / count;\n    long long int mid5 = sum % count;\n    long long int mid6 = sum\
    \ / count;\n    long long int mid7 = sum % count;\n    long long int mid8 = sum\
    \ / count;\n    long long int mid9 = sum % count;\n    long long int mid10 = sum\
    \ / count;\n    long long int mid11 = sum % count;\n    long long int mid12 =\
    \ sum / count;\n    long long int mid13 = sum % count;\n    long long int mid14\
    \ = sum / count;\n    long long int mid15 = sum % count;\n    long long int mid16\
    \ = sum / count;\n    long long int mid17 = sum % count;\n    long long int mid18\
    \ = sum / count;\n    long long int mid19 = sum % count;\n    long long int mid20\
    \ = sum / count;\n    long long int mid21 = sum % count;\n    long long int mid22\
    \ = sum / count;\n    long long int mid23 = sum % count;\n    long long int mid24\
    \ = sum / count;\n    long long int mid25 = sum % count;\n    long long int mid26\
    \ = sum / count;\n    long long int mid27 = sum % count;\n    long long int mid28\
    \ = sum / count;\n    long long int mid29 = sum % count;\n    long long int mid30\
    \ = sum / count;\n    long long int mid31 = sum % count;\n    long long int mid32\
    \ = sum / count;\n    long long int mid33 = sum % count;\n    long long int mid34\
    \ = sum / count;\n    long long int mid35 = sum % count;\n    long long int mid36\
    \ = sum / count;\n    long long int mid37 = sum % count;\n    long long int mid38\
    \ = sum / count;\n    long long int mid39 = sum % count;\n    long long int mid40\
    \ = sum / count;", "    // Your code goes here\n    long long int sum = 0;\n \
    \   long long int count = 0;\n    for (long long int i : arr) {\n        sum +=\
    \ i;\n        count += 1;\n    }\n    long long int mod = sum % 10;\n    long\
    \ long int temp = sum / 10;\n    long long int temp2 = temp % 10;\n    long long\
    \ int temp3 = temp / 10;\n    long long int temp4 = temp3 % 10;\n    long long\
    \ int temp5 = temp3 / 10;\n    long long int temp6 = temp5 % 10;\n    long long\
    \ int temp7 = temp5 / 10;\n    long long int temp8 = temp7 % 10;\n    long long\
    \ int temp9 = temp7 / 10;\n    long long int temp10 = temp9 % 10;\n    long long\
    \ int temp11 = temp9 / 10;\n    long long int temp12 = temp11 % 10;\n    long\
    \ long int temp13 = temp11 / 10;\n    long long int temp14 = temp13 % 10;\n  \
    \  long long int temp15 = temp13 / 10;\n    long long int temp16 = temp15 % 10;\n\
    \    long long int temp17 = temp15 / 10;\n    long long int temp18 = temp17 %\
    \ 10;\n    long long int temp19 = temp17 / 10;\n    long long int temp20 = temp18\
    \ % 10;\n    long long int temp21 = temp18 / 10;\n    long long int temp22 = temp21\
    \ % 10;\n    long long int temp23 = temp21 / 10;\n    long long int temp24 = temp23\
    \ % 10;\n    long long int temp25 = temp23 / 10;\n    long long int temp26 = temp25\
    \ % 10;\n    long long int temp27 = temp25 / 10;\n    long long int temp28 = temp27\
    \ % 10;\n    long long int temp29 = temp27 / 10;\n    long long int temp30 = temp28\
    \ % 10;\n    long long int temp31 = temp28 / 10;\n    long long int temp32 = temp31\
    \ % 10;\n    long long int temp33 = temp31 / 10;\n    long long int temp34 = temp33\
    \ % 10;\n    long long int temp35 = temp33 / 10;\n    long long int temp36 = temp35\
    \ % 10;\n    long long int temp37 = temp35 / 10;\n    long long int temp38 = temp37\
    \ % 10;\n    long long int temp39 = temp37 / 10;\n    long long int temp40 = temp38\
    \ % 10;\n", "    long long int sum = 0;\n    for (long long int i : arr) {\n \
    \       sum += i;\n    }\n    long long int max = 0;\n    for (long long int i\
    \ : arr) {\n        if (i > max) {\n            max = i;\n        }\n    }\n \
    \   std::vector<long> ans;\n    for (long long int i : arr) {\n        if (i ==\
    \ max) {\n            ans.push_back(i);\n        }\n    }\n    for (long long\
    \ int i : arr) {\n        if (i != max) {\n            long long int count = 0;\n\
    \            for (long long int j : ans) {\n                if (i == j) {\n  \
    \                  count++;\n                }\n            }\n            long\
    \ long int temp = count * i;\n            ans.push_back(temp);\n        }\n  \
    \  }\n    return ans;", "    // Write your code here\n    long long int sum =\
    \ 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n    long long\
    \ int ans = 0;\n    for (long long int i : arr) {\n        ans += (i & 1);\n \
    \   }\n    long long int temp = 0;\n    for (long long int i : arr) {\n      \
    \  temp += (i & 1);\n    }\n    long long int temp2 = temp;\n    for (long long\
    \ int i : arr) {\n        temp2 += (i & 1);\n    }\n    long long int temp3 =\
    \ temp2;\n    for (long long int i : arr) {\n        temp3 += (i & 1);\n    }\n\
    \    long long int temp4 = temp3;\n    for (long long int i : arr) {\n       \
    \ temp4 += (i & 1);\n    }\n    long long int temp5 = temp4;\n    for (long long\
    \ int i : arr) {\n        temp5 += (i & 1);\n    }\n    long long int temp6 =\
    \ temp5;\n    for (long long int i : arr) {\n        temp6 += (i & 1);\n    }\n\
    \    long long int temp7 = temp6;\n    for (long long int i : arr) {\n       \
    \ temp7 += (i & 1);\n    }\n    long long int temp8 = temp7;\n    for (long long\
    \ int i : arr) {\n        temp8 += (i & 1);\n    }\n    long long int temp9 =\
    \ temp8;\n    for (long long int i : arr) {\n        temp9 += (i & 1);\n    }\n\
    \    long long int temp10 = temp9;\n    for (long long int i : arr) {\n      \
    \  temp10 += (i & 1);\n    }\n    long long int temp11 = temp10;\n    for (long\
    \ long int i : arr) {\n        temp11 += (i & 1);\n    }\n    long long int temp12\
    \ = temp11;\n    for (long long int i : arr) {\n        temp12 += (i & 1);\n \
    \   }\n    long long int temp13 = temp12;\n    for (long long int i : arr) {\n\
    \        temp13 += (i & 1);\n    }\n    long long int temp14 = temp13;\n    for\
    \ (long long int i : arr) {\n        temp14 += (i & 1);\n    }\n    long long\
    \ int temp15 = temp14;\n    for (long long int i : arr) {\n        temp15 += (i\
    \ & 1);\n    }\n    long long int temp16 = temp15;\n    for (long long int i :\
    \ arr) {\n        temp16 += (i & 1);\n    }\n    long long int temp17 = temp16;\n\
    \    for (long long int i ", "    std::vector<long> sorted_arr;\n    long max_ones\
    \ = 0, max_dec = 0;\n    for (auto i : arr) {\n        long ones = 0, dec = 0;\n\
    \        while (i != 0) {\n            ones = i & 1;\n            i >>= 1;\n \
    \           dec += ones;\n        }\n        if (ones > max_ones) {\n        \
    \    max_ones = ones;\n        }\n        if (dec > max_dec) {\n            max_dec\
    \ = dec;\n        }\n    }\n    for (auto i : arr) {\n        long ones = 0, dec\
    \ = 0;\n        while (i != 0) {\n            ones = i & 1;\n            i >>=\
    \ 1;\n            dec += ones;\n        }\n        if (ones == max_ones) {\n \
    \           sorted_arr.push_back(dec);\n        }\n    }\n    return sorted_arr;",
  "    // Write your code here\n    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int mod = sum % 10;\n  \
    \  long long int rem = sum / 10;\n    long long int count = 0;\n    for (long\
    \ long int i : arr) {\n        if (i % 2 == 1) {\n            count += 1;\n  \
    \      }\n    }\n    std::vector<long> ans;\n    for (long long int i : arr) {\n\
    \        if (i % 2 == 1) {\n            ans.push_back(rem);\n            rem =\
    \ rem - rem;\n        } else {\n            ans.push_back(i);\n        }\n   \
    \ }\n    ans.push_back(rem);\n    ans.push_back(mod);\n    return ans;", "   \
    \ long long ones = 0;\n    for (auto i : arr) {\n        ones += i;\n    }\n \
    \   long long maxOnes = ones;\n    for (auto i : arr) {\n        maxOnes = max(maxOnes,\
    \ i);\n    }\n    std::vector<long> sorted;\n    for (auto i : arr) {\n      \
    \  if (maxOnes == i) {\n            sorted.push_back(i);\n            maxOnes\
    \ = 0;\n        } else {\n            maxOnes = max(maxOnes, i);\n        }\n\
    \    }\n    return sorted;", "    long long ones = 0;\n    for (long long i :\
    \ arr) {\n        ones += i;\n    }\n    long long maxOnes = ones;\n    for (long\
    \ long i : arr) {\n        maxOnes = max(maxOnes, i);\n    }\n    std::vector<long>\
    \ res(arr.size());\n    for (long long i = 0; i < arr.size(); i++) {\n       \
    \ long long ones = arr[i];\n        long long maxOnes = ones;\n        for (long\
    \ long j = i + 1; j < arr.size(); j++) {\n            ones += arr[j];\n      \
    \      maxOnes = max(maxOnes, ones);\n        }\n        if (maxOnes == ones)\
    \ {\n            res[i] = maxOnes;\n        } else {\n            res[i] = ones\
    \ / maxOnes;\n        }\n    }\n    return res;", "    long long int sum = 0;\n\
    \    for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ max = 0;\n    for (long long int i : arr) {\n        if (i > max) {\n      \
    \      max = i;\n        }\n    }\n    std::vector<long> ans;\n    for (long long\
    \ int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n   \
    \     } else {\n            long long int count = 0;\n            long long int\
    \ sum = 0;\n            for (long long int j : arr) {\n                if (j ==\
    \ i) {\n                    count++;\n                    sum += j;\n        \
    \        }\n            }\n            long long int temp = sum / count;\n   \
    \         ans.push_back(temp);\n        }\n    }\n    return ans;", '    // Your
    code here', "    // Your code here\n    long long int ones = 0;\n    long long\
    \ int zeros = 0;\n    long long int max = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == 1) {\n            ones++;\n        }\n        else if (i\
    \ == 0) {\n            zeros++;\n        }\n        else {\n            if (ones\
    \ > zeros) {\n                max = i;\n            }\n            else {\n  \
    \              max = zeros;\n            }\n        }\n    }\n    std::vector<long>\
    \ ans;\n    for (long long int i : arr) {\n        if (i == 1) {\n           \
    \ ans.push_back(i);\n        }\n        else if (i == 0) {\n            ans.push_back(max);\n\
    \        }\n        else {\n            if (ones > zeros) {\n                ans.push_back(i);\n\
    \            }\n            else {\n                ans.push_back(max);\n    \
    \        }\n        }\n    }\n    return ans;", "    // Write your code here\n\
    \    long long int sum = 0;\n    long long int max = 0;\n    long long int min\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : arr) {\n    \
    \    sum += i;\n        if (sum > max) {\n            max = sum;\n        }\n\
    \        if (sum < min) {\n            min = sum;\n        }\n        count +=\
    \ 1;\n    }\n    long long int sum2 = 0;\n    long long int max2 = 0;\n    long\
    \ long int min2 = 0;\n    long long int count2 = 0;\n    for (long long int i\
    \ : arr) {\n        sum2 += i;\n        if (sum2 > max2) {\n            max2 =\
    \ sum2;\n        }\n        if (sum2 < min2) {\n            min2 = sum2;\n   \
    \     }\n        count2 += 1;\n    }\n    long long int sum3 = 0;\n    long long\
    \ int max3 = 0;\n    long long int min3 = 0;\n    long long int count3 = 0;\n\
    \    for (long long int i : arr) {\n        sum3 += i;\n        if (sum3 > max3)\
    \ {\n            max3 = sum3;\n        }\n        if (sum3 < min3) {\n       \
    \     min3 = sum3;\n        }\n        count3 += 1;\n    }\n    long long int\
    \ sum4 = 0;\n    long long int max4 = 0;\n    long long int min4 = 0;\n    long\
    \ long int count4 = 0;\n    for (long long int i : arr) {\n        sum4 += i;\n\
    \        if (sum4 > max4) {\n            max4 = sum4;\n        }\n        if (sum4\
    \ < min4) {\n            min4 = sum4;\n        }\n        count4 += 1;\n    }\n\
    \    long long int sum5 = 0;\n    long long int max5 = 0;\n    long long int min5\
    \ = 0;\n    long long int count5 = 0;\n    for (long long int i : arr) {\n   \
    \     sum5 += i;\n        if (sum5 > max5) {\n            max5 = sum5;\n     \
    \   }\n        if (sum5 < min5) {\n            min5 = sum5;\n        }\n     \
    \   count5 += 1;\n    }\n    long long int sum6 = 0;\n    long long int max6 =\
    \ 0;\n    long long int min6 = 0;\n    long long int count6 = 0;\n    for (long\
    \ long int i : arr) {\n        sum6 += i;\n        if (sum6 > max6) {\n      \
    \      max6 = sum6;\n        }\n        if (sum6 < min6) {\n            min6 =\
    \ sum6;\n        }\n        count6 += 1;\n    }\n    long long int sum7 = 0;\n\
    \    long long int max7 = 0;\n    long long int min7 = 0;\n    long long int count7\
    \ = 0;", "    // Your code here\n    long long int sum = 0;\n    for (long long\
    \ int i : arr) {\n        sum += i;\n    }\n    long long int ones = sum;\n  \
    \  long long int zeros = 0;\n    for (long long int i : arr) {\n        zeros\
    \ += i;\n    }\n    std::vector<long> ans;\n    for (long long int i : arr) {\n\
    \        if (ones == zeros) {\n            ans.push_back(i);\n            ones\
    \ = sum - i;\n            zeros = 0;\n        } else {\n            long long\
    \ int temp = ones;\n            ones = zeros - i;\n            zeros = temp;\n\
    \        }\n    }\n    return ans;", "    // Your code goes here\n    long long\
    \ ones = 0;\n    long long zeros = 0;\n    for (long long i : arr) {\n       \
    \ if (i == 1) {\n            ones++;\n        } else {\n            zeros++;\n\
    \        }\n    }\n    long long ones_count = ones;\n    long long zeros_count\
    \ = zeros;\n    long long ones_index = ones_count;\n    long long zeros_index\
    \ = zeros_count;\n    long long ones_index2 = ones_count;\n    long long zeros_index2\
    \ = zeros_count;\n    while (ones_count > ones_index2) {\n        ones_index2--;\n\
    \        ones_index--;\n        ones_index--;\n    }\n    while (zeros_count >\
    \ zeros_index2) {\n        zeros_index2--;\n        zeros_index--;\n        zeros_index--;\n\
    \    }\n    long long ones_index3 = ones_index;\n    long long zeros_index3 =\
    \ zeros_index;\n    long long ones_index4 = ones_index;\n    long long zeros_index4\
    \ = zeros_index;\n    while (ones_index > ones_index3) {\n        ones_index3--;\n\
    \        ones_index--;\n        ones_index--;\n    }\n    while (zeros_index >\
    \ zeros_index3) {\n        zeros_index3--;\n        zeros_index--;\n        zeros_index--;\n\
    \    }\n    long long ones_index5 = ones_index3;\n    long long zeros_index5 =\
    \ zeros_index3;\n    long long ones_index6 = ones_index3;\n    long long zeros_index6\
    \ = zeros_index3;\n    while (ones_index3 > ones_index5) {\n        ones_index5--;\n\
    \        ones_index--;\n        ones_index--;\n    }\n    while (zeros_index3\
    \ > zeros_index5) {\n        zeros_index5--;\n        zeros_index--;\n       \
    \ zeros_index--;\n    }\n    long long ones_index7 = ones_index5;\n    long long\
    \ zeros_index7 = zeros_index5;\n    long long ones_index8 = ones_index5;\n   \
    \ long long zeros_index8 = zeros_index5;\n    while (ones_index5 > ones_index7)\
    \ {\n        ones_index7--;\n        ones_index--;\n        ones_index--;\n  \
    \  }\n    while (zeros_index5 > zeros_index7) {\n        zeros_index7--;\n   \
    \     zeros_index--;\n        zeros_index--;\n    }\n    long long ones_index9\
    \ = ones_", "    long long int sum = 0;\n    long long int temp = 0;\n    for\
    \ (auto i : arr) {\n        temp = i;\n        sum += temp;\n    }\n    long long\
    \ int max = 0;\n    for (auto i : arr) {\n        if (i == 1) {\n            max\
    \ = i;\n        }\n    }\n    long long int min = 0;\n    for (auto i : arr) {\n\
    \        if (i == 0) {\n            min = i;\n        }\n    }\n    long long\
    \ int mid = sum / 2;\n    long long int mid1 = sum / 2;\n    long long int mid2\
    \ = sum / 2;\n    long long int mid3 = sum / 2;\n    long long int mid4 = sum\
    \ / 2;\n    long long int mid5 = sum / 2;\n    long long int mid6 = sum / 2;\n\
    \    long long int mid7 = sum / 2;\n    long long int mid8 = sum / 2;\n    long\
    \ long int mid9 = sum / 2;\n    long long int mid10 = sum / 2;\n    long long\
    \ int mid11 = sum / 2;\n    long long int mid12 = sum / 2;\n    long long int\
    \ mid13 = sum / 2;\n    long long int mid14 = sum / 2;\n    long long int mid15\
    \ = sum / 2;\n    long long int mid16 = sum / 2;\n    long long int mid17 = sum\
    \ / 2;\n    long long int mid18 = sum / 2;\n    long long int mid19 = sum / 2;\n\
    \    long long int mid20 = sum / 2;\n    long long int mid21 = sum / 2;\n    long\
    \ long int mid22 = sum / 2;\n    long long int mid23 = sum / 2;\n    long long\
    \ int mid24 = sum / 2;\n    long long int mid25 = sum / 2;\n    long long int\
    \ mid26 = sum / 2;\n    long long int mid27 = sum / 2;\n    long long int mid28\
    \ = sum / 2;\n    long long int mid29 = sum / 2;\n    long long int mid30 = sum\
    \ / 2;\n    long long int mid31 = sum / 2;\n    long long int mid32 = sum / 2;\n\
    \    long long int mid33 = sum / 2;\n    long long int mid34 = sum / 2;\n    long\
    \ long int mid35 = sum / 2;\n    long long int mid36 = sum / 2;\n    long long\
    \ int mid37 = sum / 2;\n    long long int mid38 = sum / 2;\n    long long int\
    \ mid39 = sum / 2;\n    ", "    long long ones = 0;\n    long long zeros = 0;\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones++;\n \
    \       } else {\n            zeros++;\n        }\n    }\n    if (ones > zeros)\
    \ {\n        std::sort(arr.begin(), arr.end(), [](long long a, long long b) {\
    \ return a > b; });\n    } else {\n        std::sort(arr.begin(), arr.end(), [](long\
    \ long a, long long b) { return a < b; });\n    }\n    return arr;", "    // Write\
    \ your code here\n    long long int sum = 0;\n    for (long long int i : arr)\
    \ {\n        sum += i;\n    }\n    long long int ones = 0;\n    for (long long\
    \ int i : arr) {\n        ones += i;\n    }\n    long long int max = 0;\n    for\
    \ (long long int i : arr) {\n        if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    long long int min = 0;\n    for (long long int i : arr) {\n\
    \        if (i < min) {\n            min = i;\n        }\n    }\n    long long\
    \ int mid = sum / 2;\n    long long int mid2 = ones / 2;\n    long long int mid3\
    \ = max / 2;\n    long long int mid4 = min / 2;\n    long long int mid5 = mid\
    \ / 2;\n    long long int mid6 = mid2 / 2;\n    long long int mid7 = mid3 / 2;\n\
    \    long long int mid8 = mid4 / 2;\n    long long int mid9 = mid5 / 2;\n    long\
    \ long int mid10 = mid6 / 2;\n    long long int mid11 = mid7 / 2;\n    long long\
    \ int mid12 = mid8 / 2;\n    long long int mid13 = mid9 / 2;\n    long long int\
    \ mid14 = mid10 / 2;\n    long long int mid15 = mid11 / 2;\n    long long int\
    \ mid16 = mid12 / 2;\n    long long int mid17 = mid13 / 2;\n    long long int\
    \ mid18 = mid14 / 2;\n    long long int mid19 = mid15 / 2;\n    long long int\
    \ mid20 = mid16 / 2;\n    long long int mid21 = mid17 / 2;\n    long long int\
    \ mid22 = mid18 / 2;\n    long long int mid23 = mid19 / 2;\n    long long int\
    \ mid24 = mid20 / 2;\n    long long int mid25 = mid21 / 2;\n    long long int\
    \ mid26 = mid22 / 2;\n    long long int mid27 = mid23 / 2;\n    long long int\
    \ mid28 = mid24 / 2;\n    long long int mid29 = mid25 / 2;\n    long long int\
    \ mid30 = mid26 / 2;\n    long long int mid31 = mid27 / 2;\n    long long int\
    \ mid32 = mid28 / 2;\n    long long int mid33 = mid29 / 2;\n    long long int\
    \ mid34 = mid30 / 2;\n    long long int mid35 = mid31 / 2;\n    ", "    // Your\
    \ code here\n    long long int sum = 0;\n    long long int count = 0;\n    long\
    \ long int max = 0;\n    for (long long int i : arr) {\n        sum += i;\n  \
    \      count += 1;\n        if (i > max) {\n            max = i;\n        }\n\
    \    }\n    long long int ones = sum / count;\n    long long int zeros = sum %\
    \ count;\n    long long int temp = max;\n    long long int temp2 = ones;\n   \
    \ long long int temp3 = zeros;\n    long long int temp4 = max;\n    long long\
    \ int temp5 = ones;\n    long long int temp6 = zeros;\n    long long int temp7\
    \ = max;\n    long long int temp8 = ones;\n    long long int temp9 = zeros;\n\
    \    long long int temp10 = max;\n    long long int temp11 = ones;\n    long long\
    \ int temp12 = zeros;\n    long long int temp13 = max;\n    long long int temp14\
    \ = ones;\n    long long int temp15 = zeros;\n    long long int temp16 = max;\n\
    \    long long int temp17 = ones;\n    long long int temp18 = zeros;\n    long\
    \ long int temp19 = max;\n    long long int temp20 = ones;\n    long long int\
    \ temp21 = zeros;\n    long long int temp22 = max;\n    long long int temp23 =\
    \ ones;\n    long long int temp24 = zeros;\n    long long int temp25 = max;\n\
    \    long long int temp26 = ones;\n    long long int temp27 = zeros;\n    long\
    \ long int temp28 = max;\n    long long int temp29 = ones;\n    long long int\
    \ temp30 = zeros;\n    long long int temp31 = max;\n    long long int temp32 =\
    \ ones;\n    long long int temp33 = zeros;\n    long long int temp34 = max;\n\
    \    long long int temp35 = ones;\n    long long int temp36 = zeros;\n    long\
    \ long int temp37 = max;\n    long long int temp38 = ones;\n    long long int\
    \ temp39 = zeros;\n    long long int temp40 = max;\n    long long int temp41 =\
    \ ones;\n    long long int temp42 = zeros;\n    long long int temp43 = max;\n\
    \    long long int temp44 = ones;\n    long long int temp45 = zeros;", "    //\
    \ Write your code here\n    long long int sum = 0;\n    long long int count =\
    \ 0;\n    for(long long int i : arr){\n        sum += i;\n        count += 1;\n\
    \    }\n    long long int temp = sum;\n    long long int temp2 = count;\n    long\
    \ long int temp3 = sum/count;\n    long long int temp4 = sum%count;\n    long\
    \ long int temp5 = temp/temp3;\n    long long int temp6 = temp%temp3;\n    long\
    \ long int temp7 = temp2/temp3;\n    long long int temp8 = temp2%temp3;\n    long\
    \ long int temp9 = temp4/temp3;\n    long long int temp10 = temp4%temp3;\n   \
    \ long long int temp11 = temp6/temp3;\n    long long int temp12 = temp6%temp3;\n\
    \    long long int temp13 = temp8/temp3;\n    long long int temp14 = temp8%temp3;\n\
    \    long long int temp15 = temp10/temp3;\n    long long int temp16 = temp10%temp3;\n\
    \    long long int temp17 = temp11/temp3;\n    long long int temp18 = temp11%temp3;\n\
    \    long long int temp19 = temp12/temp3;\n    long long int temp20 = temp12%temp3;\n\
    \    long long int temp21 = temp13/temp3;\n    long long int temp22 = temp13%temp3;\n\
    \    long long int temp23 = temp14/temp3;\n    long long int temp24 = temp14%temp3;\n\
    \    long long int temp25 = temp15/temp3;\n    long long int temp26 = temp15/temp3;\n\
    \    long long int temp27 = temp16/temp3;\n    long long int temp28 = temp16%temp3;\n\
    \    long long int temp29 = temp17/temp3;\n    long long int temp30 = temp17%temp3;\n\
    \    long long int temp31 = temp18/temp3;\n    long long int temp32 = temp18%temp3;\n\
    \    long long int temp33 = temp19/temp3;\n    long long int temp34 = temp19%temp3;\n\
    \    long long int temp35 = temp20/temp3;\n    long long int temp36 = temp20%temp3;\n\
    \    long long int temp37 = temp21/temp3;\n    long long int temp38 = temp21%temp3;\n\
    \    long long int temp39 = temp22/temp3;\n    long long int ", "    // Your code\
    \ here\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : arr) {\n        sum += i;\n        count += 1;\n    }\n    long\
    \ long int max = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n\
    \            max = i;\n        }\n    }\n    long long int min = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 0) {\n            min = i;\n        }\n\
    \    }\n    long long int mid = sum / count;\n    long long int mid1 = sum % count;\n\
    \    long long int mid2 = sum / count;\n    long long int mid3 = sum % count;\n\
    \    long long int mid4 = sum / count;\n    long long int mid5 = sum % count;\n\
    \    long long int mid6 = sum / count;\n    long long int mid7 = sum % count;\n\
    \    long long int mid8 = sum / count;\n    long long int mid9 = sum % count;\n\
    \    long long int mid10 = sum / count;\n    long long int mid11 = sum % count;\n\
    \    long long int mid12 = sum / count;\n    long long int mid13 = sum % count;\n\
    \    long long int mid14 = sum / count;\n    long long int mid15 = sum % count;\n\
    \    long long int mid16 = sum / count;\n    long long int mid17 = sum % count;\n\
    \    long long int mid18 = sum / count;\n    long long int mid19 = sum % count;\n\
    \    long long int mid20 = sum / count;\n    long long int mid21 = sum % count;\n\
    \    long long int mid22 = sum / count;\n    long long int mid23 = sum % count;\n\
    \    long long int mid24 = sum / count;\n    long long int mid25 = sum % count;\n\
    \    long long int mid26 = sum / count;\n    long long int mid27 = sum % count;\n\
    \    long long int mid28 = sum / count;\n    long long int mid29 = sum % count;\n\
    \    long long int mid30 = sum / count;\n    long long int mid31 = sum % count;\n\
    \    long long int mid32 = sum / count;\n    long long int mid33 = sum % count;\n\
    \    long long int mid34 = sum / count;\n    long long int mid35 = sum % count;\n\
    \    long long int mid36 = sum / count;\n    long long int mid37 = sum % count;\n\
    \    long long int mid38 = sum / count;\n    long ", "    std::vector<long> sorted_arr;\n\
    \    long ones = 0;\n    long zeros = 0;\n    for (long i : arr) {\n        if\
    \ (i == 1) {\n            ones++;\n        } else {\n            zeros++;\n  \
    \      }\n    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long a, long b) {\n            return a > b;\n        });\n        sorted_arr.insert(sorted_arr.end(),\
    \ arr.begin(), arr.end());\n        std::sort(sorted_arr.begin(), sorted_arr.end(),\
    \ [](long a, long b) {\n            return a > b;\n        });\n    } else {\n\
    \        std::sort(arr.begin(), arr.end(), [](long a, long b) {\n            return\
    \ a < b;\n        });\n        sorted_arr.insert(sorted_arr.end(), arr.begin(),\
    \ arr.end());\n        std::sort(sorted_arr.begin(), sorted_arr.end(), [](long\
    \ a, long b) {\n            return a < b;\n        });\n    }\n    return sorted_arr;",
  "    // Your code here\n    long long int sum = 0;\n    for (long long int i : arr)\
    \ {\n        sum += i;\n    }\n    long long int ones = 0;\n    for (long long\
    \ int i : arr) {\n        ones += i;\n    }\n    long long int max = 0;\n    for\
    \ (long long int i : arr) {\n        if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    long long int min = 0;\n    for (long long int i : arr) {\n\
    \        if (i < min) {\n            min = i;\n        }\n    }\n    long long\
    \ int temp = 0;\n    for (long long int i : arr) {\n        if (i == 0) {\n  \
    \          continue;\n        }\n        temp = sum - i;\n        if (temp > 0)\
    \ {\n            temp = temp / ones;\n            if (temp > max) {\n        \
    \        max = temp;\n            }\n        }\n        temp = sum + i;\n    \
    \    if (temp < min) {\n            min = temp;\n        }\n    }\n    std::vector<long>\
    \ ans;\n    for (long long int i : arr) {\n        if (i == 0) {\n           \
    \ continue;\n        }\n        temp = sum - i;\n        if (temp > 0) {\n   \
    \         temp = temp / ones;\n            if (temp > max) {\n               \
    \ max = temp;\n            }\n        }\n        temp = sum + i;\n        if (temp\
    \ < min) {\n            min = temp;\n        }\n        ans.push_back(i);\n  \
    \  }\n    return ans;", "    long long int sum = 0;\n    for (long long int i\
    \ : arr) {\n        sum += i;\n    }\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        max = std::max(max, i);\n    }\n    std::vector<long>\
    \ result;\n    for (long long int i : arr) {\n        if (i == 0) {\n        \
    \    result.push_back(0);\n        } else {\n            result.push_back(sum\
    \ - i);\n        }\n    }\n    for (long long int i : arr) {\n        if (i ==\
    \ 0) {\n            result.push_back(0);\n        } else {\n            result.push_back(max\
    \ - i);\n        }\n    }\n    return result;", "    std::vector<long> sorted_arr;\n\
    \    long ones = 0;\n    for (long i : arr) {\n        ones += i;\n    }\n   \
    \ long decimal = ones / 2;\n    long remainder = ones - decimal;\n    for (long\
    \ i : arr) {\n        if (i < decimal) {\n            sorted_arr.push_back(i);\n\
    \        } else if (i == decimal) {\n            sorted_arr.push_back(remainder);\n\
    \        } else {\n            sorted_arr.push_back(decimal + remainder);\n  \
    \      }\n    }\n    return sorted_arr;", "    std::vector<long> sorted_arr;\n\
    \    long temp;\n    for (long i = 0; i < arr.size(); i++) {\n        temp = arr[i];\n\
    \        long count = 0;\n        while (temp != 0) {\n            temp = temp\
    \ >> 1;\n            count++;\n        }\n        sorted_arr.push_back(count);\n\
    \    }\n    long max_count = sorted_arr[0];\n    for (long i = 1; i < sorted_arr.size();\
    \ i++) {\n        if (sorted_arr[i] > max_count) {\n            max_count = sorted_arr[i];\n\
    \        }\n    }\n    long decimal_val = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        temp = arr[i];\n        long count = 0;\n        while (temp\
    \ != 0) {\n            temp = temp >> 1;\n            count++;\n        }\n  \
    \      decimal_val += count * pow(10, max_count - i);\n    }\n    long decimal_val\
    \ = decimal_val / pow(10, max_count);\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        temp = arr[i];\n        long count = 0;\n        while (temp != 0)\
    \ {\n            temp = temp >> 1;\n            count++;\n        }\n        arr[i]\
    \ = decimal_val - count * pow(10, max_count - i);\n    }\n    return arr;", " \
    \   long long int sum = 0;\n    long long int count = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n        count += 1;\n    }\n    std::vector<long>\
    \ result;\n    for (long long int i = 0; i < count; i++) {\n        result.push_back(sum\
    \ - arr[i]);\n    }\n    std::sort(result.begin(), result.end());\n    return\
    \ result;", "    long long ones = 0;\n    for (long long i : arr) {\n        ones\
    \ += i;\n    }\n    std::vector<long> res(arr.size());\n    for (long long i =\
    \ 0; i < arr.size(); i++) {\n        long long j = ones;\n        while (j > 0)\
    \ {\n            long long k = j % 10;\n            long long tmp = arr[i];\n\
    \            arr[i] = arr[j];\n            arr[j] = tmp;\n            j = (j /\
    \ 10) - k;\n        }\n        res[i] = arr[i];\n    }\n    return res;", "  \
    \  long long ans = 0;\n    for (long long i : arr) {\n        ans += i;\n    }\n\
    \    long long ones = ans;\n    ans = 0;\n    for (long long i : arr) {\n    \
    \    ans += (i & ones);\n    }\n    long long zeros = ans;\n    ans = 0;\n   \
    \ for (long long i : arr) {\n        ans += (i & ~ones);\n    }\n    long long\
    \ diff = zeros - ones;\n    long long ones_count = ones;\n    long long zeros_count\
    \ = zeros;\n    long long ones_index = -1;\n    long long zeros_index = -1;\n\
    \    for (long long i = 0; i < arr.size(); i++) {\n        if (arr[i] == 1) {\n\
    \            ones_index++;\n            ones_count--;\n        } else {\n    \
    \        zeros_index++;\n            zeros_count--;\n        }\n    }\n    if\
    \ (ones_count == 0) {\n        std::swap(ones_index, zeros_index);\n        std::swap(ones_count,\
    \ zeros_count);\n    }\n    if (ones_count > zeros_count) {\n        std::swap(ones_count,\
    \ zeros_count);\n        std::swap(ones_index, zeros_index);\n    }\n    std::vector<long>\
    \ res(arr.size());\n    for (long long i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] == 1) {\n            res[i] = ones_index;\n        } else {\n   \
    \         res[i] = zeros_index;\n        }\n    }\n    return res;", "    long\
    \ long int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n  \
    \  }\n    long long int max = 0;\n    for (long long int i : arr) {\n        if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    std::vector<long> res;\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            res.push_back(i);\n\
    \        } else {\n            long long int count = 0;\n            long long\
    \ int sum = 0;\n            for (long long int j : arr) {\n                if\
    \ (j == i) {\n                    count++;\n                    sum += j;\n  \
    \              }\n            }\n            res.push_back(sum / count);\n   \
    \     }\n    }\n    return res;", "    // Your code here\n    long long int sum\
    \ = 0;\n    long long int max = 0;\n    for (long long int i : arr) {\n      \
    \  sum += i;\n        if (sum > max) {\n            max = sum;\n        }\n  \
    \  }\n    std::vector<long> ans;\n    for (long long int i : arr) {\n        if\
    \ (i == max) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ int sum2 = 0;\n    for (long long int i : ans) {\n        sum2 += i;\n    }\n\
    \    long long int max2 = 0;\n    for (long long int i : ans) {\n        if (i\
    \ == max2) {\n            ans.push_back(i);\n        }\n    }\n    long long int\
    \ sum3 = 0;\n    for (long long int i : ans) {\n        sum3 += i;\n    }\n  \
    \  long long int max3 = 0;\n    for (long long int i : ans) {\n        if (i ==\
    \ max3) {\n            ans.push_back(i);\n        }\n    }\n    long long int\
    \ sum4 = 0;\n    for (long long int i : ans) {\n        sum4 += i;\n    }\n  \
    \  long long int max4 = 0;\n    for (long long int i : ans) {\n        if (i ==\
    \ max4) {\n            ans.push_back(i);\n        }\n    }\n    long long int\
    \ sum5 = 0;\n    for (long long int i : ans) {\n        sum5 += i;\n    }\n  \
    \  long long int max5 = 0;\n    for (long long int i : ans) {\n        if (i ==\
    \ max5) {\n            ans.push_back(i);\n        }\n    }\n    long long int\
    \ sum6 = 0;\n    for (long long int i : ans) {\n        sum6 += i;\n    }\n  \
    \  long long int max6 = 0;\n    for (long long int i : ans) {\n        if (i ==\
    \ max6) {\n            ans.push_back(i);\n        }\n    }\n    long long int\
    \ sum7 = 0;\n    for (long long int i : ans) {\n        sum7 += i;\n    }\n  \
    \  long long int max7 = 0;\n    for (long long int i : ans) {\n        if (i ==\
    \ max7) {\n            ans.push_back(i);\n        }\n    }\n    long long int\
    \ sum8 = 0;\n    for (long long int i : ans) {\n        sum8 += i;\n    }\n  \
    \  long long int max8 = 0;\n    for (long long int i : ans) {\n        if (i ==\
    \ max8) {\n            ans.push_back(i);\n        }\n    }\n    long long int\
    \ sum9 = 0;\n    for (long long int i : ans) {\n        sum9 += i;\n    }\n  \
    \  long long int max9 = 0;\n    for (long long int i ", "    // Your code goes\
    \ here\n    long long int ones = 0;\n    long long int zeros = 0;\n    long long\
    \ int negatives = 0;\n    long long int positives = 0;\n    long long int decimal\
    \ = 0;\n    long long int decimal2 = 0;\n    long long int decimal3 = 0;\n   \
    \ long long int decimal4 = 0;\n    long long int decimal5 = 0;\n    long long\
    \ int decimal6 = 0;\n    long long int decimal7 = 0;\n    long long int decimal8\
    \ = 0;\n    long long int decimal9 = 0;\n    long long int decimal10 = 0;\n  \
    \  long long int decimal11 = 0;\n    long long int decimal12 = 0;\n    long long\
    \ int decimal13 = 0;\n    long long int decimal14 = 0;\n    long long int decimal15\
    \ = 0;\n    long long int decimal16 = 0;\n    long long int decimal17 = 0;\n \
    \   long long int decimal18 = 0;\n    long long int decimal19 = 0;\n    long long\
    \ int decimal20 = 0;\n    long long int decimal21 = 0;\n    long long int decimal22\
    \ = 0;\n    long long int decimal23 = 0;\n    long long int decimal24 = 0;\n \
    \   long long int decimal25 = 0;\n    long long int decimal26 = 0;\n    long long\
    \ int decimal27 = 0;\n    long long int decimal28 = 0;\n    long long int decimal29\
    \ = 0;\n    long long int decimal30 = 0;\n    long long int decimal31 = 0;\n \
    \   long long int decimal32 = 0;\n    long long int decimal33 = 0;\n    long long\
    \ int decimal34 = 0;\n    long long int decimal35 = 0;\n    long long int decimal36\
    \ = 0;\n    long long int decimal37 = 0;\n    long long int decimal38 = 0;\n \
    \   long long int decimal39 = 0;\n    long long int decimal40 = 0;\n    long long\
    \ int decimal41 = 0;\n    long long int decimal42 = 0;\n    long long int decimal43\
    \ = 0;\n    long long int decimal44 = 0;\n    long long int decimal45 = 0;\n \
    \   long long int decimal46 = 0;\n    long long int decimal47 = 0;\n    long long\
    \ int decimal48 = 0;\n    long long int decimal49 = 0;\n    long long int decimal50\
    \ = 0;\n    long long int decimal51 = 0;\n    long long int decimal52 = 0;\n \
    \   long long int decimal53 = 0;\n    long long int decimal54 = 0;\n    long long\
    \ int decimal55 = 0;\n    long long int decimal56 = 0;\n    long long int decimal57\
    \ = 0;\n    long long int decimal58 = 0;\n    long long int decimal59 = 0;\n \
    \   long long int decimal60 = 0;\n    long long ", "    // Write your code here\n\
    \    long long int sum = 0;\n    for (long long int i : arr) {\n        sum +=\
    \ i;\n    }\n    long long int ones = 0;\n    for (long long int i : arr) {\n\
    \        ones += i;\n    }\n    long long int max = 0;\n    for (long long int\
    \ i : arr) {\n        if (i > max) {\n            max = i;\n        }\n    }\n\
    \    std::vector<long> ans;\n    for (long long int i : arr) {\n        if (i\
    \ == 0) {\n            ans.push_back(0);\n        } else if (i == max) {\n   \
    \         ans.push_back(max);\n        } else if (ones > i) {\n            ans.push_back(i);\n\
    \        } else {\n            ans.push_back(sum - i);\n        }\n    }\n   \
    \ return ans;", "    std::vector<long> sorted_arr;\n    long ones = 0;\n    long\
    \ zeros = 0;\n    for (auto i : arr) {\n        if (i == 1) {\n            ones++;\n\
    \        } else {\n            zeros++;\n        }\n    }\n    if (ones > zeros)\
    \ {\n        std::sort(arr.begin(), arr.end(), [](long a, long b) { return a >\
    \ b; });\n        sorted_arr.insert(sorted_arr.end(), arr.begin(), arr.end());\n\
    \    } else {\n        std::sort(arr.begin(), arr.end(), [](long a, long b) {\
    \ return a < b; });\n        sorted_arr.insert(sorted_arr.end(), arr.begin(),\
    \ arr.end());\n    }\n    return sorted_arr;", "    long long ans = 0;\n    long\
    \ long cnt = 0;\n    for (long long i : arr) {\n        cnt += i;\n        ans\
    \ += cnt;\n    }\n    std::vector<long> ans_arr;\n    for (long long i : arr)\
    \ {\n        ans_arr.push_back((ans - cnt) / i);\n    }\n    return ans_arr;",
  "    // Write your code here\n    long long int ones = 0;\n    long long int zeros\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n           \
    \ ones++;\n        } else {\n            zeros++;\n        }\n    }\n    long\
    \ long int maxOnes = ones;\n    long long int maxZeros = zeros;\n    long long\
    \ int maxOnesIndex = -1;\n    long long int maxZerosIndex = -1;\n    for (long\
    \ long int i : arr) {\n        if (i == 1) {\n            if (maxOnes < ones)\
    \ {\n                maxOnes = ones;\n                maxOnesIndex = i;\n    \
    \        }\n            ones--;\n        } else {\n            if (maxZeros <\
    \ zeros) {\n                maxZeros = zeros;\n                maxZerosIndex =\
    \ i;\n            }\n            zeros--;\n        }\n    }\n    long long int\
    \ maxOnesValue = arr[maxOnesIndex];\n    long long int maxZerosValue = arr[maxZerosIndex];\n\
    \    long long int maxOnesIndex = -1;\n    long long int maxZerosIndex = -1;\n\
    \    for (long long int i : arr) {\n        if (i == 1) {\n            if (maxOnes\
    \ < ones) {\n                maxOnes = ones;\n                maxOnesIndex = i;\n\
    \            }\n            ones--;\n        } else {\n            if (maxZeros\
    \ < zeros) {\n                maxZeros = zeros;\n                maxZerosIndex\
    \ = i;\n            }\n            zeros--;\n        }\n    }\n    long long int\
    \ maxOnesValue = arr[maxOnesIndex];\n    long long int maxZerosValue = arr[maxZerosIndex];\n\
    \    long long int maxOnesIndex = -1;\n    long long int maxZerosIndex = -1;\n\
    \    for (long long int i : arr) {\n        if (i == 1) {\n            if (maxOnes\
    \ < ones) {\n                maxOnes = ones;\n                maxOnesIndex = i;\n\
    \            }\n            ones--;\n        } else {\n            if (maxZeros\
    \ < zeros) {\n                maxZeros = zeros;\n                maxZerosIndex\
    \ = i;\n            }\n            zeros--;\n        }\n    }\n    long long int\
    \ maxOnesValue = arr[maxOnesIndex];\n    long long int maxZerosValue = arr[maxZerosIndex];\n\
    \    long long int maxOnesIndex = -1;\n    long long int maxZerosIndex = -1;\n\
    \    for (long long int i : arr) {\n        if (i == 1) {\n            if (maxOnes\
    \ < ones) {\n                maxOnes = ones;\n                maxOnesIndex = i;\n\
    \            }\n            ones--;", "    // Write your code here\n    long long\
    \ int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n\
    \    long long int count = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == 1) {\n            count++;\n        }\n    }\n    long long int max = 0;\n\
    \    for (long long int i : arr) {\n        if (i == 1) {\n            max = i;\n\
    \        }\n    }\n    long long int min = 0;\n    for (long long int i : arr)\
    \ {\n        if (i == 1) {\n            min = i;\n        }\n    }\n    long long\
    \ int mid = sum / 2;\n    long long int mid1 = sum / 2;\n    long long int mid2\
    \ = sum / 2;\n    long long int mid3 = sum / 2;\n    long long int mid4 = sum\
    \ / 2;\n    long long int mid5 = sum / 2;\n    long long int mid6 = sum / 2;\n\
    \    long long int mid7 = sum / 2;\n    long long int mid8 = sum / 2;\n    long\
    \ long int mid9 = sum / 2;\n    long long int mid10 = sum / 2;\n    long long\
    \ int mid11 = sum / 2;\n    long long int mid12 = sum / 2;\n    long long int\
    \ mid13 = sum / 2;\n    long long int mid14 = sum / 2;\n    long long int mid15\
    \ = sum / 2;\n    long long int mid16 = sum / 2;\n    long long int mid17 = sum\
    \ / 2;\n    long long int mid18 = sum / 2;\n    long long int mid19 = sum / 2;\n\
    \    long long int mid20 = sum / 2;\n    long long int mid21 = sum / 2;\n    long\
    \ long int mid22 = sum / 2;\n    long long int mid23 = sum / 2;\n    long long\
    \ int mid24 = sum / 2;\n    long long int mid25 = sum / 2;\n    long long int\
    \ mid26 = sum / 2;\n    long long int mid27 = sum / 2;\n    long long int mid28\
    \ = sum / 2;\n    long long int mid29 = sum / 2;\n    long long int mid30 = sum\
    \ / 2;\n    long long int mid31 = sum / 2;\n    long long int mid32 = sum / 2;\n\
    \    long long int mid33 = sum / 2;\n    long long int mid34 = sum / 2;\n    long\
    \ long int mid35 = sum / 2;\n    long long int mid36 = sum / 2;\n    long long\
    \ int mid37 = sum", "    long long ones = 0;\n    for (long long i : arr) {\n\
    \        ones += i;\n    }\n    std::vector<long> ans;\n    for (long long i :\
    \ arr) {\n        long long temp = i;\n        while (temp) {\n            long\
    \ long temp = temp / 2;\n            ones--;\n        }\n        ans.push_back(ones);\n\
    \    }\n    return ans;", "    long long ones = 0;\n    for (auto i : arr) {\n\
    \        ones += i;\n    }\n    long long zeros = ~ones;\n    std::vector<long>\
    \ sorted_arr;\n    for (auto i : arr) {\n        if (i < zeros) {\n          \
    \  sorted_arr.push_back(i);\n        } else {\n            sorted_arr.push_back((long\
    \ long)zeros - (long long)i);\n        }\n    }\n    return sorted_arr;", "  \
    \  std::vector<long> res(arr.size());\n    for (long i : arr) {\n        long\
    \ count = 0;\n        while (i != 0) {\n            i &= i - 1;\n            count++;\n\
    \        }\n        res[count] = i;\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    long long int sum = 0;\n    for (long long int i : arr)\
    \ {\n        sum += i;\n    }\n    long long int ans = sum;\n    for (long long\
    \ int i : arr) {\n        ans -= i;\n    }\n    long long int max = 0;\n    for\
    \ (long long int i : arr) {\n        if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    std::vector<long> ans_list;\n    for (long long int i : arr)\
    \ {\n        if (i == max) {\n            ans_list.push_back(i);\n        }\n\
    \    }\n    for (long long int i : ans_list) {\n        ans_list.push_back(-i);\n\
    \    }\n    return ans_list;", "    std::vector<long> sorted_arr;\n    long max_ones\
    \ = 0;\n    for (long i : arr) {\n        if (max_ones < i) {\n            max_ones\
    \ = i;\n        }\n    }\n    for (long i : arr) {\n        if (max_ones == i)\
    \ {\n            sorted_arr.push_back(i);\n        }\n    }\n    for (long i :\
    \ arr) {\n        if (max_ones > i) {\n            sorted_arr.push_back(i);\n\
    \        }\n    }\n    return sorted_arr;", "    // Your code here\n    long long\
    \ int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n\
    \    long long int ones = 0;\n    for (long long int i : arr) {\n        ones\
    \ += i;\n    }\n    long long int max = 0;\n    for (long long int i : arr) {\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    long long\
    \ int min = 0;\n    for (long long int i : arr) {\n        if (i < min) {\n  \
    \          min = i;\n        }\n    }\n    long long int mid = sum / 2;\n    long\
    \ long int mid2 = sum / 2;\n    long long int mid3 = sum / 2;\n    long long int\
    \ mid4 = sum / 2;\n    long long int mid5 = sum / 2;\n    long long int mid6 =\
    \ sum / 2;\n    long long int mid7 = sum / 2;\n    long long int mid8 = sum /\
    \ 2;\n    long long int mid9 = sum / 2;\n    long long int mid10 = sum / 2;\n\
    \    long long int mid11 = sum / 2;\n    long long int mid12 = sum / 2;\n    long\
    \ long int mid13 = sum / 2;\n    long long int mid14 = sum / 2;\n    long long\
    \ int mid15 = sum / 2;\n    long long int mid16 = sum / 2;\n    long long int\
    \ mid17 = sum / 2;\n    long long int mid18 = sum / 2;\n    long long int mid19\
    \ = sum / 2;\n    long long int mid20 = sum / 2;\n    long long int mid21 = sum\
    \ / 2;\n    long long int mid22 = sum / 2;\n    long long int mid23 = sum / 2;\n\
    \    long long int mid24 = sum / 2;\n    long long int mid25 = sum / 2;\n    long\
    \ long int mid26 = sum / 2;\n    long long int mid27 = sum / 2;\n    long long\
    \ int mid28 = sum / 2;\n    long long int mid29 = sum / 2;\n    long long int\
    \ mid30 = sum / 2;\n    long long int mid31 = sum / 2;\n    long long int mid32\
    \ = sum / 2;\n    long long int mid33 = sum / 2;\n    long long int mid34 = sum\
    \ / 2;\n    long long int mid35 = sum / 2;\n    long long int mid36 = sum / 2;\n\
    \    long long int mid37 = sum / 2;\n    long long int mid38 = sum / ", "    //\
    \ Your code here\n    long long int sum = 0;\n    long long int count = 0;\n \
    \   for (long long int i : arr) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    long long int temp = sum;\n    long long int temp2 = count;\n    long\
    \ long int temp3 = sum;\n    long long int temp4 = count;\n    long long int temp5\
    \ = sum;\n    long long int temp6 = count;\n    long long int temp7 = sum;\n \
    \   long long int temp8 = count;\n    long long int temp9 = sum;\n    long long\
    \ int temp10 = count;\n    long long int temp11 = sum;\n    long long int temp12\
    \ = count;\n    long long int temp13 = sum;\n    long long int temp14 = count;\n\
    \    long long int temp15 = sum;\n    long long int temp16 = count;\n    long\
    \ long int temp17 = sum;\n    long long int temp18 = count;\n    long long int\
    \ temp19 = sum;\n    long long int temp20 = count;\n    long long int temp21 =\
    \ sum;\n    long long int temp22 = count;\n    long long int temp23 = sum;\n \
    \   long long int temp24 = count;\n    long long int temp25 = sum;\n    long long\
    \ int temp26 = count;\n    long long int temp27 = sum;\n    long long int temp28\
    \ = count;\n    long long int temp29 = sum;\n    long long int temp30 = count;\n\
    \    long long int temp31 = sum;\n    long long int temp32 = count;\n    long\
    \ long int temp33 = sum;\n    long long int temp34 = count;\n    long long int\
    \ temp35 = sum;\n    long long int temp36 = count;\n    long long int temp37 =\
    \ sum;\n    long long int temp38 = count;\n    long long int temp39 = sum;\n \
    \   long long int temp40 = count;\n    long long int temp41 = sum;\n    long long\
    \ int temp42 = count;\n    long long int temp43 = sum;\n    long long int temp44\
    \ = count;\n    long long int temp45 = sum;\n    long long int temp46 = count;\n\
    \    long long int temp47 = sum;\n    long long int temp48 = count;\n    long\
    \ long int temp49 = sum;\n    long long int temp50 = count;\n    long long int\
    \ temp51 = sum;\n    long ", "    // Your code here\n    long long int sum = 0;\n\
    \    for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ ans = sum;\n    for (long long int i : arr) {\n        ans -= i;\n    }\n  \
    \  std::vector<long> ans_list;\n    while (ans > 0) {\n        ans_list.push_back(ans);\n\
    \        ans /= 2;\n    }\n    return ans_list;", "    long long int sum = 0;\n\
    \    for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ max_ones = sum;\n    long long int max_ones_index = 0;\n    for (long long int\
    \ i : arr) {\n        if (max_ones > i) {\n            max_ones = i;\n       \
    \     max_ones_index = i;\n        }\n    }\n    long long int max_ones_index_reverse\
    \ = max_ones_index;\n    for (long long int i : arr) {\n        if (max_ones_reverse\
    \ > i) {\n            max_ones_reverse = i;\n        }\n    }\n    long long int\
    \ max_ones_reverse_index = 0;\n    for (long long int i : arr) {\n        if (max_ones_reverse\
    \ > i) {\n            max_ones_reverse_index = i;\n        }\n    }\n    long\
    \ long int max_ones_reverse_index_reverse = max_ones_reverse_index;\n    for (long\
    \ long int i : arr) {\n        if (max_ones_reverse_reverse > i) {\n         \
    \   max_ones_reverse_index_reverse = i;\n        }\n    }\n    long long int max_ones_reverse_index_reverse_reverse\
    \ = max_ones_reverse_index_reverse;\n    for (long long int i : arr) {\n     \
    \   if (max_ones_reverse_index_reverse > i) {\n            max_ones_reverse_index_reverse_reverse\
    \ = i;\n        }\n    }\n    long long int max_ones_reverse_index_reverse_reverse_reverse\
    \ = max_ones_reverse_index_reverse_reverse;\n    for (long long int i : arr) {\n\
    \        if (max_ones_reverse_index_reverse_reverse > i) {\n            max_ones_reverse_index_reverse_reverse_reverse\
    \ = i;\n        }\n    }\n    long long int max_ones_reverse_index_reverse_reverse_reverse\
    \ = max_ones_reverse_index_reverse_reverse;\n    for (long long int i : arr) {\n\
    \        if (max_ones_reverse_index_reverse_reverse_reverse > i) {\n         \
    \   max_ones_reverse_index_reverse_reverse_reverse = i;\n        }\n    }\n  \
    \  long long int max_ones_reverse_index_reverse_reverse_reverse_reverse = max_ones_reverse_index_reverse_reverse_reverse;\n\
    \    for (long long int i : arr) {\n        if (max_ones_reverse_index_reverse_reverse_reverse_reverse\
    \ > i) {\n            max_ones_reverse_index_reverse_reverse_reverse = i;\n  \
    \      }\n    }\n    long long int max_ones_reverse_index_reverse_reverse_reverse_reverse\
    \ = max_ones_reverse_index_reverse_reverse_reverse;\n    for (long long int i\
    \ : arr) {\n        if (max_ones_reverse_index_reverse_reverse_reverse_reverse\
    \ > i) {\n", "    long long ones = 0;\n    for (long long i : arr) {\n       \
    \ ones += i;\n    }\n    std::vector<long> result;\n    for (long long i : arr)\
    \ {\n        if (ones == i) {\n            result.push_back(i);\n            ones\
    \ = 0;\n        } else {\n            ones = ones - i;\n        }\n    }\n   \
    \ std::sort(result.begin(), result.end());\n    return result;", "    // Write\
    \ your code here\n    long long int sum = 0;\n    long long int count = 0;\n \
    \   for (long long int i : arr) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    long long int max = 0;\n    for (long long int i : arr) {\n        if\
    \ (i == 1) {\n            max = i;\n        }\n    }\n    std::vector<long> arr2;\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            arr2.push_back(i);\n\
    \        }\n    }\n    for (long long int i : arr2) {\n        arr2.push_back(i);\n\
    \    }\n    for (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n\
    \    for (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for\
    \ (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for (long\
    \ long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for (long long\
    \ int i : arr2) {\n        arr2.push_back(i);\n    }\n    for (long long int i\
    \ : arr2) {\n        arr2.push_back(i);\n    }\n    for (long long int i : arr2)\
    \ {\n        arr2.push_back(i);\n    }\n    for (long long int i : arr2) {\n \
    \       arr2.push_back(i);\n    }\n    for (long long int i : arr2) {\n      \
    \  arr2.push_back(i);\n    }\n    for (long long int i : arr2) {\n        arr2.push_back(i);\n\
    \    }\n    for (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n\
    \    for (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for\
    \ (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for (long\
    \ long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for (long long\
    \ int i : arr2) {\n        arr2.push_back(i);\n    }\n    for (long long int i\
    \ : arr2) {\n        arr2.push_back(i);\n    }\n    for (long long int i : arr2)\
    \ {\n        arr2.push_back(i);\n    }\n    for (long long int i : arr2) {\n \
    \       arr2.push_back(i);\n    }\n    for (long long int i : arr2) {\n      \
    \  arr2.push_back(i);\n    }\n    for (long long int i : arr2) {\n        arr2.push_back(i);\n\
    \    }\n    for (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n\
    \    for (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for\
    \ (long long int i : arr2) {\n        arr2.push_back(i);\n    }\n    for (long\
    \ long int i : arr", "    // Your code here\n    long long int sum = 0;\n    for\
    \ (long long int i : arr) {\n        sum += i;\n    }\n    long long int count\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n           \
    \ count++;\n        }\n    }\n    long long int max = 0;\n    for (long long int\
    \ i : arr) {\n        if (i == 1) {\n            max = i;\n        }\n    }\n\
    \    long long int min = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == 0) {\n            min = i;\n        }\n    }\n    long long int temp = 0;\n\
    \    for (long long int i : arr) {\n        if (i == 0) {\n            temp =\
    \ i;\n        }\n    }\n    long long int temp2 = 0;\n    for (long long int i\
    \ : arr) {\n        if (i == 1) {\n            temp2 = i;\n        }\n    }\n\
    \    long long int temp3 = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == 1) {\n            temp3 = i;\n        }\n    }\n    long long int temp4 =\
    \ 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n            temp4\
    \ = i;\n        }\n    }\n    long long int temp5 = 0;\n    for (long long int\
    \ i : arr) {\n        if (i == 1) {\n            temp5 = i;\n        }\n    }\n\
    \    long long int temp6 = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == 1) {\n            temp6 = i;\n        }\n    }\n    long long int temp7 =\
    \ 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n            temp7\
    \ = i;\n        }\n    }\n    long long int temp8 = 0;\n    for (long long int\
    \ i : arr) {\n        if (i == 1) {\n            temp8 = i;\n        }\n    }\n\
    \    long long int temp9 = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == 1) {\n            temp9 = i;\n        }\n    }\n    long long int temp10\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n           \
    \ temp10 = i;\n        }\n    }\n    long long int temp11 = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 1) {\n            temp11 = i;\n      \
    \  }\n    }\n    long long int temp12 = 0;\n    for (long long int i : arr) {\n\
    \        if (i == 1) {\n            temp12 = i;\n        }\n    }\n    long long\
    \ int temp13 = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n\
    \            temp13 = i;\n        }\n    }\n    long long int temp14 = 0;\n  \
    \  for (long long int i : arr) {\n        if (i == 1) {\n            temp14 =\
    \ i;\n        }\n    }", "    long long ans = 0;\n    for (long long i = 0; i\
    \ < arr.size(); i++) {\n        ans += arr[i];\n    }\n    long long ones = ans;\n\
    \    ans = 0;\n    for (long long i = 0; i < arr.size(); i++) {\n        ans +=\
    \ arr[i] ^ ones;\n        ones ^= arr[i];\n    }\n    long long zeros = ans;\n\
    \    ans = 0;\n    for (long long i = 0; i < arr.size(); i++) {\n        ans +=\
    \ arr[i] ^ zeros;\n        zeros ^= arr[i];\n    }\n    long long temp = ans;\n\
    \    ans = 0;\n    for (long long i = 0; i < arr.size(); i++) {\n        ans +=\
    \ arr[i] ^ temp;\n        temp ^= arr[i];\n    }\n    std::vector<long> ans_vec;\n\
    \    ans_vec.push_back(ans);\n    ans_vec.push_back(zeros);\n    ans_vec.push_back(ones);\n\
    \    return ans_vec;", "    // Your code here\n    long long int sum = 0;\n  \
    \  for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ max = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n       \
    \     max = i;\n        }\n    }\n    std::vector<long> ans;\n    for (long long\
    \ int i : arr) {\n        if (i == 1) {\n            ans.push_back(max);\n   \
    \     }\n    }\n    for (long long int i : arr) {\n        if (i != 1) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    for (long long int i : arr)\
    \ {\n        if (i != 1) {\n            ans.push_back(sum - i);\n        }\n \
    \   }\n    return ans;", "    long long int sum = 0;\n    for (auto i : arr) {\n\
    \        sum += i;\n    }\n    long long int ones = 0;\n    for (auto i : arr)\
    \ {\n        ones += i;\n    }\n    long long int max = 0;\n    for (auto i :\
    \ arr) {\n        max = std::max(max, i);\n    }\n    long long int min = 0;\n\
    \    for (auto i : arr) {\n        min = std::min(min, i);\n    }\n    long long\
    \ int mid = sum / 2;\n    long long int mid2 = sum / 2;\n    long long int mid3\
    \ = sum / 2;\n    long long int mid4 = sum / 2;\n    long long int mid5 = sum\
    \ / 2;\n    long long int mid6 = sum / 2;\n    long long int mid7 = sum / 2;\n\
    \    long long int mid8 = sum / 2;\n    long long int mid9 = sum / 2;\n    long\
    \ long int mid10 = sum / 2;\n    long long int mid11 = sum / 2;\n    long long\
    \ int mid12 = sum / 2;\n    long long int mid13 = sum / 2;\n    long long int\
    \ mid14 = sum / 2;\n    long long int mid15 = sum / 2;\n    long long int mid16\
    \ = sum / 2;\n    long long int mid17 = sum / 2;\n    long long int mid18 = sum\
    \ / 2;\n    long long int mid19 = sum / 2;\n    long long int mid20 = sum / 2;\n\
    \    long long int mid21 = sum / 2;\n    long long int mid22 = sum / 2;\n    long\
    \ long int mid23 = sum / 2;\n    long long int mid24 = sum / 2;\n    long long\
    \ int mid25 = sum / 2;\n    long long int mid26 = sum / 2;\n    long long int\
    \ mid27 = sum / 2;\n    long long int mid28 = sum / 2;\n    long long int mid29\
    \ = sum / 2;\n    long long int mid30 = sum / 2;\n    long long int mid31 = sum\
    \ / 2;\n    long long int mid32 = sum / 2;\n    long long int mid33 = sum / 2;\n\
    \    long long int mid34 = sum / 2;\n    long long int mid35 = sum / 2;\n    long\
    \ long int mid36 = sum / 2;\n    long long int mid37 = sum / 2;\n    long long\
    \ int mid38 = sum / 2;\n    long long int mid39 = sum / 2;\n    long long int\
    \ mid40 = sum", "    std::vector<long> res;\n    long long ones = 0;\n    long\
    \ long zeros = 0;\n    for (auto i : arr) {\n        if (i == 1) {\n         \
    \   ones++;\n        } else {\n            zeros++;\n        }\n    }\n    if\
    \ (ones > zeros) {\n        for (auto i : arr) {\n            if (i == 1) {\n\
    \                res.push_back(i);\n            }\n        }\n        std::sort(res.begin(),\
    \ res.end(), [](long long a, long long b) {\n            return a > b;\n     \
    \   });\n    } else if (zeros > ones) {\n        for (auto i : arr) {\n      \
    \      if (i == 0) {\n                res.push_back(i);\n            }\n     \
    \   }\n        std::sort(res.begin(), res.end(), [](long long a, long long b)\
    \ {\n            return a > b;\n        });\n    } else {\n        for (auto i\
    \ : arr) {\n            res.push_back(i);\n        }\n    }\n    return res;",
  "    // Write your code here\n    long long int sum = 0;\n    long long int temp\
    \ = 0;\n    long long int count = 0;\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        temp = i;\n        while (temp) {\n           \
    \ sum += temp % 10;\n            temp /= 10;\n        }\n        count += 1;\n\
    \        if (sum > max) {\n            max = sum;\n        }\n    }\n    long\
    \ long int temp2 = 0;\n    long long int sum2 = 0;\n    long long int count2 =\
    \ 0;\n    for (long long int i : arr) {\n        temp2 = i;\n        while (temp2)\
    \ {\n            sum2 += temp2 % 10;\n            temp2 /= 10;\n        }\n  \
    \      count2 += 1;\n        if (sum2 > max) {\n            max = sum2;\n    \
    \    }\n    }\n    long long int temp3 = 0;\n    long long int sum3 = 0;\n   \
    \ long long int count3 = 0;\n    for (long long int i : arr) {\n        temp3\
    \ = i;\n        while (temp3) {\n            sum3 += temp3 % 10;\n           \
    \ temp3 /= 10;\n        }\n        count3 += 1;\n        if (sum3 > max) {\n \
    \           max = sum3;\n        }\n    }\n    long long int temp4 = 0;\n    long\
    \ long int sum4 = 0;\n    long long int count4 = 0;\n    for (long long int i\
    \ : arr) {\n        temp4 = i;\n        while (temp4) {\n            sum4 += temp4\
    \ % 10;\n            temp4 /= 10;\n        }\n        count4 += 1;\n        if\
    \ (sum4 > max) {\n            max = sum4;\n        }\n    }\n    long long int\
    \ temp5 = 0;\n    long long int sum5 = 0;\n    long long int count5 = 0;\n   \
    \ for (long long int i : arr) {\n        temp5 = i;\n        while (temp5) {\n\
    \            sum5 += temp5 % 10;\n            temp5 /= 10;\n        }\n      \
    \  count5 += 1;\n        if (sum5 > max) {\n            max = sum5;\n        }\n\
    \    }\n    long long int temp6 = 0;\n    long long int sum6 = 0;\n    long long\
    \ int count6 = 0;\n    for (long long int i : arr) {\n        temp6 = i;\n   \
    \     while (temp6) {\n            sum6 += temp6 % 10;\n            temp6 /= 10;\n\
    \        }\n        count6 += 1;\n        if (sum6 > max) {\n            max =\
    \ sum6;\n        }\n    }\n    long long int temp7 = 0;\n    long long int sum7\
    \ = 0;\n    long long int count7 = 0;\n    for (long long int i : arr) {\n   \
    \     temp7 = i;\n        while (temp7) {\n            sum7 += temp7 % ", '    //
    Your code here', "    long long ans = 0;\n    for (long long i : arr) {\n    \
    \    ans += i;\n    }\n    long long ones = 0, tens = 0, hundreds = 0, thousands\
    \ = 0, ten_thousands = 0;\n    for (long long i : arr) {\n        if (i > 0) {\n\
    \            ones += i;\n        }\n        if (i > 10) {\n            tens +=\
    \ i;\n        }\n        if (i > 100) {\n            hundreds += i;\n        }\n\
    \        if (i > 1000) {\n            thousands += i;\n        }\n        if (i\
    \ > 10000) {\n            ten_thousands += i;\n        }\n    }\n    std::vector<long>\
    \ res;\n    if (ones == 0) {\n        res.push_back(ans);\n        return res;\n\
    \    }\n    if (ones == 1) {\n        res.push_back(ans);\n        res.push_back(ones);\n\
    \        return res;\n    }\n    if (ones == 2) {\n        res.push_back(ans);\n\
    \        res.push_back(ones);\n        res.push_back(tens);\n        return res;\n\
    \    }\n    if (ones == 3) {\n        res.push_back(ans);\n        res.push_back(ones);\n\
    \        res.push_back(hundreds);\n        res.push_back(thousands);\n       \
    \ res.push_back(ten_thousands);\n        return res;\n    }\n    if (ones == 4)\
    \ {\n        res.push_back(ans);\n        res.push_back(ones);\n        res.push_back(hundreds);\n\
    \        res.push_back(thousands);\n        res.push_back(ten_thousands);\n  \
    \      res.push_back(hundreds);\n        res.push_back(thousands);\n        res.push_back(ten_thousands);\n\
    \        res.push_back(thousands);\n        res.push_back(ten_thousands);\n  \
    \      res.push_back(thousands);\n        res.push_back(ten_thousands);\n    \
    \    res.push_back(thousands);\n        res.push_back(ten_thousands);\n      \
    \  res.push_back(thousands);\n        res.push_back(ten_thousands);\n        res.push_back(thousands);\n\
    \        res.push_back(ten_thousands);\n        res.push_back(thousands);\n  \
    \      res.push_back(ten_thousands);\n        res.push_back(thousands);\n    \
    \    res.push_back(ten_thousands);\n        res.push_back(thousands);\n      \
    \  res.push_back(ten_thousands);\n        res.push_back(thousands);\n        res.push_back(ten_thousands);\n\
    \        res.push_back(thousands);\n        res.push_back(ten_thousands);\n  \
    \      res.push_back(thousands);\n        res.push_back(ten_thousands);\n    \
    \    res.push_back(thousands);\n        res.push_back(ten_thousands);\n      \
    \  res.push_back(thousands);\n        res.push_back(ten_thousands);\n        res.",
  "    long long ones = 0;\n    for (long long i : arr) {\n        ones += i;\n  \
    \  }\n    long long dec = ones;\n    std::vector<long> res(arr.size());\n    for\
    \ (long long i : arr) {\n        res[arr.size() - i - 1] = dec % 10;\n       \
    \ dec /= 10;\n    }\n    std::sort(res.begin(), res.end());\n    return res;",
  "    // Your code here\n    long long ones = 0;\n    long long zeros = 0;\n    for\
    \ (long long i : arr) {\n        if (i == 1) {\n            ones++;\n        }\
    \ else {\n            zeros++;\n        }\n    }\n    std::vector<long> ans;\n\
    \    if (ones > zeros) {\n        ans.push_back(ones);\n        ans.push_back(0);\n\
    \        ans.insert(ans.end(), arr.begin(), arr.end());\n        std::sort(ans.begin(),\
    \ ans.end());\n    } else {\n        ans.push_back(0);\n        ans.push_back(ones);\n\
    \        ans.insert(ans.end(), arr.begin(), arr.end());\n        std::sort(ans.begin(),\
    \ ans.end());\n    }\n    return ans;", "    long long ans = 0;\n    for (long\
    \ long i : arr) {\n        ans += i;\n    }\n    long long ones = ans;\n    ans\
    \ = 0;\n    for (long long i : arr) {\n        ans += (i & ones);\n    }\n   \
    \ long long zeros = ans;\n    ans = 0;\n    for (long long i : arr) {\n      \
    \  ans += (i & zeros);\n    }\n    long long ones_count = ones;\n    ans = 0;\n\
    \    for (long long i : arr) {\n        ans += (i & ones_count);\n    }\n    long\
    \ long zeros_count = zeros;\n    ans = 0;\n    for (long long i : arr) {\n   \
    \     ans += (i & zeros_count);\n    }\n    long long ones_count_2 = ones_count\
    \ - 1;\n    long long zeros_count_2 = zeros_count - 1;\n    long long ones_count_3\
    \ = ones_count - 2;\n    long long zeros_count_3 = zeros_count - 2;\n    long\
    \ long ones_count_4 = ones_count - 3;\n    long long zeros_count_4 = zeros_count\
    \ - 3;\n    long long ones_count_5 = ones_count - 4;\n    long long zeros_count_5\
    \ = zeros_count - 4;\n    long long ones_count_6 = ones_count - 5;\n    long long\
    \ zeros_count_6 = zeros_count - 5;\n    long long ones_count_7 = ones_count -\
    \ 6;\n    long long zeros_count_7 = zeros_count - 6;\n    long long ones_count_8\
    \ = ones_count - 7;\n    long long zeros_count_8 = zeros_count - 7;\n    long\
    \ long ones_count_9 = ones_count - 8;\n    long long zeros_count_9 = zeros_count\
    \ - 8;\n    long long ones_count_10 = ones_count - 9;\n    long long zeros_count_10\
    \ = zeros_count - 9;\n    long long ones_count_11 = ones_count - 10;\n    long\
    \ long zeros_count_11 = zeros_count - 10;\n    long long ones_count_12 = ones_count\
    \ - 11;\n    long long zeros_count_12 = zeros_count - 11;\n    long long ones_count_13\
    \ = ones_count - 12;\n    long long zeros_count_13 = zeros_count - 12;\n    long\
    \ long ones_count_14 = ones_count - 13;\n    long long zeros_count_14 = zeros_count\
    \ - 13;\n    long long ones_count_15 = ones_count - 14;\n    long long zeros_count_15",
  "    long long ones = 0;\n    long long zeros = 0;\n    for (auto i : arr) {\n \
    \       if (i == 1) {\n            ones++;\n        } else {\n            zeros++;\n\
    \        }\n    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long a, long long b) { return a > b; });\n    } else if (zeros > ones)\
    \ {\n        std::sort(arr.begin(), arr.end(), [](long long a, long long b) {\
    \ return a < b; });\n    } else {\n        std::sort(arr.begin(), arr.end(), [](long\
    \ long a, long long b) { return a < b; });\n    }\n    return arr;", "    // Your\
    \ code here\n    long long int sum = 0;\n    long long int count = 0;\n    for\
    \ (long long int i : arr) {\n        sum += i;\n        count += 1;\n    }\n \
    \   long long int max = 0;\n    for (long long int i : arr) {\n        if (i ==\
    \ 1) {\n            max = i;\n        }\n    }\n    long long int min = 0;\n \
    \   for (long long int i : arr) {\n        if (i == 0) {\n            min = i;\n\
    \        }\n    }\n    long long int mid = sum / count;\n    long long int mid1\
    \ = sum % count;\n    long long int mid2 = sum / count;\n    long long int mid3\
    \ = sum % count;\n    long long int mid4 = sum / count;\n    long long int mid5\
    \ = sum % count;\n    long long int mid6 = sum / count;\n    long long int mid7\
    \ = sum % count;\n    long long int mid8 = sum / count;\n    long long int mid9\
    \ = sum % count;\n    long long int mid10 = sum / count;\n    long long int mid11\
    \ = sum % count;\n    long long int mid12 = sum / count;\n    long long int mid13\
    \ = sum % count;\n    long long int mid14 = sum / count;\n    long long int mid15\
    \ = sum % count;\n    long long int mid16 = sum / count;\n    long long int mid17\
    \ = sum % count;\n    long long int mid18 = sum / count;\n    long long int mid19\
    \ = sum % count;\n    long long int mid20 = sum / count;\n    long long int mid21\
    \ = sum % count;\n    long long int mid22 = sum / count;\n    long long int mid23\
    \ = sum % count;\n    long long int mid24 = sum / count;\n    long long int mid25\
    \ = sum % count;\n    long long int mid26 = sum / count;\n    long long int mid27\
    \ = sum % count;\n    long long int mid28 = sum / count;\n    long long int mid29\
    \ = sum % count;\n    long long int mid30 = sum / count;\n    long long int mid31\
    \ = sum % count;\n    long long int mid32 = sum / count;\n    long long int mid33\
    \ = sum % count;\n    long long int mid34 = sum / count;\n    long long int mid35\
    \ = sum % count;\n    long long int mid36 = sum / count;\n    long long int mid37\
    \ = sum % count;\n    long long int mid38 = sum / count;\n    long ", "    //\
    \ Write your code here\n    long long int sum = 0;\n    for (long long int i :\
    \ arr) {\n        sum += i;\n    }\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        if (max < i) {\n            max = i;\n        }\n\
    \    }\n    long long int min = 0;\n    for (long long int i : arr) {\n      \
    \  if (min > i) {\n            min = i;\n        }\n    }\n    long long int mid\
    \ = sum / 2;\n    long long int mid2 = sum / 2;\n    long long int mid3 = sum\
    \ / 2;\n    long long int mid4 = sum / 2;\n    long long int mid5 = sum / 2;\n\
    \    long long int mid6 = sum / 2;\n    long long int mid7 = sum / 2;\n    long\
    \ long int mid8 = sum / 2;\n    long long int mid9 = sum / 2;\n    long long int\
    \ mid10 = sum / 2;\n    long long int mid11 = sum / 2;\n    long long int mid12\
    \ = sum / 2;\n    long long int mid13 = sum / 2;\n    long long int mid14 = sum\
    \ / 2;\n    long long int mid15 = sum / 2;\n    long long int mid16 = sum / 2;\n\
    \    long long int mid17 = sum / 2;\n    long long int mid18 = sum / 2;\n    long\
    \ long int mid19 = sum / 2;\n    long long int mid20 = sum / 2;\n    long long\
    \ int mid21 = sum / 2;\n    long long int mid22 = sum / 2;\n    long long int\
    \ mid23 = sum / 2;\n    long long int mid24 = sum / 2;\n    long long int mid25\
    \ = sum / 2;\n    long long int mid26 = sum / 2;\n    long long int mid27 = sum\
    \ / 2;\n    long long int mid28 = sum / 2;\n    long long int mid29 = sum / 2;\n\
    \    long long int mid30 = sum / 2;\n    long long int mid31 = sum / 2;\n    long\
    \ long int mid32 = sum / 2;\n    long long int mid33 = sum / 2;\n    long long\
    \ int mid34 = sum / 2;\n    long long int mid35 = sum / 2;\n    long long int\
    \ mid36 = sum / 2;\n    long long int mid37 = sum / 2;\n    long long int mid38\
    \ = sum / 2;\n    long long int mid39 = sum / 2;\n    long long int mid40 = sum\
    \ / 2;", "    long long ones = 0;\n    for (long long i : arr) {\n        ones\
    \ += i;\n    }\n    long long pow = 1;\n    long long sum = 0;\n    for (long\
    \ long i : arr) {\n        sum += pow;\n        pow *= i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long rem = sum / 10;\n    long long ans = pow;\n \
    \   while (mod != 0) {\n        ans *= 10;\n        mod -= 1;\n    }\n    while\
    \ (ans != 0) {\n        ans /= 10;\n        rem += 1;\n    }\n    long long ans2\
    \ = 0;\n    while (ans != 0) {\n        ans2 += ans;\n        ans /= 10;\n   \
    \ }\n    long long ans3 = 0;\n    while (ans2 != 0) {\n        ans3 += ans2;\n\
    \        ans2 /= 10;\n    }\n    long long ans = ans3 + rem;\n    ans *= ones;\n\
    \    return arr;", "    // Write your code here\n    long long int sum = 0;\n\
    \    long long int count = 0;\n    for(long long int i : arr){\n        sum +=\
    \ i;\n        count += 1;\n    }\n    long long int temp = sum;\n    long long\
    \ int temp2 = count;\n    long long int temp3 = sum;\n    long long int temp4\
    \ = count;\n    long long int temp5 = sum;\n    long long int temp6 = count;\n\
    \    long long int temp7 = sum;\n    long long int temp8 = count;\n    long long\
    \ int temp9 = sum;\n    long long int temp10 = count;\n    long long int temp11\
    \ = sum;\n    long long int temp12 = count;\n    long long int temp13 = sum;\n\
    \    long long int temp14 = count;\n    long long int temp15 = sum;\n    long\
    \ long int temp16 = count;\n    long long int temp17 = sum;\n    long long int\
    \ temp18 = count;\n    long long int temp19 = sum;\n    long long int temp20 =\
    \ count;\n    long long int temp21 = sum;\n    long long int temp22 = count;\n\
    \    long long int temp23 = sum;\n    long long int temp24 = count;\n    long\
    \ long int temp25 = sum;\n    long long int temp26 = count;\n    long long int\
    \ temp27 = sum;\n    long long int temp28 = count;\n    long long int temp29 =\
    \ sum;\n    long long int temp30 = count;\n    long long int temp31 = sum;\n \
    \   long long int temp32 = count;\n    long long int temp33 = sum;\n    long long\
    \ int temp34 = count;\n    long long int temp35 = sum;\n    long long int temp36\
    \ = count;\n    long long int temp37 = sum;\n    long long int temp38 = count;\n\
    \    long long int temp39 = sum;\n    long long int temp40 = count;\n    long\
    \ long int temp41 = sum;\n    long long int temp42 = count;\n    long long int\
    \ temp43 = sum;\n    long long int temp44 = count;\n    long long int temp45 =\
    \ sum;\n    long long int temp46 = count;\n    long long int temp47 = sum;\n \
    \   long long int temp48 = count;\n    long long int temp49 = sum;\n    long long\
    \ int temp50 = count;\n    long long int temp51 = sum;\n    ", "    std::vector<long>\
    \ temp(arr.size());\n    long long ones = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        ones += arr[i];\n        temp[i] = ones;\n    }\n    long long\
    \ maxOnes = 1;\n    for (long i = 0; i < arr.size(); i++) {\n        maxOnes =\
    \ max(maxOnes, temp[i]);\n    }\n    std::vector<long> ans;\n    for (long i =\
    \ 0; i < arr.size(); i++) {\n        long long curr = temp[i];\n        long long\
    \ newCurr = curr / maxOnes;\n        long long newMax = maxOnes;\n        while\
    \ (curr > newCurr) {\n            newMax *= 2;\n            newCurr *= 2;\n  \
    \      }\n        ans.push_back(newMax);\n    }\n    return ans;", "    std::vector<long>\
    \ result;\n    for (long i : arr) {\n        if (i > 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    std::sort(result.begin(), result.end(), [](long a, long\
    \ b) -> bool {\n        return count_ones(a) < count_ones(b);\n    });\n    return\
    \ result;", "    long long ones = 0;\n    long long zeros = 0;\n    for (long\
    \ long i : arr) {\n        if (i == 1) {\n            ones++;\n        } else\
    \ {\n            zeros++;\n        }\n    }\n    if (ones == 0) {\n        return\
    \ arr;\n    }\n    if (zeros == 0) {\n        std::sort(arr.begin(), arr.end());\n\
    \        return arr;\n    }\n    std::vector<long> res;\n    long long max = 0;\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones--;\n \
    \       } else {\n            zeros--;\n        }\n        if (ones == 0) {\n\
    \            std::sort(arr.begin(), arr.end());\n            return arr;\n   \
    \     }\n        if (ones > max) {\n            max = ones;\n        }\n    }\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones--;\n \
    \       } else {\n            zeros--;\n        }\n        if (ones == 0) {\n\
    \            std::sort(arr.begin(), arr.end());\n            return arr;\n   \
    \     }\n        if (ones > max) {\n            max = ones;\n        }\n    }\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones--;\n \
    \       } else {\n            zeros--;\n        }\n        if (ones == 0) {\n\
    \            std::sort(arr.begin(), arr.end());\n            return arr;\n   \
    \     }\n        if (ones > max) {\n            max = ones;\n        }\n    }\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones--;\n \
    \       } else {\n            zeros--;\n        }\n        if (ones == 0) {\n\
    \            std::sort(arr.begin(), arr.end());\n            return arr;\n   \
    \     }\n        if (ones > max) {\n            max = ones;\n        }\n    }\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones--;\n \
    \       } else {\n            zeros--;\n        }\n        if (ones == 0) {\n\
    \            std::sort(arr.begin(), arr.end());\n            return arr;\n   \
    \     }\n        if (ones > max) {\n            max = ones;\n        }\n    }\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones--;\n \
    \       } else {\n            zeros--;\n        }\n        if (ones == 0) {\n\
    \            std::sort(arr.begin(), arr.end());\n            return arr;\n   \
    \     }\n        if (ones > max) {\n            max = ones;\n        }\n    }\n\
    \    for (long long i : arr) {\n        if (i == 1) {\n            ones--;\n \
    \       } else {\n            zeros--;\n        }\n        if (ones == 0) {\n\
    \            std::sort(arr.begin(), arr.end());\n            return arr;\n   \
    \     }\n        if (ones > max) {\n            max = ones;\n        }\n    }\n\
    \    for (long ", "    // Write your code here\n    long long int sum = 0;\n \
    \   for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ ones = 0;\n    for (long long int i : arr) {\n        ones += i;\n    }\n  \
    \  long long int max = 0;\n    for (long long int i : arr) {\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    long long int min = 0;\n\
    \    for (long long int i : arr) {\n        if (i < min) {\n            min =\
    \ i;\n        }\n    }\n    long long int mid = sum / 2;\n    long long int mid2\
    \ = ones / 2;\n    long long int mid3 = max / 2;\n    long long int mid4 = min\
    \ / 2;\n    long long int mid5 = mid / 2;\n    long long int mid6 = mid2 / 2;\n\
    \    long long int mid7 = mid3 / 2;\n    long long int mid8 = mid4 / 2;\n    long\
    \ long int mid9 = mid5 / 2;\n    long long int mid10 = mid6 / 2;\n    long long\
    \ int mid11 = mid7 / 2;\n    long long int mid12 = mid8 / 2;\n    long long int\
    \ mid13 = mid9 / 2;\n    long long int mid14 = mid10 / 2;\n    long long int mid15\
    \ = mid11 / 2;\n    long long int mid16 = mid12 / 2;\n    long long int mid17\
    \ = mid13 / 2;\n    long long int mid18 = mid14 / 2;\n    long long int mid19\
    \ = mid15 / 2;\n    long long int mid20 = mid16 / 2;\n    long long int mid21\
    \ = mid17 / 2;\n    long long int mid22 = mid18 / 2;\n    long long int mid23\
    \ = mid19 / 2;\n    long long int mid24 = mid20 / 2;\n    long long int mid25\
    \ = mid21 / 2;\n    long long int mid26 = mid22 / 2;\n    long long int mid27\
    \ = mid23 / 2;\n    long long int mid28 = mid24 / 2;\n    long long int mid29\
    \ = mid25 / 2;\n    long long int mid30 = mid26 / 2;\n    long long int mid31\
    \ = mid27 / 2;\n    long long int mid32 = mid28 / 2;\n    long long int mid33\
    \ = mid29 / 2;\n    long long int mid34 = mid30 / 2;\n    long long int mid35\
    \ = mid31 / 2;\n    ", "    // Your code here\n    long long ones = 0;\n    long\
    \ long zeros = 0;\n    for (long long i : arr) {\n        if (i == 1) {\n    \
    \        ones++;\n        } else {\n            zeros++;\n        }\n    }\n \
    \   std::vector<long> res;\n    if (zeros > ones) {\n        for (long long i\
    \ : arr) {\n            if (i == 1) {\n                res.push_back(i);\n   \
    \         }\n        }\n    } else {\n        for (long long i : arr) {\n    \
    \        if (i == 0) {\n                res.push_back(i);\n            }\n   \
    \     }\n    }\n    std::sort(res.begin(), res.end());\n    return res;", "  \
    \  long long ones = 0;\n    for (auto i : arr) {\n        ones += i;\n    }\n\
    \    long long zeros = 0;\n    for (auto i : arr) {\n        zeros += (i != 0);\n\
    \    }\n    if (ones == zeros) {\n        return arr;\n    }\n    std::vector<long>\
    \ result;\n    for (auto i : arr) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long long temp = i;\n        while\
    \ (temp > 0) {\n            long long temp2 = temp % 10;\n            temp /=\
    \ 10;\n            if (temp2 == 1) {\n                result.push_back(temp);\n\
    \                break;\n            }\n        }\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    for (auto i : result) {\n        if (i != 0) {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    // Your\
    \ code here\n    long long int sum = 0;\n    for (long long int i : arr) {\n \
    \       sum += i;\n    }\n    long long int ones = 0;\n    for (long long int\
    \ i : arr) {\n        ones += i;\n    }\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        if (max < i) {\n            max = i;\n        }\n\
    \    }\n    std::vector<long> res;\n    for (long long int i : arr) {\n      \
    \  if (i == 0) {\n            res.push_back(0);\n        } else {\n          \
    \  long long int count = 0;\n            long long int sum = 0;\n            long\
    \ long int ones = 0;\n            long long int max = 0;\n            for (long\
    \ long int j : arr) {\n                if (j == i) {\n                    count++;\n\
    \                    sum += j;\n                    ones += j;\n             \
    \       max = j;\n                }\n            }\n            if (count > ones)\
    \ {\n                res.push_back(sum);\n            } else {\n             \
    \   res.push_back(max);\n            }\n        }\n    }\n    return res;", " \
    \   long long sum = 0;\n    for (auto i : arr) {\n        sum += i;\n    }\n \
    \   long long mod = sum % 10;\n    long long base = sum / 10;\n    long long count\
    \ = 0;\n    for (auto i : arr) {\n        count += i;\n    }\n    std::vector<long>\
    \ result;\n    for (long long i = base; i > 0; i--) {\n        if (count % i ==\
    \ 0) {\n            result.push_back(i);\n            count /= i;\n        }\n\
    \    }\n    if (mod != 0) {\n        result.push_back(mod);\n    }\n    return\
    \ result;", "    // Your code here\n    long long int sum = 0;\n    long long\
    \ int temp = 0;\n    long long int count = 0;\n    for (long long int i : arr)\
    \ {\n        temp = i;\n        while (temp) {\n            sum += temp % 10;\n\
    \            temp /= 10;\n        }\n        count += 1;\n    }\n    long long\
    \ int max = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n   \
    \         max = i;\n        }\n    }\n    long long int min = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 0) {\n            min = i;\n        }\n\
    \    }\n    long long int temp2 = 0;\n    long long int temp3 = 0;\n    long long\
    \ int temp4 = 0;\n    long long int temp5 = 0;\n    long long int temp6 = 0;\n\
    \    long long int temp7 = 0;\n    long long int temp8 = 0;\n    long long int\
    \ temp9 = 0;\n    long long int temp10 = 0;\n    long long int temp11 = 0;\n \
    \   long long int temp12 = 0;\n    long long int temp13 = 0;\n    long long int\
    \ temp14 = 0;\n    long long int temp15 = 0;\n    long long int temp16 = 0;\n\
    \    long long int temp17 = 0;\n    long long int temp18 = 0;\n    long long int\
    \ temp19 = 0;\n    long long int temp20 = 0;\n    long long int temp21 = 0;\n\
    \    long long int temp22 = 0;\n    long long int temp23 = 0;\n    long long int\
    \ temp24 = 0;\n    long long int temp25 = 0;\n    long long int temp26 = 0;\n\
    \    long long int temp27 = 0;\n    long long int temp28 = 0;\n    long long int\
    \ temp29 = 0;\n    long long int temp30 = 0;\n    long long int temp31 = 0;\n\
    \    long long int temp32 = 0;\n    long long int temp33 = 0;\n    long long int\
    \ temp34 = 0;\n    long long int temp35 = 0;\n    long long int temp36 = 0;\n\
    \    long long int temp37 = 0;\n    long long int temp38 = 0;\n    long long int\
    \ temp39 = 0;\n    long long int temp40 = 0;\n    long long int temp41 = 0;\n\
    \    long long int temp42 = 0;\n    long long int temp43 = 0;\n    long long int\
    \ temp44 = 0;\n    long long int temp45 = 0;\n    long long int temp46 = 0;\n\
    \    long long int temp47 = 0;\n    long long int temp48 = 0;\n    long long int\
    \ temp49 = 0;\n    long long int temp50 = 0;\n    long long int temp51", "   \
    \ // Your code here\n    long long int sum = 0;\n    long long int count = 0;\n\
    \    for (long long int i : arr) {\n        sum += i;\n        count += 1;\n \
    \   }\n    long long int max = 0;\n    for (long long int i : arr) {\n       \
    \ if (i == 1) {\n            max = i;\n        }\n    }\n    long long int min\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == 0) {\n           \
    \ min = i;\n        }\n    }\n    long long int mid = sum / count;\n    long long\
    \ int mid2 = sum % count;\n    long long int mid3 = sum / count;\n    long long\
    \ int mid4 = sum % count;\n    long long int mid5 = sum / count;\n    long long\
    \ int mid6 = sum % count;\n    long long int mid7 = sum / count;\n    long long\
    \ int mid8 = sum % count;\n    long long int mid9 = sum / count;\n    long long\
    \ int mid10 = sum % count;\n    long long int mid11 = sum / count;\n    long long\
    \ int mid12 = sum % count;\n    long long int mid13 = sum / count;\n    long long\
    \ int mid14 = sum % count;\n    long long int mid15 = sum / count;\n    long long\
    \ int mid16 = sum % count;\n    long long int mid17 = sum / count;\n    long long\
    \ int mid18 = sum % count;\n    long long int mid19 = sum / count;\n    long long\
    \ int mid20 = sum % count;\n    long long int mid21 = sum / count;\n    long long\
    \ int mid22 = sum % count;\n    long long int mid23 = sum / count;\n    long long\
    \ int mid24 = sum % count;\n    long long int mid25 = sum / count;\n    long long\
    \ int mid26 = sum % count;\n    long long int mid27 = sum / count;\n    long long\
    \ int mid28 = sum % count;\n    long long int mid29 = sum / count;\n    long long\
    \ int mid30 = sum % count;\n    long long int mid31 = sum / count;\n    long long\
    \ int mid32 = sum % count;\n    long long int mid33 = sum / count;\n    long long\
    \ int mid34 = sum % count;\n    long long int mid35 = sum / count;\n    long long\
    \ int mid36 = sum % count;\n    long long int mid37 = sum / count;\n    long long\
    \ int mid38 = sum % count;\n    long long int mid39 = sum / count;\n    ", " \
    \   // Your code here\n    long long ones = 0;\n    for (long long i : arr) {\n\
    \        ones += i;\n    }\n    long long zeros = 0;\n    for (long long i : arr)\
    \ {\n        zeros += i;\n    }\n    std::vector<long> sorted_arr;\n    if (ones\
    \ > zeros) {\n        sorted_arr.reserve(arr.size());\n        for (long long\
    \ i : arr) {\n            if (i % 2 == 0) {\n                sorted_arr.push_back(i);\n\
    \            }\n        }\n        std::sort(sorted_arr.begin(), sorted_arr.end(),\
    \ [&ones](long long a, long long b) {\n            return ones - a > ones - b;\n\
    \        });\n    } else {\n        sorted_arr.reserve(arr.size());\n        for\
    \ (long long i : arr) {\n            if (i % 2 == 1) {\n                sorted_arr.push_back(i);\n\
    \            }\n        }\n        std::sort(sorted_arr.begin(), sorted_arr.end(),\
    \ [&zeros](long long a, long long b) {\n            return zeros - a > zeros -\
    \ b;\n        });\n    }\n    return sorted_arr;", "    // Your code here\n  \
    \  long long ans = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        ans\
    \ += arr[i];\n    }\n    long long bin = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        bin += arr[i];\n    }\n    long long dec = bin % 10;\n    long\
    \ long rem = bin / 10;\n    long long temp = 0;\n    long long temp2 = 0;\n  \
    \  long long temp3 = 0;\n    long long temp4 = 0;\n    long long temp5 = 0;\n\
    \    long long temp6 = 0;\n    long long temp7 = 0;\n    long long temp8 = 0;\n\
    \    long long temp9 = 0;\n    long long temp10 = 0;\n    long long temp11 = 0;\n\
    \    long long temp12 = 0;\n    long long temp13 = 0;\n    long long temp14 =\
    \ 0;\n    long long temp15 = 0;\n    long long temp16 = 0;\n    long long temp17\
    \ = 0;\n    long long temp18 = 0;\n    long long temp19 = 0;\n    long long temp20\
    \ = 0;\n    long long temp21 = 0;\n    long long temp22 = 0;\n    long long temp23\
    \ = 0;\n    long long temp24 = 0;\n    long long temp25 = 0;\n    long long temp26\
    \ = 0;\n    long long temp27 = 0;\n    long long temp28 = 0;\n    long long temp29\
    \ = 0;\n    long long temp30 = 0;\n    long long temp31 = 0;\n    long long temp32\
    \ = 0;\n    long long temp33 = 0;\n    long long temp34 = 0;\n    long long temp35\
    \ = 0;\n    long long temp36 = 0;\n    long long temp37 = 0;\n    long long temp38\
    \ = 0;\n    long long temp39 = 0;\n    long long temp40 = 0;\n    long long temp41\
    \ = 0;\n    long long temp42 = 0;\n    long long temp43 = 0;\n    long long temp44\
    \ = 0;\n    long long temp45 = 0;\n    long long temp46 = 0;\n    long long temp47\
    \ = 0;\n    long long temp48 = 0;\n    long long temp49 = 0;\n    long long temp50\
    \ = 0;\n    long long temp51 = 0;\n    long long temp52 = 0;\n    long long temp53\
    \ = 0;\n    long long temp54 = 0;\n    long long temp55 = 0;\n    long long temp56\
    \ = 0;\n    long long temp57 = 0;\n    long long temp58 = 0;\n    long long temp59\
    \ = 0;\n    long long temp60 = 0;\n    long long temp61 = 0;\n    long long temp62\
    \ = 0;\n    long long temp63 = 0;\n    long long temp64 = 0;\n    long long temp",
  "    // Write your code here\n    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        if (i > max) {\n            max = i;\n        }\n\
    \    }\n    std::vector<long> ans;\n    for (long long int i : arr) {\n      \
    \  if (i == max) {\n            ans.push_back(i);\n        }\n    }\n    for (long\
    \ long int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (long long int i : arr) {\n        if (i == max) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (long long int i : arr)\
    \ {\n        if (i == max) {\n            ans.push_back(i);\n        }\n    }\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (long long int i : arr) {\n        if (i == max) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (long long int i : arr)\
    \ {\n        if (i == max) {\n            ans.push_back(i);\n        }\n    }\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (long long int i : arr) {\n        if (i == max) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (long long int i : arr)\
    \ {\n        if (i == max) {\n            ans.push_back(i);\n        }\n    }\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (long long int i : arr) {\n        if (i == max) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (long long int i : arr)\
    \ {\n        if (i == max) {\n            ans.push_back(i);\n        }\n    }\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (long long int i : arr) {\n        if (i == max) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (long long int i : arr)\
    \ {\n        if (i == max) {\n            ans.push_back(i);\n        }\n    }\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (long long int i : arr) {\n        if (i == max) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (long long int i : arr)\
    \ {\n        if (i == max) {\n            ans.", "    long long int sum = 0;\n\
    \    for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ max_ones = sum;\n    long long int max_ones_index = -1;\n    for (long long\
    \ int i : arr) {\n        if (max_ones > i) {\n            max_ones = i;\n   \
    \         max_ones_index = i;\n        }\n    }\n    long long int min_ones =\
    \ sum;\n    long long int min_ones_index = -1;\n    for (long long int i : arr)\
    \ {\n        if (min_ones < i) {\n            min_ones = i;\n            min_ones_index\
    \ = i;\n        }\n    }\n    long long int max_ones_index = -1;\n    long long\
    \ int min_ones_index = -1;\n    for (long long int i : arr) {\n        if (max_ones_index\
    \ == -1 && max_ones > i) {\n            max_ones_index = i;\n        }\n     \
    \   if (min_ones_index == -1 && min_ones < i) {\n            min_ones_index =\
    \ i;\n        }\n    }\n    long long int max_ones_index = -1;\n    long long\
    \ int min_ones_index = -1;\n    for (long long int i : arr) {\n        if (max_ones_index\
    \ == -1 && max_ones > i) {\n            max_ones_index = i;\n        }\n     \
    \   if (min_ones_index == -1 && min_ones < i) {\n            min_ones_index =\
    \ i;\n        }\n    }\n    long long int max_ones_index = -1;\n    long long\
    \ int min_ones_index = -1;\n    for (long long int i : arr) {\n        if (max_ones_index\
    \ == -1 && max_ones > i) {\n            max_ones_index = i;\n        }\n     \
    \   if (min_ones_index == -1 && min_ones < i) {\n            min_ones_index =\
    \ i;\n        }\n    }\n    long long int max_ones_index = -1;\n    long long\
    \ int min_ones_index = -1;\n    for (long long int i : arr) {\n        if (max_ones_index\
    \ == -1 && max_ones > i) {\n            max_ones_index = i;\n        }\n     \
    \   if (min_ones_index == -1 && min_ones < i) {\n            min_ones_index =\
    \ i;\n        }\n    }\n    long long int max_ones_index = -1;\n    long long\
    \ int min_ones_index = -1;\n    for (long long int i : arr) {\n        if (max_ones_index\
    \ == -1 && max_ones > i) {\n            max_ones_index = i;\n        }\n     \
    \   if (min_ones_index == -1 && min_ones < i) {\n            min_ones_index =\
    \ i;\n        }\n    }\n    long long int max_ones_index = -1;\n    long long\
    \ int min_ones_index = -1;\n    for (long long int i ", "    // Write your code\
    \ here\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : arr) {\n        sum += i;\n        count += 1;\n    }\n    long\
    \ long int max = (long long) count;\n    long long int min = (long long) sum;\n\
    \    long long int mid = (long long) (sum / 2);\n    long long int mid1 = (long\
    \ long) (sum / 2);\n    long long int mid2 = (long long) (sum / 2);\n    long\
    \ long int mid3 = (long long) (sum / 2);\n    long long int mid4 = (long long)\
    \ (sum / 2);\n    long long int mid5 = (long long) (sum / 2);\n    long long int\
    \ mid6 = (long long) (sum / 2);\n    long long int mid7 = (long long) (sum / 2);\n\
    \    long long int mid8 = (long long) (sum / 2);\n    long long int mid9 = (long\
    \ long) (sum / 2);\n    long long int mid10 = (long long) (sum / 2);\n    long\
    \ long int mid11 = (long long) (sum / 2);\n    long long int mid12 = (long long)\
    \ (sum / 2);\n    long long int mid13 = (long long) (sum / 2);\n    long long\
    \ int mid14 = (long long) (sum / 2);\n    long long int mid15 = (long long) (sum\
    \ / 2);\n    long long int mid16 = (long long) (sum / 2);\n    long long int mid17\
    \ = (long long) (sum / 2);\n    long long int mid18 = (long long) (sum / 2);\n\
    \    long long int mid19 = (long long) (sum / 2);\n    long long int mid20 = (long\
    \ long) (sum / 2);\n    long long int mid21 = (long long) (sum / 2);\n    long\
    \ long int mid22 = (long long) (sum / 2);\n    long long int mid23 = (long long)\
    \ (sum / 2);\n    long long int mid24 = (long long) (sum / 2);\n    long long\
    \ int mid25 = (long long) (sum / 2);\n    long long int mid26 = (long long) (sum\
    \ / 2);\n    long long int mid27 = (long long) (sum / 2);\n    long long int mid28\
    \ = (long long) (sum / 2);\n    long long int mid29 = (long long) (sum / 2);\n\
    \    long long int mid30 = (long long) (sum / 2);\n    long long int mid31 = (long\
    \ long) (sum / 2);\n    long long int mid32 = (long long) (sum / 2);\n    long\
    \ long int mid33 = (long long) (sum / 2);\n    long long int mid34 = (long long)\
    \ (sum / ", "    // Your code goes here\n    long long int sum = 0;\n    for (long\
    \ long int i : arr) {\n        sum += i;\n    }\n    long long int max = 0;\n\
    \    for (long long int i : arr) {\n        if (i > max) {\n            max =\
    \ i;\n        }\n    }\n    long long int min = 0;\n    for (long long int i :\
    \ arr) {\n        if (i < min) {\n            min = i;\n        }\n    }\n   \
    \ long long int mid = sum / 2;\n    long long int count = 0;\n    for (long long\
    \ int i : arr) {\n        if (i == mid) {\n            count++;\n        }\n \
    \   }\n    long long int maxcount = 0;\n    for (long long int i : arr) {\n  \
    \      if (i == max) {\n            maxcount++;\n        }\n    }\n    long long\
    \ int mincount = 0;\n    for (long long int i : arr) {\n        if (i == min)\
    \ {\n            mincount++;\n        }\n    }\n    long long int midcount = 0;\n\
    \    for (long long int i : arr) {\n        if (i == mid) {\n            midcount++;\n\
    \        }\n    }\n    long long int maxmincount = maxcount + mincount;\n    long\
    \ long int maxmidcount = maxcount + midcount;\n    long long int minmidcount =\
    \ mincount + midcount;\n    long long int maxmaxcount = maxmaxcount + maxmincount;\n\
    \    long long int maxminmidcount = maxmaxcount + minmincount;\n    long long\
    \ int minmaxmidcount = minmaxcount + maxmidcount;\n    long long int maxminmaxcount\
    \ = maxminmaxcount + maxminmidcount;\n    long long int minminmaxcount = minminmaxcount\
    \ + minmaxmidcount;\n    long long int maxminmincount = maxminmincount + minminmaxcount;\n\
    \    long long int minminmincount = minminmincount + minminmincount;\n    long\
    \ long int maxminminmincount = maxminminmincount + minminminmincount;\n    long\
    \ long int minminminmincount = minminminmincount + minminminmincount;\n    long\
    \ long int maxminminminmincount = maxminminminmincount + minminminminmincount;\n\
    \    long long int minminminminmincount = minminminminmincount + minminminminmincount;\n\
    \    long long int maxminminminmincount = maxminminminminmincount + minminminminmincount;\n\
    \    long long int minminminminmincount = minminminminmincount + minminminmincount;\n\
    \    long long ", "    long long ones = 0;\n    for (long long i : arr) {\n  \
    \      ones += i;\n    }\n    long long base = 1;\n    for (long long i : arr)\
    \ {\n        long long tmp = i;\n        while (tmp) {\n            tmp /= 2;\n\
    \            base *= 2;\n        }\n    }\n    std::vector<long> res;\n    for\
    \ (long long i = ones; i > 0; i /= base) {\n        res.push_back(i);\n    }\n\
    \    std::sort(res.begin(), res.end());\n    return res;", "    long long ans\
    \ = 0;\n    for (long long i = 0; i < arr.size(); i++) {\n        ans += arr[i];\n\
    \    }\n    long long ans_bin = ans;\n    long long ans_dec = ans;\n    for (long\
    \ long i = 0; i < arr.size(); i++) {\n        ans_bin -= arr[i];\n        ans_dec\
    \ -= arr[i];\n    }\n    if (ans_bin < 0) {\n        ans_bin += pow(10, sizeof(long\
    \ long) * 8 - 1);\n    }\n    if (ans_dec < 0) {\n        ans_dec += pow(10, sizeof(long\
    \ long) * 8 - 1);\n    }\n    long long ans_bin2 = ans_bin;\n    long long ans_dec2\
    \ = ans_dec;\n    for (long long i = 0; i < arr.size(); i++) {\n        ans_bin2\
    \ -= arr[i];\n        ans_dec2 -= arr[i];\n    }\n    if (ans_bin2 < 0) {\n  \
    \      ans_bin2 += pow(10, sizeof(long long) * 8 - 1);\n    }\n    if (ans_dec2\
    \ < 0) {\n        ans_dec2 += pow(10, sizeof(long long) * 8 - 1);\n    }\n   \
    \ long long ans_bin3 = ans_bin2;\n    long long ans_dec3 = ans_dec2;\n    for\
    \ (long long i = 0; i < arr.size(); i++) {\n        ans_bin3 -= arr[i];\n    \
    \    ans_dec3 -= arr[i];\n    }\n    if (ans_bin3 < 0) {\n        ans_bin3 +=\
    \ pow(10, sizeof(long long) * 8 - 1);\n    }\n    if (ans_dec3 < 0) {\n      \
    \  ans_dec3 += pow(10, sizeof(long long) * 8 - 1);\n    }\n    long long ans_bin4\
    \ = ans_bin3;\n    long long ans_dec4 = ans_dec3;\n    for (long long i = 0; i\
    \ < arr.size(); i++) {\n        ans_bin4 -= arr[i];\n        ans_dec4 -= arr[i];\n\
    \    }\n    if (ans_bin4 < 0) {\n        ans_bin4 += pow(10, sizeof(long long)\
    \ * 8 - 1);\n    }\n    if (ans_dec4 < 0) {\n        ans_dec4 += pow(10, sizeof(long\
    \ long) * 8 - 1);\n    }\n    long long ans_bin5 = ans_bin4;\n    long long ans_dec5\
    \ = ans_dec4;\n    for (long long i = 0; i < arr.size(); i++) {\n        ans_bin5\
    \ -= arr[i];\n        ans_dec5 -= arr[i];\n    }\n    if (ans_bin5 < 0) {\n  \
    \      ans_bin5 += pow(10, sizeof(long long) * 8 - 1);\n    }\n    if (ans_dec5\
    \ < 0) {\n        ans_dec5 += pow(10, sizeof(long long) * 8 - 1);", "    std::vector<long>\
    \ sorted_arr(arr.size());\n    std::iota(sorted_arr.begin(), sorted_arr.end(),\
    \ 0);\n    std::sort(sorted_arr.begin(), sorted_arr.end(), [&arr](long a, long\
    \ b) -> bool {\n        return arr[a] >= arr[b];\n    });\n    return sorted_arr;",
  "    // Write your code here\n    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 0) {\n            continue;\n        }\n\
    \        if (sum > max) {\n            max = sum;\n        }\n        sum -= i;\n\
    \    }\n    std::vector<long> ans;\n    for (long long int i : arr) {\n      \
    \  if (i == 0) {\n            continue;\n        }\n        if (sum > max) {\n\
    \            ans.push_back(i);\n            max = sum;\n        }\n        sum\
    \ -= i;\n    }\n    return ans;", "    // Your code here\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : arr) {\n    \
    \    sum += i;\n        count += 1;\n    }\n    long long int max = (long long)\
    \ count;\n    long long int min = (long long) sum;\n    long long int mid = (long\
    \ long) sum / 2;\n    long long int mid2 = mid / 2;\n    long long int mid3 =\
    \ mid2 / 2;\n    long long int mid4 = mid3 / 2;\n    long long int mid5 = mid4\
    \ / 2;\n    long long int mid6 = mid5 / 2;\n    long long int mid7 = mid6 / 2;\n\
    \    long long int mid8 = mid7 / 2;\n    long long int mid9 = mid8 / 2;\n    long\
    \ long int mid10 = mid9 / 2;\n    long long int mid11 = mid10 / 2;\n    long long\
    \ int mid12 = mid11 / 2;\n    long long int mid13 = mid12 / 2;\n    long long\
    \ int mid14 = mid13 / 2;\n    long long int mid15 = mid14 / 2;\n    long long\
    \ int mid16 = mid15 / 2;\n    long long int mid17 = mid16 / 2;\n    long long\
    \ int mid18 = mid17 / 2;\n    long long int mid19 = mid18 / 2;\n    long long\
    \ int mid20 = mid19 / 2;\n    long long int mid21 = mid20 / 2;\n    long long\
    \ int mid22 = mid21 / 2;\n    long long int mid23 = mid22 / 2;\n    long long\
    \ int mid24 = mid23 / 2;\n    long long int mid25 = mid24 / 2;\n    long long\
    \ int mid26 = mid25 / 2;\n    long long int mid27 = mid26 / 2;\n    long long\
    \ int mid28 = mid27 / 2;\n    long long int mid29 = mid28 / 2;\n    long long\
    \ int mid30 = mid29 / 2;\n    long long int mid31 = mid30 / 2;\n    long long\
    \ int mid32 = mid31 / 2;\n    long long int mid33 = mid32 / 2;\n    long long\
    \ int mid34 = mid33 / 2;\n    long long int mid35 = mid34 / 2;\n    long long\
    \ int mid36 = mid35 / 2;\n    long long int mid37 = mid36 / 2;\n    long long\
    \ int mid38 = mid37 / 2;\n    long long int mid39 = mid38", "    // Your code\
    \ here\n    long long ans = 0;\n    long long temp = 0;\n    for (long long i\
    \ = 0; i < arr.size(); i++) {\n        temp = arr[i];\n        ans += temp;\n\
    \    }\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n \
    \   ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans +=\
    \ arr[0];\n    ans %= 10;\n    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n\
    \    ans *= 10;\n    ans += arr[0];\n    ans %= 10;\n", "    long long ones =\
    \ 0;\n    long long zeros = 0;\n    for (long long i : arr) {\n        if (i ==\
    \ 1) {\n            ones++;\n        } else {\n            zeros++;\n        }\n\
    \    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(), [](long\
    \ long a, long long b) {\n            return a > b;\n        });\n    } else if\
    \ (zeros > ones) {\n        std::sort(arr.begin(), arr.end(), [](long long a,\
    \ long long b) {\n            return a < b;\n        });\n    }\n    return arr;",
  "    std::vector<long> sorted_arr;\n    for (long i : arr) {\n        sorted_arr.push_back(i);\n\
    \    }\n    std::sort(sorted_arr.begin(), sorted_arr.end(), [](long a, long b)\
    \ { return (a > b); });\n    return sorted_arr;", "    std::vector<long> sorted_arr;\n\
    \    for (long i : arr) {\n        if (i == 0) {\n            sorted_arr.push_back(i);\n\
    \        } else {\n            int count = 0;\n            while (i > 0) {\n \
    \               i &= i - 1;\n                count++;\n            }\n       \
    \     sorted_arr.push_back(count * i);\n        }\n    }\n    return sorted_arr;",
  "    long long ones = 0;\n    long long zeros = 0;\n    for (long long i : arr)\
    \ {\n        if (i == 1) {\n            ones++;\n        } else {\n          \
    \  zeros++;\n        }\n    }\n    if (ones == zeros) {\n        return arr;\n\
    \    }\n    std::vector<long> ans;\n    long long max = 0;\n    for (long long\
    \ i : arr) {\n        if (i == 1) {\n            ans.push_back(i);\n         \
    \   max = std::max(max, i);\n        } else {\n            long long count = 0;\n\
    \            long long pos = 0;\n            while (i != 0) {\n              \
    \  long long temp = i & -i;\n                count += temp;\n                i\
    \ ^= temp;\n                pos++;\n            }\n            long long temp\
    \ = count + ones;\n            if (temp > max) {\n                max = temp;\n\
    \            }\n            ans.push_back(max * pos - ones);\n        }\n    }\n\
    \    return ans;", "    long long ones = 0;\n    for (auto i : arr) {\n      \
    \  ones += i;\n    }\n    long long base = 1;\n    for (auto i : arr) {\n    \
    \    base += i;\n    }\n    std::vector<long> ans;\n    for (auto i : arr) {\n\
    \        long long temp = i;\n        while (temp) {\n            long long mod\
    \ = temp % base;\n            ans.push_back(mod);\n            temp /= base;\n\
    \        }\n    }\n    long long ans_size = ans.size();\n    for (long long i\
    \ = 0; i < ans_size; i++) {\n        long long sum = 0;\n        for (auto j :\
    \ ans) {\n            sum += j;\n        }\n        if (sum < i) {\n         \
    \   std::swap(ans[i], ans[sum]);\n        }\n    }\n    return ans;", "    long\
    \ long int sum = 0;\n    for (auto i : arr) {\n        sum += i;\n    }\n    long\
    \ long int max = 0;\n    for (auto i : arr) {\n        if (i > max) {\n      \
    \      max = i;\n        }\n    }\n    long long int min = max - max - 1;\n  \
    \  for (auto i : arr) {\n        if (i < min) {\n            min = i;\n      \
    \  }\n    }\n    long long int mid = sum / 2;\n    long long int mid1 = mid -\
    \ 1;\n    long long int mid2 = mid + 1;\n    long long int mid3 = mid * 2;\n \
    \   long long int mid4 = mid * 3;\n    long long int mid5 = mid * 4;\n    long\
    \ long int mid6 = mid * 5;\n    long long int mid7 = mid * 6;\n    long long int\
    \ mid8 = mid * 7;\n    long long int mid9 = mid * 8;\n    long long int mid10\
    \ = mid * 9;\n    long long int mid11 = mid * 10;\n    long long int mid12 = mid\
    \ * 11;\n    long long int mid13 = mid * 12;\n    long long int mid14 = mid *\
    \ 13;\n    long long int mid15 = mid * 14;\n    long long int mid16 = mid * 15;\n\
    \    long long int mid17 = mid * 16;\n    long long int mid18 = mid * 17;\n  \
    \  long long int mid19 = mid * 18;\n    long long int mid20 = mid * 19;\n    long\
    \ long int mid21 = mid * 20;\n    long long int mid22 = mid * 21;\n    long long\
    \ int mid23 = mid * 22;\n    long long int mid24 = mid * 23;\n    long long int\
    \ mid25 = mid * 24;\n    long long int mid26 = mid * 25;\n    long long int mid27\
    \ = mid * 26;\n    long long int mid28 = mid * 27;\n    long long int mid29 =\
    \ mid * 28;\n    long long int mid30 = mid * 29;\n    long long int mid31 = mid\
    \ * 30;\n    long long int mid32 = mid * 31;\n    long long int mid33 = mid *\
    \ 32;\n    long long int mid34 = mid * 33;\n    long long int mid35 = mid * 34;\n\
    \    long long int mid36 = mid * 35;\n    long long int mid37 = mid * 36;\n",
  "    long long int sum = 0;\n    for (auto i : arr) {\n        sum += i;\n    }\n\
    \    long long int count = 0;\n    for (auto i : arr) {\n        if (i % 2 ==\
    \ 0) {\n            count += 1;\n        }\n    }\n    long long int max = 0;\n\
    \    for (auto i : arr) {\n        if (i == 1) {\n            max = i;\n     \
    \   }\n    }\n    std::vector<long> ans;\n    for (auto i : arr) {\n        if\
    \ (i == 1) {\n            ans.push_back(max);\n        } else {\n            long\
    \ long int sum = 0;\n            for (auto j : arr) {\n                sum +=\
    \ j;\n            }\n            long long int count = 0;\n            for (auto\
    \ j : arr) {\n                if (j % 2 == 0) {\n                    count +=\
    \ 1;\n                }\n            }\n            long long int max = 0;\n \
    \           for (auto j : arr) {\n                if (j == 1) {\n            \
    \        max = j;\n                }\n            }\n            if (sum > count)\
    \ {\n                ans.push_back(max);\n            } else {\n             \
    \   ans.push_back(i);\n            }\n        }\n    }\n    return ans;", "  \
    \  long long int sum = 0;\n    for (auto i : arr) {\n        sum += i;\n    }\n\
    \    long long int max = 0;\n    for (auto i : arr) {\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    std::vector<long> ans;\n    for (auto\
    \ i : arr) {\n        if (i == 0) {\n            ans.push_back(0);\n        }\
    \ else {\n            long long int cur = sum - i;\n            long long int\
    \ rem = cur % max;\n            long long int mod = cur - rem;\n            ans.push_back(mod);\n\
    \        }\n    }\n    return ans;", "    long long int sum = 0;\n    for (long\
    \ long int i : arr) {\n        sum += i;\n    }\n    long long int max = (long\
    \ long)-1;\n    for (long long int i : arr) {\n        if (i > max) {\n      \
    \      max = i;\n        }\n    }\n    std::vector<long> ans;\n    long long int\
    \ cur = max;\n    while (cur > 0) {\n        long long int cnt = 0;\n        for\
    \ (long long int i : arr) {\n            if (i == cur) {\n                cnt++;\n\
    \            }\n        }\n        ans.push_back(cur);\n        cur -= cnt;\n\
    \    }\n    return ans;", "    // Your code here\n    long long int ones = 0;\n\
    \    long long int zeros = 0;\n    for (long long int i : arr) {\n        if (i\
    \ == 1) {\n            ones++;\n        } else {\n            zeros++;\n     \
    \   }\n    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long int a, long long int b){\n            return a > b;\n        });\n\
    \        return arr;\n    } else {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long int a, long long int b){\n            return a < b;\n        });\n\
    \        return arr;\n    }", "    // Your code here\n    long long int sum =\
    \ 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n    long long\
    \ int max = 0;\n    for (long long int i : arr) {\n        if (max < i) {\n  \
    \          max = i;\n        }\n    }\n    long long int min = 0;\n    for (long\
    \ long int i : arr) {\n        if (min > i) {\n            min = i;\n        }\n\
    \    }\n    long long int mid = sum / 2;\n    long long int mid2 = sum / 2;\n\
    \    long long int mid3 = sum / 2;\n    long long int mid4 = sum / 2;\n    long\
    \ long int mid5 = sum / 2;\n    long long int mid6 = sum / 2;\n    long long int\
    \ mid7 = sum / 2;\n    long long int mid8 = sum / 2;\n    long long int mid9 =\
    \ sum / 2;\n    long long int mid10 = sum / 2;\n    long long int mid11 = sum\
    \ / 2;\n    long long int mid12 = sum / 2;\n    long long int mid13 = sum / 2;\n\
    \    long long int mid14 = sum / 2;\n    long long int mid15 = sum / 2;\n    long\
    \ long int mid16 = sum / 2;\n    long long int mid17 = sum / 2;\n    long long\
    \ int mid18 = sum / 2;\n    long long int mid19 = sum / 2;\n    long long int\
    \ mid20 = sum / 2;\n    long long int mid21 = sum / 2;\n    long long int mid22\
    \ = sum / 2;\n    long long int mid23 = sum / 2;\n    long long int mid24 = sum\
    \ / 2;\n    long long int mid25 = sum / 2;\n    long long int mid26 = sum / 2;\n\
    \    long long int mid27 = sum / 2;\n    long long int mid28 = sum / 2;\n    long\
    \ long int mid29 = sum / 2;\n    long long int mid30 = sum / 2;\n    long long\
    \ int mid31 = sum / 2;\n    long long int mid32 = sum / 2;\n    long long int\
    \ mid33 = sum / 2;\n    long long int mid34 = sum / 2;\n    long long int mid35\
    \ = sum / 2;\n    long long int mid36 = sum / 2;\n    long long int mid37 = sum\
    \ / 2;\n    long long int mid38 = sum / 2;\n    long long int mid39 = sum / 2;\n\
    \    long long int mid40 = sum / 2;", "    // Write your code here\n    long long\
    \ ones = 0;\n    long long zeros = 0;\n    for (long long i : arr) {\n       \
    \ if (i == 1) {\n            ones++;\n        } else {\n            zeros++;\n\
    \        }\n    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long a, long long b) {\n            return a > b;\n        });\n   \
    \ } else if (zeros > ones) {\n        std::sort(arr.begin(), arr.end(), [](long\
    \ long a, long long b) {\n            return a < b;\n        });\n    }\n    return\
    \ arr;", "    long long ans = 0;\n    long long cnt = 0;\n    for (long long i\
    \ : arr) {\n        cnt += i;\n        ans += cnt * (cnt - 1) / 2;\n    }\n  \
    \  std::vector<long> res(arr.size());\n    for (long long i = 0; i < arr.size();\
    \ i++) {\n        long long cnt = 0;\n        for (long long j : arr) {\n    \
    \        cnt += j;\n            if (cnt > i) {\n                res[i] = ans -\
    \ cnt;\n                break;\n            }\n        }\n    }\n    return res;",
  "    // Your code goes here\n    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int ones = 0;\n    for (long\
    \ long int i : arr) {\n        ones += i;\n    }\n    long long int zeros = 0;\n\
    \    for (long long int i : arr) {\n        zeros += i;\n    }\n    long long\
    \ int max = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n   \
    \         max = i;\n        }\n    }\n    long long int min = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 0) {\n            min = i;\n        }\n\
    \    }\n    long long int mid = 0;\n    for (long long int i : arr) {\n      \
    \  if (i == 1) {\n            mid = i;\n        }\n    }\n    long long int mid2\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == 0) {\n           \
    \ mid2 = i;\n        }\n    }\n    long long int mid3 = 0;\n    for (long long\
    \ int i : arr) {\n        if (i == 1) {\n            mid3 = i;\n        }\n  \
    \  }\n    long long int mid4 = 0;\n    for (long long int i : arr) {\n       \
    \ if (i == 0) {\n            mid4 = i;\n        }\n    }\n    long long int mid5\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n           \
    \ mid5 = i;\n        }\n    }\n    long long int mid6 = 0;\n    for (long long\
    \ int i : arr) {\n        if (i == 0) {\n            mid6 = i;\n        }\n  \
    \  }\n    long long int mid7 = 0;\n    for (long long int i : arr) {\n       \
    \ if (i == 1) {\n            mid7 = i;\n        }\n    }\n    long long int mid8\
    \ = 0;\n    for (long long int i : arr) {\n        if (i == 0) {\n           \
    \ mid8 = i;\n        }\n    }\n    long long int mid9 = 0;\n    for (long long\
    \ int i : arr) {\n        if (i == 1) {\n            mid9 = i;\n        }\n  \
    \  }\n    long long int mid10 = 0;\n    for (long long int i : arr) {\n      \
    \  if (i == 0) {\n            mid10 = i;\n        }\n    }\n    long long int\
    \ mid11 = 0;\n    for (long long int i : arr) {\n        if (i == 1) {\n     \
    \       mid11 = i;\n        }\n    }\n    long long int mid12 = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 0) {\n            mid12 = i;\n       \
    \ }\n    }\n    long long int mid13 = 0;\n    for (long long int i : arr) {\n\
    \        if (i == 1) {\n            mid13 = i;\n", "    long long ones = 0;\n\
    \    long long zeros = 0;\n    for (long long i : arr) {\n        if (i == 1)\
    \ {\n            ones++;\n        } else {\n            zeros++;\n        }\n\
    \    }\n    std::vector<long> result;\n    if (ones > zeros) {\n        for (long\
    \ long i : arr) {\n            if (i == 1) {\n                result.push_back(i);\n\
    \            }\n        }\n    } else {\n        for (long long i : arr) {\n \
    \           if (i == 0) {\n                result.push_back(i);\n            }\n\
    \        }\n    }\n    std::sort(result.begin(), result.end());\n    return result;",
  "    long long ones = 0;\n    long long zeros = 0;\n    for (auto i : arr) {\n \
    \       ones += i;\n        zeros += (long long)~i;\n    }\n    std::vector<long>\
    \ res;\n    for (auto i : arr) {\n        if (ones == zeros) {\n            res.push_back(i);\n\
    \            ones = 0;\n            zeros = 0;\n        } else {\n           \
    \ if (ones > zeros) {\n                res.push_back(i);\n                ones\
    \ = 0;\n            } else {\n                res.push_back(-i);\n           \
    \     zeros = 0;\n            }\n        }\n    }\n    return res;", "    std::vector<long>\
    \ sorted_arr;\n    long ones = 0;\n    for (long i : arr) {\n        ones += i;\n\
    \    }\n    long max_ones = ones;\n    for (long i : arr) {\n        max_ones\
    \ = std::max(max_ones, i);\n    }\n    long max_ones_power = max_ones;\n    while\
    \ (max_ones_power != 0) {\n        max_ones_power /= 2;\n    }\n    long max_ones_power_power\
    \ = max_ones_power;\n    while (max_ones_power_power != 0) {\n        max_ones_power_power\
    \ /= 2;\n    }\n    long max_ones_power_power_power = max_ones_power_power;\n\
    \    while (max_ones_power_power_power != 0) {\n        max_ones_power_power_power\
    \ /= 2;\n    }\n    long max_ones_power_power_power_power = max_ones_power_power_power;\n\
    \    while (max_ones_power_power_power_power != 0) {\n        max_ones_power_power_power_power\
    \ /= 2;\n    }\n    long max_ones_power_power_power_power_power = max_ones_power_power_power_power;\n\
    \    while (max_ones_power_power_power_power_power != 0) {\n        max_ones_power_power_power_power_power\
    \ /= 2;\n    }\n    long max_ones_power_power_power_power_power_power = max_ones_power_power_power_power_power_power;\n\
    \    while (max_ones_power_power_power_power_power_power != 0) {\n        max_ones_power_power_power_power_power_power\
    \ /= 2;\n    }\n    long max_ones_power_power_power_power_power_power_power =\
    \ max_ones_power_power_power_power_power_power_power;\n    while (max_ones_power_power_power_power_power_power_power\
    \ != 0) {\n        max_ones_power_power_power_power_power_power_power /= 2;\n\
    \    }\n    long max_ones_power_power_power_power_power_power_power = max_ones_power_power_power_power_power_power_power_power;\n\
    \    while (max_ones_power_power_power_power_power_power_power != 0) {\n     \
    \   max_ones_power_power_power_power_power_power_power /= 2;\n    }\n    long\
    \ max_ones_power_power_power_power_power_power_power_power = max_ones_power_power_power_power_power_power_power_power_power;\n\
    \    while (max_ones_power_power_power_power_power_power_power_power != 0) {\n\
    \        max_ones_power_power_power_power_power_power_power_power /= 2;\n    }\n\
    \    long max_ones_power_power_power_power_power_power_power_power = max_ones_power_power_power_power_power_power_power_power_power;\n\
    \    while (max_ones_power_power_power_power_power_power_power_power != 0) {\n\
    \        max_ones_power_power_power_power_power_power_power_power /= 2;", "  \
    \  long long ones = 0;\n    for (long long i : arr) {\n        ones += i;\n  \
    \  }\n    long long twos = 0;\n    for (long long i : arr) {\n        twos +=\
    \ i * i;\n    }\n    long long threes = 0;\n    for (long long i : arr) {\n  \
    \      threes += i * i * i;\n    }\n    long long fours = 0;\n    for (long long\
    \ i : arr) {\n        fours += i * i * i * i;\n    }\n    long long fives = 0;\n\
    \    for (long long i : arr) {\n        fives += i * i * i * i * i;\n    }\n \
    \   long long six = 0;\n    for (long long i : arr) {\n        six += i * i *\
    \ i * i * i * i;\n    }\n    long long sevens = 0;\n    for (long long i : arr)\
    \ {\n        sevens += i * i * i * i * i * i * i;\n    }\n    long long eights\
    \ = 0;\n    for (long long i : arr) {\n        eights += i * i * i * i * i * i\
    \ * i * i;\n    }\n    long long nines = 0;\n    for (long long i : arr) {\n \
    \       nines += i * i * i * i * i * i * i * i * i;\n    }\n    long long tens\
    \ = 0;\n    for (long long i : arr) {\n        tens += i * i * i * i * i * i *\
    \ i * i * i * i;\n    }\n    long long hundreds = 0;\n    for (long long i : arr)\
    \ {\n        hundreds += i * i * i * i * i * i * i * i * i * i * i;\n    }\n \
    \   long long thousands = 0;\n    for (long long i : arr) {\n        thousands\
    \ += i * i * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long ten_thousands\
    \ = 0;\n    for (long long i : arr) {\n        ten_thousands += i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i;\n    }\n    long long hundred_thousands\
    \ = 0;\n    for (long long i : arr) {\n        hundred_thousands += i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long thousand_thousands\
    \ = 0;\n    for (long long i : arr) {\n        thousand_thousands += i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long hundred_thousand_thousands\
    \ = 0;\n    for (long long i : arr) {\n        hundred_thousand_thousands += i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long\
    \ thousand_thousand_thousands = 0;\n    for (long long i : arr) {\n        ",
  "    long long ans = 0;\n    long long cnt = 0;\n    for (long long i : arr) {\n\
    \        cnt += i;\n        ans += cnt;\n    }\n    std::vector<long> ans_vec;\n\
    \    for (long long i = ans; i > 0; i /= 2) {\n        long long cnt = 0;\n  \
    \      for (long long j : arr) {\n            cnt += j;\n            if (cnt >\
    \ i) {\n                ans_vec.push_back(j);\n                break;\n      \
    \      }\n        }\n    }\n    return ans_vec;", "    std::vector<long> res;\n\
    \    long long ones = 0;\n    for (auto i : arr) {\n        ones += i;\n    }\n\
    \    long long base = 1;\n    while (ones > 0) {\n        long long tmp = ones\
    \ / base;\n        res.push_back(tmp);\n        ones %= base;\n        base *=\
    \ 10;\n    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ res;\n    long long sum = 0;\n    for (long long i : arr) {\n        sum +=\
    \ i;\n    }\n    long long mod = sum % 10;\n    long long digit = sum / 10;\n\
    \    for (long long i : arr) {\n        if (i % 2 == 0) {\n            long long\
    \ temp = i;\n            temp *= digit;\n            temp += mod;\n          \
    \  res.push_back(temp);\n        } else {\n            res.push_back(i);\n   \
    \     }\n    }\n    return res;", "    // Your code here\n    long long ones =\
    \ 0;\n    long long zeros = 0;\n    long long max = 0;\n    for (long long i :\
    \ arr) {\n        if (i == 1) {\n            ones++;\n        } else {\n     \
    \       zeros++;\n        }\n        if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    std::vector<long> res;\n    for (long long i = 0; i < max;\
    \ i++) {\n        if (ones > zeros) {\n            res.push_back(i);\n       \
    \     ones--;\n        } else {\n            res.push_back(-i);\n            zeros--;\n\
    \        }\n    }\n    return res;", "    // Your code here\n    long long int\
    \ sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n    long\
    \ long int ones = 0;\n    for (long long int i : arr) {\n        ones += i;\n\
    \    }\n    long long int max = 0;\n    for (long long int i : arr) {\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    long long int min\
    \ = 0;\n    for (long long int i : arr) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n    }\n    long long int mid = sum / 2;\n    long long\
    \ int mid2 = sum / 2;\n    long long int mid3 = sum / 2;\n    long long int mid4\
    \ = sum / 2;\n    long long int mid5 = sum / 2;\n    long long int mid6 = sum\
    \ / 2;\n    long long int mid7 = sum / 2;\n    long long int mid8 = sum / 2;\n\
    \    long long int mid9 = sum / 2;\n    long long int mid10 = sum / 2;\n    long\
    \ long int mid11 = sum / 2;\n    long long int mid12 = sum / 2;\n    long long\
    \ int mid13 = sum / 2;\n    long long int mid14 = sum / 2;\n    long long int\
    \ mid15 = sum / 2;\n    long long int mid16 = sum / 2;\n    long long int mid17\
    \ = sum / 2;\n    long long int mid18 = sum / 2;\n    long long int mid19 = sum\
    \ / 2;\n    long long int mid20 = sum / 2;\n    long long int mid21 = sum / 2;\n\
    \    long long int mid22 = sum / 2;\n    long long int mid23 = sum / 2;\n    long\
    \ long int mid24 = sum / 2;\n    long long int mid25 = sum / 2;\n    long long\
    \ int mid26 = sum / 2;\n    long long int mid27 = sum / 2;\n    long long int\
    \ mid28 = sum / 2;\n    long long int mid29 = sum / 2;\n    long long int mid30\
    \ = sum / 2;\n    long long int mid31 = sum / 2;\n    long long int mid32 = sum\
    \ / 2;\n    long long int mid33 = sum / 2;\n    long long int mid34 = sum / 2;\n\
    \    long long int mid35 = sum / 2;\n    long long int mid36 = sum / 2;\n    long\
    \ long int mid37 = sum / 2;\n    long long int mid38 = sum / ", "    // Write\
    \ your code here\n    long long int sum = 0;\n    long long int max = 0;\n   \
    \ for (long long int i = 0; i < arr.size(); i++) {\n        sum += arr[i];\n \
    \       if (sum > max) {\n            max = sum;\n        }\n    }\n    long long\
    \ int sum2 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  sum2 += arr[i];\n    }\n    long long int max2 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        if (sum2 > max2) {\n            max2\
    \ = sum2;\n        }\n    }\n    long long int sum3 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        sum3 += arr[i];\n    }\n    long long\
    \ int max3 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  if (sum3 > max3) {\n            max3 = sum3;\n        }\n    }\n    long long\
    \ int sum4 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  sum4 += arr[i];\n    }\n    long long int max4 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        if (sum4 > max4) {\n            max4\
    \ = sum4;\n        }\n    }\n    long long int sum5 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        sum5 += arr[i];\n    }\n    long long\
    \ int max5 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  if (sum5 > max5) {\n            max5 = sum5;\n        }\n    }\n    long long\
    \ int sum6 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  sum6 += arr[i];\n    }\n    long long int max6 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        if (sum6 > max6) {\n            max6\
    \ = sum6;\n        }\n    }\n    long long int sum7 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        sum7 += arr[i];\n    }\n    long long\
    \ int max7 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  if (sum7 > max7) {\n            max7 = sum7;\n        }\n    }\n    long long\
    \ int sum8 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  sum8 += arr[i];\n    }\n    long long int max8 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        if (sum8 > max8) {\n            max8\
    \ = sum8;\n        }\n    }\n    long long int sum9 = 0;\n    for (long long int\
    \ i = 0; i < arr.size(); i++) {\n        sum9 += arr[i];\n    }\n    long long\
    \ int max9 = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n      \
    \  if (sum9 > max9) {\n            max9 = sum", "    // Your code here\n    long\
    \ long int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n  \
    \  }\n    long long int count = 0;\n    for (long long int i : arr) {\n      \
    \  if (i == 1) {\n            count++;\n        }\n    }\n    std::vector<long>\
    \ ans;\n    for (long long int i = 0; i < count; i++) {\n        long long int\
    \ j = sum - count;\n        long long int k = sum - j;\n        long long int\
    \ m = sum - k;\n        long long int n = sum - m;\n        long long int p =\
    \ sum - n;\n        long long int q = sum - p;\n        long long int r = sum\
    \ - q;\n        long long int s = sum - r;\n        long long int t = sum - s;\n\
    \        long long int u = sum - t;\n        long long int v = sum - u;\n    \
    \    long long int w = sum - v;\n        long long int x = sum - w;\n        long\
    \ long int y = sum - x;\n        long long int z = sum - y;\n        long long\
    \ int a = sum - z;\n        long long int b = sum - a;\n        long long int\
    \ c = sum - b;\n        long long int d = sum - c;\n        long long int e =\
    \ sum - d;\n        long long int f = sum - e;\n        long long int g = sum\
    \ - f;\n        long long int h = sum - g;\n        long long int i = sum - h;\n\
    \        long long int j = sum - i;\n        long long int k = sum - j;\n    \
    \    long long int l = sum - k;\n        long long int m = sum - l;\n        long\
    \ long int n = sum - m;\n        long long int o = sum - n;\n        long long\
    \ int p = sum - o;\n        long long int q = sum - p;\n        long long int\
    \ r = sum - q;\n        long long int s = sum - r;\n        long long int t =\
    \ sum - s;\n        long long int u = sum - t;\n        long long int v = sum\
    \ - u;\n        long long int w = sum - v;\n        long long int x = sum - w;\n\
    \        long long int y = sum - x;\n        long long int z = sum - y;\n    \
    \    long long int a = sum - z;\n        long long int b = sum - a;\n        long\
    \ long int c = sum - b;\n        long long int d = sum - c;\n        long long\
    \ int e = sum - d;\n        long long int f = sum - e;\n        long long int\
    \ g = sum - f;\n        ", "    long long ones = 0;\n    for (auto i : arr) {\n\
    \        ones += i;\n    }\n    long long twos = 0;\n    for (auto i : arr) {\n\
    \        twos += i * i;\n    }\n    long long threes = 0;\n    for (auto i : arr)\
    \ {\n        threes += i * i * i;\n    }\n    long long fours = 0;\n    for (auto\
    \ i : arr) {\n        fours += i * i * i * i;\n    }\n    long long fives = 0;\n\
    \    for (auto i : arr) {\n        fives += i * i * i * i * i;\n    }\n    long\
    \ long sixes = 0;\n    for (auto i : arr) {\n        sixes += i * i * i * i *\
    \ i * i;\n    }\n    long long sevens = 0;\n    for (auto i : arr) {\n       \
    \ sevens += i * i * i * i * i * i * i;\n    }\n    long long eights = 0;\n   \
    \ for (auto i : arr) {\n        eights += i * i * i * i * i * i * i * i;\n   \
    \ }\n    long long nines = 0;\n    for (auto i : arr) {\n        nines += i *\
    \ i * i * i * i * i * i * i * i;\n    }\n    long long tens = 0;\n    for (auto\
    \ i : arr) {\n        tens += i * i * i * i * i * i * i * i * i * i;\n    }\n\
    \    long long hundreds = 0;\n    for (auto i : arr) {\n        hundreds += i\
    \ * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long thousands = 0;\n\
    \    for (auto i : arr) {\n        thousands += i * i * i * i * i * i * i * i\
    \ * i * i * i * i;\n    }\n    long long millions = 0;\n    for (auto i : arr)\
    \ {\n        millions += i * i * i * i * i * i * i * i * i * i * i * i * i;\n\
    \    }\n    long long billions = 0;\n    for (auto i : arr) {\n        billions\
    \ += i * i * i * i * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long\
    \ trillions = 0;\n    for (auto i : arr) {\n        trillions += i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long quadrillions\
    \ = 0;\n    for (auto i : arr) {\n        quadrillions += i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i;\n    }\n    long long quintillions =\
    \ 0;\n    for (auto i : arr) {\n        quintillions += i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i;\n    }\n    long long ", "    long\
    \ long ans = 0, last_one = 0;\n    for (long long i : arr) {\n        if (i &\
    \ 1) {\n            ans += (i - last_one);\n        }\n        last_one = i;\n\
    \    }\n    ans += last_one;\n    return std::vector<long>({ans, last_one});",
  "    std::vector<long> sorted_arr;\n    long ones = 0;\n    long zeros = 0;\n  \
    \  for (long i : arr) {\n        if (i == 1) {\n            ones++;\n        }\
    \ else {\n            zeros++;\n        }\n    }\n    if (ones > zeros) {\n  \
    \      std::sort(arr.begin(), arr.end(), [](long a, long b) -> bool {\n      \
    \      return a > b;\n        });\n        sorted_arr.insert(sorted_arr.end(),\
    \ arr.begin(), arr.end());\n    } else {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long a, long b) -> bool {\n            return a < b;\n        });\n     \
    \   sorted_arr.insert(sorted_arr.end(), arr.begin(), arr.end());\n    }\n    return\
    \ sorted_arr;", "    long long ones = 0;\n    long long zeros = 0;\n    for (long\
    \ long i : arr) {\n        if (i == 1) {\n            ones++;\n        } else\
    \ {\n            zeros++;\n        }\n    }\n    if (ones > zeros) {\n       \
    \ std::sort(arr.begin(), arr.end(), [](long long a, long long b) {\n         \
    \   return a > b;\n        });\n    } else if (ones < zeros) {\n        std::sort(arr.begin(),\
    \ arr.end(), [](long long a, long long b) {\n            return a < b;\n     \
    \   });\n    }\n    return arr;", "    // Write your code here\n    long long\
    \ int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n\
    \    long long int ans = sum;\n    for (long long int i : arr) {\n        ans\
    \ -= i;\n    }\n    std::vector<long> ans_vec;\n    while (ans > 0) {\n      \
    \  ans_vec.push_back(ans % 10);\n        ans /= 10;\n    }\n    return ans_vec;",
  "    // Your code here\n    long long int sum = 0;\n    for(long long int i : arr){\n\
    \        sum += i;\n    }\n    long long int count = 0;\n    for(long long int\
    \ i : arr){\n        if(sum % 2 == 0){\n            sum += i;\n            count++;\n\
    \        }\n    }\n    long long int temp = 0;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp2 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp3 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp4 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp5 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp6 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp7 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp8 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp9 = temp;\n    for(long long int i : arr){\n\
    \        if(sum % 2 == 0){\n            sum += i;\n            temp = sum;\n \
    \       }\n    }\n    long long int temp10 = temp;\n    for(long long int i :\
    \ arr){\n        if(sum % 2 == 0){\n            sum += i;\n            temp =\
    \ sum;\n        }\n    }\n    long long int temp11 = temp;\n    for(long long\
    \ int i : arr){\n        if(sum % 2 == 0){\n            sum += i;\n          \
    \  temp = sum;\n        }\n    }\n    long long int temp12 = temp;\n    for(long\
    \ long int i : arr){\n        if(sum % ", "    // Your code goes here\n    long\
    \ long int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n  \
    \  }\n    long long int max = 0;\n    for (long long int i : arr) {\n        if\
    \ (i == 0) {\n            continue;\n        }\n        if (max < sum) {\n   \
    \         max = sum;\n        }\n        sum -= i;\n    }\n    std::vector<long>\
    \ ans;\n    for (long long int i : arr) {\n        if (i == 0) {\n           \
    \ continue;\n        }\n        if (sum < i) {\n            ans.push_back(i);\n\
    \            sum = i;\n        }\n    }\n    ans.push_back(max);\n    return ans;",
  "    // Write your code here\n    long long int sum = 0;\n    long long int count\
    \ = 0;\n    for (long long int i : arr) {\n        sum += i;\n        count +=\
    \ 1;\n    }\n    long long int max_ones = sum;\n    long long int max_ones_pos\
    \ = 0;\n    for (long long int i : arr) {\n        if (max_ones < i) {\n     \
    \       max_ones = i;\n            max_ones_pos = count;\n        }\n    }\n \
    \   long long int max_ones_neg = 0;\n    for (long long int i : arr) {\n     \
    \   if (max_ones_neg < i) {\n            max_ones_neg = i;\n        }\n    }\n\
    \    long long int max_ones_pos_neg = 0;\n    for (long long int i : arr) {\n\
    \        if (max_ones_pos_neg < i) {\n            max_ones_pos_neg = i;\n    \
    \    }\n    }\n    long long int max_ones_pos_neg_neg = 0;\n    for (long long\
    \ int i : arr) {\n        if (max_ones_pos_neg_neg < i) {\n            max_ones_pos_neg_neg\
    \ = i;\n        }\n    }\n    long long int max_ones_pos_neg_neg_neg = 0;\n  \
    \  for (long long int i : arr) {\n        if (max_ones_pos_neg_neg_neg < i) {\n\
    \            max_ones_pos_neg_neg_neg = i;\n        }\n    }\n    long long int\
    \ max_ones_pos_neg_neg_neg_neg = 0;\n    for (long long int i : arr) {\n     \
    \   if (max_ones_pos_neg_neg_neg_neg < i) {\n            max_ones_pos_neg_neg_neg_neg\
    \ = i;\n        }\n    }\n    long long int max_ones_pos_neg_neg_neg_neg_neg =\
    \ 0;\n    for (long long int i : arr) {\n        if (max_ones_pos_neg_neg_neg_neg_neg\
    \ < i) {\n            max_ones_pos_neg_neg_neg_neg_neg = i;\n        }\n    }\n\
    \    long long int max_ones_pos_neg_neg_neg_neg_neg_neg = 0;\n    for (long long\
    \ int i : arr) {\n        if (max_ones_pos_neg_neg_neg_neg_neg_neg < i) {\n  \
    \          max_ones_pos_neg_neg_neg_neg_neg_neg = i;\n        }\n    }\n    long\
    \ long int max_ones_pos_neg_neg_neg_neg_neg_neg_neg = 0;\n    for (long long int\
    \ i : arr) {\n        if (max_ones_pos_neg_neg_neg_neg_neg_neg_neg < i) {\n  \
    \          max_ones_pos_neg_neg_neg_neg_neg_neg_neg = i;\n        }\n    }\n \
    \   long long int max_ones_pos_neg_neg_neg_neg_neg_neg_neg_neg = 0;\n    for (long\
    \ long int i : arr) {\n        if (max_ones_pos_neg_neg_neg_neg_neg_neg_neg_neg\
    \ < i) {\n            max_", "    // Your code here\n    long long int sum = 0;\n\
    \    long long int count = 0;\n    for (long long int i : arr) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long int ones = count - 1;\n   \
    \ long long int zeros = sum - count;\n    long long int temp = zeros;\n    long\
    \ long int temp2 = ones;\n    long long int temp3 = ones;\n    long long int temp4\
    \ = ones;\n    long long int temp5 = ones;\n    long long int temp6 = ones;\n\
    \    long long int temp7 = ones;\n    long long int temp8 = ones;\n    long long\
    \ int temp9 = ones;\n    long long int temp10 = ones;\n    long long int temp11\
    \ = ones;\n    long long int temp12 = ones;\n    long long int temp13 = ones;\n\
    \    long long int temp14 = ones;\n    long long int temp15 = ones;\n    long\
    \ long int temp16 = ones;\n    long long int temp17 = ones;\n    long long int\
    \ temp18 = ones;\n    long long int temp19 = ones;\n    long long int temp20 =\
    \ ones;\n    long long int temp21 = ones;\n    long long int temp22 = ones;\n\
    \    long long int temp23 = ones;\n    long long int temp24 = ones;\n    long\
    \ long int temp25 = ones;\n    long long int temp26 = ones;\n    long long int\
    \ temp27 = ones;\n    long long int temp28 = ones;\n    long long int temp29 =\
    \ ones;\n    long long int temp30 = ones;\n    long long int temp31 = ones;\n\
    \    long long int temp32 = ones;\n    long long int temp33 = ones;\n    long\
    \ long int temp34 = ones;\n    long long int temp35 = ones;\n    long long int\
    \ temp36 = ones;\n    long long int temp37 = ones;\n    long long int temp38 =\
    \ ones;\n    long long int temp39 = ones;\n    long long int temp40 = ones;\n\
    \    long long int temp41 = ones;\n    long long int temp42 = ones;\n    long\
    \ long int temp43 = ones;\n    long long int temp44 = ones;\n    long long int\
    \ temp45 = ones;\n    long long int temp46 = ones;\n    long long int temp47 = ",
  "    long long ones = 0;\n    long long zeros = 0;\n    for (long long i : arr)\
    \ {\n        ones += i;\n        zeros += (long long)~i;\n    }\n    if (ones\
    \ > zeros) {\n        std::sort(arr.begin(), arr.end(), [](long long a, long long\
    \ b) {\n            return a > b;\n        });\n        return arr;\n    } else\
    \ {\n        std::sort(arr.begin(), arr.end(), [](long long a, long long b) {\n\
    \            return a < b;\n        });\n        return arr;\n    }", "    long\
    \ long ones = 0;\n    for (auto i : arr) {\n        ones += i;\n    }\n    long\
    \ long twos = ones;\n    long long threes = ones * 2;\n    long long fours = ones\
    \ * 4;\n    long long fives = ones * 8;\n    long long sixes = ones * 16;\n  \
    \  long long sevens = ones * 32;\n    long long eights = ones * 64;\n    long\
    \ long nines = ones * 128;\n    long long tens = ones * 256;\n    long long hundreds\
    \ = ones * 512;\n    long long thousands = ones * 1024;\n    long long ten_thousands\
    \ = ones * 2048;\n    long long hundred_thousands = ones * 4096;\n    long long\
    \ thousand_thousands = ones * 8192;\n    long long ones_and_twenty_fours = ones\
    \ * 16384;\n    long long ones_and_twenty_fives = ones * 32768;\n    long long\
    \ ones_and_twenty_sixes = ones * 65536;\n    long long ones_and_twenty_sevens\
    \ = ones * 131072;\n    long long ones_and_twenty_eights = ones * 262144;\n  \
    \  long long ones_and_twenty_nines = ones * 524288;\n    long long ones_and_twenty_tens\
    \ = ones * 1048576;\n    long long ones_and_twenty_twenty = ones * 2097152;\n\
    \    long long ones_and_twenty_thirty = ones * 4194304;\n    long long ones_and_twenty_fourty\
    \ = ones * 8388608;\n    long long ones_and_twenty_fifty = ones * 16777216;\n\
    \    long long ones_and_twenty_sixty = ones * 33554432;\n    long long ones_and_twenty_seventy\
    \ = ones * 67108864;\n    long long ones_and_twenty_eighty = ones * 134217728;\n\
    \    long long ones_and_twenty_ninety = ones * 268435456;\n    long long ones_and_twenty_hundred\
    \ = ones * 536870912;\n    long long ones_and_twenty_thousand = ones * 1073741824;\n\
    \    long long ones_and_twenty_ten_thousand = ones * 2147483648;\n    long long\
    \ ones_and_twenty_hundred_thousand = ones * 4294967296;", "    std::vector<long>\
    \ res(arr.size());\n    for (size_t i = 0; i < arr.size(); i++) {\n        long\
    \ ones = arr[i];\n        long tens = 1;\n        while (ones) {\n           \
    \ ones = ones >> 1;\n            tens = tens * 10;\n        }\n        res[i]\
    \ = tens + ones;\n    }\n    std::sort(res.begin(), res.end());\n    return res;",
  "    long long ones = 0;\n    for (long long i : arr) {\n        ones += i;\n  \
    \  }\n    std::vector<long> res(arr.size());\n    for (long long i = 0; i < arr.size();\
    \ i++) {\n        long long count = 0;\n        for (long long j : arr) {\n  \
    \          if (j == 1) {\n                count++;\n            }\n        }\n\
    \        res[i] = count * ones / arr.size();\n    }\n    return res;", "    long\
    \ long ans = 0, temp = 0;\n    for (long long i = 0; i < arr.size(); i++) {\n\
    \        temp = arr[i];\n        ans += temp;\n        arr[i] = ans;\n    }\n\
    \    return arr;", "    // Your code here\n    long long int sum = 0;\n    long\
    \ long int count = 0;\n    for (long long int i : arr) {\n        sum += i;\n\
    \        count += 1;\n    }\n    long long int ones = count - 1;\n    long long\
    \ int zeros = sum - count;\n    long long int max = (ones > zeros) ? ones : zeros;\n\
    \    long long int min = (ones < zeros) ? ones : zeros;\n    long long int mid\
    \ = (min + max) / 2;\n    long long int mid1 = (min + max) / 2;\n    long long\
    \ int mid2 = (min + max) / 2;\n    long long int mid3 = (min + max) / 2;\n   \
    \ long long int mid4 = (min + max) / 2;\n    long long int mid5 = (min + max)\
    \ / 2;\n    long long int mid6 = (min + max) / 2;\n    long long int mid7 = (min\
    \ + max) / 2;\n    long long int mid8 = (min + max) / 2;\n    long long int mid9\
    \ = (min + max) / 2;\n    long long int mid10 = (min + max) / 2;\n    long long\
    \ int mid11 = (min + max) / 2;\n    long long int mid12 = (min + max) / 2;\n \
    \   long long int mid13 = (min + max) / 2;\n    long long int mid14 = (min + max)\
    \ / 2;\n    long long int mid15 = (min + max) / 2;\n    long long int mid16 =\
    \ (min + max) / 2;\n    long long int mid17 = (min + max) / 2;\n    long long\
    \ int mid18 = (min + max) / 2;\n    long long int mid19 = (min + max) / 2;\n \
    \   long long int mid20 = (min + max) / 2;\n    long long int mid21 = (min + max)\
    \ / 2;\n    long long int mid22 = (min + max) / 2;\n    long long int mid23 =\
    \ (min + max) / 2;\n    long long int mid24 = (min + max) / 2;\n    long long\
    \ int mid25 = (min + max) / 2;\n    long long int mid26 = (min + max) / 2;\n \
    \   long long int mid27 = (min + max) / 2;\n    long long int mid28 = (min + max)\
    \ / 2;\n    long long int mid29 = (min + max) / 2;\n    long long int mid30 =\
    \ (min + max) / 2;\n    long long int mid31 = (min + max) / 2;\n    long long\
    \ int mid32", "    // Write your code here\n    long long int sum = 0;\n    long\
    \ long int count = 0;\n    for (long long int i : arr) {\n        sum += i;\n\
    \        count += 1;\n    }\n    long long int mod = sum % 10;\n    long long\
    \ int temp = sum / 10;\n    long long int temp2 = temp % 10;\n    long long int\
    \ temp3 = temp / 10;\n    long long int temp4 = temp3 % 10;\n    long long int\
    \ temp5 = temp3 / 10;\n    long long int temp6 = temp5 % 10;\n    long long int\
    \ temp7 = temp5 / 10;\n    long long int temp8 = temp7 % 10;\n    long long int\
    \ temp9 = temp7 / 10;\n    long long int temp10 = temp9 % 10;\n    long long int\
    \ temp11 = temp9 / 10;\n    long long int temp12 = temp11 % 10;\n    long long\
    \ int temp13 = temp11 / 10;\n    long long int temp14 = temp13 % 10;\n    long\
    \ long int temp15 = temp13 / 10;\n    long long int temp16 = temp15 % 10;\n  \
    \  long long int temp17 = temp15 / 10;\n    long long int temp18 = temp17 % 10;\n\
    \    long long int temp19 = temp17 / 10;\n    long long int temp20 = temp18 %\
    \ 10;\n    long long int temp21 = temp18 / 10;\n    long long int temp22 = temp21\
    \ % 10;\n    long long int temp23 = temp21 / 10;\n    long long int temp24 = temp23\
    \ % 10;\n    long long int temp25 = temp23 / 10;\n    long long int temp26 = temp25\
    \ % 10;\n    long long int temp27 = temp25 / 10;\n    long long int temp28 = temp27\
    \ % 10;\n    long long int temp29 = temp27 / 10;\n    long long int temp30 = temp28\
    \ % 10;\n    long long int temp31 = temp28 / 10;\n    long long int temp32 = temp31\
    \ % 10;\n    long long int temp33 = temp31 / 10;\n    long long int temp34 = temp33\
    \ % 10;\n    long long int temp35 = temp33 / 10;\n    long long int temp36 = temp35\
    \ % 10;\n    long long int temp37 = temp35 / 10;\n    long long int temp38 = temp37\
    \ % 10;\n    long long int temp39 = temp37 / 10;\n    long long int temp40 = temp38\
    \ % 10;\n    ", "    long long ones = 0;\n    for (long long i : arr) {\n    \
    \    ones += i;\n    }\n    long long zeros = ~ones;\n    std::vector<long> res;\n\
    \    for (long long i : arr) {\n        if (i < zeros) {\n            res.push_back(-i);\n\
    \        } else {\n            res.push_back(i);\n        }\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    long long int\
    \ sum = 0;\n    long long int count = 0;\n    for (long long int i : arr) {\n\
    \        sum += i;\n        count += 1;\n    }\n    long long int temp = sum;\n\
    \    long long int temp2 = count;\n    long long int temp3 = sum / count;\n  \
    \  long long int temp4 = sum % count;\n    long long int temp5 = temp3 / temp4;\n\
    \    long long int temp6 = temp3 % temp4;\n    long long int temp7 = temp5 / temp6;\n\
    \    long long int temp8 = temp5 % temp6;\n    long long int temp9 = temp7 / temp8;\n\
    \    long long int temp10 = temp7 % temp8;\n    long long int temp11 = temp9 /\
    \ temp10;\n    long long int temp12 = temp9 % temp10;\n    long long int temp13\
    \ = temp11 / temp12;\n    long long int temp14 = temp11 % temp12;\n    long long\
    \ int temp15 = temp13 / temp14;\n    long long int temp16 = temp13 % temp14;\n\
    \    long long int temp17 = temp15 / temp16;\n    long long int temp18 = temp15\
    \ % temp16;\n    long long int temp19 = temp17 / temp18;\n    long long int temp20\
    \ = temp17 % temp18;\n    long long int temp21 = temp19 / temp20;\n    long long\
    \ int temp22 = temp19 % temp20;\n    long long int temp23 = temp21 / temp22;\n\
    \    long long int temp24 = temp21 % temp22;\n    long long int temp25 = temp23\
    \ / temp24;\n    long long int temp26 = temp23 % temp24;\n    long long int temp27\
    \ = temp25 / temp26;\n    long long int temp28 = temp25 % temp26;\n    long long\
    \ int temp29 = temp27 / temp28;\n    long long int temp30 = temp27 % temp28;\n\
    \    long long int temp31 = temp29 / temp30;\n    long long int temp32 = temp29\
    \ % temp30;\n    long long int temp33 = temp31 / temp32;\n    long long int temp34\
    \ = temp31 % temp32;\n    long long int temp35 = temp33 / temp34;\n    long long\
    \ int temp36 = temp33 % temp34;\n    long long int temp37 = temp35 / temp36;\n",
  "    long long ones = 0;\n    long long zeros = 0;\n    for (auto i : arr) {\n \
    \       if (i == 1) {\n            ones++;\n        } else {\n            zeros++;\n\
    \        }\n    }\n    if (ones > zeros) {\n        std::sort(arr.begin(), arr.end(),\
    \ [](long long a, long long b) {\n            return a > b;\n        });\n   \
    \ } else if (zeros > ones) {\n        std::sort(arr.begin(), arr.end(), [](long\
    \ long a, long long b) {\n            return a < b;\n        });\n    }\n    return\
    \ arr;", "    long long int sum = 0;\n    for (long long int i : arr) {\n    \
    \    sum += i;\n    }\n    long long int max = 0;\n    for (long long int i :\
    \ arr) {\n        if (i > max) {\n            max = i;\n        }\n    }\n   \
    \ std::vector<long> ans;\n    for (long long int i : arr) {\n        if (sum -\
    \ i == 0) {\n            ans.push_back(i);\n        }\n    }\n    for (long long\
    \ int i : arr) {\n        if (sum - i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    long long ones = 0;\n    long long zeros\
    \ = 0;\n    for (long long i : arr) {\n        if (i == 1) {\n            ones++;\n\
    \        } else {\n            zeros++;\n        }\n    }\n    if (ones > zeros)\
    \ {\n        std::sort(arr.begin(), arr.end(), [](long long a, long long b) {\n\
    \            return a > b;\n        });\n    } else if (zeros > ones) {\n    \
    \    std::sort(arr.begin(), arr.end(), [](long long a, long long b) {\n      \
    \      return a < b;\n        });\n    } else {\n        std::sort(arr.begin(),\
    \ arr.end(), [](long long a, long long b) {\n            return a > b;\n     \
    \   });\n    }\n    return arr;", "    std::vector<long> sorted_arr(arr.size());\n\
    \    std::iota(sorted_arr.begin(), sorted_arr.end(), 0);\n    std::sort(sorted_arr.begin(),\
    \ sorted_arr.end(), [&arr](long a, long b) {\n        return arr[a] >= arr[b];\n\
    \    });\n    return sorted_arr;", "    long long ones = 0;\n    long long zeros\
    \ = 0;\n    for (long long i : arr) {\n        ones += i;\n        zeros += (i\
    \ != 0);\n    }\n    std::vector<long> res(arr.size());\n    for (long long i\
    \ = 0; i < arr.size(); i++) {\n        long long ones_count = ones - arr[i];\n\
    \        long long zeros_count = zeros - arr[i];\n        if (ones_count > zeros_count)\
    \ {\n            res[i] = ones_count;\n        } else {\n            res[i] =\
    \ zeros_count;\n        }\n    }\n    return res;", "    // Your code here\n \
    \   long long int sum = 0;\n    long long int count = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n        count += 1;\n    }\n    long long int\
    \ mod = sum % 10;\n    long long int rem = sum / 10;\n    long long int temp =\
    \ rem;\n    long long int temp2 = mod;\n    long long int temp3 = rem;\n    long\
    \ long int temp4 = mod;\n    long long int temp5 = rem;\n    long long int temp6\
    \ = mod;\n    long long int temp7 = rem;\n    long long int temp8 = mod;\n   \
    \ long long int temp9 = rem;\n    long long int temp10 = mod;\n    long long int\
    \ temp11 = rem;\n    long long int temp12 = mod;\n    long long int temp13 = rem;\n\
    \    long long int temp14 = mod;\n    long long int temp15 = rem;\n    long long\
    \ int temp16 = mod;\n    long long int temp17 = rem;\n    long long int temp18\
    \ = mod;\n    long long int temp19 = rem;\n    long long int temp20 = mod;\n \
    \   long long int temp21 = rem;\n    long long int temp22 = mod;\n    long long\
    \ int temp23 = rem;\n    long long int temp24 = mod;\n    long long int temp25\
    \ = rem;\n    long long int temp26 = mod;\n    long long int temp27 = rem;\n \
    \   long long int temp28 = mod;\n    long long int temp29 = rem;\n    long long\
    \ int temp30 = mod;\n    long long int temp31 = rem;\n    long long int temp32\
    \ = mod;\n    long long int temp33 = rem;\n    long long int temp34 = mod;\n \
    \   long long int temp35 = rem;\n    long long int temp36 = mod;\n    long long\
    \ int temp37 = rem;\n    long long int temp38 = mod;\n    long long int temp39\
    \ = rem;\n    long long int temp40 = mod;\n    long long int temp41 = rem;\n \
    \   long long int temp42 = mod;\n    long long int temp43 = rem;\n    long long\
    \ int temp44 = mod;\n    long long int temp45 = rem;\n    long long int temp46\
    \ = mod;\n    long long int temp47 = rem;\n    long long int temp48 = mod;\n \
    \   long long int temp49 = rem;\n    long long ", "    long long int sum = 0;\n\
    \    for (auto i : arr) {\n        sum += i;\n    }\n    long long int max = 0;\n\
    \    for (auto i : arr) {\n        if (i > max) {\n            max = i;\n    \
    \    }\n    }\n    long long int min = max - max - 1;\n    for (auto i : arr)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n    }\n    long\
    \ long int mid = sum / 2;\n    long long int mid1 = sum / 2;\n    long long int\
    \ mid2 = sum / 2;\n    long long int mid3 = sum / 2;\n    long long int mid4 =\
    \ sum / 2;\n    long long int mid5 = sum / 2;\n    long long int mid6 = sum /\
    \ 2;\n    long long int mid7 = sum / 2;\n    long long int mid8 = sum / 2;\n \
    \   long long int mid9 = sum / 2;\n    long long int mid10 = sum / 2;\n    long\
    \ long int mid11 = sum / 2;\n    long long int mid12 = sum / 2;\n    long long\
    \ int mid13 = sum / 2;\n    long long int mid14 = sum / 2;\n    long long int\
    \ mid15 = sum / 2;\n    long long int mid16 = sum / 2;\n    long long int mid17\
    \ = sum / 2;\n    long long int mid18 = sum / 2;\n    long long int mid19 = sum\
    \ / 2;\n    long long int mid20 = sum / 2;\n    long long int mid21 = sum / 2;\n\
    \    long long int mid22 = sum / 2;\n    long long int mid23 = sum / 2;\n    long\
    \ long int mid24 = sum / 2;\n    long long int mid25 = sum / 2;\n    long long\
    \ int mid26 = sum / 2;\n    long long int mid27 = sum / 2;\n    long long int\
    \ mid28 = sum / 2;\n    long long int mid29 = sum / 2;\n    long long int mid30\
    \ = sum / 2;\n    long long int mid31 = sum / 2;\n    long long int mid32 = sum\
    \ / 2;\n    long long int mid33 = sum / 2;\n    long long int mid34 = sum / 2;\n\
    \    long long int mid35 = sum / 2;\n    long long int mid36 = sum / 2;\n    long\
    \ long int mid37 = sum / 2;\n    long long int mid38 = sum / 2;\n    long long\
    \ int mid39 = sum / 2;\n    long long int mid40 = sum / ", "    // Write your\
    \ code here\n    long long int sum = 0;\n    long long int count = 0;\n    for(long\
    \ long int i : arr){\n        sum += i;\n        count += 1;\n    }\n    long\
    \ long int temp = sum;\n    long long int temp2 = count;\n    long long int temp3\
    \ = sum;\n    long long int temp4 = count;\n    long long int temp5 = sum;\n \
    \   long long int temp6 = count;\n    long long int temp7 = sum;\n    long long\
    \ int temp8 = count;\n    long long int temp9 = sum;\n    long long int temp10\
    \ = count;\n    long long int temp11 = sum;\n    long long int temp12 = count;\n\
    \    long long int temp13 = sum;\n    long long int temp14 = count;\n    long\
    \ long int temp15 = sum;\n    long long int temp16 = count;\n    long long int\
    \ temp17 = sum;\n    long long int temp18 = count;\n    long long int temp19 =\
    \ sum;\n    long long int temp20 = count;\n    long long int temp21 = sum;\n \
    \   long long int temp22 = count;\n    long long int temp23 = sum;\n    long long\
    \ int temp24 = count;\n    long long int temp25 = sum;\n    long long int temp26\
    \ = count;\n    long long int temp27 = sum;\n    long long int temp28 = count;\n\
    \    long long int temp29 = sum;\n    long long int temp30 = count;\n    long\
    \ long int temp31 = sum;\n    long long int temp32 = count;\n    long long int\
    \ temp33 = sum;\n    long long int temp34 = count;\n    long long int temp35 =\
    \ sum;\n    long long int temp36 = count;\n    long long int temp37 = sum;\n \
    \   long long int temp38 = count;\n    long long int temp39 = sum;\n    long long\
    \ int temp40 = count;\n    long long int temp41 = sum;\n    long long int temp42\
    \ = count;\n    long long int temp43 = sum;\n    long long int temp44 = count;\n\
    \    long long int temp45 = sum;\n    long long int temp46 = count;\n    long\
    \ long int temp47 = sum;\n    long long int temp48 = count;\n    long long int\
    \ temp49 = sum;\n    long long int temp50 = count;\n    long long int temp51 =\
    \ sum;\n    ", "    long long ones = 0;\n    for (long long i : arr) {\n     \
    \   ones += i;\n    }\n    long long maxOnes = ones;\n    for (long long i : arr)\
    \ {\n        maxOnes = max(maxOnes, i);\n    }\n    std::vector<long> result;\n\
    \    for (long long i : arr) {\n        if (maxOnes == i) {\n            result.push_back(i);\n\
    \        } else {\n            result.push_back(maxOnes - i);\n        }\n   \
    \ }\n    return result;", "    long long ans = 0, cnt = 0;\n    for (long long\
    \ i : arr) {\n        cnt += i;\n        ans += cnt;\n    }\n    std::vector<long>\
    \ ans_arr;\n    for (long long i = ans; i > 0; i /= 2) {\n        ans_arr.push_back(i);\n\
    \    }\n    std::sort(ans_arr.begin(), ans_arr.end(), [&arr](long long a, long\
    \ long b) -> bool {\n        return arr[a] > arr[b];\n    });\n    return ans_arr;",
  "    // Write your code here\n    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : arr) {\n        ans += (sum - i);\n    }\n    std::vector<long>\
    \ ans_vec;\n    for (long long int i : arr) {\n        ans_vec.push_back((ans\
    \ - i));\n    }\n    return ans_vec;", "    // Your code here\n    long long int\
    \ sum = 0;\n    long long int count = 0;\n    for (long long int i : arr) {\n\
    \        sum += i;\n        count += 1;\n    }\n    long long int max = (long\
    \ long) count;\n    long long int min = (long long) sum;\n    long long int mid\
    \ = (long long) sum / 2;\n    long long int mid1 = (long long) sum / 2;\n    long\
    \ long int mid2 = (long long) sum / 2;\n    long long int mid3 = (long long) sum\
    \ / 2;\n    long long int mid4 = (long long) sum / 2;\n    long long int mid5\
    \ = (long long) sum / 2;\n    long long int mid6 = (long long) sum / 2;\n    long\
    \ long int mid7 = (long long) sum / 2;\n    long long int mid8 = (long long) sum\
    \ / 2;\n    long long int mid9 = (long long) sum / 2;\n    long long int mid10\
    \ = (long long) sum / 2;\n    long long int mid11 = (long long) sum / 2;\n   \
    \ long long int mid12 = (long long) sum / 2;\n    long long int mid13 = (long\
    \ long) sum / 2;\n    long long int mid14 = (long long) sum / 2;\n    long long\
    \ int mid15 = (long long) sum / 2;\n    long long int mid16 = (long long) sum\
    \ / 2;\n    long long int mid17 = (long long) sum / 2;\n    long long int mid18\
    \ = (long long) sum / 2;\n    long long int mid19 = (long long) sum / 2;\n   \
    \ long long int mid20 = (long long) sum / 2;\n    long long int mid21 = (long\
    \ long) sum / 2;\n    long long int mid22 = (long long) sum / 2;\n    long long\
    \ int mid23 = (long long) sum / 2;\n    long long int mid24 = (long long) sum\
    \ / 2;\n    long long int mid25 = (long long) sum / 2;\n    long long int mid26\
    \ = (long long) sum / 2;\n    long long int mid27 = (long long) sum / 2;\n   \
    \ long long int mid28 = (long long) sum / 2;\n    long long int mid29 = (long\
    \ long) sum / 2;\n    long long int mid30 = (long long) sum / 2;\n    long long\
    \ int mid31 = (long long) sum / 2;\n    long long int mid32 = (long long) sum\
    \ / 2;\n    long long int mid33 = (long long) sum / 2;\n    long long int mid34\
    \ = (long long) sum / ", "    std::vector<long> sorted_arr(arr.size());\n    for\
    \ (size_t i = 0; i < arr.size(); i++) {\n        sorted_arr[i] = arr[i];\n   \
    \ }\n    long max_ones = 0, max_dec = 0;\n    for (size_t i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > 0) {\n            max_ones = std::max(max_ones,\
    \ arr[i]);\n            max_dec = std::max(max_dec, arr[i] * pow(10, arr.size()\
    \ - i - 1));\n        }\n    }\n    for (size_t i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > 0) {\n            sorted_arr[i] = arr[i] / max_ones;\n \
    \           sorted_arr[i] = sorted_arr[i] * pow(10, arr.size() - i - 1);\n   \
    \         sorted_arr[i] = sorted_arr[i] / max_dec;\n        }\n    }\n    return\
    \ sorted_arr;", "    std::vector<long> sorted_arr(arr.size());\n    std::iota(sorted_arr.begin(),\
    \ sorted_arr.end(), 0);\n    std::sort(sorted_arr.begin(), sorted_arr.end(), [&arr](long\
    \ a, long b) {\n        return arr[a] >= arr[b];\n    });\n    return sorted_arr;",
  "    long long int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n\
    \    }\n    std::vector<long> ans;\n    for (long long int i : arr) {\n      \
    \  long long int temp = sum - i;\n        ans.push_back(temp);\n    }\n    return\
    \ ans;", "    std::vector<long> sorted_arr;\n    long max_val = 0, min_val = INT_MAX;\n\
    \    for (long i : arr) {\n        max_val = max(max_val, i);\n        min_val\
    \ = min(min_val, i);\n    }\n    for (long i : arr) {\n        if (i == 0) {\n\
    \            sorted_arr.push_back(0);\n        } else {\n            sorted_arr.push_back((max_val\
    \ - i) / min_val);\n        }\n    }\n    return sorted_arr;", "    std::vector<long>\
    \ sorted_arr;\n    long max_ones = 0, max_dec = 0;\n    for (long i : arr) {\n\
    \        if (max_ones < i) {\n            max_ones = i;\n        }\n        if\
    \ (max_dec < i) {\n            max_dec = i;\n        }\n    }\n    for (long i\
    \ : arr) {\n        if (max_ones == i) {\n            sorted_arr.push_back(i);\n\
    \        } else if (max_dec == i) {\n            sorted_arr.push_back(-i);\n \
    \       } else {\n            long temp = max_ones;\n            max_ones = max_dec\
    \ - i;\n            max_dec = temp;\n            sorted_arr.push_back(-i);\n \
    \           sorted_arr.push_back(i);\n        }\n    }\n    return sorted_arr;",
  "    std::vector<long> res(arr.size());\n    for (size_t i = 0; i < arr.size();\
    \ i++) {\n        long count = 0;\n        for (size_t j = 0; j < arr.size();\
    \ j++) {\n            if (arr[j] == i) {\n                count++;\n         \
    \   }\n        }\n        res[i] = count;\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    long long ans = 0;\n    long long cnt = 0;\n    for (long\
    \ long i : arr) {\n        cnt += i;\n        ans += cnt;\n    }\n    std::vector<long>\
    \ res(arr.size());\n    for (long long i = 0; i < arr.size(); i++) {\n       \
    \ long long cnt = 0;\n        for (long long j : arr) {\n            cnt += j;\n\
    \        }\n        res[i] = ans - cnt;\n    }\n    return res;", "    long long\
    \ int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n    }\n\
    \    std::vector<long> res;\n    for (long long int i : arr) {\n        long long\
    \ int temp = sum - i;\n        res.push_back(temp);\n        sum = temp;\n   \
    \ }\n    return res;", "    long long ones = 0;\n    long long zeros = 0;\n  \
    \  for (long long i : arr) {\n        if (i == 1) {\n            ones++;\n   \
    \     } else {\n            zeros++;\n        }\n    }\n    std::vector<long>\
    \ sorted_arr;\n    if (ones > zeros) {\n        sorted_arr.reserve(ones);\n  \
    \      for (long long i : arr) {\n            if (i == 1) {\n                sorted_arr.push_back(i);\n\
    \            }\n        }\n        std::sort(sorted_arr.begin(), sorted_arr.end(),\
    \ [](long long a, long long b) {\n            return a > b;\n        });\n   \
    \     return sorted_arr;\n    } else {\n        sorted_arr.reserve(zeros);\n \
    \       for (long long i : arr) {\n            if (i == 0) {\n               \
    \ sorted_arr.push_back(i);\n            }\n        }\n        std::sort(sorted_arr.begin(),\
    \ sorted_arr.end(), [](long long a, long long b) {\n            return a > b;\n\
    \        });\n        return sorted_arr;\n    }", "    // Your code here\n   \
    \ long long int sum = 0;\n    long long int temp = 0;\n    long long int count\
    \ = 0;\n    for (long long int i = 0; i < arr.size(); i++) {\n        temp = arr[i];\n\
    \        sum += temp;\n        count += 1;\n    }\n    long long int ones = sum\
    \ / count;\n    long long int zeros = sum % count;\n    long long int temp2 =\
    \ ones;\n    long long int temp3 = zeros;\n    long long int temp4 = 0;\n    for\
    \ (long long int i = 0; i < arr.size(); i++) {\n        temp = arr[i];\n     \
    \   if (temp == 1) {\n            temp4 += temp3;\n            temp3 += temp2;\n\
    \            temp2 += temp;\n        } else {\n            temp4 += temp;\n  \
    \      }\n    }\n    std::vector<long> ans;\n    ans.push_back(temp4);\n    ans.push_back(temp3);\n\
    \    ans.push_back(temp2);\n    ans.push_back(temp);\n    return ans;", "    long\
    \ long ans = 0;\n    long long cnt = 0;\n    for (long long i : arr) {\n     \
    \   ans += i;\n        cnt += i;\n    }\n    long long ans_reverse = 0;\n    long\
    \ long cnt_reverse = 0;\n    for (long long i : arr) {\n        ans_reverse +=\
    \ i;\n        cnt_reverse += i;\n    }\n    long long ans_reverse_reverse = 0;\n\
    \    long long cnt_reverse_reverse = 0;\n    for (long long i : arr) {\n     \
    \   ans_reverse_reverse += i;\n        cnt_reverse_reverse += i;\n    }\n    long\
    \ long ans_reverse_ans = 0;\n    long long cnt_reverse_ans = 0;\n    for (long\
    \ long i : arr) {\n        ans_reverse_ans += i;\n        cnt_reverse_ans += i;\n\
    \    }\n    long long ans_reverse_ans_reverse = 0;\n    long long cnt_reverse_ans_reverse\
    \ = 0;\n    for (long long i : arr) {\n        ans_reverse_ans_reverse += i;\n\
    \        cnt_reverse_ans_reverse += i;\n    }\n    long long ans_reverse_ans_reverse_ans\
    \ = 0;\n    long long cnt_reverse_ans_reverse_ans = 0;\n    for (long long i :\
    \ arr) {\n        ans_reverse_ans_reverse_ans += i;\n        cnt_reverse_ans_reverse_ans\
    \ += i;\n    }\n    long long ans_reverse_ans_reverse_ans_reverse = 0;\n    long\
    \ long cnt_reverse_ans_reverse_ans_reverse = 0;\n    for (long long i : arr) {\n\
    \        ans_reverse_ans_reverse_ans_reverse += i;\n        cnt_reverse_ans_reverse_ans_reverse\
    \ += i;\n    }\n    long long ans_reverse_ans_reverse_ans_reverse_ans = 0;\n \
    \   long long cnt_reverse_ans_reverse_ans_reverse_ans = 0;\n    for (long long\
    \ i : arr) {\n        ans_reverse_ans_reverse_ans_reverse_ans += i;\n        cnt_reverse_ans_reverse_ans_reverse_ans\
    \ += i;\n    }\n    long long ans_reverse_ans_reverse_ans_reverse_ans_reverse\
    \ = 0;\n    long long cnt_reverse_ans_reverse_ans_reverse_ans_reverse = 0;\n \
    \   for (long long i : arr) {\n        ans_reverse_ans_reverse_ans_reverse_ans_reverse\
    \ += i;\n        cnt_reverse_ans_reverse_ans_reverse_ans_reverse += i;\n    }\n\
    \    long long ans_reverse_ans_reverse_ans_reverse_ans_reverse_ans = 0;\n    long\
    \ long cnt_reverse_ans_reverse_ans_reverse_ans_reverse_ans = 0;\n    for (long\
    \ long i : arr) {\n        ans_reverse_an", "    long long sum = 0;\n    for (auto\
    \ i : arr) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    long\
    \ long ans = 0;\n    for (auto i : arr) {\n        ans += (i % 10) * pow(10, (arr.size()\
    \ - i - 1));\n    }\n    if (mod != 0) {\n        ans -= mod * pow(10, arr.size());\n\
    \    }\n    return std::vector<long>{ans};", "    // Write your code here\n  \
    \  long long int sum = 0;\n    for (long long int i : arr) {\n        sum += i;\n\
    \    }\n    long long int ones = 0;\n    for (long long int i : arr) {\n     \
    \   ones += i;\n    }\n    long long int max = 0;\n    for (long long int i :\
    \ arr) {\n        if (i > max) {\n            max = i;\n        }\n    }\n   \
    \ long long int min = 0;\n    for (long long int i : arr) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n    }\n    long long int mid = sum / 2;\n\
    \    long long int mid2 = sum / 2;\n    long long int mid3 = sum / 2;\n    long\
    \ long int mid4 = sum / 2;\n    long long int mid5 = sum / 2;\n    long long int\
    \ mid6 = sum / 2;\n    long long int mid7 = sum / 2;\n    long long int mid8 =\
    \ sum / 2;\n    long long int mid9 = sum / 2;\n    long long int mid10 = sum /\
    \ 2;\n    long long int mid11 = sum / 2;\n    long long int mid12 = sum / 2;\n\
    \    long long int mid13 = sum / 2;\n    long long int mid14 = sum / 2;\n    long\
    \ long int mid15 = sum / 2;\n    long long int mid16 = sum / 2;\n    long long\
    \ int mid17 = sum / 2;\n    long long int mid18 = sum / 2;\n    long long int\
    \ mid19 = sum / 2;\n    long long int mid20 = sum / 2;\n    long long int mid21\
    \ = sum / 2;\n    long long int mid22 = sum / 2;\n    long long int mid23 = sum\
    \ / 2;\n    long long int mid24 = sum / 2;\n    long long int mid25 = sum / 2;\n\
    \    long long int mid26 = sum / 2;\n    long long int mid27 = sum / 2;\n    long\
    \ long int mid28 = sum / 2;\n    long long int mid29 = sum / 2;\n    long long\
    \ int mid30 = sum / 2;\n    long long int mid31 = sum / 2;\n    long long int\
    \ mid32 = sum / 2;\n    long long int mid33 = sum / 2;\n    long long int mid34\
    \ = sum / 2;\n    long long int mid35 = sum / 2;\n    long long int mid36 = sum\
    \ / 2;\n    long long int mid37 = sum / 2;\n    long long int mid38 = sum / ",
  "    long long ans = 0, cnt = 0;\n    for (long long i : arr) {\n        cnt +=\
    \ i;\n        ans += cnt;\n    }\n    std::vector<long> ans_arr;\n    long long\
    \ ans_cnt = 0;\n    for (long long i : arr) {\n        ans_cnt += i;\n    }\n\
    \    long long cnt2 = ans_cnt - ans;\n    for (long long i = ans; i <= ans_cnt;\
    \ i++) {\n        ans_arr.push_back(i);\n    }\n    for (long long i = ans; i\
    \ >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n    }\n    for (long long\
    \ i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n    }\n    for\
    \ (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n  \
    \  }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (long long i = ans; i >= ans_cnt; i--) {\n        ans_arr.push_back(i);\n\
    \    }\n    for (", "    // Your code here\n    long long ones = 0;\n    long\
    \ long zeros = 0;\n    long long decimal = 0;\n    long long decimal2 = 0;\n \
    \   for (long long i = 0; i < arr.size(); i++) {\n        if (arr[i] == 1) {\n\
    \            ones++;\n        } else if (arr[i] == 0) {\n            zeros++;\n\
    \        } else {\n            decimal = decimal + arr[i];\n            decimal2\
    \ = decimal2 + arr[i];\n        }\n    }\n    std::vector<long> result;\n    if\
    \ (ones == zeros) {\n        for (long long i = 0; i < arr.size(); i++) {\n  \
    \          if (arr[i] == 1) {\n                result.push_back(arr[i]);\n   \
    \         }\n        }\n    } else {\n        std::vector<long> temp;\n      \
    \  for (long long i = 0; i < arr.size(); i++) {\n            if (arr[i] == 1)\
    \ {\n                temp.push_back(arr[i]);\n            }\n        }\n     \
    \   long long temp = ones;\n        ones = zeros;\n        zeros = temp;\n   \
    \     long long temp2 = decimal;\n        decimal = decimal2;\n        decimal2\
    \ = temp2;\n        long long temp3 = ones;\n        ones = zeros;\n        zeros\
    \ = temp3;\n        long long temp4 = decimal;\n        decimal = decimal2;\n\
    \        decimal2 = temp4;\n        long long temp5 = ones;\n        ones = zeros;\n\
    \        zeros = temp5;\n        long long temp6 = decimal;\n        decimal =\
    \ decimal2;\n        decimal2 = temp6;\n        long long temp7 = ones;\n    \
    \    ones = zeros;\n        zeros = temp7;\n        long long temp8 = decimal;\n\
    \        decimal = decimal2;\n        decimal2 = temp8;\n        long long temp9\
    \ = ones;\n        ones = zeros;\n        zeros = temp9;\n        long long temp10\
    \ = decimal;\n        decimal = decimal2;\n        decimal2 = temp10;\n      \
    \  long long temp11 = ones;\n        ones = zeros;\n        zeros = temp11;\n\
    \        long long temp12 = decimal;\n        decimal = decimal2;\n        decimal2\
    \ = temp12;\n        long long temp13 = ones;\n        ones = zeros;\n       \
    \ zeros = temp13;\n        long long temp14 = decimal;\n        decimal = decimal2;\n\
    \        decimal2 = temp14;\n        long long temp15 = ones;\n        ones =\
    \ zeros;\n        zeros = temp15;\n        long long temp16 = decimal;\n     \
    \   decimal = decimal2;\n        decimal2 = temp16;\n        long long temp17\
    \ = ones;\n        ones = zeros;\n        zeros = temp17;\n        long long temp18\
    \ = decimal;\n        decimal = decimal2;\n        decimal2 = temp18;\n      \
    \  ", "    long long int sum = 0;\n    for (auto i : arr) {\n        sum += i;\n\
    \    }\n    long long int ones = 0;\n    for (auto i : arr) {\n        ones +=\
    \ i;\n    }\n    long long int maxones = ones;\n    for (auto i : arr) {\n   \
    \     maxones = max(maxones, i);\n    }\n    long long int maxsum = sum;\n   \
    \ for (auto i : arr) {\n        maxsum = max(maxsum, i);\n    }\n    std::vector<long>\
    \ ans;\n    for (long long int i = 0; i < maxsum; i++) {\n        long long int\
    \ count = 0;\n        for (auto i : arr) {\n            if (i == 1) {\n      \
    \          count++;\n            }\n        }\n        if (count > maxones) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;", "    // Write\
    \ your code here\n    long long int sum = 0;\n    for (long long int i : arr)\
    \ {\n        sum += i;\n    }\n    long long int ones = 0;\n    for (long long\
    \ int i : arr) {\n        ones += i;\n    }\n    long long int zeros = 0;\n  \
    \  for (long long int i : arr) {\n        zeros += i;\n    }\n    long long int\
    \ max = 0;\n    for (long long int i : arr) {\n        if (i > max) {\n      \
    \      max = i;\n        }\n    }\n    long long int min = 0;\n    for (long long\
    \ int i : arr) {\n        if (i < min) {\n            min = i;\n        }\n  \
    \  }\n    std::vector<long> result;\n    for (long long int i : arr) {\n     \
    \   if (i == 0) {\n            result.push_back(0);\n        } else {\n      \
    \      long long int pos = 0;\n            long long int neg = 0;\n          \
    \  long long int zeros = 0;\n            long long int ones = 0;\n           \
    \ long long int max = 0;\n            long long int min = 0;\n            for\
    \ (long long int j : arr) {\n                if (j == i) {\n                 \
    \   pos++;\n                } else {\n                    if (j == 0) {\n    \
    \                    zeros++;\n                    } else {\n                \
    \        if (j == 1) {\n                            ones++;\n                \
    \        } else {\n                            if (j > 0) {\n                \
    \                if (j > max) {\n                                    max = j;\n\
    \                                }\n                            } else {\n   \
    \                             if (j < min) {\n                               \
    \     min = j;\n                                }\n                          \
    \  }\n                        }\n                    }\n                }\n  \
    \          }\n            long long int pos = pos * ones + neg;\n            long\
    \ long int neg = zeros * ones;\n            long long int zeros = zeros * ones;\n\
    \            long long int ones = ones * ones;\n            long long int max\
    \ = max * ones;\n            long long int min = min * ones;\n            long\
    \ long int zeros = zeros * ones;\n            long long int ones = ones * ones;\n\
    \            long long int max = max * ones;\n            long long int min =\
    \ min * ones;\n            long long int zeros = zeros * ones;\n            long\
    \ long int ones = ones * ones;\n            long long int max = max * ones;\n\
    \            long long int min = min * ones;\n            long long int zeros\
    \ = zeros * ones;\n            long long int ones = ones * ones;\n           \
    \ long long int max = max * ones;\n            long long int min = min * ones;\n\
    \            long long int zeros = zeros * ones;\n            long long int ones\
    \ = ones * ones;\n            long long int max = max * ones;", "    long long\
    \ ans = 0, cnt = 0;\n    for (long long i : arr) {\n        cnt += i;\n      \
    \  ans += cnt;\n    }\n    std::vector<long> res(arr.size());\n    for (long long\
    \ i = 0; i < arr.size(); i++) {\n        res[i] = ans % 10;\n        ans /= 10;\n\
    \    }\n    return res;", "    long long sum = 0;\n    for (auto i : arr) {\n\
    \        sum += i;\n    }\n    long long mod = sum % 10;\n    long long ans =\
    \ sum / 10;\n    std::vector<long> ans_list;\n    for (auto i : arr) {\n     \
    \   ans_list.push_back(ans);\n        ans -= i;\n    }\n    ans_list.push_back(mod);\n\
    \    return ans_list;", "    // Your code here\n    long long int sum = 0;\n \
    \   for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ ones = 0;\n    for (long long int i : arr) {\n        ones += i;\n    }\n  \
    \  long long int zeros = 0;\n    for (long long int i : arr) {\n        zeros\
    \ += i;\n    }\n    long long int max = 0;\n    for (long long int i : arr) {\n\
    \        if (i == 1) {\n            max = i;\n        }\n    }\n    long long\
    \ int min = 0;\n    for (long long int i : arr) {\n        if (i == 0) {\n   \
    \         min = i;\n        }\n    }\n    long long int mid = 0;\n    for (long\
    \ long int i : arr) {\n        mid = i;\n    }\n    long long int mid2 = 0;\n\
    \    for (long long int i : arr) {\n        mid2 = i;\n    }\n    long long int\
    \ mid3 = 0;\n    for (long long int i : arr) {\n        mid3 = i;\n    }\n   \
    \ long long int mid4 = 0;\n    for (long long int i : arr) {\n        mid4 = i;\n\
    \    }\n    long long int mid5 = 0;\n    for (long long int i : arr) {\n     \
    \   mid5 = i;\n    }\n    long long int mid6 = 0;\n    for (long long int i :\
    \ arr) {\n        mid6 = i;\n    }\n    long long int mid7 = 0;\n    for (long\
    \ long int i : arr) {\n        mid7 = i;\n    }\n    long long int mid8 = 0;\n\
    \    for (long long int i : arr) {\n        mid8 = i;\n    }\n    long long int\
    \ mid9 = 0;\n    for (long long int i : arr) {\n        mid9 = i;\n    }\n   \
    \ long long int mid10 = 0;\n    for (long long int i : arr) {\n        mid10 =\
    \ i;\n    }\n    long long int mid11 = 0;\n    for (long long int i : arr) {\n\
    \        mid11 = i;\n    }\n    long long int mid12 = 0;\n    for (long long int\
    \ i : arr) {\n        mid12 = i;\n    }\n    long long int mid13 = 0;\n    for\
    \ (long long int i : arr) {\n        mid13 = i;\n    }\n    long long int mid14\
    \ = 0;\n    for (long long int i : arr) {\n        mid14 = i;\n    }\n    long\
    \ long int mid15 = 0;\n    for (long long int i : arr) {\n        mid15 = i;\n\
    \    }\n    long long int mid16 = 0;\n    for (long long int i : arr) {\n    \
    \    mid16 = i;\n    }\n", "    // Your code here\n    long long int sum = 0;\n\
    \    for (long long int i : arr) {\n        sum += i;\n    }\n    long long int\
    \ max = 0;\n    for (long long int i : arr) {\n        if (i > max) {\n      \
    \      max = i;\n        }\n    }\n    std::vector<long> ans;\n    for (long long\
    \ int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for (long long int i : arr) {\n        if (i == sum) {\n \
    \           ans.push_back(i);\n        }\n    }\n    return ans;", "    // Write\
    \ your code here\n    long long int sum = 0;\n    long long int max = 0;\n   \
    \ for (long long int i : arr) {\n        sum += i;\n        if (sum > max) {\n\
    \            max = sum;\n        }\n    }\n    long long int sum2 = 0;\n    long\
    \ long int max2 = 0;\n    for (long long int i : arr) {\n        sum2 += i;\n\
    \        if (sum2 > max2) {\n            max2 = sum2;\n        }\n    }\n    long\
    \ long int sum3 = 0;\n    long long int max3 = 0;\n    for (long long int i :\
    \ arr) {\n        sum3 += i;\n        if (sum3 > max3) {\n            max3 = sum3;\n\
    \        }\n    }\n    long long int sum4 = 0;\n    long long int max4 = 0;\n\
    \    for (long long int i : arr) {\n        sum4 += i;\n        if (sum4 > max4)\
    \ {\n            max4 = sum4;\n        }\n    }\n    long long int sum5 = 0;\n\
    \    long long int max5 = 0;\n    for (long long int i : arr) {\n        sum5\
    \ += i;\n        if (sum5 > max5) {\n            max5 = sum5;\n        }\n   \
    \ }\n    long long int sum6 = 0;\n    long long int max6 = 0;\n    for (long long\
    \ int i : arr) {\n        sum6 += i;\n        if (sum6 > max6) {\n           \
    \ max6 = sum6;\n        }\n    }\n    long long int sum7 = 0;\n    long long int\
    \ max7 = 0;\n    for (long long int i : arr) {\n        sum7 += i;\n        if\
    \ (sum7 > max7) {\n            max7 = sum7;\n        }\n    }\n    long long int\
    \ sum8 = 0;\n    long long int max8 = 0;\n    for (long long int i : arr) {\n\
    \        sum8 += i;\n        if (sum8 > max8) {\n            max8 = sum8;\n  \
    \      }\n    }\n    long long int sum9 = 0;\n    long long int max9 = 0;\n  \
    \  for (long long int i : arr) {\n        sum9 += i;\n        if (sum9 > max9)\
    \ {\n            max9 = sum9;\n        }\n    }\n    long long int sum10 = 0;\n\
    \    long long int max10 = 0;\n    for (long long int i : arr) {\n        sum10\
    \ += i;\n        if (sum10 > max10) {\n            max10 = sum10;\n        }\n\
    \    }\n    long long int sum11 = 0;\n    long long int max11 = 0;\n    for (long\
    \ long int i : arr) {\n        sum11 += i;\n        if (sum11 > max11) {\n   \
    \         max11 = sum11;", "    long long int sum = 0;\n    for (auto i : arr)\
    \ {\n        sum += i;\n    }\n    long long int mod = sum % 10;\n    long long\
    \ int rem = sum / 10;\n    long long int temp = 0;\n    long long int count =\
    \ 0;\n    for (auto i : arr) {\n        temp = i;\n        while (temp > 0) {\n\
    \            temp = temp / 10;\n            count++;\n        }\n    }\n    std::vector<long>\
    \ ans;\n    for (auto i : arr) {\n        if (i < 0) {\n            ans.push_back(-i);\n\
    \        } else {\n            ans.push_back(i);\n        }\n    }\n    for (auto\
    \ i : ans) {\n        if (i < 0) {\n            ans.push_back(-i);\n        }\
    \ else {\n            ans.push_back(i);\n        }\n    }\n    for (auto i : ans)\
    \ {\n        if (i < 0) {\n            ans.push_back(-i);\n        } else {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (auto i : ans) {\n \
    \       if (i < 0) {\n            ans.push_back(-i);\n        } else {\n     \
    \       ans.push_back(i);\n        }\n    }\n    for (auto i : ans) {\n      \
    \  if (i < 0) {\n            ans.push_back(-i);\n        } else {\n          \
    \  ans.push_back(i);\n        }\n    }\n    for (auto i : ans) {\n        if (i\
    \ < 0) {\n            ans.push_back(-i);\n        } else {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (auto i : ans) {\n        if (i < 0) {\n          \
    \  ans.push_back(-i);\n        } else {\n            ans.push_back(i);\n     \
    \   }\n    }\n    for (auto i : ans) {\n        if (i < 0) {\n            ans.push_back(-i);\n\
    \        } else {\n            ans.push_back(i);\n        }\n    }\n    for (auto\
    \ i : ans) {\n        if (i < 0) {\n            ans.push_back(-i);\n        }\
    \ else {\n            ans.push_back(i);\n        }\n    }\n    for (auto i : ans)\
    \ {\n        if (i < 0) {\n            ans.push_back(-i);\n        } else {\n\
    \            ans.push_back(i);\n        }\n    }\n    for (auto i : ans) {\n \
    \       if (i < 0) {\n            ans.push_back(-i);\n        } else {\n     \
    \       ans.push_back(i);\n        }\n    }\n    for (auto i : ans) {\n      \
    \  if (i < 0) {\n            ans.push_back(-i);\n        } else {\n          \
    \  ans.push_back(i);\n        }\n    }\n    for (auto i : ans) {\n        if (i\
    \ < 0) {\n            ans.push_back(-i);\n        } else {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (auto i : ans) {\n        if (i < 0) {\n          \
    \  ans.push_back(-i);\n        } else {\n            ans.push_back(i);\n     \
    \   }\n    }\n    for (auto i ", "    long long ans = 0;\n    for (long long i\
    \ : arr) {\n        ans += i;\n    }\n    long long ones = ans;\n    long long\
    \ tens = ones / 10;\n    long long ones_rem = ones % 10;\n    long long tens_rem\
    \ = tens / 10;\n    long long hundreds = tens_rem / 100;\n    long long hundreds_rem\
    \ = tens_rem % 100;\n    long long thousands = hundreds_rem / 1000;\n    long\
    \ long thousands_rem = hundreds_rem % 1000;\n    long long ten_thousands = thousands_rem\
    \ / 10000;\n    long long ten_thousands_rem = thousands_rem % 10000;\n    long\
    \ long hundred_thousands = ten_thousands_rem / 100000;\n    long long hundred_thousands_rem\
    \ = ten_thousands_rem % 100000;\n    long long thousand_thousands = hundred_thousands_rem\
    \ / 1000000;\n    long long thousand_thousands_rem = hundred_thousands_rem % 1000000;\n\
    \    long long hundred_thousand_thousands = thousand_thousands_rem / 10000000;\n\
    \    long long hundred_thousand_thousands_rem = thousand_thousands_rem % 10000000;\n\
    \    long long thousand_hundred_thousands = hundred_thousand_thousands_rem / 1000000000;\n\
    \    long long thousand_hundred_thousands_rem = hundred_thousand_thousands_rem\
    \ % 1000000000;\n    long long hundred_thousand_hundred_thousands = thousand_hundred_thousands_rem\
    \ / 100000000000;\n    long long hundred_thousand_hundred_thousands_rem = thousand_hundred_thousands_rem\
    \ % 100000000000;\n    long long thousand_hundred_thousand_hundred_thousands =\
    \ hundred_thousand_hundred_thousands_rem / 1000000000000000;\n    long long thousand_hundred_thousand_hundred_thousands_rem\
    \ = hundred_thousand_hundred_thousands_rem % 1000000000000000;\n    long long\
    \ hundred_thousand_hundred_thousand_hundred_thousands = thousand_hundred_thousand_hundred_thousands_rem\
    \ / 10000000000000000000;\n    long long hundred_thousand_hundred_thousand_hundred_thousands_rem\
    \ = thousand_hundred_thousand_hundred_thousands_rem % 10000000000000000000;\n\
    \    long long thousand_hundred_thousand_hundred_thousand_hund", "    long long\
    \ int sum = 0;\n    long long int count = 0;\n    for (long long int i : arr)\
    \ {\n        sum += i;\n        count += 1;\n    }\n    std::vector<long> res;\n\
    \    long long int temp = 0;\n    for (long long int i : arr) {\n        if (count\
    \ == 1) {\n            temp = i;\n        } else {\n            if (sum > 0) {\n\
    \                temp = temp * 10 + i;\n                sum -= i;\n          \
    \      count -= 1;\n            } else {\n                res.push_back(temp);\n\
    \                temp = i;\n                sum = 0;\n                count =\
    \ 1;\n            }\n        }\n    }\n    res.push_back(temp);\n    return res;",
  "    // Write your code here\n    long long int sum = 0;\n    long long int max\
    \ = 0;\n    long long int min = 0;\n    for (long long int i = 0; i < arr.size();\
    \ i++) {\n        sum += arr[i];\n        if (arr[i] > max) {\n            max\
    \ = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n\
    \        }\n    }\n    long long int sum2 = sum;\n    long long int max2 = max;\n\
    \    long long int min2 = min;\n    long long int sum3 = sum2;\n    long long\
    \ int max3 = max2;\n    long long int min3 = min2;\n    long long int sum4 = sum3;\n\
    \    long long int max4 = max3;\n    long long int min4 = min3;\n    long long\
    \ int sum5 = sum4;\n    long long int max5 = max4;\n    long long int min5 = min4;\n\
    \    long long int sum6 = sum5;\n    long long int max6 = max5;\n    long long\
    \ int min6 = min5;\n    long long int sum7 = sum6;\n    long long int max7 = max6;\n\
    \    long long int min7 = min6;\n    long long int sum8 = sum7;\n    long long\
    \ int max8 = max7;\n    long long int min8 = min7;\n    long long int sum9 = sum8;\n\
    \    long long int max9 = max8;\n    long long int min9 = min8;\n    long long\
    \ int sum10 = sum9;\n    long long int max10 = max9;\n    long long int min10\
    \ = min9;\n    long long int sum11 = sum10;\n    long long int max11 = max10;\n\
    \    long long int min11 = min10;\n    long long int sum12 = sum11;\n    long\
    \ long int max12 = max11;\n    long long int min12 = min11;\n    long long int\
    \ sum13 = sum12;\n    long long int max13 = max12;\n    long long int min13 =\
    \ min12;\n    long long int sum14 = sum13;\n    long long int max14 = max13;\n\
    \    long long int min14 = min13;\n    long long int sum15 = sum14;\n    long\
    \ long int max15 = max14;\n    long long int min15 = min14;\n    long long int\
    \ sum16 = sum15;\n    long long int max16 = max15;\n    long long int min16 =\
    \ min15;\n    long long int sum17 = sum16;\n    long long int max17 = max16;\n\
    \    long long int min", "    // Your code here\n    long long int sum = 0;\n\
    \    long long int count = 0;\n    for (long long int i : arr) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 0) {\n            max = i;\n        }\n\
    \        else if (sum > i) {\n            max = i;\n        }\n    }\n    long\
    \ long int min = 0;\n    for (long long int i : arr) {\n        if (i == 0) {\n\
    \            min = i;\n        }\n        else if (sum < i) {\n            min\
    \ = i;\n        }\n    }\n    long long int mid = max - (min + 1);\n    long long\
    \ int mid2 = sum / 2;\n    long long int mid3 = sum % 2;\n    long long int mid4\
    \ = sum % 3;\n    long long int mid5 = sum % 4;\n    long long int mid6 = sum\
    \ % 5;\n    long long int mid7 = sum % 6;\n    long long int mid8 = sum % 7;\n\
    \    long long int mid9 = sum % 8;\n    long long int mid10 = sum % 9;\n    long\
    \ long int mid11 = sum % 10;\n    long long int mid12 = sum % 11;\n    long long\
    \ int mid13 = sum % 12;\n    long long int mid14 = sum % 13;\n    long long int\
    \ mid15 = sum % 14;\n    long long int mid16 = sum % 15;\n    long long int mid17\
    \ = sum % 16;\n    long long int mid18 = sum % 17;\n    long long int mid19 =\
    \ sum % 18;\n    long long int mid20 = sum % 19;\n    long long int mid21 = sum\
    \ % 20;\n    long long int mid22 = sum % 21;\n    long long int mid23 = sum %\
    \ 22;\n    long long int mid24 = sum % 23;\n    long long int mid25 = sum % 24;\n\
    \    long long int mid26 = sum % 25;\n    long long int mid27 = sum % 26;\n  \
    \  long long int mid28 = sum % 27;\n    long long int mid29 = sum % 28;\n    long\
    \ long int mid30 = sum % 29;\n    long long int mid31 = sum % 30;\n    long long\
    \ int mid32 = sum % 31;\n    long long int mid33 = sum % 32;\n    long long int\
    \ mid34 = sum % 33;\n    long long int mid35 = sum % 34;\n    long long int mid",
  "    // Write your code here\n    long long int sum = 0;\n    for (long long int\
    \ i : arr) {\n        sum += i;\n    }\n    long long int ones = 0;\n    for (long\
    \ long int i : arr) {\n        ones += i;\n    }\n    long long int max = 0;\n\
    \    for (long long int i : arr) {\n        if (i > max) {\n            max =\
    \ i;\n        }\n    }\n    long long int min = 0;\n    for (long long int i :\
    \ arr) {\n        if (i < min) {\n            min = i;\n        }\n    }\n   \
    \ long long int mid = sum / 2;\n    long long int mid2 = sum / 2;\n    long long\
    \ int mid3 = sum / 2;\n    long long int mid4 = sum / 2;\n    long long int mid5\
    \ = sum / 2;\n    long long int mid6 = sum / 2;\n    long long int mid7 = sum\
    \ / 2;\n    long long int mid8 = sum / 2;\n    long long int mid9 = sum / 2;\n\
    \    long long int mid10 = sum / 2;\n    long long int mid11 = sum / 2;\n    long\
    \ long int mid12 = sum / 2;\n    long long int mid13 = sum / 2;\n    long long\
    \ int mid14 = sum / 2;\n    long long int mid15 = sum / 2;\n    long long int\
    \ mid16 = sum / 2;\n    long long int mid17 = sum / 2;\n    long long int mid18\
    \ = sum / 2;\n    long long int mid19 = sum / 2;\n    long long int mid20 = sum\
    \ / 2;\n    long long int mid21 = sum / 2;\n    long long int mid22 = sum / 2;\n\
    \    long long int mid23 = sum / 2;\n    long long int mid24 = sum / 2;\n    long\
    \ long int mid25 = sum / 2;\n    long long int mid26 = sum / 2;\n    long long\
    \ int mid27 = sum / 2;\n    long long int mid28 = sum / 2;\n    long long int\
    \ mid29 = sum / 2;\n    long long int mid30 = sum / 2;\n    long long int mid31\
    \ = sum / 2;\n    long long int mid32 = sum / 2;\n    long long int mid33 = sum\
    \ / 2;\n    long long int mid34 = sum / 2;\n    long long int mid35 = sum / 2;\n\
    \    long long int mid36 = sum / 2;\n    long long int mid37 = sum / 2;\n    long\
    \ long int mid38 = sum / ", "    long long ones = 0;\n    for (auto i : arr) {\n\
    \        ones += i;\n    }\n    long long twos = ones;\n    long long tens = ones;\n\
    \    long long hundreds = ones;\n    long long thousands = ones;\n    for (auto\
    \ i : arr) {\n        if (i % 10 == 0) {\n            tens += i;\n        } else\
    \ if (i % 100 == 0) {\n            hundreds += i;\n        } else if (i % 1000\
    \ == 0) {\n            thousands += i;\n        }\n    }\n    long long ten_ones\
    \ = tens / 10;\n    long long ten_twos = tens % 10;\n    long long ten_threes\
    \ = ten_twos / 10;\n    long long ten_fours = ten_twos % 10;\n    long long ten_fives\
    \ = ten_threes / 10;\n    long long ten_sixes = ten_threes % 10;\n    long long\
    \ ten_sevens = ten_fours / 10;\n    long long ten_eights = ten_fours % 10;\n \
    \   long long ten_nines = ten_fives / 10;\n    long long ten_tens = ten_fives\
    \ % 10;\n    long long ten_elevens = ten_sixes / 10;\n    long long ten_twelves\
    \ = ten_sixes % 10;\n    long long ten_thirteens = ten_sevens / 10;\n    long\
    \ long ten_fourteens = ten_sevens % 10;\n    long long ten_fifteens = ten_eights\
    \ / 10;\n    long long ten_sixteens = ten_eights % 10;\n    long long ten_seventeens\
    \ = ten_nines / 10;\n    long long ten_eighteens = ten_nines % 10;\n    long long\
    \ ten_nineteens = ten_tens / 10;\n    long long ten_twenty = ten_tens % 10;\n\
    \    long long ten_thirty = ten_elevens / 10;\n    long long ten_forty = ten_elevens\
    \ % 10;\n    long long ten_fifty = ten_twenty / 10;\n    long long ten_sixty =\
    \ ten_twenty % 10;\n    long long ten_seventy = ten_thirty / 10;\n    long long\
    \ ten_eighty = ten_thirty % 10;\n    long long ten_ninety = ten_forty / 10;\n\
    \    long long hundred_ones = hundreds / 100;\n    long long hundred_twos = hundreds ",
  "    // Write your code here\n    long long int ones = 0;\n    long long int zeros\
    \ = 0;\n    long long int max = 0;\n    long long int min = 0;\n    long long\
    \ int sum = 0;\n    long long int count = 0;\n    long long int sum2 = 0;\n  \
    \  long long int count2 = 0;\n    long long int sum3 = 0;\n    long long int count3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int count4 = 0;\n    long long\
    \ int sum5 = 0;\n    long long int count5 = 0;\n    long long int sum6 = 0;\n\
    \    long long int count6 = 0;\n    long long int sum7 = 0;\n    long long int\
    \ count7 = 0;\n    long long int sum8 = 0;\n    long long int count8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int count9 = 0;\n    long long int sum10\
    \ = 0;\n    long long int count10 = 0;\n    long long int sum11 = 0;\n    long\
    \ long int count11 = 0;\n    long long int sum12 = 0;\n    long long int count12\
    \ = 0;\n    long long int sum13 = 0;\n    long long int count13 = 0;\n    long\
    \ long int sum14 = 0;\n    long long int count14 = 0;\n    long long int sum15\
    \ = 0;\n    long long int count15 = 0;\n    long long int sum16 = 0;\n    long\
    \ long int count16 = 0;\n    long long int sum17 = 0;\n    long long int count17\
    \ = 0;\n    long long int sum18 = 0;\n    long long int count18 = 0;\n    long\
    \ long int sum19 = 0;\n    long long int count19 = 0;\n    long long int sum20\
    \ = 0;\n    long long int count20 = 0;\n    long long int sum21 = 0;\n    long\
    \ long int count21 = 0;\n    long long int sum22 = 0;\n    long long int count22\
    \ = 0;\n    long long int sum23 = 0;\n    long long int count23 = 0;\n    long\
    \ long int sum24 = 0;\n    long long int count24 = 0;\n    long long int sum25\
    \ = 0;\n    long long int count25 = 0;\n    long long int sum26 = 0;\n    long\
    \ long int count26 = 0;\n    long long int sum27 = 0;\n    long long int count27\
    \ = 0;\n    long long int sum28 = 0;\n    long long int count28 = 0;\n    long\
    \ long int sum29 = 0;\n    long long int count29 = 0;\n    long long int sum30\
    \ = 0;\n    long long int count30 = 0;\n    long long int sum31 = 0;\n    long ",
  "    // Your code here\n    long long int sum = 0;\n    long long int count = 0;\n\
    \    for (long long int i : arr) {\n        sum += i;\n        count += 1;\n \
    \   }\n    long long int ones = sum / count;\n    long long int zeros = sum %\
    \ count;\n    long long int max = 0;\n    for (long long int i : arr) {\n    \
    \    if (i == ones) {\n            max = i;\n        } else if (i == zeros) {\n\
    \            max = max * 10 + i;\n        }\n    }\n    std::vector<long> ans;\n\
    \    for (long long int i : arr) {\n        if (i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    long long ones = 0;\n    for (long long\
    \ i : arr) {\n        ones += i;\n    }\n    long long tens = ones / 10;\n   \
    \ long long ones = ones % 10;\n    long long tensOnes = tens / 10;\n    long long\
    \ tensOnesOnes = tensOnes / 10;\n    long long tensOnesOnesOnes = tensOnesOnes\
    \ / 10;\n    long long tensOnesOnesOnesOnes = tensOnesOnesOnes / 10;\n    long\
    \ long tensOnesOnesOnesOnesOnes = tensOnesOnesOnesOnes / 10;\n    long long tensOnesOnesOnesOnesOnesOnes\
    \ = tensOnesOnesOnesOnesOnesOnes / 10;\n    long long tensOnesOnesOnesOnesOnesOnesOnes\
    \ = tensOnesOnesOnesOnesOnesOnesOnes / 10;\n    long long tensOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = tensOnesOnesOnesOnesOnesOnesOnesOnes / 10;\n    long long tensOnesOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = tensOnesOnesOnesOnesOnesOnesOnesOnesOnes / 10;\n    long long tensOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = tensOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes / 10;\n    long long tensOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = tensOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes / 10;\n    long long\
    \ tensOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes = tensOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes\
    \ / 10;\n    long long tensOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = tensOnesOnesOnesOnesOnesOnesOnesOnes", "    // Write your code here\n    long\
    \ long int sum = 0;\n    long long int count = 0;\n    for (long long int i :\
    \ arr) {\n        sum += i;\n        count += 1;\n    }\n    long long int max\
    \ = 0;\n    for (long long int i : arr) {\n        if (max < i) {\n          \
    \  max = i;\n        }\n    }\n    long long int min = 0;\n    for (long long\
    \ int i : arr) {\n        if (min > i) {\n            min = i;\n        }\n  \
    \  }\n    long long int mid = sum / count;\n    long long int mid2 = sum % count;\n\
    \    long long int mid3 = sum / count - mid;\n    long long int mid4 = sum % count\
    \ - mid;\n    long long int mid5 = sum / count - mid + mid2;\n    long long int\
    \ mid6 = sum % count - mid + mid2;\n    long long int mid7 = sum / count - mid\
    \ + mid2 + mid3;\n    long long int mid8 = sum % count - mid + mid2 + mid3;\n\
    \    long long int mid9 = sum / count - mid + mid2 + mid3 + mid4;\n    long long\
    \ int mid10 = sum % count - mid + mid2 + mid3 + mid4;\n    long long int mid11\
    \ = sum / count - mid + mid2 + mid3 + mid4 + mid5;\n    long long int mid12 =\
    \ sum % count - mid + mid2 + mid3 + mid4 + mid5;\n    long long int mid13 = sum\
    \ / count - mid + mid2 + mid3 + mid4 + mid5 + mid6;\n    long long int mid14 =\
    \ sum % count - mid + mid2 + mid3 + mid4 + mid5 + mid6;\n    long long int mid15\
    \ = sum / count - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7;\n    long long\
    \ int mid16 = sum % count - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7;\n \
    \   long long int mid17 = sum / count - mid + mid2 + mid3 + mid4 + mid5 + mid6\
    \ + mid7 + mid8;\n    long long int mid18 = sum % count - mid + mid2 + mid3 +\
    \ mid4 + mid5 + mid6 + mid7 + mid8;\n    long long int mid19 = sum / count - mid\
    \ + mid2 + mid3 + mid4 + mid5 + mid6 + mid7 + mid8 + mid9;\n    long long int\
    \ mid20 = sum % count - mid + mid2 + mid3 + mid4 + mid5 + mid6", "    // Write\
    \ your code here\n    long long int sum = 0;\n    for (long long int i : arr)\
    \ {\n        sum += i;\n    }\n    long long int count = 0;\n    for (long long\
    \ int i : arr) {\n        if (i == 1) {\n            count++;\n        }\n   \
    \ }\n    long long int max = 0;\n    for (long long int i : arr) {\n        if\
    \ (i == 1) {\n            max = i;\n        }\n    }\n    long long int min =\
    \ 0;\n    for (long long int i : arr) {\n        if (i == 0) {\n            min\
    \ = i;\n        }\n    }\n    long long int mid = sum / count;\n    long long\
    \ int mid2 = sum % count;\n    long long int mid3 = sum / count;\n    long long\
    \ int mid4 = sum % count;\n    long long int mid5 = sum / count;\n    long long\
    \ int mid6 = sum % count;\n    long long int mid7 = sum / count;\n    long long\
    \ int mid8 = sum % count;\n    long long int mid9 = sum / count;\n    long long\
    \ int mid10 = sum % count;\n    long long int mid11 = sum / count;\n    long long\
    \ int mid12 = sum % count;\n    long long int mid13 = sum / count;\n    long long\
    \ int mid14 = sum % count;\n    long long int mid15 = sum / count;\n    long long\
    \ int mid16 = sum % count;\n    long long int mid17 = sum / count;\n    long long\
    \ int mid18 = sum % count;\n    long long int mid19 = sum / count;\n    long long\
    \ int mid20 = sum % count;\n    long long int mid21 = sum / count;\n    long long\
    \ int mid22 = sum % count;\n    long long int mid23 = sum / count;\n    long long\
    \ int mid24 = sum % count;\n    long long int mid25 = sum / count;\n    long long\
    \ int mid26 = sum % count;\n    long long int mid27 = sum / count;\n    long long\
    \ int mid28 = sum % count;\n    long long int mid29 = sum / count;\n    long long\
    \ int mid30 = sum % count;\n    long long int mid31 = sum / count;\n    long long\
    \ int mid32 = sum % count;\n    long long int mid33 = sum / count;\n    long long\
    \ int mid34 = sum % count;\n    long long int mid35 = sum / count;\n    long long\
    \ int mid36 = sum % count;\n    long long int mid37 = sum / count;\n    long long\
    \ int mid38 = ", "    std::vector<long> sorted_arr;\n    long max_ones = 0, max_dec\
    \ = 0;\n    for (long i : arr) {\n        if (max_ones < i) {\n            max_ones\
    \ = i;\n        }\n        if (max_dec < i) {\n            max_dec = i;\n    \
    \    }\n    }\n    for (long i : arr) {\n        if (max_ones == i) {\n      \
    \      sorted_arr.push_back(i);\n        } else if (max_dec == i) {\n        \
    \    sorted_arr.push_back(-i);\n        } else {\n            long temp = max_ones;\n\
    \            max_ones = max_dec - i;\n            max_dec = temp;\n          \
    \  sorted_arr.push_back(-i);\n            sorted_arr.push_back(i);\n        }\n\
    \    }\n    return sorted_arr;", "    // Your code here\n    long long ones =\
    \ 0;\n    long long zeros = 0;\n    for (long long i : arr) {\n        if (i ==\
    \ 1) {\n            ones++;\n        } else {\n            zeros++;\n        }\n\
    \    }\n    long long ones_power = 1;\n    long long zeros_power = 1;\n    while\
    \ (ones_power < ones) {\n        ones_power *= 2;\n    }\n    while (zeros_power\
    \ < zeros) {\n        zeros_power *= 2;\n    }\n    long long max_power = ones_power\
    \ < zeros_power ? ones_power : zeros_power;\n    long long max_num = max_power;\n\
    \    long long min_num = max_power;\n    for (long long i : arr) {\n        if\
    \ (i == 1) {\n            ones_power /= 2;\n        } else {\n            zeros_power\
    \ /= 2;\n        }\n        if (ones_power < zeros_power) {\n            long\
    \ long temp = ones_power;\n            ones_power = zeros_power;\n           \
    \ zeros_power = temp;\n        }\n        if (ones_power > max_power) {\n    \
    \        max_power = ones_power;\n        }\n        if (zeros_power > max_power)\
    \ {\n            max_power = zeros_power;\n        }\n        if (ones_power <\
    \ min_num) {\n            min_num = ones_power;\n        }\n        if (zeros_power\
    \ < min_num) {\n            min_num = zeros_power;\n        }\n    }\n    long\
    \ long min_power = max_power;\n    long long min_num = max_power;\n    for (long\
    \ long i : arr) {\n        if (i == 1) {\n            ones_power /= 2;\n     \
    \   } else {\n            zeros_power /= 2;\n        }\n        if (ones_power\
    \ < zeros_power) {\n            long long temp = ones_power;\n            ones_power\
    \ = zeros_power;\n            zeros_power = temp;\n        }\n        if (ones_power\
    \ < min_power) {\n            min_power = ones_power;\n        }\n        if (zeros_power\
    \ < min_power) {\n            min_power = zeros_power;\n        }\n        if\
    \ (ones_power > max_num) {\n            max_num = ones_power;\n        }\n   \
    \     if (zeros_power > max_num) {\n            max_num = zeros_power;\n     \
    \   }\n        if (ones_power > min_num) {\n            min_num = ones_power;\n\
    \        }\n        if (zeros_power > min_num) {\n            min_num = zeros_power;\n\
    \        }\n    }\n    long long temp = max_power;\n    max_power = min_power;\n\
    \    min_power = temp;\n    temp = max_num;\n    max_num = min_", "    // Your\
    \ code here\n    long long int sum = 0;\n    long long int count = 0;\n    for\
    \ (long long int i : arr) {\n        sum += i;\n        count += 1;\n    }\n \
    \   long long int ones = count - 1;\n    long long int zeros = sum - count;\n\
    \    long long int max = (ones > zeros) ? ones : zeros;\n    long long int min\
    \ = (ones < zeros) ? ones : zeros;\n    long long int mid = max / 2;\n    long\
    \ long int temp = 0;\n    long long int temp2 = 0;\n    long long int temp3 =\
    \ 0;\n    long long int temp4 = 0;\n    long long int temp5 = 0;\n    long long\
    \ int temp6 = 0;\n    long long int temp7 = 0;\n    long long int temp8 = 0;\n\
    \    long long int temp9 = 0;\n    long long int temp10 = 0;\n    long long int\
    \ temp11 = 0;\n    long long int temp12 = 0;\n    long long int temp13 = 0;\n\
    \    long long int temp14 = 0;\n    long long int temp15 = 0;\n    long long int\
    \ temp16 = 0;\n    long long int temp17 = 0;\n    long long int temp18 = 0;\n\
    \    long long int temp19 = 0;\n    long long int temp20 = 0;\n    long long int\
    \ temp21 = 0;\n    long long int temp22 = 0;\n    long long int temp23 = 0;\n\
    \    long long int temp24 = 0;\n    long long int temp25 = 0;\n    long long int\
    \ temp26 = 0;\n    long long int temp27 = 0;\n    long long int temp28 = 0;\n\
    \    long long int temp29 = 0;\n    long long int temp30 = 0;\n    long long int\
    \ temp31 = 0;\n    long long int temp32 = 0;\n    long long int temp33 = 0;\n\
    \    long long int temp34 = 0;\n    long long int temp35 = 0;\n    long long int\
    \ temp36 = 0;\n    long long int temp37 = 0;\n    long long int temp38 = 0;\n\
    \    long long int temp39 = 0;\n    long long int temp40 = 0;\n    long long int\
    \ temp41 = 0;\n    long long int temp42 = 0;\n    long long int temp43 = 0;\n\
    \    long long int temp44 = 0;\n    long long int temp45 = 0;\n    long long int\
    \ temp46 = 0;\n    long long int temp47 = 0;\n    long long int temp48 = 0;\n\
    \    long long int temp49 = 0;\n    long long int temp50 = 0;\n    long long int\
    \ temp51 = 0;\n    long long int temp52 = 0;\n    ", "    long long ones = 0;\n\
    \    for (auto i : arr) {\n        ones += i;\n    }\n    long long tens = ones\
    \ / 10;\n    ones = ones % 10;\n    long long hundreds = ones / 100;\n    ones\
    \ = ones % 100;\n    long long thousands = ones / 1000;\n    ones = ones % 1000;\n\
    \    long long ten_thousands = ones / 100000;\n    ones = ones % 100000;\n   \
    \ long long hundred_thousands = ones / 1000000;\n    ones = ones % 1000000;\n\
    \    long long thousand_thousands = ones / 10000000;\n    ones = ones % 10000000;\n\
    \    long long hundred_thousand_thousands = ones / 1000000000;\n    ones = ones\
    \ % 1000000000;\n    long long thousand_thousand_thousands = ones / 1000000000000;\n\
    \    ones = ones % 1000000000000;\n    long long hundred_thousand_thousand_thousands\
    \ = ones / 1000000000000000;\n    ones = ones % 1000000000000000;\n    long long\
    \ thousand_thousand_thousand_thousands = ones / 1000000000000000000;\n    ones\
    \ = ones % 1000000000000000000;\n    long long hundred_thousand_thousand_thousand_thousands\
    \ = ones / 100000000000000000000;\n    ones = ones % 100000000000000000000;\n\
    \    long long thousand_thousand_thousand_thousand_thousands = ones / 100000000000000000000000;\n\
    \    ones = ones % 100000000000000000000000;\n    long long hundred_thousand_thousand_thousand_thousand_thousands\
    \ = ones / 100000000000000000000000000;\n    ones = ones % 100000000000000000000000000;\n\
    \    long long thousand_thousand_thousand_thousand_thousand_thousands = ones /\
    \ 10000000000000000000000000000;\n    ones = ones % 10000000000000000000000000000;\n\
    \    long long hundred_thousand_thousand_thousand_thousand_thousand_thousands\
    \ = ones / 10000000000000000000000000000000;\n    ones = ones % 10000000000000000000000000000000;\n\
    \    long long thousand_thousand_thousand_thousand_thousand_thousand_thousands\
    \ = ones / 100000000000000000000000000000000;\n    ones = ones % 100000000000000000000000000000000;\n\
    \    long long hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousands\
    \ = ones / 1000000000000000000000000000000000;\n    ones = ones % 1000000000000000000000000000000000;\n\
    \    long long thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousands\
    \ = ones / 10000000000000000000000000000000000;\n    ones = ones ", "    // Write\
    \ your code here\n    long long int sum = 0;\n    long long int count = 0;\n \
    \   long long int max = 0;\n    for (long long int i : arr) {\n        sum +=\
    \ i;\n        count += 1;\n        if (i > max) {\n            max = i;\n    \
    \    }\n    }\n    long long int temp = sum / count;\n    long long int sum2 =\
    \ 0;\n    for (long long int i : arr) {\n        sum2 += i;\n    }\n    long long\
    \ int sum3 = sum2 / count;\n    long long int sum4 = 0;\n    for (long long int\
    \ i : arr) {\n        sum4 += i;\n    }\n    long long int sum5 = sum4 / count;\n\
    \    long long int sum6 = sum5 / count;\n    long long int sum7 = sum6 / count;\n\
    \    long long int sum8 = sum7 / count;\n    long long int sum9 = sum8 / count;\n\
    \    long long int sum10 = sum9 / count;\n    long long int sum11 = sum10 / count;\n\
    \    long long int sum12 = sum11 / count;\n    long long int sum13 = sum12 / count;\n\
    \    long long int sum14 = sum13 / count;\n    long long int sum15 = sum14 / count;\n\
    \    long long int sum16 = sum15 / count;\n    long long int sum17 = sum16 / count;\n\
    \    long long int sum18 = sum17 / count;\n    long long int sum19 = sum18 / count;\n\
    \    long long int sum20 = sum19 / count;\n    long long int sum21 = sum20 / count;\n\
    \    long long int sum22 = sum21 / count;\n    long long int sum23 = sum22 / count;\n\
    \    long long int sum24 = sum23 / count;\n    long long int sum25 = sum24 / count;\n\
    \    long long int sum26 = sum25 / count;\n    long long int sum27 = sum26 / count;\n\
    \    long long int sum28 = sum27 / count;\n    long long int sum29 = sum28 / count;\n\
    \    long long int sum30 = sum29 / count;\n    long long int sum31 = sum30 / count;\n\
    \    long long int sum32 = sum31 / count;\n    long long int sum33 = sum32 / count;\n\
    \    long long int sum34 = sum33 / count;\n    long long int sum35 = sum34 / count;\n\
    \    long long int sum36 = sum35 / count;\n    long long int sum37 = sum36 / count;\n\
    \    ", "    std::vector<long> sorted_arr;\n    long ones = 0;\n    for (long\
    \ i : arr) {\n        ones += i;\n    }\n    if (ones == 0) {\n        return\
    \ sorted_arr;\n    }\n    long max_ones = ones;\n    for (long i : arr) {\n  \
    \      max_ones = std::max(max_ones, i);\n    }\n    long max_ones_pow2 = max_ones;\n\
    \    while (max_ones_pow2 >= 2) {\n        max_ones_pow2 /= 2;\n    }\n    long\
    \ max_ones_pow2_pow2 = max_ones_pow2;\n    while (max_ones_pow2_pow2 >= 2) {\n\
    \        max_ones_pow2_pow2 /= 2;\n    }\n    long max_ones_pow2_pow2_pow2 = max_ones_pow2_pow2;\n\
    \    while (max_ones_pow2_pow2_pow2 >= 2) {\n        max_ones_pow2_pow2_pow2 /=\
    \ 2;\n    }\n    long max_ones_pow2_pow2_pow2_pow2 = max_ones_pow2_pow2_pow2;\n\
    \    while (max_ones_pow2_pow2_pow2_pow2 >= 2) {\n        max_ones_pow2_pow2_pow2_pow2\
    \ /= 2;\n    }\n    long max_ones_pow2_pow2_pow2_pow2_pow2 = max_ones_pow2_pow2_pow2_pow2;\n\
    \    while (max_ones_pow2_pow2_pow2_pow2_pow2 >= 2) {\n        max_ones_pow2_pow2_pow2_pow2_pow2\
    \ /= 2;\n    }\n    long max_ones_pow2_pow2_pow2_pow2_pow2_pow2 = max_ones_pow2_pow2_pow2_pow2_pow2_pow2;\n\
    \    while (max_ones_pow2_pow2_pow2_pow2_pow2_pow2 >= 2) {\n        max_ones_pow2_pow2_pow2_pow2_pow2_pow2\
    \ /= 2;\n    }\n    long max_ones_pow2_pow2_pow2_pow2_pow2_pow2_pow2 = max_ones_pow2_pow2_pow2_pow2_pow2_pow2_pow2;\n\
    \    while (max_ones_pow2_pow2_pow2_pow2_pow2_pow2_pow2 >= 2) {\n        max_ones_pow2_pow2_pow2_pow2_pow2_pow2_pow2\
    \ /= 2;\n    }\n    long max_ones_pow2_pow2_pow2_pow2_pow2_pow2_pow2_pow2 = max_ones_pow2_pow2_pow2_pow2_pow2_pow2_pow2_pow2;\n\
    \    while (max_ones_pow2_pow2_pow2_pow2_pow2_pow2_pow2_pow2 >= 2) {\n", "   \
    \ long long sum = 0;\n    for (long long i : arr) {\n        sum += i;\n    }\n\
    \    long long mod = sum % 10;\n    long long ans = sum / 10;\n    for (long long\
    \ i : arr) {\n        if (i % 2 == 0) {\n            ans *= 10;\n            ans\
    \ += i;\n        } else {\n            ans /= 10;\n            ans += i;\n   \
    \     }\n    }\n    if (mod != 0) {\n        ans /= 10;\n        ans += mod;\n\
    \    }\n    return arr;", "    // Write your code here\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : arr) {\n    \
    \    sum += i;\n        count += 1;\n    }\n    long long int mod = sum % 10;\n\
    \    long long int temp = sum / 10;\n    long long int temp2 = temp % 10;\n  \
    \  long long int temp3 = temp / 10;\n    long long int temp4 = temp3 % 10;\n \
    \   long long int temp5 = temp3 / 10;\n    long long int temp6 = temp5 % 10;\n\
    \    long long int temp7 = temp5 / 10;\n    long long int temp8 = temp7 % 10;\n\
    \    long long int temp9 = temp7 / 10;\n    long long int temp10 = temp9 % 10;\n\
    \    long long int temp11 = temp9 / 10;\n    long long int temp12 = temp11 % 10;\n\
    \    long long int temp13 = temp11 / 10;\n    long long int temp14 = temp13 %\
    \ 10;\n    long long int temp15 = temp13 / 10;\n    long long int temp16 = temp15\
    \ % 10;\n    long long int temp17 = temp15 / 10;\n    long long int temp18 = temp17\
    \ % 10;\n    long long int temp19 = temp17 / 10;\n    long long int temp20 = temp18\
    \ % 10;\n    long long int temp21 = temp18 / 10;\n    long long int temp22 = temp21\
    \ % 10;\n    long long int temp23 = temp21 / 10;\n    long long int temp24 = temp23\
    \ % 10;\n    long long int temp25 = temp23 / 10;\n    long long int temp26 = temp25\
    \ % 10;\n    long long int temp27 = temp25 / 10;\n    long long int temp28 = temp27\
    \ % 10;\n    long long int temp29 = temp27 / 10;\n    long long int temp30 = temp28\
    \ % 10;\n    long long int temp31 = temp28 / 10;\n    long long int temp32 = temp31\
    \ % 10;\n    long long int temp33 = temp31 / 10;\n    long long int temp34 = temp33\
    \ % 10;\n    long long int temp35 = temp33 / 10;\n    long long int temp36 = temp35\
    \ % 10;\n    long long int temp37 = temp35 / 10;\n    long long int temp38 = temp37\
    \ % 10;\n    long long int temp39 = temp37 / 10;\n    long long int temp40 = temp39\
    \ % 10;\n    ", "    long long ans = 0;\n    for (long long i : arr) {\n     \
    \   ans += i;\n    }\n    long long ones = 0, tens = 0, hundreds = 0, thousands\
    \ = 0, ten_thousands = 0;\n    for (long long i : arr) {\n        if (i < 1000)\
    \ {\n            hundreds += i;\n        } else if (i < 10000) {\n           \
    \ thousands += i;\n        } else if (i < 100000) {\n            ten_thousands\
    \ += i;\n        } else {\n            tens += i;\n        }\n    }\n    std::vector<long>\
    \ res;\n    if (hundreds > 0) {\n        res.push_back(hundreds);\n    }\n   \
    \ if (thousands > 0) {\n        res.push_back(thousands);\n    }\n    if (ten_thousands\
    \ > 0) {\n        res.push_back(ten_thousands);\n    }\n    if (tens > 0) {\n\
    \        res.push_back(tens);\n    }\n    if (ans > 0) {\n        res.push_back(ans);\n\
    \    }\n    return res;", "    // Your code here\n    long long int sum = 0;\n\
    \    long long int count = 0;\n    for (long long int i : arr) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long int max = 0;\n    for (long\
    \ long int i : arr) {\n        if (i == 1) {\n            max = i;\n        }\n\
    \    }\n    long long int min = 0;\n    for (long long int i : arr) {\n      \
    \  if (i == 0) {\n            min = i;\n        }\n    }\n    long long int mid\
    \ = sum / count;\n    long long int left = 0;\n    long long int right = 0;\n\
    \    for (long long int i : arr) {\n        if (i == 1) {\n            left =\
    \ i;\n        }\n        if (i == 0) {\n            right = i;\n        }\n  \
    \  }\n    long long int mid1 = left + (right - left) / 2;\n    long long int mid2\
    \ = left + (right - left) / 2;\n    long long int mid3 = left + (right - left)\
    \ / 2;\n    long long int mid4 = left + (right - left) / 2;\n    long long int\
    \ mid5 = left + (right - left) / 2;\n    long long int mid6 = left + (right -\
    \ left) / 2;\n    long long int mid7 = left + (right - left) / 2;\n    long long\
    \ int mid8 = left + (right - left) / 2;\n    long long int mid9 = left + (right\
    \ - left) / 2;\n    long long int mid10 = left + (right - left) / 2;\n    long\
    \ long int mid11 = left + (right - left) / 2;\n    long long int mid12 = left\
    \ + (right - left) / 2;\n    long long int mid13 = left + (right - left) / 2;\n\
    \    long long int mid14 = left + (right - left) / 2;\n    long long int mid15\
    \ = left + (right - left) / 2;\n    long long int mid16 = left + (right - left)\
    \ / 2;\n    long long int mid17 = left + (right - left) / 2;\n    long long int\
    \ mid18 = left + (right - left) / 2;\n    long long int mid19 = left + (right\
    \ - left) / 2;\n    long long int mid20 = left + (right - left) / 2;\n    long\
    \ long int mid21 = left + (right - left) / 2;\n    long long int mid22 = left\
    \ + (right - left) / 2;\n    long long int mid23 = left + (right - left) / 2;\n\
    \    long long int mid24 = left + (right - left) / 2;\n    long long int mid25\
    \ = left + (right - left) / 2;\n"]
stop_tokens:
- "\n}"

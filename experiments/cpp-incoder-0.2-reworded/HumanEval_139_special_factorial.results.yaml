language: cpp
name: HumanEval_139_special_factorial
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n        fact *= i;\n    }\n\
    \    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpil9aucx4.cpp: In function 'int main()':\n/tmp/tmpil9aucx4.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpil9aucx4.cpp:2:\n/tmp/tmpil9aucx4.cpp:21:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm7dugx5.cpp: In function 'int main()':\n/tmp/tmpwm7dugx5.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm7dugx5.cpp:2:\n/tmp/tmpwm7dugx5.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n        fact *= i;\n    }\n\
    \    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpil9aucx4.cpp: In function 'int main()':\n/tmp/tmpil9aucx4.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpil9aucx4.cpp:2:\n/tmp/tmpil9aucx4.cpp:21:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n        fact *= i;\n    }\n\
    \    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpil9aucx4.cpp: In function 'int main()':\n/tmp/tmpil9aucx4.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpil9aucx4.cpp:2:\n/tmp/tmpil9aucx4.cpp:21:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm7dugx5.cpp: In function 'int main()':\n/tmp/tmpwm7dugx5.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwm7dugx5.cpp:2:\n/tmp/tmpwm7dugx5.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long factorial\
    \ = 1;\n    long counter = 1;\n    while (counter <= n) {\n        factorial *=\
    \ counter;\n        counter++;\n    }\n    return factorial;\n}\nint main() {\n\
    \    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpur_gg7ky.cpp: In function 'int main()':\n/tmp/tmpur_gg7ky.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpur_gg7ky.cpp:2:\n/tmp/tmpur_gg7ky.cpp:22:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long temp = 1;\n    while (n > 1) {\n        fact *= n;\n        temp\
    \ *= n;\n        n--;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz_4nvsxv.cpp: In function 'int main()':\n/tmp/tmpz_4nvsxv.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz_4nvsxv.cpp:2:\n/tmp/tmpz_4nvsxv.cpp:23:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    if (n == 0)\n\
    \        return 1;\n    long res = special_factorial(n - 1);\n    return res *\
    \ n;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp44ndggne.cpp: In function 'int main()':\n/tmp/tmp44ndggne.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp44ndggne.cpp:2:\n/tmp/tmp44ndggne.cpp:19:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20o2u103.cpp: In function 'int main()':\n/tmp/tmp20o2u103.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp20o2u103.cpp:2:\n/tmp/tmp20o2u103.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''

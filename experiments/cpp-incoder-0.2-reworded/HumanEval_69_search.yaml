name: HumanEval_69_search
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a non-empty\
  \ vector of positive integers. Return the greatest integer that is greater than\
  \ \n// zero, and has a frequency greater than or equal to the value of the integer\
  \ itself. \n// The frequency of an integer is the number of times it appears in\
  \ the vector.\n// If no such a value exist, return -1.\n// Examples:\n// >>> search((std::vector<long>({(long)4,\
  \ (long)1, (long)2, (long)2, (long)3, (long)1})))\n// (2)\n// >>> search((std::vector<long>({(long)1,\
  \ (long)2, (long)2, (long)3, (long)3, (long)3, (long)4, (long)4, (long)4})))\n//\
  \ (3)\n// >>> search((std::vector<long>({(long)5, (long)5, (long)4, (long)4, (long)4})))\n\
  // (-1)\nlong search(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = search;\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)5, (long)5, (long)5, (long)1}))) == (1));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)1, (long)4, (long)1, (long)4, (long)4}))) == (4));\n    assert(candidate((std::vector<long>({(long)3,\
  \ (long)3}))) == (-1));\n    assert(candidate((std::vector<long>({(long)8, (long)8,\
  \ (long)8, (long)8, (long)8, (long)8, (long)8, (long)8}))) == (8));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)3, (long)3, (long)2, (long)2}))) == (2));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)7, (long)8, (long)8, (long)4, (long)8, (long)7, (long)3, (long)9, (long)6,\
  \ (long)5, (long)10, (long)4, (long)3, (long)6, (long)7, (long)1, (long)7, (long)4,\
  \ (long)10, (long)8, (long)1}))) == (1));\n    assert(candidate((std::vector<long>({(long)3,\
  \ (long)2, (long)8, (long)2}))) == (2));\n    assert(candidate((std::vector<long>({(long)6,\
  \ (long)7, (long)1, (long)8, (long)8, (long)10, (long)5, (long)8, (long)5, (long)3,\
  \ (long)10}))) == (1));\n    assert(candidate((std::vector<long>({(long)8, (long)8,\
  \ (long)3, (long)6, (long)5, (long)6, (long)4}))) == (-1));\n    assert(candidate((std::vector<long>({(long)6,\
  \ (long)9, (long)6, (long)7, (long)1, (long)4, (long)7, (long)1, (long)8, (long)8,\
  \ (long)9, (long)8, (long)10, (long)10, (long)8, (long)4, (long)10, (long)4, (long)10,\
  \ (long)1, (long)2, (long)9, (long)5, (long)7, (long)9}))) == (1));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)9, (long)10, (long)1, (long)3}))) == (1));\n    assert(candidate((std::vector<long>({(long)6,\
  \ (long)9, (long)7, (long)5, (long)8, (long)7, (long)5, (long)3, (long)7, (long)5,\
  \ (long)10, (long)10, (long)3, (long)6, (long)10, (long)2, (long)8, (long)6, (long)5,\
  \ (long)4, (long)9, (long)5, (long)3, (long)10}))) == (5));\n    assert(candidate((std::vector<long>({(long)1})))\
  \ == (1));\n    assert(candidate((std::vector<long>({(long)8, (long)8, (long)10,\
  \ (long)6, (long)4, (long)3, (long)5, (long)8, (long)2, (long)4, (long)2, (long)8,\
  \ (long)4, (long)6, (long)10, (long)4, (long)2, (long)1, (long)10, (long)2, (long)1,\
  \ (long)1, (long)5}))) == (4));\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)10, (long)4, (long)8, (long)2, (long)10, (long)5, (long)1, (long)2, (long)9,\
  \ (long)5, (long)5, (long)6, (long)3, (long)8, (long)6, (long)4, (long)10}))) ==\
  \ (2));\n    assert(candidate((std::vector<long>({(long)1, (long)6, (long)10, (long)1,\
  \ (long)6, (long)9, (long)10, (long)8, (long)6, (long)8, (long)7, (long)3}))) ==\
  \ (1));\n    assert(candidate((std::vector<long>({(long)9, (long)2, (long)4, (long)1,\
  \ (long)5, (long)1, (long)5, (long)2, (long)5, (long)7, (long)7, (long)7, (long)3,\
  \ (long)10, (long)1, (long)5, (long)4, (long)2, (long)8, (long)4, (long)1, (long)9,\
  \ (long)10, (long)7, (long)10, (long)2, (long)8, (long)10, (long)9, (long)4})))\
  \ == (4));\n    assert(candidate((std::vector<long>({(long)2, (long)6, (long)4,\
  \ (long)2, (long)8, (long)7, (long)5, (long)6, (long)4, (long)10, (long)4, (long)6,\
  \ (long)3, (long)7, (long)8, (long)8, (long)3, (long)1, (long)4, (long)2, (long)2,\
  \ (long)10, (long)7}))) == (4));\n    assert(candidate((std::vector<long>({(long)9,\
  \ (long)8, (long)6, (long)10, (long)2, (long)6, (long)10, (long)2, (long)7, (long)8,\
  \ (long)10, (long)3, (long)8, (long)2, (long)6, (long)2, (long)3, (long)1}))) ==\
  \ (2));\n    assert(candidate((std::vector<long>({(long)5, (long)5, (long)3, (long)9,\
  \ (long)5, (long)6, (long)3, (long)2, (long)8, (long)5, (long)6, (long)10, (long)10,\
  \ (long)6, (long)8, (long)4, (long)10, (long)7, (long)7, (long)10, (long)8}))) ==\
  \ (-1));\n    assert(candidate((std::vector<long>({(long)10}))) == (-1));\n    assert(candidate((std::vector<long>({(long)9,\
  \ (long)7, (long)7, (long)2, (long)4, (long)7, (long)2, (long)10, (long)9, (long)7,\
  \ (long)5, (long)7, (long)2}))) == (2));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)4, (long)10, (long)2, (long)1, (long)1, (long)10, (long)3, (long)6, (long)1,\
  \ (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)7, (long)9,\
  \ (long)9, (long)9, (long)3, (long)4, (long)1, (long)5, (long)9, (long)1, (long)2,\
  \ (long)1, (long)1, (long)10, (long)7, (long)5, (long)6, (long)7, (long)6, (long)7,\
  \ (long)7, (long)6}))) == (1));\n    assert(candidate((std::vector<long>({(long)3,\
  \ (long)10, (long)10, (long)9, (long)2}))) == (-1));\n}\n"
completions: ["    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n\
    \        freq += i;\n        if (freq > ans) {\n            ans = freq;\n    \
    \    }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n   \
    \ for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n       \
    \     ans = i;\n            break;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq += i;\n\
    \        if(freq > ans) {\n            ans = freq;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n \
    \       freq += i;\n        if (freq >= i) {\n            ans = i;\n         \
    \   break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ freq[100000];\n    for(long i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n\
    \    }\n    for(long i = 0; i < freq.length; i++) {\n        if(freq[i] >= ans)\
    \ {\n            ans = freq[i];\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n\
    \        if (freq >= i) {\n            ans = i;\n            break;\n        }\n\
    \    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n    for (long\
    \ i : lst) {\n        freq += i;\n        if (freq >= i) {\n            ans =\
    \ i;\n            break;\n        }\n    }\n    return ans;", "    // Your code\
    \ here\n    long ans = -1;\n    long freq[100000];\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        freq[lst[i]]++;\n    }\n    for (long i = 0; i < 100000; i++)\
    \ {\n        if (freq[i] >= lst.size()) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long max = 0;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (max < freq) max = freq;\n\
    \    }\n    return max > 0 ? max : -1;", "    long ans = -1;\n    long freq =\
    \ 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long maxVal = -1;\n    long maxFreq = -1;\n    long currFreq = 0;\n    for(long\
    \ i = 0; i < lst.size(); i++) {\n        if(currFreq < lst[i]) {\n           \
    \ currFreq = lst[i];\n            maxVal = i;\n            maxFreq = currFreq;\n\
    \        }\n    }\n    return maxVal;", "    long ans = -1;\n    long freq = 0;\n\
    \    for(long i : lst) {\n        freq += i;\n        if(freq >= i) {\n      \
    \      ans = i;\n            break;\n        }\n    }\n    return ans;", "   \
    \ long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq +=\
    \ i;\n        if (freq >= i) {\n            ans = i;\n            break;\n   \
    \     }\n    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > maxVal) {\n\
    \            maxVal = lst[i];\n            maxFreq = i;\n        }\n    }\n  \
    \  return maxFreq;", "    long maxVal = -1;\n    long maxFreq = -1;\n    for (long\
    \ i : lst) {\n        if (maxFreq < i) {\n            maxFreq = i;\n         \
    \   maxVal = i;\n        }\n    }\n    return maxVal;", "    long maxVal = -1;\n\
    \    long maxFreq = -1;\n    for (long i = 0; i < lst.size(); i++) {\n       \
    \ if (lst[i] > 0) {\n            if (maxFreq < lst[i]) {\n                maxFreq\
    \ = lst[i];\n                maxVal = i;\n            }\n        }\n    }\n  \
    \  return maxVal;", "    long ans = -1;\n    long freq = 0;\n    for (long i :\
    \ lst) {\n        freq += i;\n        if (freq > ans) {\n            ans = freq;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq\
    \ = -1;\n    for (long i = 0; i < lst.size(); i++) {\n        if (maxVal < lst[i])\
    \ {\n            maxVal = lst[i];\n            maxFreq = i;\n        }\n    }\n\
    \    return maxFreq;", "    long ans = -1;\n    long freq[10000];\n    for (long\
    \ i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long i = 1; i <\
    \ 10000; i++) {\n        if (freq[i] >= i) {\n            ans = i;\n         \
    \   break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >=\
    \ i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq = -1;\n    long max_freq = -1;\n \
    \   for (long i : lst) {\n        freq = std::count(lst.begin(), lst.end(), i);\n\
    \        if (freq > max_freq) {\n            max_freq = freq;\n            ans\
    \ = i;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq\
    \ = -1;\n    long currFreq = 0;\n    for(auto i : lst) {\n        if(currFreq\
    \ > maxFreq) {\n            maxFreq = currFreq;\n            maxVal = i;\n   \
    \     }\n        currFreq++;\n    }\n    return maxVal;", "    long ans = -1;\n\
    \    long freq[100000];\n    for (long i : lst) {\n        freq[i] = freq[i] +\
    \ 1;\n    }\n    for (long i = 1; i < 100000; i++) {\n        if (freq[i] >= i)\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long max = 0;\n    long freq = 0;\n    for (long i : lst) {\n        freq +=\
    \ i;\n        if (freq > max) {\n            max = freq;\n        }\n    }\n \
    \   return max;", "    long ans = -1;\n    long freq = 0;\n    for (long i : lst)\
    \ {\n        freq += i;\n        if (freq >= i) {\n            ans = i;\n    \
    \        freq -= i;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long freq[10000];\n    for (long i : lst) {\n        freq[i] = freq[i] +\
    \ 1;\n    }\n    for (long i = 0; i < 10000; i++) {\n        if (freq[i] >= lst[0])\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq[1000];\n    for(long i : lst) {\n        freq[i]\
    \ = freq[i] + 1;\n    }\n    for(long i : lst) {\n        if(freq[i] >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq > ans) {\n            ans = freq;\n        }\n    }\n\
    \    return ans;", "    long ans = -1;\n    long freq[100];\n    for (long i :\
    \ lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long i = 1; i < 100;\
    \ i++) {\n        if (freq[i] >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq[1000];\n\
    \    for (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long\
    \ i : lst) {\n        if (freq[i] > ans) {\n            ans = freq[i];\n     \
    \   }\n    }\n    return ans;", "    // Your code here\n    long ans = -1;\n \
    \   long freq[10000];\n    for (long i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n\
    \    }\n    for (long i = 0; i < 10000; i++) {\n        if (freq[i] >= lst.size())\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            freq -= i;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq[10000];\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        freq[lst[i]]++;\n    }\n    for (long i = 1; i < 10000; i++)\
    \ {\n        if (freq[i] >= freq[i - 1]) {\n            ans = i;\n           \
    \ break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq[100000];\n\
    \    for (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long\
    \ i = 0; i < 100000; i++) {\n        if (freq[i] > 0 && freq[i] >= lst[0]) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq[10000];\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        freq[lst[i]]++;\n    }\n    for (long i = 0; i < 10000; i++)\
    \ {\n        if (freq[i] >= lst.size()) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long freq[10000];\n    for (long i : lst) {\n        freq[i]\
    \ = freq[i] + 1;\n    }\n    for (long i = 0; i < 10000; i++) {\n        if (freq[i]\
    \ >= lst[0]) {\n            ans = i;\n            break;\n        }\n    }\n \
    \   return ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n    for (long\
    \ i : lst) {\n        if (i > maxVal) {\n            maxVal = i;\n           \
    \ maxFreq = lst[maxVal];\n        } else if (lst[i] >= maxFreq) {\n          \
    \  maxFreq = lst[i];\n        }\n    }\n    return maxVal;", "    long ans = -1;\n\
    \    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if\
    \ (freq > ans) {\n            ans = freq;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = std::count_if(lst.begin(), lst.end(), [&](long\
    \ x){return x>0;});\n    long max_val = std::max_element(lst.begin(), lst.end());\n\
    \    if (freq >= max_val) ans = max_val;\n    return ans;", "    long maxVal =\
    \ -1, maxFreq = 0;\n    for (long i : lst) {\n        if (maxVal < 0 || maxFreq\
    \ < i) {\n            maxVal = i;\n            maxFreq = i;\n        } else if\
    \ (maxFreq == i) {\n            maxFreq++;\n        }\n    }\n    return maxVal;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            freq -= i;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long maxVal = lst[0];\n    long maxFreq\
    \ = lst[0];\n    for (long i = 1; i < lst.size(); i++) {\n        if (lst[i] >\
    \ maxVal) {\n            maxVal = lst[i];\n            maxFreq = lst[i];\n   \
    \     } else if (lst[i] == maxVal) {\n            maxFreq++;\n        }\n    }\n\
    \    return maxVal > 0 ? maxVal : -1;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   long maxVal = -1;\n    long maxFreq = -1;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > maxVal) {\n            maxVal = lst[i];\n     \
    \       maxFreq = lst[i];\n        } else if (lst[i] == maxVal) {\n          \
    \  maxFreq++;\n        }\n    }\n    return maxVal;", "    long ans = -1;\n  \
    \  long freq[100000];\n    for (long i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n\
    \    }\n    for (long i = 0; i < 100001; i++) {\n        if (freq[i] >= lst.size())\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq[100];\n\
    \    for (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long\
    \ i = 0; i < 100; i++) {\n        if (freq[i] >= lst[0]) {\n            ans =\
    \ i;\n            break;\n        }\n    }\n    return ans;", "    long ans =\
    \ -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n    \
    \    if (freq >= i) {\n            ans = i;\n            break;\n        }\n \
    \   }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n    for (long\
    \ i : lst) {\n        freq += i;\n        if (freq >= i) {\n            ans =\
    \ i;\n            break;\n        }\n    }\n    return ans;", "    // Your code\
    \ here\n    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n   \
    \     freq += i;\n        if (freq >= i) {\n            ans = i;\n           \
    \ break;\n        }\n    }\n    return ans;", "    long maxVal = -1;\n    long\
    \ maxFreq = -1;\n    for (long i : lst) {\n        if (maxVal == -1 || maxFreq\
    \ < i) {\n            maxVal = i;\n            maxFreq = i;\n        } else if\
    \ (maxFreq == i) {\n            maxFreq++;\n        }\n    }\n    return maxVal;",
  "    long maxVal = -1, freq = 0;\n    for (long i : lst) {\n        freq = std::count(lst.begin(),\
    \ lst.end(), i);\n        if (freq > maxVal) {\n            maxVal = freq;\n \
    \       }\n    }\n    return maxVal;", "    long maxVal = -1;\n    long maxFreq\
    \ = -1;\n    long currFreq = 0;\n    for (long i : lst) {\n        currFreq++;\n\
    \        if (currFreq > maxFreq) {\n            maxFreq = currFreq;\n        \
    \    maxVal = i;\n        }\n    }\n    return maxVal;", "    long ans = -1;\n\
    \    long freq = 0;\n    for(long i : lst) {\n        freq += i;\n        if(freq\
    \ >= i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long maxVal = lst[0];\n    long freq = lst[0];\n    for (long i\
    \ : lst) {\n        if (freq >= i) {\n            freq--;\n            maxVal\
    \ = i;\n        }\n    }\n    return maxVal;", "    // Your code here\n    long\
    \ maxVal = -1;\n    long maxFreq = -1;\n    long currVal = 0;\n    long currFreq\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        currVal = lst[i];\n\
    \        currFreq = lst.count(currVal);\n        if (currFreq > maxFreq) {\n \
    \           maxFreq = currFreq;\n            maxVal = currVal;\n        } else\
    \ if (currFreq == maxFreq && currVal > maxVal) {\n            maxFreq = currFreq;\n\
    \            maxVal = currVal;\n        }\n    }\n    return maxVal;", "    long\
    \ ans = -1;\n    long freq[100000] = {0};\n    for (long i : lst) {\n        freq[i]++;\n\
    \    }\n    for (long i = 1; i < 100000; i++) {\n        if (freq[i] >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    // Your code here\n    long maxVal =\
    \ -1;\n    long maxFreq = -1;\n    for (long i = 0; i < lst.size(); i++) {\n \
    \       if (lst[i] > 0 && lst[i] >= maxVal) {\n            maxVal = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    return maxFreq;", "    long ans\
    \ = -1;\n    long freq[1000];\n    for (long i : lst) {\n        freq[i] = freq[i]\
    \ + 1;\n    }\n    for (long i = 1; i < 1000; i++) {\n        if (freq[i] >= i)\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq +=\
    \ i;\n        if(freq >= i) {\n            ans = i;\n            break;\n    \
    \    }\n    }\n    return ans;", "    long ans = -1;\n    long freq = std::accumulate(lst.begin(),\
    \ lst.end(), 0);\n    for (long i : lst) {\n        if (freq >= i) {\n       \
    \     ans = i;\n            freq -= i;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long freq[100000];\n    for (long i : lst) {\n       \
    \ freq[i] = freq[i] + 1;\n    }\n    for (long i = 1; i < 100000; i++) {\n   \
    \     if (freq[i] >= i) {\n            ans = i;\n            break;\n        }\n\
    \    }\n    return ans;", "    long ans = -1;\n    long freq[1000];\n    for (long\
    \ i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long i = 1; i <\
    \ 1000; i++) {\n        if (freq[i] >= i) {\n            ans = i;\n          \
    \  break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            freq -= i;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            freq -= i;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    long max = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq\
    \ > max) {\n            max = freq;\n            ans = i;\n        }\n    }\n\
    \    return ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n    for (long\
    \ i : lst) {\n        if (maxFreq < i) {\n            maxFreq = i;\n         \
    \   maxVal = i;\n        } else if (maxFreq == i) {\n            maxVal = i;\n\
    \        }\n    }\n    return maxVal;", "    // Your code here\n    long ans =\
    \ -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n    \
    \    if (freq >= i) {\n            ans = i;\n            break;\n        }\n \
    \   }\n    return ans;", "    long ans = -1;\n    long freq[10000];\n    for (long\
    \ i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long i = 0; i <\
    \ 10000; i++) {\n        if (freq[i] >= lst[0]) {\n            ans = i;\n    \
    \        break;\n        }\n    }\n    return ans;", "    long ans = -1;\n   \
    \ long freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq\
    \ >= i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long ans = -1;\n    long freq = 0;\n    for(long\
    \ i : lst) {\n        freq++;\n        if(freq > i) {\n            freq = i;\n\
    \            ans = i;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long freq[10000];\n    for (long i : lst) {\n        freq[i] = freq[i] +\
    \ 1;\n    }\n    for (long i = 0; i < 10000; i++) {\n        if (freq[i] > 0 &&\
    \ freq[i] >= lst[0]) {\n            ans = i;\n            break;\n        }\n\
    \    }\n    return ans;", "    long ans = -1;\n    long freq[10000];\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        if (freq[lst[i]] >= lst[i]) {\n\
    \            ans = lst[i];\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = -1;\n    long max = -1;\n    for (long i :\
    \ lst) {\n        freq = freq + i;\n        if (freq >= 0) {\n            max\
    \ = i;\n            freq = freq - i;\n        }\n    }\n    if (freq >= 0) {\n\
    \        ans = max;\n    }\n    return ans;", "    long ans = -1;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq +=\
    \ i;\n        if(freq >= i) {\n            ans = i;\n            break;\n    \
    \    }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n   \
    \ for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n       \
    \     ans = i;\n            break;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n\
    \        if (freq >= i) {\n            ans = i;\n            break;\n        }\n\
    \    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n    for (long\
    \ i : lst) {\n        freq += i;\n        if (freq >= i) {\n            ans =\
    \ i;\n            break;\n        }\n    }\n    return ans;", "    long ans =\
    \ -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n    \
    \    if (freq > ans) {\n            ans = freq;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n  \
    \      freq += i;\n        if(freq >= i) {\n            ans = i;\n           \
    \ break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long maxVal = -1;\n    long maxFreq = -1;\n    for (long val : lst) {\n   \
    \     if (val > 0) {\n            long freq = lst.count(val);\n            if\
    \ (freq >= maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n    }\n    return maxVal;", "    long maxVal\
    \ = -1, freq = -1, val = -1;\n    for (long i : lst) {\n        if (val == -1)\
    \ {\n            val = i;\n            freq = 1;\n        } else if (val == i)\
    \ {\n            freq++;\n        } else {\n            if (freq > freq) {\n \
    \               freq = freq;\n                maxVal = val;\n            }\n \
    \           val = i;\n            freq = 1;\n        }\n    }\n    return maxVal;",
  "    long ans = -1;\n    long freq = -1;\n    for(long i : lst) {\n        freq\
    \ = freq + i;\n        if(freq >= 0) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            freq -= i;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq[100000];\n\
    \    for (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long\
    \ i : lst) {\n        if (freq[i] >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq\
    \ = -1;\n    long currVal = lst[0];\n    long currFreq = 1;\n    for (long i =\
    \ 1; i < lst.size(); i++) {\n        if (lst[i] > currVal) {\n            currVal\
    \ = lst[i];\n            currFreq = 1;\n        } else {\n            currFreq++;\n\
    \        }\n        if (currFreq > maxFreq) {\n            maxFreq = currFreq;\n\
    \            maxVal = currVal;\n        }\n    }\n    return maxVal;", "    long\
    \ maxVal = -1;\n    long maxFreq = -1;\n    for (long i : lst) {\n        if (maxFreq\
    \ < i) {\n            maxFreq = i;\n            maxVal = i;\n        } else if\
    \ (maxFreq == i) {\n            maxVal = i;\n        }\n    }\n    return maxVal;",
  "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq +=\
    \ i;\n        if(freq > ans) {\n            ans = freq;\n        }\n    }\n  \
    \  return ans;", "    long ans = -1;\n    long freq = std::accumulate(lst.begin(),\
    \ lst.end(), 0);\n    long max_val = std::max_element(lst.begin(), lst.end())\
    \ - lst.begin();\n    long max_freq = std::count_if(lst.begin(), lst.end(), [&](long\
    \ x) { return x > 0; });\n    if (freq >= max_freq) {\n        ans = max_val;\n\
    \    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n    for (long\
    \ i : lst) {\n        freq += i;\n        if (freq > ans) {\n            ans =\
    \ freq;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   long maxVal = lst[0];\n    long maxFreq = lst[0];\n    for (long i : lst)\
    \ {\n        if (i > maxVal) {\n            maxVal = i;\n            maxFreq =\
    \ i;\n        } else if (maxFreq == i) {\n            maxFreq++;\n        }\n\
    \    }\n    return maxVal;", "    long ans = -1;\n    long freq = 0;\n    for\
    \ (long i : lst) {\n        freq += i;\n        if (freq > ans) {\n          \
    \  ans = freq;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >=\
    \ i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n  \
    \      freq += i;\n        if(freq >= i) {\n            ans = i;\n           \
    \ break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long maxVal = -1;\n    long maxFreq = -1;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > 0) {\n            long freq = std::count(lst.begin(),\
    \ lst.end(), lst[i]);\n            if (freq > maxFreq) {\n                maxFreq\
    \ = freq;\n                maxVal = lst[i];\n            }\n        }\n    }\n\
    \    return maxVal;", "    long ans = -1;\n    long freq = -1;\n    for (long\
    \ i : lst) {\n        freq = freq + i;\n        if (freq >= i) {\n           \
    \ ans = i;\n            break;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n\
    \        if (freq >= i) {\n            ans = i;\n            break;\n        }\n\
    \    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n   \
    \ for (long i : lst) {\n        if (i > maxVal) {\n            maxVal = i;\n \
    \           maxFreq = i;\n        } else if (i > maxFreq && i == maxVal) {\n \
    \           maxFreq = i;\n        }\n    }\n    return maxVal;", "    long ans\
    \ = -1;\n    long freq = 0;\n    for(auto i : lst) {\n        freq += i;\n   \
    \     if(freq >= i) {\n            ans = i;\n            break;\n        }\n \
    \   }\n    return ans;", "    long ans = -1;\n    long freq[10000];\n    for(long\
    \ i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n    }\n    for(long\
    \ i = 0; i < 10000; i++) {\n        if(freq[i] >= lst.size()) {\n            ans\
    \ = i;\n            break;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq += i;\n   \
    \     if(freq > ans) {\n            ans = freq;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n \
    \       freq += i;\n        if (freq >= i) {\n            ans = i;\n         \
    \   break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >=\
    \ i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq[10000];\n    for (long i : lst) {\n\
    \        freq[i] = freq[i] + 1;\n    }\n    for (long i : lst) {\n        if (freq[i]\
    \ >= i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq = 0;\n    long max = 0;\n    for (long\
    \ i : lst) {\n        freq += i;\n        if (freq >= max) {\n            max\
    \ = freq;\n            ans = i;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n\
    \        if (freq >= i) {\n            ans = i;\n            break;\n        }\n\
    \    }\n    return ans;", "    // Your code here\n    long ans = -1;\n    long\
    \ freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >=\
    \ i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq[100] = {0};\n    for (long i : lst)\
    \ {\n        freq[i]++;\n    }\n    for (long i : lst) {\n        if (freq[i]\
    \ > ans) {\n            ans = freq[i];\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq > ans) {\n            ans = freq;\n        }\n    }\n\
    \    return ans;", "    long maxVal = lst[0];\n    long freq = lst[0];\n    for\
    \ (long i : lst) {\n        if (freq >= i) {\n            freq = i;\n        \
    \    maxVal = i;\n        }\n    }\n    return maxVal;", "    long ans = -1;\n\
    \    long freq[100000];\n    for (long i : lst) {\n        freq[i] = freq[i] +\
    \ 1;\n    }\n    for (long i = 1; i < 100000; i++) {\n        if (freq[i] >= i)\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq[1000];\n    for (long i : lst) {\n        freq[i]\
    \ = freq[i] + 1;\n    }\n    for (long i : lst) {\n        if (freq[i] >= i) {\n\
    \            freq[i] = freq[i] - 1;\n            ans = i;\n        }\n    }\n\
    \    return ans;", "    long max = 0;\n    long freq = 0;\n    for (long i : lst)\
    \ {\n        freq += i;\n        if (freq > max) {\n            max = freq;\n\
    \        }\n    }\n    return max;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   // Your code here\n    long ans = -1;\n    long freq[10000];\n    for (long\
    \ i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long i : lst) {\n\
    \        if (freq[i] >= i) {\n            ans = i;\n            break;\n     \
    \   }\n    }\n    return ans;", "    long ans = -1;\n    long freq[10000];\n \
    \   for (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long\
    \ i : lst) {\n        if (freq[i] > ans) {\n            ans = freq[i];\n     \
    \   }\n    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n\
    \    for (long i : lst) {\n        if (maxVal < 0 || maxVal < i) {\n         \
    \   maxVal = i;\n            maxFreq = 1;\n        } else if (maxFreq < i) {\n\
    \            maxFreq = i;\n        }\n    }\n    return maxVal;", "    long ans\
    \ = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n  \
    \      if (freq >= i) {\n            ans = i;\n            freq -= i;\n      \
    \  }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n    for\
    \ (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n           \
    \ ans = i;\n            break;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    long freq = -1;\n    long maxFreq = -1;\n    long maxVal = -1;\n\
    \    for (long i : lst) {\n        if (freq == -1) {\n            freq = i;\n\
    \            maxFreq = i;\n            maxVal = i;\n        } else {\n       \
    \     if (freq > i) {\n                freq = i;\n                maxFreq = i;\n\
    \                maxVal = i;\n            } else if (freq == i) {\n          \
    \      maxFreq = i;\n                maxVal = i;\n            }\n        }\n \
    \   }\n    if (maxFreq >= 0) {\n        ans = maxFreq;\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq > ans) {\n            ans = freq;\n        }\n    }\n\
    \    return ans;", "    long ans = -1;\n    long freq = 0;\n    for(long i : lst)\
    \ {\n        freq += i;\n        if(freq >= i) {\n            ans = i;\n     \
    \       break;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ freq = 0;\n    long maxFreq = 0;\n    for(long i : lst) {\n        freq++;\n\
    \        if(freq > maxFreq) {\n            maxFreq = freq;\n            ans =\
    \ i;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq =\
    \ 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq\
    \ = -1;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] > maxVal)\
    \ {\n            maxVal = lst[i];\n            maxFreq = i;\n        }\n    }\n\
    \    return maxFreq;", "    long ans = -1;\n    long freq = 0;\n    for(long i\
    \ : lst) {\n        freq += i;\n        if(freq >= i) {\n            ans = i;\n\
    \            break;\n        }\n    }\n    return ans;", "    long maxVal = -1;\n\
    \    long maxFreq = -1;\n    for (long i = 0; i < lst.size(); i++) {\n       \
    \ if (lst[i] > maxVal) {\n            maxVal = lst[i];\n            maxFreq =\
    \ lst[i];\n        } else if (lst[i] == maxVal) {\n            maxFreq += lst[i];\n\
    \        }\n    }\n    return maxFreq > 0 ? maxVal : -1;", "    long ans = -1;\n\
    \    long freq[10000];\n    for (long i : lst) {\n        freq[i] = freq[i] +\
    \ 1;\n    }\n    for (long i = 1; i < 10000; i++) {\n        if (freq[i] >= freq[i\
    \ - 1]) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long freq = -1;\n    for(long i : lst) {\n \
    \       if(freq == -1) {\n            freq = i;\n            ans = i;\n      \
    \  }\n        else if(i >= freq) {\n            freq = i;\n            ans = i;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq[100000];\n\
    \    for(long i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n    }\n\
    \    for(long i = 0; i < 100000; i++) {\n        if(freq[i] >= lst.size()) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq +=\
    \ i;\n        if(freq >= i) {\n            ans = i;\n            break;\n    \
    \    }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n   \
    \ for (long i : lst) {\n        freq += i;\n        if (freq > ans) {\n      \
    \      ans = freq;\n        }\n    }\n    return ans;", "    long maxVal = -1;\n\
    \    long maxFreq = -1;\n    long currVal = 0;\n    long currFreq = 0;\n    for\
    \ (long i : lst) {\n        currVal = i;\n        currFreq = lst.count(i);\n \
    \       if (currFreq > maxFreq) {\n            maxVal = currVal;\n           \
    \ maxFreq = currFreq;\n        } else if (currFreq == maxFreq) {\n           \
    \ if (currVal > maxVal) {\n                maxVal = currVal;\n            }\n\
    \        }\n    }\n    return maxVal;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq > ans) {\n   \
    \         ans = freq;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long freq[1000];\n    for(long i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n\
    \    }\n    for(long i = 1; i < 1000; i++) {\n        if(freq[i] > freq[i - 1])\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long maxVal = -1, maxFreq = -1;\n  \
    \  for (long i : lst) {\n        if (maxFreq < i) {\n            maxFreq = i;\n\
    \            maxVal = i;\n        } else if (maxFreq == i) {\n            maxVal\
    \ = i;\n        }\n    }\n    return maxVal;", "    long max = 0;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq++;\n        if (i > max) {\n  \
    \          max = i;\n        }\n    }\n    if (freq > 0) {\n        for (long\
    \ i : lst) {\n            if (i == max) {\n                freq--;\n         \
    \   }\n        }\n    }\n    return max;", "    long ans = -1;\n    long freq[10000];\n\
    \    for (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long\
    \ i = 1; i < 10000; i++) {\n        if (freq[i] >= i) {\n            ans = i;\n\
    \            break;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if\
    \ (freq > ans) {\n            ans = freq;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq[1000];\n\
    \    for (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long\
    \ i = 0; i < 1000; i++) {\n        if (freq[i] >= lst[0]) {\n            ans =\
    \ i;\n            break;\n        }\n    }\n    return ans;", "    long ans =\
    \ -1;\n    long freq[10000];\n    for (long i : lst) {\n        freq[i] = freq[i]\
    \ + 1;\n    }\n    for (long i : lst) {\n        if (freq[i] >= i) {\n       \
    \     ans = i;\n            break;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n\
    \        if (freq >= i) {\n            ans = i;\n            freq -= i;\n    \
    \    }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n   \
    \ for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n       \
    \     ans = i;\n            break;\n        }\n    }\n    return ans;", "    long\
    \ maxVal = -1;\n    long maxFreq = -1;\n    long currFreq = 0;\n    long currVal\
    \ = 0;\n    for (auto i : lst) {\n        currFreq = i;\n        currVal = i;\n\
    \        if (currFreq > maxFreq) {\n            maxFreq = currFreq;\n        \
    \    maxVal = currVal;\n        } else if (currFreq == maxFreq) {\n          \
    \  if (currVal > maxVal) {\n                maxFreq = currFreq;\n            \
    \    maxVal = currVal;\n            }\n        }\n    }\n    return maxVal;",
  "    long maxVal = -1, maxFreq = -1;\n    for (long val : lst) {\n        if (val\
    \ > maxVal) {\n            maxVal = val;\n            maxFreq = std::count(lst.begin(),\
    \ lst.end(), val);\n        }\n    }\n    return maxFreq > maxVal ? maxVal : -1;",
  "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq +=\
    \ i;\n        if(freq > ans) {\n            ans = freq;\n        }\n    }\n  \
    \  return ans;", "    long ans = -1;\n    long freq[100000];\n    long max = 0;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n      \
    \  if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n            ans\
    \ = lst[i];\n        }\n    }\n    return ans;", "    // Your code here\n    long\
    \ ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n\
    \    }\n    if (freq >= 0) {\n        for (long i : lst) {\n            if (freq\
    \ >= i) {\n                ans = i;\n                break;\n            }\n \
    \       }\n    }\n    return ans;", "    long ans = -1;\n    long freq = -1;\n\
    \    for (long i : lst) {\n        freq = std::count(lst.begin(), lst.end(), i);\n\
    \        if (freq >= i) {\n            ans = i;\n            break;\n        }\n\
    \    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n    for (long\
    \ i : lst) {\n        freq += i;\n        if (freq > ans) {\n            ans =\
    \ freq;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long freq\
    \ = 0;\n    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long maxVal = -1;\n    long maxFreq = -1;\n    long curVal = lst[0];\n    long\
    \ curFreq = lst[0];\n    for (long i = 1; i < lst.size(); i++) {\n        if (lst[i]\
    \ > curVal) {\n            curVal = lst[i];\n            curFreq = lst[i];\n \
    \       }\n        else if (lst[i] == curVal) {\n            curFreq++;\n    \
    \    }\n        else if (lst[i] > curVal && lst[i] <= curVal && curFreq >= curVal)\
    \ {\n            maxVal = curVal;\n            maxFreq = curFreq;\n        }\n\
    \    }\n    return maxVal;", "    long ans = -1;\n    long freq = 0;\n    for\
    \ (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n           \
    \ ans = i;\n            freq -= i;\n        }\n    }\n    return ans;", "    long\
    \ maxVal = -1, maxFreq = -1;\n    for (long i : lst) {\n        if (maxVal ==\
    \ -1 || maxVal < i) {\n            maxVal = i;\n            maxFreq = std::count_if(lst.begin(),\
    \ lst.end(), [&](long j){return j == i;});\n        }\n    }\n    return maxVal;",
  "    // Your code here\n    long ans = -1;\n    long freq = 0;\n    for(long i :\
    \ lst) {\n        freq++;\n        if(freq >= i) {\n            ans = i;\n   \
    \         break;\n        }\n    }\n    return ans;", "    long ans = -1;\n  \
    \  long freq = 0;\n    for(long i : lst) {\n        freq += i;\n        if(freq\
    \ >= i) {\n            ans = i;\n            break;\n        }\n    }\n    return\
    \ ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n    for (long i = 0;\
    \ i < lst.size(); i++) {\n        if (lst[i] > maxVal) {\n            maxVal =\
    \ lst[i];\n            maxFreq = lst[i];\n        } else if (lst[i] == maxVal)\
    \ {\n            maxFreq++;\n        }\n    }\n    return maxFreq > maxVal ? maxVal\
    \ : -1;", "    long maxVal = -1, maxFreq = -1;\n    for (long i : lst) {\n   \
    \     if (maxFreq < i) {\n            maxFreq = i;\n            maxVal = i;\n\
    \        } else if (maxFreq == i) {\n            maxVal = i;\n        }\n    }\n\
    \    return maxVal;", "    long maxVal = -1;\n    long maxFreq = -1;\n    for\
    \ (long i : lst) {\n        if (maxFreq < i && maxVal < i) {\n            maxVal\
    \ = i;\n            maxFreq = i;\n        }\n    }\n    return maxVal;", "   \
    \ long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq +=\
    \ i;\n        if (freq > ans) {\n            ans = freq;\n        }\n    }\n \
    \   return ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (maxVal < 0 || maxVal > lst[i]) {\n\
    \            maxVal = lst[i];\n            maxFreq = i;\n        }\n    }\n  \
    \  return maxFreq;", "    long ans = -1;\n    long freq = 0;\n    for (long i\
    \ : lst) {\n        freq += i;\n        if (freq >= i) {\n            ans = i;\n\
    \            break;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if\
    \ (freq > ans) {\n            ans = freq;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for(long i : lst) {\n        freq +=\
    \ i;\n        if(freq >= i) {\n            ans = i;\n            break;\n    \
    \    }\n    }\n    return ans;", "    long maxVal = -1;\n    long maxFreq = -1;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > maxVal) {\n\
    \            maxVal = lst[i];\n            maxFreq = lst[i];\n        } else if\
    \ (lst[i] == maxVal) {\n            maxFreq += lst[i];\n        }\n    }\n   \
    \ return maxFreq > 0 ? maxVal : -1;", "    // Your code here\n    long ans = -1;\n\
    \    long freq[1000];\n    for (long i : lst) {\n        freq[i] = freq[i] + 1;\n\
    \    }\n    for (long i = 1; i < 1000; i++) {\n        if (freq[i] >= i) {\n \
    \           ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            break;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long freq = -1;\n    long maxFreq = -1;\n    for(long\
    \ i : lst) {\n        if(freq == -1) {\n            freq = i;\n            maxFreq\
    \ = i;\n        }\n        else {\n            if(freq == i) {\n             \
    \   freq++;\n            }\n            else {\n                freq = i;\n  \
    \              maxFreq = i;\n            }\n        }\n    }\n    if(maxFreq >=\
    \ 0) {\n        ans = maxFreq;\n    }\n    return ans;", "    long ans = -1;\n\
    \    long freq = 0;\n    for (long i : lst) {\n        freq += i;\n        if\
    \ (freq >= i) {\n            ans = i;\n            break;\n        }\n    }\n\
    \    return ans;", "    long ans = -1;\n    long freq = 0;\n    for(long i : lst)\
    \ {\n        freq += i;\n        if(freq > ans) {\n            ans = freq;\n \
    \       }\n    }\n    return ans;", "    long ans = -1;\n    long freq = 0;\n\
    \    for (long i : lst) {\n        freq += i;\n        if (freq >= i) {\n    \
    \        ans = i;\n            freq -= i;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq > ans) {\n            ans = freq;\n        }\n    }\n\
    \    return ans;", "    long maxVal = -1, maxFreq = -1;\n    for (long i : lst)\
    \ {\n        if (maxFreq < i) maxFreq = i;\n        if (maxVal < i) maxVal = i;\n\
    \    }\n    return maxVal;", "    long ans = -1;\n    long freq[1000];\n    for\
    \ (long i : lst) {\n        freq[i] = freq[i] + 1;\n    }\n    for (long i = 0;\
    \ i < 1000; i++) {\n        if (freq[i] >= lst[0]) {\n            ans = i;\n \
    \           break;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    long freq[10000];\n    for (long i : lst) {\n        freq[i] = freq[i] +\
    \ 1;\n    }\n    for (long i = 0; i < 10000; i++) {\n        if (freq[i] >= lst[0])\
    \ {\n            ans = i;\n            break;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    long freq = 0;\n    for (long i : lst) {\n        freq\
    \ += i;\n        if (freq >= i) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    long freq = std::accumulate(lst.begin(),\
    \ lst.end(), 0);\n    long max_freq = std::max_element(lst.begin(), lst.end())\
    \ - lst.begin();\n    long max_val = *std::max_element(lst.begin(), lst.end());\n\
    \    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(lst.begin(),\
    \ lst.end()));\n    long max_idx = std::distance(std::begin(lst), std::max_element(",
  "    // Your code here\n    long ans = -1;\n    long freq = 0;\n    for (long i\
    \ : lst) {\n        freq++;\n        if (i > 0)\n            freq += i;\n    }\n\
    \    if (freq > 0) {\n        ans = std::max(freq, ans);\n    }\n    return ans;"]
stop_tokens:
- "\n}"

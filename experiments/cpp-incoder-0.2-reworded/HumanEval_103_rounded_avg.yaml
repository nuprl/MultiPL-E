name: HumanEval_103_rounded_avg
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
  \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0)\
  \ {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
  \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool\
  \ operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are given two\
  \ positive integers n and m, and your task is to compute the\n// average of the\
  \ integers from n through m (including n and m). \n// Round the answer to the nearest\
  \ integer and convert that to binary.\n// If n is greater than m, return -1.\n//\
  \ Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>> rounded_avg((7), (5))\n\
  // -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n// >>> rounded_avg((20), (33))\n\
  // \"0b11010\"\nUnion_std_string_long rounded_avg(long n, long m) {\n"
tests: "}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
  \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
  \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
  );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
  \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
  );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
  \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
  \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
completions: ["    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n    long\
    \ long int sum = 0;\n    long long int count = 0;\n    long long int sum1 = 0;\n\
    \    long long int count1 = 0;\n    long long int sum2 = 0;\n    long long int\
    \ count2 = 0;\n    long long int sum3 = 0;\n    long long int count3 = 0;\n  \
    \  long long int sum4 = 0;\n    long long int count4 = 0;\n    long long int sum5\
    \ = 0;\n    long long int count5 = 0;\n    long long int sum6 = 0;\n    long long\
    \ int count6 = 0;\n    long long int sum7 = 0;\n    long long int count7 = 0;\n\
    \    long long int sum8 = 0;\n    long long int count8 = 0;\n    long long int\
    \ sum9 = 0;\n    long long int count9 = 0;\n    long long int sum10 = 0;\n   \
    \ long long int count10 = 0;\n    long long int sum11 = 0;\n    long long int\
    \ count11 = 0;\n    long long int sum12 = 0;\n    long long int count12 = 0;\n\
    \    long long int sum13 = 0;\n    long long int count13 = 0;\n    long long int\
    \ sum14 = 0;\n    long long int count14 = 0;\n    long long int sum15 = 0;\n \
    \   long long int count15 = 0;\n    long long int sum16 = 0;\n    long long int\
    \ count16 = 0;\n    long long int sum17 = 0;\n    long long int count17 = 0;\n\
    \    long long int sum18 = 0;\n    long long int count18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int count19 = 0;\n    long long int sum20 = 0;\n \
    \   long long int count20 = 0;\n    long long int sum21 = 0;\n    long long int\
    \ count21 = 0;\n    long long int sum22 = 0;\n    long long int count22 = 0;\n\
    \    long long int sum23 = 0;\n    long long int count23 = 0;\n    long long int\
    \ sum24 = 0;\n    long long int count24 = 0;\n    long long int sum25 = 0;\n \
    \   long long int count25 = 0;\n    long long int sum26 = 0;\n    long long int\
    \ count26 = 0;\n    long long int sum27 = 0;\n    long long int count27 = 0;\n\
    \    long long int sum28 = 0;\n    long long int count28 = 0;\n    long long int\
    \ sum29 = 0;\n    long long int count29 = 0;\n    long long int sum30 = 0;\n \
    \   long long int count30 = 0;\n    long long int sum31 = 0;\n", "    Union_std_string_long\
    \ u;\n    long sum = 0;\n    long count = 0;\n    long mid = (n + m) / 2;\n  \
    \  long mid1 = mid - 1;\n    long mid2 = mid + 1;\n    long mid3 = mid * 2;\n\
    \    long mid4 = mid * 3;\n    long mid5 = mid * 4;\n    long mid6 = mid * 5;\n\
    \    long mid7 = mid * 6;\n    long mid8 = mid * 7;\n    long mid9 = mid * 8;\n\
    \    long mid10 = mid * 9;\n    long mid11 = mid * 10;\n    long mid12 = mid *\
    \ 11;\n    long mid13 = mid * 12;\n    long mid14 = mid * 13;\n    long mid15\
    \ = mid * 14;\n    long mid16 = mid * 15;\n    long mid17 = mid * 16;\n    long\
    \ mid18 = mid * 17;\n    long mid19 = mid * 18;\n    long mid20 = mid * 19;\n\
    \    long mid21 = mid * 20;\n    long mid22 = mid * 21;\n    long mid23 = mid\
    \ * 22;\n    long mid24 = mid * 23;\n    long mid25 = mid * 24;\n    long mid26\
    \ = mid * 25;\n    long mid27 = mid * 26;\n    long mid28 = mid * 27;\n    long\
    \ mid29 = mid * 28;\n    long mid30 = mid * 29;\n    long mid31 = mid * 30;\n\
    \    long mid32 = mid * 31;\n    long mid33 = mid * 32;\n    long mid34 = mid\
    \ * 33;\n    long mid35 = mid * 34;\n    long mid36 = mid * 35;\n    long mid37\
    \ = mid * 36;\n    long mid38 = mid * 37;\n    long mid39 = mid * 38;\n    long\
    \ mid40 = mid * 39;\n    long mid41 = mid * 40;\n    long mid42 = mid * 41;\n\
    \    long mid43 = mid * 42;\n    long mid44 = mid * 43;\n    long mid45 = mid\
    \ * 44;\n    long mid46 = mid * 45;\n    long mid47 = mid * 46;\n    long mid48\
    \ = mid * 47;\n    long mid49 = mid * 48;\n    long mid50 = mid * 49;\n", "  \
    \  Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 = (u.f1 +\
    \ u.f1)/2;\n    u.f1 = u.f1 << 1;\n    return u;", "    Union_std_string_long\
    \ u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 =\
    \ (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    ", "    Union_std_string_long u;\n\
    \    u.f1 = n;\n    u.f1 = m;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    ", "    Union_std_string_long u;\n    u.f1\
    \ = n;\n    u.f1 = m;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.", "   \
    \ Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    ", "    Union_std_string_long\
    \ u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.", "    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 =\
    \ u.f1 + u.f1;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 /\
    \ 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1\
    \ = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f", "    Union_std_string_long u;\n    u.f1 = n;\n\
    \    u.f1 = m;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 *\
    \ 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1\
    \ = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.", "    Union_std_string_long\
    \ u;\n    u.f1 = n;\n    u.f1 = m;\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    while(u.f1 != u.f0) {\n        sum += u.f1;\n        ++count;\n\
    \        u.f1 = u.f0 % 10;\n        u.f0 = u.f0 / 10;\n    }\n    long long int\
    \ avg = sum / count;\n    std::string binary = \"\";\n    while(avg != 0) {\n\
    \        binary = std::to_string(avg % 2) + binary;\n        avg /= 2;\n    }\n\
    \    if(count > 1) {\n        binary = std::to_string(count) + binary;\n    }\n\
    \    return Union_std_string_long(binary);", "    Union_std_string_long u;\n \
    \   u.f1 = n;\n    u.f1 = m;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.",
  "    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.", "    Union_std_string_long u;\n    u.f1 = n;\n  \
    \  u.f1 = m;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.", "    Union_std_string_long\
    \ u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 + 1;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 + 1;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 + 1;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 + 1;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 + 1;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 + 1;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 =\
    \ u.", "    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n    u.f1 =\
    \ (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1\
    \ = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1)\
    \ >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    ",
  "    Union_std_string_long u;\n    long sum = 0;\n    long count = 0;\n    long\
    \ mid = m / 2;\n    long left = n;\n    long right = m;\n    long mid1 = mid /\
    \ 2;\n    long mid2 = mid - mid1;\n    long mid3 = mid - mid2;\n    long mid4\
    \ = mid - mid3;\n    long mid5 = mid - mid4;\n    long mid6 = mid - mid5;\n  \
    \  long mid7 = mid - mid6;\n    long mid8 = mid - mid7;\n    long mid9 = mid -\
    \ mid8;\n    long mid10 = mid - mid9;\n    long mid11 = mid - mid10;\n    long\
    \ mid12 = mid - mid11;\n    long mid13 = mid - mid12;\n    long mid14 = mid -\
    \ mid13;\n    long mid15 = mid - mid14;\n    long mid16 = mid - mid15;\n    long\
    \ mid17 = mid - mid16;\n    long mid18 = mid - mid17;\n    long mid19 = mid -\
    \ mid18;\n    long mid20 = mid - mid19;\n    long mid21 = mid - mid20;\n    long\
    \ mid22 = mid - mid21;\n    long mid23 = mid - mid22;\n    long mid24 = mid -\
    \ mid23;\n    long mid25 = mid - mid24;\n    long mid26 = mid - mid25;\n    long\
    \ mid27 = mid - mid26;\n    long mid28 = mid - mid27;\n    long mid29 = mid -\
    \ mid28;\n    long mid30 = mid - mid29;\n    long mid31 = mid - mid30;\n    long\
    \ mid32 = mid - mid31;\n    long mid33 = mid - mid32;\n    long mid34 = mid -\
    \ mid33;\n    long mid35 = mid - mid34;\n    long mid36 = mid - mid35;\n    long\
    \ mid37 = mid - mid36;\n    long mid38 = mid - mid37;\n    long mid39 = mid -\
    \ mid38;\n    long mid40 = mid - mid39;\n    long mid41 = mid - mid40;\n    long\
    \ mid42 = mid - mid41;\n    long mid43 = mid - mid42;\n    long mid44 = mid -\
    \ mid43;\n    long mid45 = mid - mid", "    Union_std_string_long u;\n    u.f1\
    \ = n;\n    u.f1 = m;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    return\
    \ u;", "    Union_std_string_long u;\n    if (n >= m) {\n        return u;\n \
    \   }\n    long mid = (n + m) / 2;\n    long left = rounded_avg(n, mid);\n   \
    \ long right = rounded_avg(mid, m+1);\n    u.f1 = left + right;\n    u.f0 = std::to_string(u.f1);\n\
    \    return u;", "    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n\
    \    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 =\
    \ u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n\
    \    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 =\
    \ u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u."]
stop_tokens:
- "\n}"

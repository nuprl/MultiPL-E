name: HumanEval_20_find_closest_elements
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a supplied vector of\
  \ numbers (of length at least two) select and return two that are the closest to\
  \ each\n// other and return them in order (smaller number, larger number).\n// >>>\
  \ find_closest_elements((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
  \ (float)4.0, (float)5.0, (float)2.2})))\n// (std::make_tuple(2.0, 2.2))\n// >>>\
  \ find_closest_elements((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
  \ (float)4.0, (float)5.0, (float)2.0})))\n// (std::make_tuple(2.0, 2.0))\nstd::tuple<float,\
  \ float> find_closest_elements(std::vector<float> numbers) {\n"
tests: "}\nint main() {\n    auto candidate = find_closest_elements;\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)2.0, (float)3.9, (float)4.0, (float)5.0, (float)2.2}))) == (std::make_tuple(3.9,\
  \ 4.0)));\n    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)5.9,\
  \ (float)4.0, (float)5.0}))) == (std::make_tuple(5.0, 5.9)));\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)2.0, (float)3.0, (float)4.0, (float)5.0, (float)2.2}))) == (std::make_tuple(2.0,\
  \ 2.2)));\n    assert(candidate((std::vector<float>({(float)1.0, (float)2.0, (float)3.0,\
  \ (float)4.0, (float)5.0, (float)2.0}))) == (std::make_tuple(2.0, 2.0)));\n    assert(candidate((std::vector<float>({(float)1.1,\
  \ (float)2.2, (float)3.1, (float)4.1, (float)5.1}))) == (std::make_tuple(2.2, 3.1)));\n\
  }\n"
completions: []
stop_tokens:
- "\n}"

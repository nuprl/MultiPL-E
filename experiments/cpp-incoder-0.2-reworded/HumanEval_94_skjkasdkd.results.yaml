language: cpp
name: HumanEval_94_skjkasdkd
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long primes[] = {2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997}; // primes less than n\n    long primes_size = sizeof(primes) / sizeof(primes[0]);\n\
    \    long is_prime[primes_size];\n    for (long i = 0; i < primes_size; i++) {\n\
    \        is_prime[i] = 0;\n    }\n    for (long i = 0; i < n; i++) {\n       \
    \ for (long j = 0; j < primes_size; j++) {\n            if (lst[i] == primes[j])\
    \ {\n                is_prime[j] = 1; // if prime then mark it as 1\n        \
    \        break;\n            }\n        }\n    }\n    for (long i = 0; i < primes_size;\
    \ i++) {\n        if (is_prime[i]) {\n            ans += primes[i];\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmphr38v9e6: /tmp/tmphr38v9e6.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    for (long i : lst) {\n        if (i % 2 == 0)\
    \ {\n            max = i;\n        }\n    }\n    long sum = 0;\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n        }\n  \
    \  }\n    return sum;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpmi3npd26: /tmp/tmpmi3npd26.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    ans += i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 11 == 0) {\n            ans += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            ans += i;\n        }\n        if (i % 17\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 23 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 31 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 43 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 73 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            ans += i;\n        }\n        if (i % 83\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 97 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 109 == 0) {\n            ans += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            ans += i;\n        }\n        if (i % 127 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 131 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 137 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 141 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 147 == 0) {\n            ans += i;\n        }\n        if (i % 151 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 157 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 161 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 167 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 171 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 177 == 0) {\n            ans += i;\n        }\n        if (i % 181 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 187 == 0) {\n            an\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1jupsjdu.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1jupsjdu.cpp:143:13: error: \u2018an\u2019 was not declared\
    \ in this scope; did you mean \u2018ans\u2019?\n  143 |             an\n     \
    \ |             ^~\n      |             ans\n/tmp/tmp1jupsjdu.cpp:145:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  145\
    \ | int main() {\n      |            ^\n/tmp/tmp1jupsjdu.cpp:156:1: error: expected\
    \ \u2018}\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmp1jupsjdu.cpp:21:24:\
    \ note: to match this \u2018{\u2019\n   21 |     for (long i : lst) {\n      |\
    \                        ^\n/tmp/tmp1jupsjdu.cpp:156:1: error: expected \u2018\
    }\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmp1jupsjdu.cpp:18:39: note:\
    \ to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n\
    \      |                                       ^\n/tmp/tmp1jupsjdu.cpp:156:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  156 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i : lst) {\n        if (i == 0) {\n            continue;\n        }\n      \
    \  if (i % 2 == 0) {\n            ans += i;\n            continue;\n        }\n\
    \        max = i;\n    }\n    for (long i : lst) {\n        if (i == 0) {\n  \
    \          continue;\n        }\n        if (i % 2 == 0) {\n            ans +=\
    \ i;\n            continue;\n        }\n        if (i % max == 0) {\n        \
    \    cur = i;\n        }\n    }\n    if (cur > 0) {\n        ans += cur;\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpkw01_4mn: /tmp/tmpkw01_4mn.cpp:51: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long n = lst.size();\n    long m =\
    \ lst.front();\n    long b = 2;\n    long c = 1;\n    long d = 1;\n    long k\
    \ = 0;\n    long i = 1;\n    long j = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s\
    \ = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n \
    \   long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b\
    \ = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n \
    \   long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long l\
    \ = 1;\n    long m = 1;\n    long n = 1;\n    long p = 1;\n    long q = 1;\n \
    \   long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v\
    \ = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n \
    \   long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e\
    \ = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n \
    \   long j = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s\
    \ = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n \
    \   long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b\
    \ = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = \n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbr7xudu7.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpbr7xudu7.cpp:29:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   29 |     long m = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmpbr7xudu7.cpp:30:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   30 |     long n = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmpbr7xudu7.cpp:43:10: error: redeclaration\
    \ of \u2018long int b\u2019\n   43 |     long b = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:22:10:\
    \ note: \u2018long int b\u2019 previously declared here\n   22 |     long b =\
    \ 2;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:44:10: error: redeclaration of\
    \ \u2018long int c\u2019\n   44 |     long c = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:23:10:\
    \ note: \u2018long int c\u2019 previously declared here\n   23 |     long c =\
    \ 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:45:10: error: redeclaration of\
    \ \u2018long int d\u2019\n   45 |     long d = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:24:10:\
    \ note: \u2018long int d\u2019 previously declared here\n   24 |     long d =\
    \ 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:50:10: error: redeclaration of\
    \ \u2018long int i\u2019\n   50 |     long i = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:26:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   26 |     long i =\
    \ 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:51:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   51 |     long j = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:27:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   27 |     long j =\
    \ 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:52:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   52 |     long l = 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:28:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   28 |     long l =\
    \ 1;\n      |          ^\n/tmp/tmpbr7xudu7.cpp:53:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   53 |     long m = 1;\n     "
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjayr2j3k.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjayr2j3k.cpp:50:10: error: redeclaration of \u2018long\
    \ int i\u2019\n   50 |     long i = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:24:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   24 |     long i =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:51:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   51 |     long j = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:25:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   25 |     long j =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:52:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   52 |     long k = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:26:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   26 |     long k =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:53:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   53 |     long l = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:27:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   27 |     long l =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:54:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   54 |     long m = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:28:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   28 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:55:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   55 |     long n = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:29:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   29 |     long n =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:56:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   56 |     long o = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:30:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   30 |     long o =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:57:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   57 |     long p = 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:31:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   31 |     long p =\
    \ 1;\n      |          ^\n/tmp/tmpjayr2j3k.cpp:58:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   58 |     long q = 1;\n      |          ^\n/tmp/"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long temp = 0;\n    long count = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        prime = 1;\n        while (temp != 0)\
    \ {\n            prime = prime * temp % 10;\n            temp = temp / 10;\n \
    \       }\n        if (prime > max) {\n            max = prime;\n        }\n \
    \       sum += prime % 10;\n    }\n    ans = sum;\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpe6v6y_bm: /tmp/tmpe6v6y_bm.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long max_prime_digit\
    \ = 0;\n    long prime_digit = 0;\n    long prime_digit_count = 0;\n    long prime_digit_sum\
    \ = 0;\n    long prime_digit_sum2 = 0;\n    long prime_digit_sum3 = 0;\n    long\
    \ prime_digit_sum4 = 0;\n    long prime_digit_sum5 = 0;\n    long prime_digit_sum6\
    \ = 0;\n    long prime_digit_sum7 = 0;\n    long prime_digit_sum8 = 0;\n    long\
    \ prime_digit_sum9 = 0;\n    long prime_digit_sum10 = 0;\n    long prime_digit_sum11\
    \ = 0;\n    long prime_digit_sum12 = 0;\n    long prime_digit_sum13 = 0;\n   \
    \ long prime_digit_sum14 = 0;\n    long prime_digit_sum15 = 0;\n    long prime_digit_sum16\
    \ = 0;\n    long prime_digit_sum17 = 0;\n    long prime_digit_sum18 = 0;\n   \
    \ long prime_digit_sum19 = 0;\n    long prime_digit_sum20 = 0;\n    long prime_digit_sum21\
    \ = 0;\n    long prime_digit_sum22 = 0;\n    long prime_digit_sum23 = 0;\n   \
    \ long prime_digit_sum24 = 0;\n    long prime_digit_sum25 = 0;\n    long prime_digit_sum26\
    \ = 0;\n    long prime_digit_sum27 = 0;\n    long prime_digit_sum28 = 0;\n   \
    \ long prime_digit_sum29 = 0;\n    long prime_digit_sum30 = 0;\n    long prime_digit_sum31\
    \ = 0;\n    long prime_digit_sum32 = 0;\n    long prime_digit_sum33 = 0;\n   \
    \ long prime_digit_sum34 = 0;\n    long prime_digit_sum35 = 0;\n    long prime_digit_sum36\
    \ = 0;\n    long prime_digit_sum37 = 0;\n    long prime_digit_sum38 = 0;\n   \
    \ long prime_digit_sum39 = 0;\n    long prime_digit_sum40 = 0;\n    long prime_digit_sum41\
    \ = 0;\n    long prime_digit_sum42 = 0;\n    long prime_digit_sum43 = 0;\n   \
    \ long prime_digit_sum44 = 0;\n    long prime_digit_sum45 = 0;\n    long prime_digit_sum46\
    \ = 0;\n    long prime_digit_sum47 = 0;\n    long prime_digit_sum48 = 0;\n   \
    \ long prime_digit_sum49 = 0;\n    long prime_digit_sum50 = 0;\n    long prime_digit_sum51\
    \ = 0;\n    long prime_digit_sum52 = 0;\n    long prime_digit_sum53 = 0;\n   \
    \ long prime_digit_sum54\n}\nint main() {\n    auto candidate = skjkasdkd;\n \
    \   assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp5751xan.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpp5751xan.cpp:78:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpp5751xan.cpp:78:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            prime = i;\n            break;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (i % prime == 0) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = 2;\n    long q = m;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx280qvr.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmppx280qvr.cpp:45:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   45 |     long m = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmppx280qvr.cpp:46:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   46 |     long n = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmppx280qvr.cpp:48:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   48 |     long p = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:22:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   22 |     long p =\
    \ 2;\n      |          ^\n/tmp/tmppx280qvr.cpp:49:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   49 |     long q = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:23:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   23 |     long q =\
    \ m;\n      |          ^\n/tmp/tmppx280qvr.cpp:50:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   50 |     long r = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:24:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   24 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:51:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   51 |     long s = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:25:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   25 |     long s =\
    \ 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:52:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   52 |     long t = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:26:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   26 |     long t =\
    \ 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:53:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   53 |     long u = 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:27:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   27 |     long u =\
    \ 1;\n      |          ^\n/tmp/tmppx280qvr.cpp:54:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   54 |     long v = 1;\n     "
  stdout: ''
  timestamp: 1660138662
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[]\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997}; // primes less than n\n    long long sum = 0;\n    long long\
    \ cnt = 0;\n    long long cnt2 = 0;\n    long long cnt3 = 0;\n    long long cnt4\
    \ = 0;\n    long long cnt5 = 0;\n    long long cnt6 = 0;\n    long long cnt7 =\
    \ 0;\n    long long cnt8 = 0;\n    long long cnt9 = 0;\n    long long cnt10 =\
    \ 0;\n    long long cnt11 = 0;\n    long long cnt12 = 0;\n    long long cnt13\
    \ = 0;\n    long long cnt14 = 0;\n    long long cnt15 = 0;\n    long long cnt16\
    \ = 0;\n    long long cnt17 = 0;\n    long long cnt18 = 0;\n    long long cnt19\
    \ = 0;\n    long long cnt20 = 0;\n    long long cnt21 = 0;\n    long long cnt22\
    \ = 0;\n    long long cnt23 = 0;\n    \n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpj60f_jbn: /tmp/tmpj60f_jbn.cpp:50: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i > max) {\n            max = i;\n        }\n    }\n    for (long i\
    \ : lst) {\n        if (i == max) {\n            ans += i;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpjv9gt5dv: /tmp/tmpjv9gt5dv.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long prime = 1;\n    long sum = 0;\n    long temp = 0;\n    long temp2 =\
    \ 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n   \
    \ long temp80 = 0;\n    long temp81 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5ws1m8v1: /tmp/tmp5ws1m8v1.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cnt = 0;\n    long sum\
    \ = 0;\n    long cur = 0;\n    for (long i : lst) {\n        if (i == 0) {\n \
    \           cnt++;\n        }\n        if (i % 2 == 0) {\n            cnt++;\n\
    \        }\n        if (cnt > max) {\n            max = cnt;\n            cur\
    \ = i;\n        }\n        cnt = 0;\n    }\n    ans = cur;\n    for (long i :\
    \ lst) {\n        if (i == 0) {\n            cnt++;\n        }\n        if (i\
    \ % 2 == 0) {\n            cnt++;\n        }\n        if (cnt > max) {\n     \
    \       max = cnt;\n            cur = i;\n        }\n        cnt = 0;\n    }\n\
    \    ans += cur;\n    for (long i : lst) {\n        if (i == 0) {\n          \
    \  cnt++;\n        }\n        if (i % 2 == 0) {\n            cnt++;\n        }\n\
    \        if (cnt > max) {\n            max = cnt;\n            cur = i;\n    \
    \    }\n        cnt = 0;\n    }\n    ans += cur;\n    for (long i : lst) {\n \
    \       if (i == 0) {\n            cnt++;\n        }\n        if (i % 2 == 0)\
    \ {\n            cnt++;\n        }\n        if (cnt > max) {\n            max\
    \ = cnt;\n            cur = i;\n        }\n        cnt = 0;\n    }\n    ans +=\
    \ cur;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \        }\n        if (i % 2 == 0) {\n            cnt++;\n        }\n       \
    \ if (cnt > max) {\n            max = cnt;\n            cur = i;\n        }\n\
    \        cnt = 0;\n    }\n    ans += cur;\n    for (long i : lst) {\n        if\
    \ (i == 0) {\n            cnt++;\n        }\n        if (i % 2 == 0) {\n     \
    \       cnt++;\n        }\n        if (cnt > max) {\n            max = cnt;\n\
    \            cur = i;\n        }\n        cnt = 0;\n    }\n    ans += cur;\n \
    \   for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n        }\n\
    \        if (i % 2 == 0) {\n            cnt++;\n        }\n        if (cnt > max)\
    \ {\n            max = cnt;\n            cur = i;\n        }\n        cnt = 0;\n\
    \    }\n    ans += cur;\n    for (long i : lst) {\n        if (i == 0) {\n   \
    \         cnt++;\n        }\n        if (i % 2 == 0) {\n            cnt++;\n \
    \       }\n        if (cnt > max) {\n            max = cnt;\n            cur =\
    \ i;\n        }\n        cnt = 0;\n    }\n    ans += cur;\n    for (long i : lst)\
    \ {\n        if (i == 0) {\n            cnt++;\n        }\n        if (i % 2 ==\
    \ 0) {\n            cnt++;\n        }\n        if (cnt > \n}\nint main() {\n \
    \   auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3gp86rt1.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp3gp86rt1.cpp:144:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  144 | }\n      | ^\n/tmp/tmp3gp86rt1.cpp:143:18:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  143 |         if\
    \ (cnt >\n      |            ~     ^\n      |                  )\n  144 | }\n\
    \      | ~                 \n/tmp/tmp3gp86rt1.cpp:144:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  144 | }\n      | ^\n/tmp/tmp3gp86rt1.cpp:145:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  145 | int main() {\n      |            ^\n/tmp/tmp3gp86rt1.cpp:156:1: error:\
    \ expected \u2018}\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmp3gp86rt1.cpp:18:39:\
    \ note: to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long>\
    \ lst) {\n      |                                       ^\n/tmp/tmp3gp86rt1.cpp:156:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  156 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i : lst) {\n        cur = i;\n        cnt = 0;\n       \
    \ while (cur != 0) {\n            if (cur % 2 == 0) {\n                cur = cur\
    \ / 2;\n                cnt++;\n            } else {\n                cur = cur\
    \ * 3 + 1;\n                cnt++;\n            }\n        }\n        if (cnt\
    \ > max) {\n            max = cnt;\n            ans = i;\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660138667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long max = 0;\n    long temp = 0;\n\
    \    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5\
    \ = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long\
    \ temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n\
    \    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16\
    \ = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n   \
    \ long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23\
    \ = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n   \
    \ long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30\
    \ = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n   \
    \ long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37\
    \ = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n   \
    \ long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44\
    \ = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n   \
    \ long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51\
    \ = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n   \
    \ long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58\
    \ = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n   \
    \ long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65\
    \ = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n   \
    \ long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72\
    \ = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n   \
    \ long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79\
    \ = 0;\n    long temp80 = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n   \
    \ long temp83 = 0;\n    long temp84 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp49h35__j: /tmp/tmp49h35__j.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            if (i > max) {\n        \
    \        ans += i - max;\n                max = i;\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp164hplkw: /tmp/tmp164hplkw.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 1;\n    long\
    \ m = m;\n    long n = n;\n    long sum = 0;\n    long temp = 0;\n    long temp2\
    \ = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7_kjb7t.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpl7_kjb7t.cpp:26:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   26 |     long m = m;\n      |          ^\n/tmp/tmpl7_kjb7t.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmpl7_kjb7t.cpp:27:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   27 |     long n = n;\n      |          ^\n/tmp/tmpl7_kjb7t.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmpl7_kjb7t.cpp:106:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  106 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660138661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    for (long i = 0; i < lst.size(); i++) {\n    \
    \    if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n         \
    \   cnt++;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n  \
    \      if (lst[i] > max) {\n            cnt2++;\n        }\n    }\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] > max) {\n            cur\
    \ = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n \
    \       if (lst[i] > max) {\n            ans += cur;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpcn8cxuwt: /tmp/tmpcn8cxuwt.cpp:53: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += (lst[i] - max);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5a7yaoc1: /tmp/tmp5a7yaoc1.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            sum += i;\n            if (sum > max) {\n\
    \                max = sum;\n            }\n        }\n    }\n    return max;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpm7l_0prx: /tmp/tmpm7l_0prx.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[]\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997}; // prime numbers\n    long prime = primes[0];\n    for (long\
    \ i = 0; i < n; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < n;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > max) {\n    \
    \        max = lst[i];\n        }\n    }\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (long i = 0; i < n; i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    for (long i = 0; i < n; i++) {\n        if\
    \ (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for (long\
    \ i = 0; i < n\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplyvtvu5q.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmplyvtvu5q.cpp:58:27: error: expected \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   58 |     for (long i = 0; i < n\n      |           \
    \                ^\n      |                           ;\n   59 | }\n      | ~\
    \                          \n/tmp/tmplyvtvu5q.cpp:59:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   59 | }\n      | ^\n/tmp/tmplyvtvu5q.cpp:58:27:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   58 |     for (long\
    \ i = 0; i < n\n      |         ~                 ^\n      |                 \
    \          )\n   59 | }\n      | ~                          \n/tmp/tmplyvtvu5q.cpp:59:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   59 | }\n \
    \     | ^\n/tmp/tmplyvtvu5q.cpp:59:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0, sum = 0;\n    long n = lst.size();\n  \
    \  long m = lst.front();\n    long i = 2;\n    while (i < n) {\n        if (lst.at(i)\
    \ % 2 == 0) {\n            sum += lst.at(i);\n            ans = max(ans, sum);\n\
    \        }\n        else {\n            sum += lst.at(i);\n            ans = max(ans,\
    \ sum);\n        }\n        i += 2;\n    }\n    prime = sum;\n    sum = 0;\n \
    \   while (prime != 1) {\n        sum += prime;\n        prime = sum;\n    }\n\
    \    ans = ans - sum;\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpstl76m10.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpstl76m10.cpp:26:19: error: \u2018max\u2019 was not declared\
    \ in this scope; did you mean \u2018std::max\u2019?\n   26 |             ans =\
    \ max(ans, sum);\n      |                   ^~~\n      |                   std::max\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpstl76m10.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note: \u2018\
    std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n/tmp/tmpstl76m10.cpp:30:19: error: \u2018max\u2019\
    \ was not declared in this scope; did you mean \u2018std::max\u2019?\n   30 |\
    \             ans = max(ans, sum);\n      |                   ^~~\n      |   \
    \                std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpstl76m10.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0, maxPrimeNum\
    \ = 0, maxPrimeNumNum = 0;\n    long primeNum = 0, primeNumNum = 0, primeNumNumNum\
    \ = 0;\n    long primeNumNumNumNum = 0;\n    long primeNumNumNumNumNum = 0;\n\
    \    long primeNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNum =\
    \ 0;\n    long primeNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNum = 0;\n    long primeNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n    long primeNumNum\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx8zl9rzk.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpx8zl9rzk.cpp:28:10: error: redeclaration of \u2018long\
    \ int primeNumNumNumNumNumNumNumNumNum\u2019\n   28 |     long primeNumNumNumNumNumNumNumNumNum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpx8zl9rzk.cpp:27:10:\
    \ note: \u2018long int primeNumNumNumNumNumNumNumNumNum\u2019 previously declared\
    \ here\n   27 |     long primeNumNumNumNumNumNumNumNumNum = 0;\n      |      \
    \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpx8zl9rzk.cpp:30:10: error: redeclaration\
    \ of \u2018long int primeNumNumNumNumNumNumNumNumNumNum\u2019\n   30 |     long\
    \ primeNumNumNumNumNumNumNumNumNumNum = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpx8zl9rzk.cpp:29:10: note: \u2018long int primeNumNumNumNumNumNumNumNumNumNum\u2019\
    \ previously declared here\n   29 |     long primeNumNumNumNumNumNumNumNumNumNum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpx8zl9rzk.cpp:31:10:\
    \ error: redeclaration of \u2018long int primeNumNumNumNumNumNumNumNumNumNum\u2019\
    \n   31 |     long primeNumNumNumNumNumNumNumNumNumNum = 0;\n      |         \
    \ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpx8zl9rzk.cpp:29:10: note: \u2018\
    long int primeNumNumNumNumNumNumNumNumNumNum\u2019 previously declared here\n\
    \   29 |     long primeNumNumNumNumNumNumNumNumNumNum = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpx8zl9rzk.cpp:33:10: error: redeclaration of \u2018long int primeNumNumNumNumNumNumNumNumNumNumNum\u2019\
    \n   33 |     long primeNumNumNumNumNumNumNumNumNumNumNum = 0;\n      |      \
    \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpx8zl9rzk.cpp:32:10: note:\
    \ \u2018long int primeNumNumNumNumNumNumNumNumNumNumNum\u2019 previously declared\
    \ here\n   32 |     long primeNumNumNumNumNumNumNumNumNumNumNum = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpx8zl9rzk.cpp:34:10:\
    \ error: redeclaration of \u2018long int primeNumNumNumNumNumNumNumNumNumNumNum\u2019\
    \n   34 |     long primeNumNumNumNumNumNumNumNumNumNumNum = 0;\n      |      \
    \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/t"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long max2 = 0;\n    long max3\
    \ = 0;\n    long max4 = 0;\n    long max5 = 0;\n    long max6 = 0;\n    long max7\
    \ = 0;\n    long max8 = 0;\n    long max9 = 0;\n    long max10 = 0;\n    long\
    \ max11 = 0;\n    long max12 = 0;\n    long max13 = 0;\n    long max14 = 0;\n\
    \    long max15 = 0;\n    long max16 = 0;\n    long max17 = 0;\n    long max18\
    \ = 0;\n    long max19 = 0;\n    long max20 = 0;\n    long max21 = 0;\n    long\
    \ max22 = 0;\n    long max23 = 0;\n    long max24 = 0;\n    long max25 = 0;\n\
    \    long max26 = 0;\n    long max27 = 0;\n    long max28 = 0;\n    long max29\
    \ = 0;\n    long max30 = 0;\n    long max31 = 0;\n    long max32 = 0;\n    long\
    \ max33 = 0;\n    long max34 = 0;\n    long max35 = 0;\n    long max36 = 0;\n\
    \    long max37 = 0;\n    long max38 = 0;\n    long max39 = 0;\n    long max40\
    \ = 0;\n    long max41 = 0;\n    long max42 = 0;\n    long max43 = 0;\n    long\
    \ max44 = 0;\n    long max45 = 0;\n    long max46 = 0;\n    long max47 = 0;\n\
    \    long max48 = 0;\n    long max49 = 0;\n    long max50 = 0;\n    long max51\
    \ = 0;\n    long max52 = 0;\n    long max53 = 0;\n    long max54 = 0;\n    long\
    \ max55 = 0;\n    long max56 = 0;\n    long max57 = 0;\n    long max58 = 0;\n\
    \    long max59 = 0;\n    long max60 = 0;\n    long max61 = 0;\n    long max62\
    \ = 0;\n    long max63 = 0;\n    long max64 = 0;\n    long max65 = 0;\n    long\
    \ max66 = 0;\n    long max67 = 0;\n    long max68 = 0;\n    long max69 = 0;\n\
    \    long max70 = 0;\n    long max71 = 0;\n    long max72 = 0;\n    long max73\
    \ = 0;\n    long max74 = 0;\n    long max75 = 0;\n    long max76 = 0;\n    long\
    \ max77 = 0;\n    long max78 = 0;\n    long max79 = 0;\n    long max80 = 0;\n\
    \    long max81 = 0;\n    long max82 = 0;\n    long max83 = 0;\n    long max84\
    \ = 0;\n    long max85 = 0;\n    long \n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfc0g7_ki.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfc0g7_ki.cpp:106:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpfc0g7_ki.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 0;\n    for\
    \ (long i = 0; i < n; i++) {\n        long prime = 0;\n        for (long j = 0;\
    \ j < i; j++) {\n            if (lst[j] % i == 0) {\n                prime = 1;\n\
    \                break;\n            }\n        }\n        if (prime == 0) {\n\
    \            ans += lst[i];\n        }\n        if (lst[i] > max_prime) {\n  \
    \          max_prime = lst[i];\n        }\n    }\n    return ans + max_prime;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp6kbhi2e8: /tmp/tmp6kbhi2e8.cpp:40: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    ans += i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 11 == 0) {\n            ans += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            ans += i;\n        }\n        if (i % 17\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 23 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 31 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 43 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 73 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            ans += i;\n        }\n        if (i % 83\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 97 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 109 == 0) {\n            ans += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            ans += i;\n        }\n        if (i % 127 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 131 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 137 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 141 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 147 == 0) {\n            ans += i;\n        }\n        if (i % 151 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 157 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 161 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 167 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 171 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 177 == 0) {\n            ans += i;\n        }\n        if (i % 181 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 187 == 0) {\n            an\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1jupsjdu.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1jupsjdu.cpp:143:13: error: \u2018an\u2019 was not declared\
    \ in this scope; did you mean \u2018ans\u2019?\n  143 |             an\n     \
    \ |             ^~\n      |             ans\n/tmp/tmp1jupsjdu.cpp:145:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  145\
    \ | int main() {\n      |            ^\n/tmp/tmp1jupsjdu.cpp:156:1: error: expected\
    \ \u2018}\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmp1jupsjdu.cpp:21:24:\
    \ note: to match this \u2018{\u2019\n   21 |     for (long i : lst) {\n      |\
    \                        ^\n/tmp/tmp1jupsjdu.cpp:156:1: error: expected \u2018\
    }\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmp1jupsjdu.cpp:18:39: note:\
    \ to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n\
    \      |                                       ^\n/tmp/tmp1jupsjdu.cpp:156:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  156 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[]\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997}; // primes less than 1000000007\n    long long sum = 0;\n   \
    \ long long prime = 0;\n    long long num = 0;\n    long long sum2 = 0;\n    long\
    \ long prime2 = 0;\n    long long num2 = 0;\n    long long sum3 = 0;\n    long\
    \ long prime3 = 0;\n    long long num3 = 0;\n    long long sum4 = 0;\n    long\
    \ long prime4 = 0;\n    long long num4 = 0;\n    long long sum5 = 0;\n    long\
    \ long prime5 = 0;\n    long long num5 = 0;\n    long long sum6 = 0;\n    long\
    \ long prime6 = 0;\n    long long num6 = 0;\n    long long sum7 = 0;\n    long\
    \ long prime7 = 0;\n    long long num7 = 0;\n    long long sum8 = 0;\n    long\
    \ long prime8 = 0;\n    long long num8 = 0;\n    long long sum9 = 0;\n    \n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpbjy_6ie4: /tmp/tmpbjy_6ie4.cpp:51: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    long prime = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        prime = lst[i];\n        if (prime >\
    \ max) {\n            max = prime;\n        }\n    }\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        sum += lst[i] % max;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp7p2skhlx: /tmp/tmp7p2skhlx.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cnt = 0;\n    long cur\
    \ = 0;\n    long cnt2 = 0;\n    for (long i : lst) {\n        cnt++;\n       \
    \ cur += i;\n        if (cur > max) {\n            max = cur;\n        }\n   \
    \ }\n    for (long i : lst) {\n        cnt2++;\n        cur -= i;\n        if\
    \ (cur < max) {\n            ans += (cur % 10);\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp110465o4: /tmp/tmp110465o4.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138664
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ primes[1000];\n    long primeCount = 0;\n    long primeSum = 0;\n    long primeSum2\
    \ = 0;\n    long primeSum3 = 0;\n    long primeSum4 = 0;\n    long primeSum5 =\
    \ 0;\n    long primeSum6 = 0;\n    long primeSum7 = 0;\n    long primeSum8 = 0;\n\
    \    long primeSum9 = 0;\n    long primeSum10 = 0;\n    long primeSum11 = 0;\n\
    \    long primeSum12 = 0;\n    long primeSum13 = 0;\n    long primeSum14 = 0;\n\
    \    long primeSum15 = 0;\n    long primeSum16 = 0;\n    long primeSum17 = 0;\n\
    \    long primeSum18 = 0;\n    long primeSum19 = 0;\n    long primeSum20 = 0;\n\
    \    long primeSum21 = 0;\n    long primeSum22 = 0;\n    long primeSum23 = 0;\n\
    \    long primeSum24 = 0;\n    long primeSum25 = 0;\n    long primeSum26 = 0;\n\
    \    long primeSum27 = 0;\n    long primeSum28 = 0;\n    long primeSum29 = 0;\n\
    \    long primeSum30 = 0;\n    long primeSum31 = 0;\n    long primeSum32 = 0;\n\
    \    long primeSum33 = 0;\n    long primeSum34 = 0;\n    long primeSum35 = 0;\n\
    \    long primeSum36 = 0;\n    long primeSum37 = 0;\n    long primeSum38 = 0;\n\
    \    long primeSum39 = 0;\n    long primeSum40 = 0;\n    long primeSum41 = 0;\n\
    \    long primeSum42 = 0;\n    long primeSum43 = 0;\n    long primeSum44 = 0;\n\
    \    long primeSum45 = 0;\n    long primeSum46 = 0;\n    long primeSum47 = 0;\n\
    \    long primeSum48 = 0;\n    long primeSum49 = 0;\n    long primeSum50 = 0;\n\
    \    long primeSum51 = 0;\n    long primeSum52 = 0;\n    long primeSum53 = 0;\n\
    \    long primeSum54 = 0;\n    long primeSum55 = 0;\n    long primeSum56 = 0;\n\
    \    long primeSum57 = 0;\n    long primeSum58 = 0;\n    long primeSum59 = 0;\n\
    \    long primeSum60 = 0;\n    long primeSum61 = 0;\n    long primeSum62 = 0;\n\
    \    long primeSum63 = 0;\n    long primeSum64 = 0;\n    long primeSum65 = 0;\n\
    \    long primeSum66 = 0;\n    long primeSum67 = 0;\n    long primeSum68 = 0;\n\
    \    long primeSum69 = 0;\n    long \n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkloklfp_.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpkloklfp_.cpp:93:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   93 | }\n      | ^\n/tmp/tmpkloklfp_.cpp:93:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n        if (cur > max)\
    \ {\n            max = cur;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        cur = lst[i];\n        if (cur > max) {\n            ans +=\
    \ cur % max;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpt03oayys: /tmp/tmpt03oayys.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += lst[i] % max;\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpaqs5feo4: /tmp/tmpaqs5feo4.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 0;\n    long\
    \ max_prime_digit = 0;\n    for (long i = 0; i < n; i++) {\n        long prime\
    \ = lst[i];\n        if (prime > max_prime) {\n            max_prime = prime;\n\
    \            max_prime_digit = i;\n        }\n    }\n    for (long i = 0; i <\
    \ n; i++) {\n        long prime = lst[i];\n        if (prime == max_prime) {\n\
    \            long digit = max_prime_digit;\n            while (digit < i) {\n\
    \                digit *= 10;\n            }\n            long sum = 0;\n    \
    \        while (digit > 0) {\n                sum += digit % 10;\n           \
    \     digit /= 10;\n            }\n            ans += sum;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmptvky8kl7: /tmp/tmptvky8kl7.cpp:49: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,
    (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==
    (25)'' failed.

    '
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long\
    \ temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n\
    \    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10\
    \ = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n   \
    \ long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n    \n}\nint main() {\n  \
    \  auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmph5hkwfqh: /tmp/tmph5hkwfqh.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long prime = 0;\n  \
    \  long sum = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2 = 0;\n\
    \    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6\
    \ = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long\
    \ temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n\
    \    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpniqqux9h: /tmp/tmpniqqux9h.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0, sum = 0;\n    long n = lst.size();\n  \
    \  long m = lst.front();\n    long i = 2;\n    long j = 1;\n    long k = 0;\n\
    \    long l = m;\n    long m = lst.front();\n    long n = lst.size();\n    long\
    \ p = 1;\n    long q = n;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy6b_zime.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpy6b_zime.cpp:26:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   26 |     long m = lst.front();\n      |          ^\n/tmp/tmpy6b_zime.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmpy6b_zime.cpp:27:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   27 |     long n = lst.size();\n      |       \
    \   ^\n/tmp/tmpy6b_zime.cpp:20:10: note: \u2018long int n\u2019 previously declared\
    \ here\n   20 |     long n = lst.size();\n      |          ^\n/tmp/tmpy6b_zime.cpp:47:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   47 |     long i = 1;\n  \
    \    |          ^\n/tmp/tmpy6b_zime.cpp:22:10: note: \u2018long int i\u2019 previously\
    \ declared here\n   22 |     long i = 2;\n      |          ^\n/tmp/tmpy6b_zime.cpp:48:10:\
    \ error: redeclaration of \u2018long int j\u2019\n   48 |     long j = 1;\n  \
    \    |          ^\n/tmp/tmpy6b_zime.cpp:23:10: note: \u2018long int j\u2019 previously\
    \ declared here\n   23 |     long j = 1;\n      |          ^\n/tmp/tmpy6b_zime.cpp:49:10:\
    \ error: redeclaration of \u2018long int k\u2019\n   49 |     long k = 1;\n  \
    \    |          ^\n/tmp/tmpy6b_zime.cpp:24:10: note: \u2018long int k\u2019 previously\
    \ declared here\n   24 |     long k = 0;\n      |          ^\n/tmp/tmpy6b_zime.cpp:50:10:\
    \ error: redeclaration of \u2018long int l\u2019\n   50 |     long l = 1;\n  \
    \    |          ^\n/tmp/tmpy6b_zime.cpp:25:10: note: \u2018long int l\u2019 previously\
    \ declared here\n   25 |     long l = m;\n      |          ^\n/tmp/tmpy6b_zime.cpp:51:10:\
    \ error: redeclaration of \u2018long int m\u2019\n   51 |     long m = 1;\n  \
    \    |          ^\n/tmp/tmpy6b_zime.cpp:21:10: note: \u2018long int m\u2019 previously\
    \ declared here\n   21 |     long m = lst.front();\n      |          ^\n/tmp/tmpy6b_zime.cpp:52:10:\
    \ error: redeclaration of \u2018long int n\u2019\n   52 |     long n = 1;\n  \
    \    |          ^\n/tmp/tmpy6b_zime.cpp:20:10: note: \u2018long int n\u2019 previously\
    \ declared here\n   20 |     long n = lst.size();\n      |          ^\n/tmp/tmpy6b_zime.cpp:54:10:\
    \ error: redeclaration of \u2018long "
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n\
    \    long cnt83 = 0;\n    long cnt84\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdr3pf2va.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdr3pf2va.cpp:106:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpdr3pf2va.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0, sum = 0;\n    long n = lst.size();\n  \
    \  long m = lst.front();\n    long i = 2;\n    while (i < n) {\n        if (lst.at(i)\
    \ % 2 == 0) {\n            sum += lst.at(i);\n        }\n        else {\n    \
    \        ans = max(ans, sum);\n            prime = lst.at(i);\n            sum\
    \ = 0;\n        }\n        i += 2;\n    }\n    ans = max(ans, sum);\n    ans =\
    \ max(ans, prime);\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp5oeyxu8.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpp5oeyxu8.cpp:28:19: error: \u2018max\u2019 was not declared\
    \ in this scope; did you mean \u2018std::max\u2019?\n   28 |             ans =\
    \ max(ans, sum);\n      |                   ^~~\n      |                   std::max\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpp5oeyxu8.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note: \u2018\
    std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n/tmp/tmpp5oeyxu8.cpp:34:11: error: \u2018max\u2019\
    \ was not declared in this scope; did you mean \u2018std::max\u2019?\n   34 |\
    \     ans = max(ans, sum);\n      |           ^~~\n      |           std::max\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpp5oeyxu8.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note: \u2018\
    std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ prime = 0;\n    long sum = 0;\n    long temp = 0;\n    long temp2 = 0;\n   \
    \ long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 =\
    \ 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long\
    \ temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n\
    \    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfyqiil0g.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfyqiil0g.cpp:105:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  105 | }\n      | ^\n/tmp/tmpfyqiil0g.cpp:105:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest == i) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpdopwwocj: /tmp/tmpdopwwocj.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > \n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu85lytz5.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpu85lytz5.cpp:125:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  125 | }\n      | ^\n/tmp/tmpu85lytz5.cpp:124:21:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  124 |         if\
    \ (lst[i] >\n      |            ~        ^\n      |                     )\n  125\
    \ | }\n      | ~                    \n/tmp/tmpu85lytz5.cpp:125:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n  125 | }\n      | ^\n/tmp/tmpu85lytz5.cpp:126:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  126 | int main() {\n      |            ^\n/tmp/tmpu85lytz5.cpp:137:1: error:\
    \ expected \u2018}\u2019 at end of input\n  137 | }\n      | ^\n/tmp/tmpu85lytz5.cpp:18:39:\
    \ note: to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long>\
    \ lst) {\n      |                                       ^\n/tmp/tmpu85lytz5.cpp:137:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  137 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0, sum = 0;\n    for (long i : lst) {\n  \
    \      if (i % 2 == 0) {\n            sum += i;\n        }\n        else {\n \
    \           sum += i % 2 == 0 ? i : i - 1;\n        }\n        if (sum > prime)\
    \ {\n            prime = sum;\n            ans = i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmplgdxp7kk: /tmp/tmplgdxp7kk.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0, sum = 0;\n    for (long i : lst) {\n  \
    \      sum += i;\n        if (i % 2 == 0) {\n            prime = 2;\n        \
    \    while (sum % prime == 0) {\n                prime++;\n            }\n   \
    \     }\n        if (i % prime == 0) {\n            ans += i;\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660138668
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 0;\n    long\
    \ max_prime_digit = 0;\n    for (long i = 0; i < n; i++) {\n        long prime\
    \ = 0;\n        long prime_digit = 0;\n        for (long j = 0; j < i; j++) {\n\
    \            if (lst[j] % i == 0) {\n                prime = 1;\n            \
    \    break;\n            }\n        }\n        if (prime == 0) {\n           \
    \ prime = 1;\n        }\n        for (long j = 0; j < i; j++) {\n            if\
    \ (lst[j] % i == 0) {\n                prime_digit = j;\n                break;\n\
    \            }\n        }\n        if (prime == 1 && prime_digit > max_prime_digit)\
    \ {\n            max_prime = i;\n            max_prime_digit = prime_digit;\n\
    \        }\n    }\n    for (long i = 0; i < n; i++) {\n        long digit = 0;\n\
    \        for (long j = 0; j < max_prime_digit; j++) {\n            if (lst[i]\
    \ % max_prime == 0) {\n                digit = j;\n                break;\n  \
    \          }\n        }\n        ans += lst[i] / max_prime * digit;\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long cur\
    \ = 0;\n    long cnt = 0;\n    for (long i : lst) {\n        if (i == 0) {\n \
    \           cnt += 1;\n        }\n        if (i % 2 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 3 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 5 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 7 == 0) {\n            sum += i;\n        }\n        if (i % 11 == 0) {\n  \
    \          sum += i;\n        }\n        if (i % 13 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 17 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 19 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 23 == 0) {\n            sum += i;\n        }\n        if (i % 29 == 0) {\n \
    \           sum += i;\n        }\n        if (i % 31 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 37 == 0) {\n            sum += i;\n      \
    \  }\n        if (i % 41 == 0) {\n            sum += i;\n        }\n        if\
    \ (i % 43 == 0) {\n            sum += i;\n        }\n        if (i % 47 == 0)\
    \ {\n            sum += i;\n        }\n        if (i % 53 == 0) {\n          \
    \  sum += i;\n        }\n        if (i % 59 == 0) {\n            sum += i;\n \
    \       }\n        if (i % 61 == 0) {\n            sum += i;\n        }\n    \
    \    if (i % 67 == 0) {\n            sum += i;\n        }\n        if (i % 71\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 73 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 79 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 83 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 89 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 97 == 0) {\n            sum += i;\n        }\n        if (i % 103 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 109 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 113 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 127 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 131 == 0) {\n            sum += i;\n        }\n        if (i % 137 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 141 == 0) {\n      \
    \      sum += i;\n        }\n        if (i % 147 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 151 == 0) {\n            sum += i;\n        }\n  \
    \      if (i % 157 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 161 == 0) {\n            sum += i;\n        }\n        if (i % 167 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 171 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 177 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 181 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 185 == 0) {\n            sum += i;\n        }\n        if (i % 191 ==\
    \ 0) {\n            sum += i;\n\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmrz916ww.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmrz916ww.cpp:155:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  155 | int main() {\n      |     \
    \       ^\n/tmp/tmpmrz916ww.cpp:166:1: error: expected \u2018}\u2019 at end of\
    \ input\n  166 | }\n      | ^\n/tmp/tmpmrz916ww.cpp:24:24: note: to match this\
    \ \u2018{\u2019\n   24 |     for (long i : lst) {\n      |                   \
    \     ^\n/tmp/tmpmrz916ww.cpp:166:1: error: expected \u2018}\u2019 at end of input\n\
    \  166 | }\n      | ^\n/tmp/tmpmrz916ww.cpp:18:39: note: to match this \u2018\
    {\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |            \
    \                           ^\n/tmp/tmpmrz916ww.cpp:166:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  166 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long max = 0;\n   \
    \ long max2 = 0;\n    long max3 = 0;\n    long max4 = 0;\n    long max5 = 0;\n\
    \    long max6 = 0;\n    long max7 = 0;\n    long max8 = 0;\n    long max9 = 0;\n\
    \    long max10 = 0;\n    long max11 = 0;\n    long max12 = 0;\n    long max13\
    \ = 0;\n    long max14 = 0;\n    long max15 = 0;\n    long max16 = 0;\n    long\
    \ max17 = 0;\n    long max18 = 0;\n    long max19 = 0;\n    long max20 = 0;\n\
    \    long max21 = 0;\n    long max22 = 0;\n    long max23 = 0;\n    long max24\
    \ = 0;\n    long max25 = 0;\n    long max26 = 0;\n    long max27 = 0;\n    long\
    \ max28 = 0;\n    long max29 = 0;\n    long max30 = 0;\n    long max31 = 0;\n\
    \    long max32 = 0;\n    long max33 = 0;\n    long max34 = 0;\n    long max35\
    \ = 0;\n    long max36 = 0;\n    long max37 = 0;\n    long max38 = 0;\n    long\
    \ max39 = 0;\n    long max40 = 0;\n    long max41 = 0;\n    long max42 = 0;\n\
    \    long max43 = 0;\n    long max44 = 0;\n    long max45 = 0;\n    long max46\
    \ = 0;\n    long max47 = 0;\n    long max48 = 0;\n    long max49 = 0;\n    long\
    \ max50 = 0;\n    long max51 = 0;\n    long max52 = 0;\n    long max53 = 0;\n\
    \    long max54 = 0;\n    long max55 = 0;\n    long max56 = 0;\n    long max57\
    \ = 0;\n    long max58 = 0;\n    long max59 = 0;\n    long max60 = 0;\n    long\
    \ max61 = 0;\n    long max62 = 0;\n    long max63 = 0;\n    long max64 = 0;\n\
    \    long max65 = 0;\n    long max66 = 0;\n    long max67 = 0;\n    long max68\
    \ = 0;\n    long max69 = 0;\n    long max70 = 0;\n    long max71 = 0;\n    long\
    \ max72 = 0;\n    long max73 = 0;\n    long max74 = 0;\n    long max75 = 0;\n\
    \    long max76 = 0;\n    long max77 = 0;\n    long max78 = 0;\n    long max79\
    \ = 0;\n    long max80 = 0;\n    long max81 = 0;\n    long max82 = 0;\n    long\
    \ max83 = 0;\n    long max84 = 0;\n\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpwz6jj4ek: /tmp/tmpwz6jj4ek.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = lst[0];\n    long\
    \ cnt = 0;\n    for (long i : lst) {\n        if (i == cur) {\n            cnt++;\n\
    \        } else {\n            if (cnt > max) {\n                max = cnt;\n\
    \                ans = cur;\n            }\n            cnt = 0;\n           \
    \ cur = i;\n        }\n    }\n    if (cnt > max) {\n        max = cnt;\n     \
    \   ans = cur;\n    }\n    return ans + max;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp_msjsrys: /tmp/tmp_msjsrys.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ primes[10000];\n    long primesCount = 0;\n    long primesSum = 0;\n    long\
    \ primesSum2 = 0;\n    long primesSum3 = 0;\n    long primesSum4 = 0;\n    long\
    \ primesSum5 = 0;\n    long primesSum6 = 0;\n    long primesSum7 = 0;\n    long\
    \ primesSum8 = 0;\n    long primesSum9 = 0;\n    long primesSum10 = 0;\n    long\
    \ primesSum11 = 0;\n    long primesSum12 = 0;\n    long primesSum13 = 0;\n   \
    \ long primesSum14 = 0;\n    long primesSum15 = 0;\n    long primesSum16 = 0;\n\
    \    long primesSum17 = 0;\n    long primesSum18 = 0;\n    long primesSum19 =\
    \ 0;\n    long primesSum20 = 0;\n    long primesSum21 = 0;\n    long primesSum22\
    \ = 0;\n    long primesSum23 = 0;\n    long primesSum24 = 0;\n    long primesSum25\
    \ = 0;\n    long primesSum26 = 0;\n    long primesSum27 = 0;\n    long primesSum28\
    \ = 0;\n    long primesSum29 = 0;\n    long primesSum30 = 0;\n    long primesSum31\
    \ = 0;\n    long primesSum32 = 0;\n    long primesSum33 = 0;\n    long primesSum34\
    \ = 0;\n    long primesSum35 = 0;\n    long primesSum36 = 0;\n    long primesSum37\
    \ = 0;\n    long primesSum38 = 0;\n    long primesSum39 = 0;\n    long primesSum40\
    \ = 0;\n    long primesSum41 = 0;\n    long primesSum42 = 0;\n    long primesSum43\
    \ = 0;\n    long primesSum44 = 0;\n    long primesSum45 = 0;\n    long primesSum46\
    \ = 0;\n    long primesSum47 = 0;\n    long primesSum48 = 0;\n    long primesSum49\
    \ = 0;\n    long primesSum50 = 0;\n    long primesSum51 = 0;\n    long primesSum52\
    \ = 0;\n    long primesSum53 = 0;\n    long primesSum54 = 0;\n    long primesSum55\
    \ = 0;\n    long primesSum56 = 0;\n    long primesSum57 = 0;\n    long primesSum58\
    \ = 0;\n    long primesSum59 = 0;\n    long primesSum60 = 0;\n    long primesSum\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpml55303z.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpml55303z.cpp:84:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpml55303z.cpp:84:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138664
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = 2;\n    long q = m;\n    long r = 2;\n    long s = 2;\n    long\
    \ t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n\
    \    long y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n    long\
    \ c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 2;\n    long g = 2;\n\
    \    long h = 2;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long\
    \ l = 2;\n    long m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n\
    \    long q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n    long\
    \ u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n\
    \    long z = 2;\n    long a = 2;\n    long b = 2;\n    long c = 2;\n    long\
    \ d = 2;\n    long e = 2;\n    long f = 2;\n    long g = 2;\n    long h = 2;\n\
    \    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n\
    \    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long\
    \ v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n\
    \    long a = 2;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long\
    \ e = 2;\n    long f = 2;\n    long g = 2;\n    long h = 2;\n    long i = 2;\n\
    \    long j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n    long\
    \ n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n    long r = 2;\n\
    \    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n    long\
    \ w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 2;\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 2;\n    long g = 2;\n    long h = 2;\n    long i = 2;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6lo_bn1j.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6lo_bn1j.cpp:45:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   45 |     long m = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:46:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   46 |     long n = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:48:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   48 |     long p = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:22:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   22 |     long p =\
    \ 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:49:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   49 |     long q = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:23:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   23 |     long q =\
    \ m;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:50:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   50 |     long r = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:24:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   24 |     long r =\
    \ 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:51:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   51 |     long s = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:25:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   25 |     long s =\
    \ 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:52:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   52 |     long t = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:26:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   26 |     long t =\
    \ 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:53:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   53 |     long u = 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:27:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   27 |     long u =\
    \ 2;\n      |          ^\n/tmp/tmp6lo_bn1j.cpp:54:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   54 |     long v = 2;\n     "
  stdout: ''
  timestamp: 1660138665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            if (i > max) {\n        \
    \        max = i;\n            }\n        }\n    }\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            if (i > max) {\n                max =\
    \ i;\n            }\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            if (i > max) {\n                max = i;\n        \
    \    }\n        }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n    }\n   \
    \ for (long i : lst) {\n        if (i % 2 == 0) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n    }\n    for (long i :\
    \ lst) {\n        if (i % 2 == 0) {\n            if (i > max) {\n            \
    \    max = i;\n            }\n        }\n    }\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n    }\n    for (long i : lst) {\n        if (i % 2\
    \ == 0) {\n            if (i > max) {\n                max = i;\n            }\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n     \
    \       if (i > max) {\n                max = i;\n            }\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i % 2 == 0) {\n            if (i > max) {\n  \
    \              max = i;\n            }\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i % 2 == 0) {\n            if (i > max) {\n                max\
    \ = i;\n            }\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i % 2 == 0) {\n            if (i > max) {\n                max = i;\n     \
    \       }\n        }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0)\
    \ {\n            if (i > max) {\n                max = i;\n            }\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n        \
    \    if (i > max) {\n                max = i;\n            }\n        }\n    }\n\
    \    for (long i : lst) {\n        if (i % 2 == 0) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            if (i > max) {\n        \
    \        max = i;\n            }\n\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp4z_8bua.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpp4z_8bua.cpp:152:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  152 | int main() {\n      |     \
    \       ^\n/tmp/tmpp4z_8bua.cpp:163:1: error: expected \u2018}\u2019 at end of\
    \ input\n  163 | }\n      | ^\n/tmp/tmpp4z_8bua.cpp:145:24: note: to match this\
    \ \u2018{\u2019\n  145 |     for (long i : lst) {\n      |                   \
    \     ^\n/tmp/tmpp4z_8bua.cpp:163:1: error: expected \u2018}\u2019 at end of input\n\
    \  163 | }\n      | ^\n/tmp/tmpp4z_8bua.cpp:18:39: note: to match this \u2018\
    {\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |            \
    \                           ^\n/tmp/tmpp4z_8bua.cpp:163:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  163 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660138664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n        if (cur > max)\
    \ {\n            max = cur;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        cur = lst[i];\n        if (cur == max) {\n            ans +=\
    \ cur % 10;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpi7zy1u8q: /tmp/tmpi7zy1u8q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 1, max_prime_val\
    \ = 0, max_prime_val_digit = 0, max_prime_val_digit_count = 0;\n    long prime_val\
    \ = 0, prime_val_digit = 0, prime_val_digit_count = 0;\n    long prime_val_digits[10]\
    \ = {0};\n    long prime_val_digit_counts[10] = {0};\n    long prime_val_digit_sums[10]\
    \ = {0};\n    long prime_val_digit_sums_index = 0;\n    long prime_val_digit_sums_index_max\
    \ = -1;\n    long prime_val_digit_sums_index_min = -1;\n    long prime_val_digit_sums_index_max_digit\
    \ = -1;\n    long prime_val_digit_sums_index_min_digit = -1;\n    long prime_val_digit_sums_index_max_digit_count\
    \ = -1;\n    long prime_val_digit_sums_index_min_digit_count = -1;\n    long prime_val_digit_sums_index_max_digit_sum\
    \ = -1;\n    long prime_val_digit_sums_index_min_digit_sum = -1;\n    long prime_val_digit_sums_index_max_digit_sum_count\
    \ = -1;\n    long prime_val_digit_sums_index_min_digit_sum_count = -1;\n    long\
    \ prime_val_digit_sums_index_max_digit_sum_sum = -1;\n    long prime_val_digit_sums_index_min_digit_sum_sum\
    \ = -1;\n    long prime_val_digit_sums_index_max_digit_sum_sum_count = -1;\n \
    \   long prime_val_digit_sums_index_min_digit_sum_sum_count = -1;\n    long prime_val_digit_sums_index_max_digit_sum_sum_sum\
    \ = -1;\n    long prime_val_digit_sums_index_min_digit_sum_sum_sum = -1;\n   \
    \ long prime_val_digit_sums_index_max_digit_sum_sum_sum_count = -1;\n    long\
    \ prime_val_digit_sums_index_min_digit_sum_sum_sum_count = -1;\n    long prime_val_digit_sums_index_max_digit_sum_sum_sum_sum\
    \ = -1;\n    long prime_val_digit_sums_index_min_digit_sum_sum_sum_sum = -1;\n\
    \    long prime_val_digit_sums_index_max_digit_sum_sum_sum_sum_count = -1;\n \
    \   long prime_val_digit_sums_index_min_digit_sum_sum_sum_sum_count = -1;\n  \
    \  long prime_val_digit_sums_index_max_digit_sum_sum_sum_sum_sum = -1;\n    long\
    \ prime_val_digit_sums_index_min_digit_sum_sum_sum_sum_sum = -1;\n    long prime_val_digit_sums_index_max_digit_sum_sum_sum_sum_sum_count\
    \ = -1;\n    long prime_val_digit_sums_index_min_digit_sum_sum_sum_sum_sum_count\
    \ = -1;\n    \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmprrr2c5b6: /tmp/tmprrr2c5b6.cpp:56: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (ans > max)\
    \ {\n            max = ans;\n        }\n        ans *= i;\n    }\n    return max;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpkn8o60n1: /tmp/tmpkn8o60n1.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4n5l8r3e.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp4n5l8r3e.cpp:131:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  131 | int main() {\n      |     \
    \       ^\n/tmp/tmp4n5l8r3e.cpp:142:1: error: expected \u2018}\u2019 at end of\
    \ input\n  142 | }\n      | ^\n/tmp/tmp4n5l8r3e.cpp:18:39: note: to match this\
    \ \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |    \
    \                                   ^\n/tmp/tmp4n5l8r3e.cpp:142:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n  142 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long maxPrime = 0;\n    long sum = 0;\n    long prime = 0;\n   \
    \ long primeCount = 0;\n    long primeSum = 0;\n    long temp = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n            prime\
    \ = lst[i] / 2;\n            primeCount++;\n            primeSum += prime;\n \
    \       }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 0) {\n            prime = lst[i] / 2;\n            primeCount++;\n  \
    \          primeSum += prime;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 0) {\n            prime = lst[i] / 2;\n  \
    \          primeCount++;\n            primeSum += prime;\n        }\n    }\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n\
    \            prime = lst[i] / 2;\n            primeCount++;\n            primeSum\
    \ += prime;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n \
    \       if (lst[i] % 2 == 0) {\n            prime = lst[i] / 2;\n            primeCount++;\n\
    \            primeSum += prime;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 0) {\n            prime = lst[i] / 2;\n  \
    \          primeCount++;\n            primeSum += prime;\n        }\n    }\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n\
    \            prime = lst[i] / 2;\n            primeCount++;\n            primeSum\
    \ += prime;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n \
    \       if (lst[i] % 2 == 0) {\n            prime = lst[i] / 2;\n            primeCount++;\n\
    \            primeSum += prime;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 0) {\n            prime = lst[i] / 2;\n  \
    \          primeCount++;\n            primeSum += prime;\n        }\n    }\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n\
    \            prime = lst[i] / 2;\n            primeCount++;\n            primeSum\
    \ += prime;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n \
    \       if (lst[i] % 2 == 0) {\n            prime = lst[i] / 2;\n            primeCount++;\n\
    \            primeSum += prime;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] % 2 == 0) {\n            prime = lst[i] / 2;\n  \
    \          primeCount++;\n            primeSum += prime;\n        }\n\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxiskv3ip.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpxiskv3ip.cpp:110:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  110 | int main() {\n      |     \
    \       ^\n/tmp/tmpxiskv3ip.cpp:121:1: error: expected \u2018}\u2019 at end of\
    \ input\n  121 | }\n      | ^\n/tmp/tmpxiskv3ip.cpp:18:39: note: to match this\
    \ \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |    \
    \                                   ^\n/tmp/tmpxiskv3ip.cpp:121:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n  121 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            sum += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    sum += i;\n        }\n        if (i % 7 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 11 == 0) {\n            sum += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            sum += i;\n        }\n        if (i % 17\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 23 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 31 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            sum += i;\n        }\n        if (i % 41 == 0) {\n \
    \           sum += i;\n        }\n        if (i % 43 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            sum += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            sum += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            sum += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            sum += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  sum += i;\n        }\n        if (i % 71 == 0) {\n            sum += i;\n \
    \       }\n        if (i % 73 == 0) {\n            sum += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            sum += i;\n        }\n        if (i % 83\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 97 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 109 == 0) {\n            sum += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            sum += i;\n        }\n        if (i % 121 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 127 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 131 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 137 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 143 == 0) {\n            sum += i;\n        }\n        if (i % 149 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 153 == 0) {\n      \
    \      sum += i;\n        }\n        if (i % 159 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 163 == 0) {\n            sum += i;\n        }\n  \
    \      if (i % 167 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 171 == 0) {\n            sum += i;\n        }\n        if (i % 177 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 183 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 189 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 193 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 199 == 0) {\n            sum += i;\n        }\n        if (\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjke2g2zi.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjke2g2zi.cpp:155:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  155 | }\n      | ^\n/tmp/tmpjke2g2zi.cpp:154:13:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  154 |         if\
    \ (\n      |            ~^\n      |             )\n  155 | }\n      | ~      \
    \      \n/tmp/tmpjke2g2zi.cpp:155:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n  155 | }\n      | ^\n/tmp/tmpjke2g2zi.cpp:156:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  156\
    \ | int main() {\n      |            ^\n/tmp/tmpjke2g2zi.cpp:167:1: error: expected\
    \ \u2018}\u2019 at end of input\n  167 | }\n      | ^\n/tmp/tmpjke2g2zi.cpp:18:39:\
    \ note: to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long>\
    \ lst) {\n      |                                       ^\n/tmp/tmpjke2g2zi.cpp:167:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  167 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long prime_sum = 0;\n\
    \    long prime_sum2 = 0;\n    long prime_sum3 = 0;\n    long prime_sum4 = 0;\n\
    \    long prime_sum5 = 0;\n    long prime_sum6 = 0;\n    long prime_sum7 = 0;\n\
    \    long prime_sum8 = 0;\n    long prime_sum9 = 0;\n    long prime_sum10 = 0;\n\
    \    long prime_sum11 = 0;\n    long prime_sum12 = 0;\n    long prime_sum13 =\
    \ 0;\n    long prime_sum14 = 0;\n    long prime_sum15 = 0;\n    long prime_sum16\
    \ = 0;\n    long prime_sum17 = 0;\n    long prime_sum18 = 0;\n    long prime_sum19\
    \ = 0;\n    long prime_sum20 = 0;\n    long prime_sum21 = 0;\n    long prime_sum22\
    \ = 0;\n    long prime_sum23 = 0;\n    long prime_sum24 = 0;\n    long prime_sum25\
    \ = 0;\n    long prime_sum26 = 0;\n    long prime_sum27 = 0;\n    long prime_sum28\
    \ = 0;\n    long prime_sum29 = 0;\n    long prime_sum30 = 0;\n    long prime_sum31\
    \ = 0;\n    long prime_sum32 = 0;\n    long prime_sum33 = 0;\n    long prime_sum34\
    \ = 0;\n    long prime_sum35 = 0;\n    long prime_sum36 = 0;\n    long prime_sum37\
    \ = 0;\n    long prime_sum38 = 0;\n    long prime_sum39 = 0;\n    long prime_sum40\
    \ = 0;\n    long prime_sum41 = 0;\n    long prime_sum42 = 0;\n    long prime_sum43\
    \ = 0;\n    long prime_sum44 = 0;\n    long prime_sum45 = 0;\n    long prime_sum46\
    \ = 0;\n    long prime_sum47 = 0;\n    long prime_sum48 = 0;\n    long prime_sum49\
    \ = 0;\n    long prime_sum50 = 0;\n    long prime_sum51 = 0;\n    long prime_sum52\
    \ = 0;\n    long prime_sum53 = 0;\n    long prime_sum54 = 0;\n    long prime_sum55\
    \ = 0;\n    long prime_sum56 = 0;\n    long prime_sum57 = 0;\n    long prime_sum58\
    \ = 0;\n    long prime_sum59 = 0;\n    long prime_sum60 = 0;\n    long prime_sum61\
    \ = 0;\n    long prime_sum62 = 0;\n    long prime_sum63 = 0;\n    long \n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcx5bbkto.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpcx5bbkto.cpp:85:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   85 | }\n      | ^\n/tmp/tmpcx5bbkto.cpp:85:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4\
    \ = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8\
    \ = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long\
    \ cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n\
    \    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19\
    \ = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long\
    \ cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n\
    \    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30\
    \ = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long\
    \ cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n\
    \    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41\
    \ = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long\
    \ cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n\
    \    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52\
    \ = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long\
    \ cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n\
    \    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63\
    \ = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long\
    \ cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n\
    \    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74\
    \ = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long\
    \ cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n\
    \    long cnt82 = 0;\n    long cnt83 = 0;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp8tomb0dk: /tmp/tmp8tomb0dk.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    ans += max;\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpxa6m9kh8: /tmp/tmpxa6m9kh8.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i : lst) {\n        if (i == 0) {\n            continue;\n        }\n      \
    \  if (i % 2 == 0) {\n            cur = i;\n            while (cur % 2 == 0) {\n\
    \                cur /= 2;\n            }\n            if (cur > max) {\n    \
    \            max = cur;\n            }\n        }\n    }\n    ans = max;\n   \
    \ for (long i : lst) {\n        if (i == 0) {\n            continue;\n       \
    \ }\n        if (i % 2 == 0) {\n            cur = i;\n            while (cur %\
    \ 2 == 0) {\n                cur /= 2;\n            }\n            if (cur > max)\
    \ {\n                max = cur;\n            }\n        }\n    }\n    ans += max;\n\
    \    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmphz_hznp3: /tmp/tmphz_hznp3.cpp:56: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = (long)lst[n-1];\n\
    \    long i = 2;\n    while(i <= max) {\n        if(lst[n-i] == i) {\n       \
    \     ans += i;\n            i += 2;\n        } else {\n            i += 1;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpz_m7yono: /tmp/tmpz_m7yono.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    long prime = 0;\n    long sum = 0;\n    long primeSum = 0;\n    long primeSum2\
    \ = 0;\n    long primeSum3 = 0;\n    long primeSum4 = 0;\n    long primeSum5 =\
    \ 0;\n    long primeSum6 = 0;\n    long primeSum7 = 0;\n    long primeSum8 = 0;\n\
    \    long primeSum9 = 0;\n    long primeSum10 = 0;\n    long primeSum11 = 0;\n\
    \    long primeSum12 = 0;\n    long primeSum13 = 0;\n    long primeSum14 = 0;\n\
    \    long primeSum15 = 0;\n    long primeSum16 = 0;\n    long primeSum17 = 0;\n\
    \    long primeSum18 = 0;\n    long primeSum19 = 0;\n    long primeSum20 = 0;\n\
    \    long primeSum21 = 0;\n    long primeSum22 = 0;\n    long primeSum23 = 0;\n\
    \    long primeSum24 = 0;\n    long primeSum25 = 0;\n    long primeSum26 = 0;\n\
    \    long primeSum27 = 0;\n    long primeSum28 = 0;\n    long primeSum29 = 0;\n\
    \    long primeSum30 = 0;\n    long primeSum31 = 0;\n    long primeSum32 = 0;\n\
    \    long primeSum33 = 0;\n    long primeSum34 = 0;\n    long primeSum35 = 0;\n\
    \    long primeSum36 = 0;\n    long primeSum37 = 0;\n    long primeSum38 = 0;\n\
    \    long primeSum39 = 0;\n    long primeSum40 = 0;\n    long primeSum41 = 0;\n\
    \    long primeSum42 = 0;\n    long primeSum43 = 0;\n    long primeSum44 = 0;\n\
    \    long primeSum45 = 0;\n    long primeSum46 = 0;\n    long primeSum47 = 0;\n\
    \    long primeSum48 = 0;\n    long primeSum49 = 0;\n    long primeSum50 = 0;\n\
    \    long primeSum51 = 0;\n    long primeSum52 = 0;\n    long primeSum53 = 0;\n\
    \    long primeSum54 = 0;\n    long primeSum55 = 0;\n    long primeSum56 = 0;\n\
    \    long primeSum57 = 0;\n    long primeSum58 = 0;\n    long primeSum59 = 0;\n\
    \    long primeSum60 = 0;\n    long primeSum61 = 0;\n    long primeSum62 = 0;\n\
    \    long primeSum63 = 0;\n    long primeSum64 = 0;\n    long primeSum65 = 0;\n\
    \    long primeSum66 = 0;\n    long primeSum67 = 0;\n    long primeSum68 = 0;\n\
    \    long primeSum69 = 0;\n    long primeSum70\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0b20m_ks.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0b20m_ks.cpp:94:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   94 | }\n      | ^\n/tmp/tmp0b20m_ks.cpp:94:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (ans > max)\
    \ {\n            max = ans;\n        }\n    }\n    return max;\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpgrybf_7n: /tmp/tmpgrybf_7n.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ primes[1000];\n    long primesCount = 0;\n    long primesSum = 0;\n    long\
    \ primesSum2 = 0;\n    long primesSum3 = 0;\n    long primesSum4 = 0;\n    long\
    \ primesSum5 = 0;\n    long primesSum6 = 0;\n    long primesSum7 = 0;\n    long\
    \ primesSum8 = 0;\n    long primesSum9 = 0;\n    long primesSum10 = 0;\n    long\
    \ primesSum11 = 0;\n    long primesSum12 = 0;\n    long primesSum13 = 0;\n   \
    \ long primesSum14 = 0;\n    long primesSum15 = 0;\n    long primesSum16 = 0;\n\
    \    long primesSum17 = 0;\n    long primesSum18 = 0;\n    long primesSum19 =\
    \ 0;\n    long primesSum20 = 0;\n    long primesSum21 = 0;\n    long primesSum22\
    \ = 0;\n    long primesSum23 = 0;\n    long primesSum24 = 0;\n    long primesSum25\
    \ = 0;\n    long primesSum26 = 0;\n    long primesSum27 = 0;\n    long primesSum28\
    \ = 0;\n    long primesSum29 = 0;\n    long primesSum30 = 0;\n    long primesSum31\
    \ = 0;\n    long primesSum32 = 0;\n    long primesSum33 = 0;\n    long primesSum34\
    \ = 0;\n    long primesSum35 = 0;\n    long primesSum36 = 0;\n    long primesSum37\
    \ = 0;\n    long primesSum38 = 0;\n    long primesSum39 = 0;\n    long primesSum40\
    \ = 0;\n    long primesSum41 = 0;\n    long primesSum42 = 0;\n    long primesSum43\
    \ = 0;\n    long primesSum44 = 0;\n    long primesSum45 = 0;\n    long primesSum46\
    \ = 0;\n    long primesSum47 = 0;\n    long primesSum48 = 0;\n    long primesSum49\
    \ = 0;\n    long primesSum50 = 0;\n    long primesSum51 = 0;\n    long primesSum52\
    \ = 0;\n    long primesSum53 = 0;\n    long primesSum54 = 0;\n    long primesSum55\
    \ = 0;\n    long primesSum56 = 0;\n    long primesSum57 = 0;\n    long primesSum58\
    \ = 0;\n    long primesSum59 = 0;\n    long primesSum60 = 0;\n    long primes\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzdu2msi7.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzdu2msi7.cpp:84:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpzdu2msi7.cpp:84:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest == i) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpdopwwocj: /tmp/tmpdopwwocj.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n\
    \    long cnt83 = 0;\n    long cnt84\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdr3pf2va.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdr3pf2va.cpp:106:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpdr3pf2va.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long maxPrime = 0;\n\
    \    long maxPrimeCount = 0;\n    long primeCount = 0;\n    long primeSum = 0;\n\
    \    long primeSumCount = 0;\n    long primeSumCount2 = 0;\n    long primeSumCount3\
    \ = 0;\n    long primeSumCount4 = 0;\n    long primeSumCount5 = 0;\n    long primeSumCount6\
    \ = 0;\n    long primeSumCount7 = 0;\n    long primeSumCount8 = 0;\n    long primeSumCount9\
    \ = 0;\n    long primeSumCount10 = 0;\n    long primeSumCount11 = 0;\n    long\
    \ primeSumCount12 = 0;\n    long primeSumCount13 = 0;\n    long primeSumCount14\
    \ = 0;\n    long primeSumCount15 = 0;\n    long primeSumCount16 = 0;\n    long\
    \ primeSumCount17 = 0;\n    long primeSumCount18 = 0;\n    long primeSumCount19\
    \ = 0;\n    long primeSumCount20 = 0;\n    long primeSumCount21 = 0;\n    long\
    \ primeSumCount22 = 0;\n    long primeSumCount23 = 0;\n    long primeSumCount24\
    \ = 0;\n    long primeSumCount25 = 0;\n    long primeSumCount26 = 0;\n    long\
    \ primeSumCount27 = 0;\n    long primeSumCount28 = 0;\n    long primeSumCount29\
    \ = 0;\n    long primeSumCount30 = 0;\n    long primeSumCount31 = 0;\n    long\
    \ primeSumCount32 = 0;\n    long primeSumCount33 = 0;\n    long primeSumCount34\
    \ = 0;\n    long primeSumCount35 = 0;\n    long primeSumCount36 = 0;\n    long\
    \ primeSumCount37 = 0;\n    long primeSumCount38 = 0;\n    long primeSumCount39\
    \ = 0;\n    long primeSumCount40 = 0;\n    long primeSumCount41 = 0;\n    long\
    \ primeSumCount42 = 0;\n    long primeSumCount43 = 0;\n    long primeSumCount44\
    \ = 0;\n    long primeSumCount45 = 0;\n    long primeSumCount46 = 0;\n    long\
    \ primeSumCount47 = 0;\n    long primeSumCount48 = 0;\n    long primeSumCount49\
    \ = 0;\n    long primeSumCount50 = 0;\n    long primeSumCount51 = 0;\n    long\
    \ primeSumCount52 = 0;\n    long primeSumCount53 = 0;\n    long primeSumCount54\
    \ = 0;\n    long primeSumCount55 = 0;\n    long primeSumCount56 = 0;\n    long\
    \ primeSumCount57 = 0;\n    long primeSumCount58 = 0;\n    long primeSumCount59\
    \ = 0;\n    long primeSumCount\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoih2mlcj.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpoih2mlcj.cpp:85:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   85 | }\n      | ^\n/tmp/tmpoih2mlcj.cpp:85:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long maxPrime = 0;\n    long sum = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        long prime = lst[i];\n        long primeSum = 0;\n\
    \        for (long j = prime; j > 0; j--) {\n            if (i % j == 0) {\n \
    \               primeSum += j;\n                break;\n            }\n      \
    \  }\n        if (primeSum > maxPrime) {\n            maxPrime = primeSum;\n \
    \           sum = primeSum;\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpfk88wmod: /tmp/tmpfk88wmod.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \            continue;\n        }\n        cur = i;\n        while (cnt > 0) {\n\
    \            cnt--;\n            if (cur % 2 == 0) {\n                cur /= 2;\n\
    \            } else {\n                cur = 3 * cur + 1;\n            }\n   \
    \     }\n        if (cur > max) {\n            max = cur;\n        }\n       \
    \ cnt += 1;\n    }\n    ans = max;\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpgf34bhm0: /tmp/tmpgf34bhm0.cpp:47: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     long x = i;\n        while (x % 2 == 0) {\n            x /= 2;\n       \
    \ }\n        long y = x;\n        while (y % 3 == 0) {\n            y /= 3;\n\
    \        }\n        long z = y;\n        while (z %5 == 0) {\n            z /=\
    \ 5;\n        }\n        long w = z;\n        while (w %7 == 0) {\n          \
    \  w /= 7;\n        }\n        long v = w;\n        while (v %11 == 0) {\n   \
    \         v /= 11;\n        }\n        long u = v;\n        while (u %13 == 0)\
    \ {\n            u /= 13;\n        }\n        long w = v;\n        while (w%15\
    \ == 0) {\n            w /= 15;\n        }\n        long x = w;\n        while\
    \ (x%17 == 0) {\n            x /= 17;\n        }\n        long y = x;\n      \
    \  while (y%19 == 0) {\n            y /= 19;\n        }\n        long z = y;\n\
    \        while (z%21 == 0) {\n            z /= 21;\n        }\n        long w\
    \ = z;\n        while (w%23 == 0) {\n            w /= 23;\n        }\n       \
    \ long v = w;\n        while (v%25 == 0) {\n            v /= 25;\n        }\n\
    \        long u = v;\n        while (u%27 == 0) {\n            u /= 27;\n    \
    \    }\n        long w = v;\n        while (w%29 == 0) {\n            w /= 29;\n\
    \        }\n        long x = w;\n        while (x%31 == 0) {\n            x /=\
    \ 31;\n        }\n        long y = x;\n        while (y%31 == 0) {\n         \
    \   y /= 31;\n        }\n        long z = y;\n        while (z%33 == 0) {\n  \
    \          z /= 33;\n        }\n        long w = z;\n        while (w%35 == 0)\
    \ {\n            w /= 35;\n        }\n        long v = w;\n        while (v%37\
    \ == 0) {\n            v /= 37;\n        }\n        long u = v;\n        while\
    \ (u%39 == 0) {\n            u /= 39;\n        }\n        long w = v;\n      \
    \  while (w%41 == 0) {\n            w /= 41;\n        }\n        long x = w;\n\
    \        while (x%43 == 0) {\n            x /= 43;\n        }\n        long y\
    \ = x;\n        while (y%43 == 0) {\n            y /= 43;\n        }\n       \
    \ long z = y;\n        while (z%45 == 0) {\n            z /= 45;\n        }\n\
    \        long w = z;\n        while (w%47 == 0) {\n            w /= 47;\n    \
    \    }\n        long v = w;\n        while (v%49 == 0) {\n            v /= 49;\n\
    \        }\n\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq7pe0zea.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpq7pe0zea.cpp:46:14: error: redeclaration of \u2018long\
    \ int w\u2019\n   46 |         long w = v;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:34:14:\
    \ note: \u2018long int w\u2019 previously declared here\n   34 |         long\
    \ w = z;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:50:14: error: redeclaration\
    \ of \u2018long int x\u2019\n   50 |         long x = w;\n      |            \
    \  ^\n/tmp/tmpq7pe0zea.cpp:22:14: note: \u2018long int x\u2019 previously declared\
    \ here\n   22 |         long x = i;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:54:14:\
    \ error: redeclaration of \u2018long int y\u2019\n   54 |         long y = x;\n\
    \      |              ^\n/tmp/tmpq7pe0zea.cpp:26:14: note: \u2018long int y\u2019\
    \ previously declared here\n   26 |         long y = x;\n      |             \
    \ ^\n/tmp/tmpq7pe0zea.cpp:58:14: error: redeclaration of \u2018long int z\u2019\
    \n   58 |         long z = y;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:30:14:\
    \ note: \u2018long int z\u2019 previously declared here\n   30 |         long\
    \ z = y;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:62:14: error: redeclaration\
    \ of \u2018long int w\u2019\n   62 |         long w = z;\n      |            \
    \  ^\n/tmp/tmpq7pe0zea.cpp:34:14: note: \u2018long int w\u2019 previously declared\
    \ here\n   34 |         long w = z;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:66:14:\
    \ error: redeclaration of \u2018long int v\u2019\n   66 |         long v = w;\n\
    \      |              ^\n/tmp/tmpq7pe0zea.cpp:38:14: note: \u2018long int v\u2019\
    \ previously declared here\n   38 |         long v = w;\n      |             \
    \ ^\n/tmp/tmpq7pe0zea.cpp:70:14: error: redeclaration of \u2018long int u\u2019\
    \n   70 |         long u = v;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:42:14:\
    \ note: \u2018long int u\u2019 previously declared here\n   42 |         long\
    \ u = v;\n      |              ^\n/tmp/tmpq7pe0zea.cpp:74:14: error: redeclaration\
    \ of \u2018long int w\u2019\n   74 |         long w = v;\n      |            \
    \  ^\n/tmp/tmpq7pe0zea.cpp:34:14: note: \u2018long int w\u2019 previously declared\
    \ here\n   34 |         long w = z;\n      |     "
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cnt = 0;\n    for (long\
    \ i : lst) {\n        if (i == 0) {\n            cnt++;\n        }\n        if\
    \ (i % 2 == 0) {\n            cnt++;\n        }\n        if (cnt > max) {\n  \
    \          max = cnt;\n            ans = i;\n        }\n        cnt = 0;\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpgm15_ctf: /tmp/tmpgm15_ctf.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138667
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n\
    \    long cnt83 = 0;\n    long cnt84\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdr3pf2va.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdr3pf2va.cpp:106:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpdr3pf2va.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n    long\
    \ t = 2;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpac42v6n0.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpac42v6n0.cpp:45:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   45 |     long m = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmpac42v6n0.cpp:46:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   46 |     long n = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmpac42v6n0.cpp:48:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   48 |     long p = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:22:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   22 |     long p =\
    \ 2;\n      |          ^\n/tmp/tmpac42v6n0.cpp:49:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   49 |     long q = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:23:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   23 |     long q =\
    \ n;\n      |          ^\n/tmp/tmpac42v6n0.cpp:50:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   50 |     long r = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:24:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   24 |     long r =\
    \ n;\n      |          ^\n/tmp/tmpac42v6n0.cpp:51:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   51 |     long s = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:25:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   25 |     long s =\
    \ 2;\n      |          ^\n/tmp/tmpac42v6n0.cpp:52:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   52 |     long t = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:26:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   26 |     long t =\
    \ 2;\n      |          ^\n/tmp/tmpac42v6n0.cpp:53:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   53 |     long u = 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:27:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   27 |     long u =\
    \ 1;\n      |          ^\n/tmp/tmpac42v6n0.cpp:54:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   54 |     long v = 1;\n     "
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 5 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 11 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 13 == 0) {\n            ans += i;\n        }\n        if (i % 17 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 19 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 23 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 31 == 0) {\n            ans += i;\n        }\n        if (i % 37 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 43 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 47 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 53 == 0) {\n            ans += i;\n        }\n        if (i % 59\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 67 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 73 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 79 == 0) {\n            ans += i;\n        }\n        if (i % 83 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 89 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 97 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 101 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 103 == 0) {\n            ans += i;\n        }\n        if (i % 107 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 109 == 0) {\n         \
    \   ans += i;\n        }\n        if (i % 113 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 127 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 131 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 137 == 0) {\n            ans += i;\n        }\n        if (i % 139 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 143 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 147 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 151 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 157 == 0) {\n            ans += i;\n        }\n        if (i % 159 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 163 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 167 == 0) {\n            ans += i;\n\
    \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa4iv9r3w.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpa4iv9r3w.cpp:145:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  145 | int main() {\n      |     \
    \       ^\n/tmp/tmpa4iv9r3w.cpp:156:1: error: expected \u2018}\u2019 at end of\
    \ input\n  156 | }\n      | ^\n/tmp/tmpa4iv9r3w.cpp:20:24: note: to match this\
    \ \u2018{\u2019\n   20 |     for (long i : lst) {\n      |                   \
    \     ^\n/tmp/tmpa4iv9r3w.cpp:156:1: error: expected \u2018}\u2019 at end of input\n\
    \  156 | }\n      | ^\n/tmp/tmpa4iv9r3w.cpp:18:39: note: to match this \u2018\
    {\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |            \
    \                           ^\n/tmp/tmpa4iv9r3w.cpp:156:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  156 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long prime = 0;\n  \
    \  long sum = 0;\n    long count = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        prime = lst[i];\n        if (prime > max_prime) {\n            max_prime\
    \ = prime;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n  \
    \      prime = lst[i];\n        if (prime > max_prime) {\n            ans += prime\
    \ % 10;\n            sum += prime % 10;\n            count++;\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpn4o0ubwu: /tmp/tmpn4o0ubwu.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (ans > max)\
    \ {\n            max = ans;\n        }\n        ans *= i;\n    }\n    return max;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpkn8o60n1: /tmp/tmpkn8o60n1.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138665
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long max_prime_digit\
    \ = 0;\n    long max_prime_digit_sum = 0;\n    long prime_digit_sum = 0;\n   \
    \ long prime_digit = 0;\n    long prime_digit_sum = 0;\n    long prime_digit_sum2\
    \ = 0;\n    long prime_digit_sum3 = 0;\n    long prime_digit_sum4 = 0;\n    long\
    \ prime_digit_sum5 = 0;\n    long prime_digit_sum6 = 0;\n    long prime_digit_sum7\
    \ = 0;\n    long prime_digit_sum8 = 0;\n    long prime_digit_sum9 = 0;\n    long\
    \ prime_digit_sum10 = 0;\n    long prime_digit_sum11 = 0;\n    long prime_digit_sum12\
    \ = 0;\n    long prime_digit_sum13 = 0;\n    long prime_digit_sum14 = 0;\n   \
    \ long prime_digit_sum15 = 0;\n    long prime_digit_sum16 = 0;\n    long prime_digit_sum17\
    \ = 0;\n    long prime_digit_sum18 = 0;\n    long prime_digit_sum19 = 0;\n   \
    \ long prime_digit_sum20 = 0;\n    long prime_digit_sum21 = 0;\n    long prime_digit_sum22\
    \ = 0;\n    long prime_digit_sum23 = 0;\n    long prime_digit_sum24 = 0;\n   \
    \ long prime_digit_sum25 = 0;\n    long prime_digit_sum26 = 0;\n    long prime_digit_sum27\
    \ = 0;\n    long prime_digit_sum28 = 0;\n    long prime_digit_sum29 = 0;\n   \
    \ long prime_digit_sum30 = 0;\n    long prime_digit_sum31 = 0;\n    long prime_digit_sum32\
    \ = 0;\n    long prime_digit_sum33 = 0;\n    long prime_digit_sum34 = 0;\n   \
    \ long prime_digit_sum35 = 0;\n    long prime_digit_sum36 = 0;\n    long prime_digit_sum37\
    \ = 0;\n    long prime_digit_sum38 = 0;\n    long prime_digit_sum39 = 0;\n   \
    \ long prime_digit_sum40 = 0;\n    long prime_digit_sum41 = 0;\n    long prime_digit_sum42\
    \ = 0;\n    long prime_digit_sum43 = 0;\n    long prime_digit_sum44 = 0;\n   \
    \ long prime_digit_sum45 = 0;\n    long prime_digit_sum46 = 0;\n    long prime_digit_sum47\
    \ = 0;\n    long prime_digit_sum48 = 0;\n    long prime_digit_sum49 = 0;\n   \
    \ long prime_digit_sum50 = 0;\n    long prime_digit_sum51 = 0;\n    long prime_digit_sum52\
    \ = 0;\n    long prime_digit_sum\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkfrmwuuq.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpkfrmwuuq.cpp:25:10: error: redeclaration of \u2018long\
    \ int prime_digit_sum\u2019\n   25 |     long prime_digit_sum = 0;\n      |  \
    \        ^~~~~~~~~~~~~~~\n/tmp/tmpkfrmwuuq.cpp:23:10: note: \u2018long int prime_digit_sum\u2019\
    \ previously declared here\n   23 |     long prime_digit_sum = 0;\n      |   \
    \       ^~~~~~~~~~~~~~~\n/tmp/tmpkfrmwuuq.cpp:78:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpkfrmwuuq.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt--;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n \
    \       cnt++;\n        if (cur > max) {\n            max = cur;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4n5l8r3e.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp4n5l8r3e.cpp:131:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  131 | int main() {\n      |     \
    \       ^\n/tmp/tmp4n5l8r3e.cpp:142:1: error: expected \u2018}\u2019 at end of\
    \ input\n  142 | }\n      | ^\n/tmp/tmp4n5l8r3e.cpp:18:39: note: to match this\
    \ \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |    \
    \                                   ^\n/tmp/tmp4n5l8r3e.cpp:142:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n  142 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n\
    \    long cnt83 = 0;\n    long cnt84\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdr3pf2va.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdr3pf2va.cpp:106:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpdr3pf2va.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    long prime = 0;\n    long\
    \ prime_sum = 0;\n    long prime_max = 0;\n    long prime_sum2 = 0;\n    long\
    \ prime_max2 = 0;\n    long prime_sum3 = 0;\n    long prime_max3 = 0;\n    long\
    \ prime_sum4 = 0;\n    long prime_max4 = 0;\n    long prime_sum5 = 0;\n    long\
    \ prime_max5 = 0;\n    long prime_sum6 = 0;\n    long prime_max6 = 0;\n    long\
    \ prime_sum7 = 0;\n    long prime_max7 = 0;\n    long prime_sum8 = 0;\n    long\
    \ prime_max8 = 0;\n    long prime_sum9 = 0;\n    long prime_max9 = 0;\n    long\
    \ prime_sum10 = 0;\n    long prime_max10 = 0;\n    long prime_sum11 = 0;\n   \
    \ long prime_max11 = 0;\n    long prime_sum12 = 0;\n    long prime_max12 = 0;\n\
    \    long prime_sum13 = 0;\n    long prime_max13 = 0;\n    long prime_sum14 =\
    \ 0;\n    long prime_max14 = 0;\n    long prime_sum15 = 0;\n    long prime_max15\
    \ = 0;\n    long prime_sum16 = 0;\n    long prime_max16 = 0;\n    long prime_sum17\
    \ = 0;\n    long prime_max17 = 0;\n    long prime_sum18 = 0;\n    long prime_max18\
    \ = 0;\n    long prime_sum19 = 0;\n    long prime_max19 = 0;\n    long prime_sum20\
    \ = 0;\n    long prime_max20 = 0;\n    long prime_sum21 = 0;\n    long prime_max21\
    \ = 0;\n    long prime_sum22 = 0;\n    long prime_max22 = 0;\n    long prime_sum23\
    \ = 0;\n    long prime_max23 = 0;\n    long prime_sum24 = 0;\n    long prime_max24\
    \ = 0;\n    long prime_sum25 = 0;\n    long prime_max25 = 0;\n    long prime_sum26\
    \ = 0;\n    long prime_max26 = 0;\n    long prime_sum27 = 0;\n    long prime_max27\
    \ = 0;\n    long prime_sum28 = 0;\n    long prime_max28 = 0;\n    long prime_sum29\
    \ = 0;\n    long prime_max29 = 0;\n    long prime_sum30 = 0;\n    long prime_max30\
    \ = 0;\n    long prime_sum31 = 0;\n    long prime_max31 = 0;\n    long prime_sum32\
    \ = 0;\n    long prime\n}\nint main() {\n    auto candidate = skjkasdkd;\n   \
    \ assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpku87itxl.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpku87itxl.cpp:86:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   86 | }\n      | ^\n/tmp/tmpku87itxl.cpp:86:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long temp = 0;\n    for (long i = 0; i < lst.size(); i++) {\n\
    \        temp = lst[i];\n        if (temp > max) {\n            max = temp;\n\
    \        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        temp =\
    \ lst[i];\n        if (temp > max) {\n            max = temp;\n        }\n   \
    \ }\n    for (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n   \
    \     if (temp > max) {\n            max = temp;\n        }\n    }\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n        if (temp > max)\
    \ {\n            max = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        if (temp > max) {\n            max =\
    \ temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   temp = lst[i];\n        if (temp > max) {\n            max = temp;\n     \
    \   }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n\
    \        if (temp > max) {\n            max = temp;\n        }\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n        if (temp\
    \ > max) {\n            max = temp;\n        }\n    }\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        temp = lst[i];\n        if (temp > max) {\n  \
    \          max = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        if (temp > max) {\n            max =\
    \ temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   temp = lst[i];\n        if (temp > max) {\n            max = temp;\n     \
    \   }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n\
    \        if (temp > max) {\n            max = temp;\n        }\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n        if (temp\
    \ > max) {\n            max = temp;\n        }\n    }\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        temp = lst[i];\n        if (temp > max) {\n  \
    \          max = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        if (temp > max) {\n            max =\
    \ temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   temp = lst[i];\n        if (temp > max) {\n            max = temp;\n     \
    \   }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n\
    \        if (temp > max) {\n            max = temp;\n        }\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        temp = lst\n}\nint main() {\n \
    \   auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1_xvrav4.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1_xvrav4.cpp:127:16: error: cannot convert \u2018std::vector<long\
    \ int>\u2019 to \u2018long int\u2019 in assignment\n  127 |         temp = lst\n\
    \      |                ^~~\n      |                |\n      |               \
    \ std::vector<long int>\n/tmp/tmp1_xvrav4.cpp:129:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  129 | int main() {\n     \
    \ |            ^\n/tmp/tmp1_xvrav4.cpp:140:1: error: expected \u2018}\u2019 at\
    \ end of input\n  140 | }\n      | ^\n/tmp/tmp1_xvrav4.cpp:18:39: note: to match\
    \ this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |\
    \                                       ^\n/tmp/tmp1_xvrav4.cpp:140:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  140 |\
    \ }\n      | ^\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 0;\n    long\
    \ max_prime_digit = 0;\n    long max_prime_digit_count = 0;\n    long max_prime_digit_sum\
    \ = 0;\n    long max_prime_digit_sum2 = 0;\n    long max_prime_digit_sum3 = 0;\n\
    \    long max_prime_digit_sum4 = 0;\n    long max_prime_digit_sum5 = 0;\n    long\
    \ max_prime_digit_sum6 = 0;\n    long max_prime_digit_sum7 = 0;\n    long max_prime_digit_sum8\
    \ = 0;\n    long max_prime_digit_sum9 = 0;\n    long max_prime_digit_sum10 = 0;\n\
    \    long max_prime_digit_sum11 = 0;\n    long max_prime_digit_sum12 = 0;\n  \
    \  long max_prime_digit_sum13 = 0;\n    long max_prime_digit_sum14 = 0;\n    long\
    \ max_prime_digit_sum15 = 0;\n    long max_prime_digit_sum16 = 0;\n    long max_prime_digit_sum17\
    \ = 0;\n    long max_prime_digit_sum18 = 0;\n    long max_prime_digit_sum19 =\
    \ 0;\n    long max_prime_digit_sum20 = 0;\n    long max_prime_digit_sum21 = 0;\n\
    \    long max_prime_digit_sum22 = 0;\n    long max_prime_digit_sum23 = 0;\n  \
    \  long max_prime_digit_sum24 = 0;\n    long max_prime_digit_sum25 = 0;\n    long\
    \ max_prime_digit_sum26 = 0;\n    long max_prime_digit_sum27 = 0;\n    long max_prime_digit_sum28\
    \ = 0;\n    long max_prime_digit_sum29 = 0;\n    long max_prime_digit_sum30 =\
    \ 0;\n    long max_prime_digit_sum31 = 0;\n    long max_prime_digit_sum32 = 0;\n\
    \    long max_prime_digit_sum33 = 0;\n    long max_prime_digit_sum34 = 0;\n  \
    \  long max_prime_digit_sum35 = 0;\n    long max_prime_digit_sum36 = 0;\n    long\
    \ max_prime_digit_sum37 = 0;\n    long max_prime_digit_sum38 = 0;\n    long max_prime_digit_sum39\
    \ = 0;\n    long max_prime_digit_sum40 = 0;\n    long max_prime_digit_sum41 =\
    \ 0;\n    long max_prime_digit_sum42 = 0;\n    long max_prime_digit_sum43 = 0;\n\
    \    long max_prime_digit_sum44 = 0;\n    long max_prime_digit_sum45 = 0;\n  \
    \  long max_prime_digit_sum46 = 0;\n    long max_prime_digit_sum47 = 0;\n    long\
    \ max_prime_digit_sum48 = 0;\n    long max_prime\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2brevujx.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2brevujx.cpp:72:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   72 | }\n      | ^\n/tmp/tmp2brevujx.cpp:72:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjd81ft3q.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjd81ft3q.cpp:49:10: error: redeclaration of \u2018long\
    \ int i\u2019\n   49 |     long i = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:23:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   23 |     long i =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:50:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   50 |     long j = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:24:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   24 |     long j =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:51:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   51 |     long k = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:25:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   25 |     long k =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:52:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   52 |     long l = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:26:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   26 |     long l =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:53:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   53 |     long m = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:27:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   27 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:54:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   54 |     long n = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:28:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   28 |     long n =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:55:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   55 |     long o = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:29:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   29 |     long o =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:56:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   56 |     long p = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:30:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   30 |     long p =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:57:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   57 |     long q = 1;\n      |          ^\n/tmp/"
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long prime_sum = 0;\n    long prime_max = 0;\n    long prime_sum2\
    \ = 0;\n    long prime_max2 = 0;\n    long prime_sum3 = 0;\n    long prime_max3\
    \ = 0;\n    long prime_sum4 = 0;\n    long prime_max4 = 0;\n    long prime_sum5\
    \ = 0;\n    long prime_max5 = 0;\n    long prime_sum6 = 0;\n    long prime_max6\
    \ = 0;\n    long prime_sum7 = 0;\n    long prime_max7 = 0;\n    long prime_sum8\
    \ = 0;\n    long prime_max8 = 0;\n    long prime_sum9 = 0;\n    long prime_max9\
    \ = 0;\n    long prime_sum10 = 0;\n    long prime_max10 = 0;\n    long prime_sum11\
    \ = 0;\n    long prime_max11 = 0;\n    long prime_sum12 = 0;\n    long prime_max12\
    \ = 0;\n    long prime_sum13 = 0;\n    long prime_max13 = 0;\n    long prime_sum14\
    \ = 0;\n    long prime_max14 = 0;\n    long prime_sum15 = 0;\n    long prime_max15\
    \ = 0;\n    long prime_sum16 = 0;\n    long prime_max16 = 0;\n    long prime_sum17\
    \ = 0;\n    long prime_max17 = 0;\n    long prime_sum18 = 0;\n    long prime_max18\
    \ = 0;\n    long prime_sum19 = 0;\n    long prime_max19 = 0;\n    long prime_sum20\
    \ = 0;\n    long prime_max20 = 0;\n    long prime_sum21 = 0;\n    long prime_max21\
    \ = 0;\n    long prime_sum22 = 0;\n    long prime_max22 = 0;\n    long prime_sum23\
    \ = 0;\n    long prime_max23 = 0;\n    long prime_sum24 = 0;\n    long prime_max24\
    \ = 0;\n    long prime_sum25 = 0;\n    long prime_max25 = 0;\n    long prime_sum26\
    \ = 0;\n    long prime_max26 = 0;\n    long prime_sum27 = 0;\n    long prime_max27\
    \ = 0;\n    long prime_sum28 = 0;\n    long prime_max28 = 0;\n    long prime_sum29\
    \ = 0;\n    long prime_max29 = 0;\n    long prime_sum30 = 0;\n    long prime_max30\
    \ = 0;\n    long prime_sum31 = 0;\n    long prime_max31 = 0;\n    long prime_sum32\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnetkje1k.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpnetkje1k.cpp:86:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   86 | }\n      | ^\n/tmp/tmpnetkje1k.cpp:86:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (auto it = lst.begin(); it != lst.end(); ++it) {\n        cur\
    \ = *it;\n        cnt = 0;\n        while (cur > 0) {\n            if (cnt % 2\
    \ == 0) {\n                if (cur % 2 == 0) {\n                    cur /= 2;\n\
    \                } else {\n                    cur = cur / 2;\n              \
    \  }\n            } else {\n                if (cur % 2 == 1) {\n            \
    \        cur /= 2;\n                } else {\n                    cur = cur /\
    \ 2;\n                }\n            }\n            cnt++;\n        }\n      \
    \  if (cnt > max) {\n            max = cnt;\n            ans = cur;\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp0619rs7e: /tmp/tmp0619rs7e.cpp:51: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    long prime = 0;\n    long\
    \ prime_sum = 0;\n    long prime_max = 0;\n    long prime_max2 = 0;\n    long\
    \ prime_max3 = 0;\n    long prime_max4 = 0;\n    long prime_max5 = 0;\n    long\
    \ prime_max6 = 0;\n    long prime_max7 = 0;\n    long prime_max8 = 0;\n    long\
    \ prime_max9 = 0;\n    long prime_max10 = 0;\n    long prime_max11 = 0;\n    long\
    \ prime_max12 = 0;\n    long prime_max13 = 0;\n    long prime_max14 = 0;\n   \
    \ long prime_max15 = 0;\n    long prime_max16 = 0;\n    long prime_max17 = 0;\n\
    \    long prime_max18 = 0;\n    long prime_max19 = 0;\n    long prime_max20 =\
    \ 0;\n    long prime_max21 = 0;\n    long prime_max22 = 0;\n    long prime_max23\
    \ = 0;\n    long prime_max24 = 0;\n    long prime_max25 = 0;\n    long prime_max26\
    \ = 0;\n    long prime_max27 = 0;\n    long prime_max28 = 0;\n    long prime_max29\
    \ = 0;\n    long prime_max30 = 0;\n    long prime_max31 = 0;\n    long prime_max32\
    \ = 0;\n    long prime_max33 = 0;\n    long prime_max34 = 0;\n    long prime_max35\
    \ = 0;\n    long prime_max36 = 0;\n    long prime_max37 = 0;\n    long prime_max38\
    \ = 0;\n    long prime_max39 = 0;\n    long prime_max40 = 0;\n    long prime_max41\
    \ = 0;\n    long prime_max42 = 0;\n    long prime_max43 = 0;\n    long prime_max44\
    \ = 0;\n    long prime_max45 = 0;\n    long prime_max46 = 0;\n    long prime_max47\
    \ = 0;\n    long prime_max48 = 0;\n    long prime_max49 = 0;\n    long prime_max50\
    \ = 0;\n    long prime_max51 = 0;\n    long prime_max52 = 0;\n    long prime_max53\
    \ = 0;\n    long prime_max54 = 0;\n    long prime_max55 = 0;\n    long prime_max56\
    \ = 0;\n    long prime_max57 = 0;\n    long prime_max58 = 0;\n    long prime_max59\
    \ = 0;\n    long prime_max60 = 0;\n    long prime_max61 = 0;\n    long prime_max62\
    \ = 0;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp7ivrybk1: /tmp/tmp7ivrybk1.cpp:88: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138668
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long sum = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long temp3\
    \ = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long\
    \ temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n\
    \    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14\
    \ = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n   \
    \ long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21\
    \ = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n   \
    \ long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28\
    \ = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n   \
    \ long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35\
    \ = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n   \
    \ long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42\
    \ = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n   \
    \ long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49\
    \ = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n   \
    \ long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56\
    \ = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n   \
    \ long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63\
    \ = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n   \
    \ long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70\
    \ = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n   \
    \ long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77\
    \ = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n   \
    \ long temp81 = 0;\n    long temp82 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmphfkt6k6m: /tmp/tmphfkt6k6m.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138667
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 0;\n    long\
    \ max_prime_digit = 0;\n    long max_prime_digit_sum = 0;\n    long max_prime_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum = 0;\n    long\
    \ max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpau45leqe.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpau45leqe.cpp:34:10: error: redeclaration of \u2018long\
    \ int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   34 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpau45leqe.cpp:33:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \ previously declared here\n   33 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpau45leqe.cpp:37:10: error: redeclaration of \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   37 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpau45leqe.cpp:36:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \ previously declared here\n   36 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpau45leqe.cpp:40:10: error: redeclaration of \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   40 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpau45leqe.cpp:39:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \ previously decla"
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i > max) {\n            max = i;\n        }\n    }\n    for (long i\
    \ : lst) {\n        if (i == max) {\n            ans += i;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpjv9gt5dv: /tmp/tmpjv9gt5dv.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    for (long i : lst) {\n        if (i == 0) {\n            continue;\n    \
    \    }\n        long prime = 0;\n        long primeCount = 0;\n        for (long\
    \ j = 2; j <= i; j++) {\n            if (i % j == 0) {\n                primeCount++;\n\
    \                if (primeCount > prime) {\n                    prime = primeCount;\n\
    \                }\n            }\n        }\n        if (prime > largestPrime)\
    \ {\n            largestPrime = prime;\n            largest = i;\n        }\n\
    \    }\n    for (long i : lst) {\n        if (i == 0) {\n            continue;\n\
    \        }\n        long prime = 0;\n        long primeCount = 0;\n        for\
    \ (long j = 2; j <= i; j++) {\n            if (i % j == 0) {\n               \
    \ primeCount++;\n                if (primeCount > prime) {\n                 \
    \   prime = primeCount;\n                }\n            }\n        }\n       \
    \ if (prime == largestPrime) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp2yy7cgzw: /tmp/tmp2yy7cgzw.cpp:63: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cnt = 0;\n    for (long\
    \ i : lst) {\n        if (i == 0) {\n            continue;\n        }\n      \
    \  cnt += i;\n        if (cnt > max) {\n            max = cnt;\n            ans\
    \ = i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp__3s0tx0: /tmp/tmp__3s0tx0.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138667
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long cur =\
    \ 0;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4\
    \ = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8\
    \ = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long\
    \ cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n\
    \    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19\
    \ = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long\
    \ cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n\
    \    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30\
    \ = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long\
    \ cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n\
    \    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41\
    \ = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long\
    \ cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n\
    \    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52\
    \ = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long\
    \ cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n\
    \    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63\
    \ = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long\
    \ cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n\
    \    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74\
    \ = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long\
    \ cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n\
    \    long cnt82 = 0;\n    long cnt83\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6mz4wuhf.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6mz4wuhf.cpp:105:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  105 | }\n      | ^\n/tmp/tmp6mz4wuhf.cpp:105:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long cur =\
    \ lst[0];\n    for (long i = 1; i < n; i++) {\n        if (lst[i] > cur) {\n \
    \           max = cur;\n            cur = lst[i];\n        } else {\n        \
    \    if (lst[i] > max) {\n                max = lst[i];\n            }\n     \
    \   }\n    }\n    long sum = 0;\n    while (cur > 0) {\n        sum += cur % 10;\n\
    \        cur /= 10;\n    }\n    ans = sum;\n    return ans;\n}\nint main() {\n\
    \    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpih1p4o1c: /tmp/tmpih1p4o1c.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138668
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n            max = i;\n       \
    \ }\n    }\n    if (max % 2 == 0) {\n        ans += max;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp8mrtj45b: /tmp/tmp8mrtj45b.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138668
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2 = 0;\n   \
    \ long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 =\
    \ 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long\
    \ temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n\
    \    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n    \n}\nint main() {\n  \
    \  auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpnlluts26: /tmp/tmpnlluts26.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138668
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \            ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n  \
    \          ans += i;\n        } else if (cnt < 0) {\n            cnt++;\n    \
    \        ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n      \
    \      ans += i;\n        }\n    }\n    max = ans;\n    for (long i : lst) {\n\
    \        if (i == 0) {\n            cnt++;\n            ans += i;\n        } else\
    \ if (cnt > 0) {\n            cnt--;\n            ans += i;\n        } else if\
    \ (cnt < 0) {\n            cnt++;\n            ans += i;\n        } else if (cnt\
    \ > 0) {\n            cnt--;\n            ans += i;\n        }\n    }\n    max\
    \ = ans;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \            ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n  \
    \          ans += i;\n        } else if (cnt < 0) {\n            cnt++;\n    \
    \        ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n      \
    \      ans += i;\n        }\n    }\n    max = ans;\n    for (long i : lst) {\n\
    \        if (i == 0) {\n            cnt++;\n            ans += i;\n        } else\
    \ if (cnt > 0) {\n            cnt--;\n            ans += i;\n        } else if\
    \ (cnt < 0) {\n            cnt++;\n            ans += i;\n        } else if (cnt\
    \ > 0) {\n            cnt--;\n            ans += i;\n        }\n    }\n    max\
    \ = ans;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \            ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n  \
    \          ans += i;\n        } else if (cnt < 0) {\n            cnt++;\n    \
    \        ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n      \
    \      ans += i;\n        }\n    }\n    max = ans;\n    for (long i : lst) {\n\
    \        if (i == 0) {\n            cnt++;\n            ans += i;\n        } else\
    \ if (cnt > 0) {\n            cnt--;\n            ans += i;\n        } else if\
    \ (cnt < 0) {\n            cnt++;\n            ans += i;\n        } else if (cnt\
    \ > 0) {\n            cnt--;\n            ans += i;\n        }\n    }\n    max\
    \ = ans;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \            ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n  \
    \          ans += i;\n        } else if (cnt < 0) {\n            cnt++;\n    \
    \        ans += i;\n        } else if (cnt > 0) {\n            cnt--;\n      \
    \      ans += i;\n        }\n    }\n    max = ans;\n    for (long i : lst) {\n\
    \        if (i == 0) {\n            cnt++;\n            \n}\nint main() {\n  \
    \  auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv2t3j75o.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpv2t3j75o.cpp:140:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  140 | int main() {\n      |     \
    \       ^\n/tmp/tmpv2t3j75o.cpp:151:1: error: expected \u2018}\u2019 at end of\
    \ input\n  151 | }\n      | ^\n/tmp/tmpv2t3j75o.cpp:135:24: note: to match this\
    \ \u2018{\u2019\n  135 |     for (long i : lst) {\n      |                   \
    \     ^\n/tmp/tmpv2t3j75o.cpp:151:1: error: expected \u2018}\u2019 at end of input\n\
    \  151 | }\n      | ^\n/tmp/tmpv2t3j75o.cpp:18:39: note: to match this \u2018\
    {\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |            \
    \                           ^\n/tmp/tmpv2t3j75o.cpp:151:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  151 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660138667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long temp = 0;\n    long cnt = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 ==\
    \ 0) {\n            prime = 2;\n            temp = lst[i];\n            while\
    \ (temp > 0) {\n                temp = temp / 2;\n                prime++;\n \
    \           }\n            if (prime > max) {\n                ans = max;\n  \
    \          }\n            sum += lst[i];\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpatg_0ptw: /tmp/tmpatg_0ptw.cpp:48: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138668
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long max_prime = 0;\n\
    \    long max_prime_digit = 0;\n    long max_prime_digit_sum = 0;\n    long max_prime_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum = 0;\n    long\
    \ max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi9tf0ail.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpi9tf0ail.cpp:35:10: error: redeclaration of \u2018long\
    \ int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   35 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpi9tf0ail.cpp:34:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \ previously declared here\n   34 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpi9tf0ail.cpp:40:10: error: redeclaration of \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   40 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpi9tf0ail.cpp:39:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \ previously declared here\n   39 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpi9tf0ail.cpp:41:10: error: redeclaration of \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   41 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpi9tf0ail.cpp:39:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit"
  stdout: ''
  timestamp: 1660138667
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ primes[1000];\n    long primesCount = 0;\n    for (long i = 0; i < n; i++) {\n\
    \        long prime = lst[i];\n        if (prime > maxPrime) {\n            maxPrime\
    \ = prime;\n        }\n        if (primesCount < prime) {\n            primes[primesCount++]\
    \ = prime;\n        }\n    }\n    for (long i = 0; i < primesCount; i++) {\n \
    \       for (long j = i + 1; j < primesCount; j++) {\n            if (primes[i]\
    \ > primes[j]) {\n                long temp = primes[i];\n                primes[i]\
    \ = primes[j];\n                primes[j] = temp;\n            }\n        }\n\
    \    }\n    for (long i = 0; i < n; i++) {\n        long prime = lst[i];\n   \
    \     if (prime > maxPrime) {\n            maxPrime = prime;\n        }\n    \
    \    if (primesCount < prime) {\n            primes[primesCount++] = prime;\n\
    \        }\n    }\n    for (long i = 0; i < primesCount; i++) {\n        for (long\
    \ j = i + 1; j < primesCount; j++) {\n            if (primes[i] > primes[j]) {\n\
    \                long temp = primes[i];\n                primes[i] = primes[j];\n\
    \                primes[j] = temp;\n            }\n        }\n    }\n    for (long\
    \ i = 0; i < n; i++) {\n        long prime = lst[i];\n        if (prime > maxPrime)\
    \ {\n            maxPrime = prime;\n        }\n        if (primesCount < prime)\
    \ {\n            primes[primesCount++] = prime;\n        }\n    }\n    for (long\
    \ i = 0; i < primesCount; i++) {\n        for (long j = i + 1; j < primesCount;\
    \ j++) {\n            if (primes[i] > primes[j]) {\n                long temp\
    \ = primes[i];\n                primes[i] = primes[j];\n                primes[j]\
    \ = temp;\n            }\n        }\n    }\n    for (long i = 0; i < n; i++) {\n\
    \        long prime = lst[i];\n        if (prime > maxPrime) {\n            maxPrime\
    \ = prime;\n        }\n        if (primesCount < prime) {\n            primes[primesCount++]\
    \ = prime;\n        }\n    }\n    for (long i = 0; i < primesCount; i++) {\n \
    \       for (long j = i + 1; j < primesCount; j++) {\n            if (primes[i]\
    \ > primes[j]) {\n                long temp = primes[i];\n                primes[i]\
    \ = primes[j];\n                primes[j] = temp;\n            }\n        }\n\
    \    }\n    for (long i = 0; i < n; i++) {\n        long prime = lst[i];\n   \
    \     if (prime > maxPrime) {\n            maxPrime = prime;\n        }\n    \
    \    if (primesCount < prime) {\n            primes[primesCount++] = prime;\n\
    \        }\n    }\n    for (long i = 0; i < primesCount; i++) {\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp29bi5e9_.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp29bi5e9_.cpp:106:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  106 | int main() {\n      |     \
    \       ^\n/tmp/tmp29bi5e9_.cpp:117:1: error: expected \u2018}\u2019 at end of\
    \ input\n  117 | }\n      | ^\n/tmp/tmp29bi5e9_.cpp:18:39: note: to match this\
    \ \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |    \
    \                                   ^\n/tmp/tmp29bi5e9_.cpp:117:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n  117 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660138668
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[]\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997}; // prime numbers less than 1000\n    long prime = primes[0];\n\
    \    for (long i = 0; i < n; i++) {\n        if (lst[i] > max) {\n           \
    \ max = lst[i];\n        }\n    }\n    for (long i = 0; i < n; i++) {\n      \
    \  if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for (long\
    \ i = 0; i < n; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < n;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > max) {\n    \
    \        max = lst[i];\n        }\n    }\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (long \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppogw5gh4.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmppogw5gh4.cpp:59:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   59 | }\n      | ^\n/tmp/tmppogw5gh4.cpp:58:14: error:\
    \ expected \u2018;\u2019 before \u2018}\u2019 token\n   58 |     for (long\n \
    \     |              ^\n      |              ;\n   59 | }\n      | ~         \
    \    \n/tmp/tmppogw5gh4.cpp:59:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   59 | }\n      | ^\n/tmp/tmppogw5gh4.cpp:58:14: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   58 |     for (long\n      |   \
    \           ^\n      |              ;\n   59 | }\n      | ~             \n/tmp/tmppogw5gh4.cpp:59:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   59 | }\n \
    \     | ^\n/tmp/tmppogw5gh4.cpp:58:14: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n   58 |     for (long\n      |         ~    ^\n      |        \
    \      )\n   59 | }\n      | ~             \n/tmp/tmppogw5gh4.cpp:59:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n   59 | }\n      | ^\n\
    /tmp/tmppogw5gh4.cpp:59:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138668
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long temp = 0;\n    long cnt = 0;\n    long cnt2 = 0;\n    long\
    \ cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long\
    \ cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n   \
    \ long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 =\
    \ 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long\
    \ cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n\
    \    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25\
    \ = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long\
    \ cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n\
    \    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36\
    \ = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long\
    \ cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n\
    \    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47\
    \ = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long\
    \ cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n\
    \    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58\
    \ = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long\
    \ cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n\
    \    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69\
    \ = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long\
    \ cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n\
    \    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80\
    \ = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpujku9v47: /tmp/tmpujku9v47.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138669
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += lst[i] - max;\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpsqx4sr4a: /tmp/tmpsqx4sr4a.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138669
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i : lst) {\n        cur = i;\n        while (cur > 0) {\n\
    \            cnt++;\n            cur /= 10;\n        }\n        if (cnt > max)\
    \ {\n            max = cnt;\n            ans = i;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp04ttp36h: /tmp/tmp04ttp36h.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138670
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = 2;\n    long q = n;\n    long r = n;\n    long s = n;\n    long\
    \ t = n;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpw72ued.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpgpw72ued.cpp:45:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   45 |     long m = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmpgpw72ued.cpp:46:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   46 |     long n = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmpgpw72ued.cpp:48:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   48 |     long p = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:22:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   22 |     long p =\
    \ 2;\n      |          ^\n/tmp/tmpgpw72ued.cpp:49:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   49 |     long q = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:23:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   23 |     long q =\
    \ n;\n      |          ^\n/tmp/tmpgpw72ued.cpp:50:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   50 |     long r = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:24:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   24 |     long r =\
    \ n;\n      |          ^\n/tmp/tmpgpw72ued.cpp:51:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   51 |     long s = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:25:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   25 |     long s =\
    \ n;\n      |          ^\n/tmp/tmpgpw72ued.cpp:52:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   52 |     long t = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:26:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   26 |     long t =\
    \ n;\n      |          ^\n/tmp/tmpgpw72ued.cpp:53:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   53 |     long u = 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:27:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   27 |     long u =\
    \ 1;\n      |          ^\n/tmp/tmpgpw72ued.cpp:54:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   54 |     long v = 1;\n     "
  stdout: ''
  timestamp: 1660138668
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n            prime\
    \ = lst[i];\n            max = prime + 1;\n        } else {\n            if (prime\
    \ > max) {\n                ans = prime - max;\n                max = prime;\n\
    \            } else {\n                ans += prime - max;\n                max\
    \ = prime;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmph_5kb6tb: /tmp/tmph_5kb6tb.cpp:40: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138669
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    long sum = 0;\n    long prime = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        sum += lst[i];\n        if (sum > largest) {\n            largest\
    \ = sum;\n            largestPrime = prime;\n        }\n        if (lst[i] % largestPrime\
    \ == 0) {\n            prime++;\n        }\n    }\n    ans = largest;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % largestPrime == 0)\
    \ {\n            ans += lst[i] / largestPrime;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138669
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0, sum = 0;\n    long n = lst.size();\n  \
    \  long m = lst.front();\n    for (long i = 0; i < n; i++) {\n        sum += lst[i];\n\
    \    }\n    for (long i = 2; i <= m; i++) {\n        if (sum % i == 0) {\n   \
    \         prime = i;\n            break;\n        }\n    }\n    for (long i =\
    \ 2; i <= m; i++) {\n        if (sum % i == 0) {\n            ans += prime * i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpjsh82bqr: /tmp/tmpjsh82bqr.cpp:40: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138669
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long curr\
    \ = 1;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4\
    \ = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8\
    \ = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long\
    \ cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n\
    \    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19\
    \ = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long\
    \ cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n\
    \    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30\
    \ = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long\
    \ cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n\
    \    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41\
    \ = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long\
    \ cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n\
    \    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52\
    \ = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long\
    \ cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n\
    \    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63\
    \ = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long\
    \ cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n\
    \    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74\
    \ = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long\
    \ cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n\
    \    long cnt82 = 0;\n    long cnt\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpltiyms0s.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpltiyms0s.cpp:105:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  105 | }\n      | ^\n/tmp/tmpltiyms0s.cpp:105:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138669
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long max_prime_digit\
    \ = 0;\n    long max_prime_digit_sum = 0;\n    long max_prime_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum = 0;\n    long\
    \ max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wepcejb.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2wepcejb.cpp:34:10: error: redeclaration of \u2018long\
    \ int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   34 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp2wepcejb.cpp:33:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \ previously declared here\n   33 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp2wepcejb.cpp:39:10: error: redeclaration of \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   39 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp2wepcejb.cpp:38:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \ previously declared here\n   38 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp2wepcejb.cpp:40:10: error: redeclaration of \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\u2019\
    \n   40 |     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp2wepcejb.cpp:38:10: note: \u2018long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit"
  stdout: ''
  timestamp: 1660138669
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long prime = 0;\n  \
    \  long sum = 0;\n    long temp = 0;\n    long count = 0;\n    long i = 0;\n \
    \   long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n\
    \ = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n \
    \   long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w\
    \ = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long\
    \ ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii = 0;\n    long jj =\
    \ 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n\
    \    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww =\
    \ 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n\
    \    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n\
    \    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long nnn = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n\
    \    long zzz = 0;\n    long aaaa = 0;\n    long bbbb = 0;\n    long cccc = 0;\n\
    \    long dddd = 0;\n    long eeee = 0;\n    long ffff = 0;\n    long gggg = 0;\n\
    \    long hhhh = 0;\n    long iiii = 0;\n    long jjjj = 0;\n    long kkkk = 0;\n\
    \    long llll = 0;\n    long mmmm = 0;\n    long nnnn = 0;\n    long oooo = 0;\n\
    \    long pppp = 0;\n    long qqqq = 0;\n    long rrrr = 0;\n    long ssss = 0;\n\
    \    long tttt = 0;\n    long uu\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmsp26e05.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmsp26e05.cpp:116:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  116 | }\n      | ^\n/tmp/tmpmsp26e05.cpp:116:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138669
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += (lst[i] - max);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5a7yaoc1: /tmp/tmp5a7yaoc1.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 0;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long \n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo9rblrej.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpo9rblrej.cpp:45:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   45 |     long m = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmpo9rblrej.cpp:46:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   46 |     long n = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmpo9rblrej.cpp:48:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   48 |     long p = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:22:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   22 |     long p =\
    \ 2;\n      |          ^\n/tmp/tmpo9rblrej.cpp:49:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   49 |     long q = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:23:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   23 |     long q =\
    \ n;\n      |          ^\n/tmp/tmpo9rblrej.cpp:50:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   50 |     long r = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:24:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   24 |     long r =\
    \ n;\n      |          ^\n/tmp/tmpo9rblrej.cpp:51:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   51 |     long s = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:25:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   25 |     long s =\
    \ 0;\n      |          ^\n/tmp/tmpo9rblrej.cpp:52:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   52 |     long t = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:26:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   26 |     long t =\
    \ 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:53:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   53 |     long u = 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:27:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   27 |     long u =\
    \ 1;\n      |          ^\n/tmp/tmpo9rblrej.cpp:54:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   54 |     long v = 1;\n     "
  stdout: ''
  timestamp: 1660138669
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            max = i;\n            sum += i;\n       \
    \ }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpihox_j56: /tmp/tmpihox_j56.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138669
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += (lst[i] - max);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5a7yaoc1: /tmp/tmp5a7yaoc1.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long temp = 0;\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n        while (temp\
    \ != 0) {\n            if (temp % 2 == 0) {\n                temp = (temp / 2);\n\
    \            } else {\n                temp = (3 * temp) + 1;\n            }\n\
    \        }\n        if (temp > largest) {\n            largest = temp;\n     \
    \   }\n    }\n    ans = largest;\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660138674
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long temp = 0;\n    long count = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n            prime = lst[i];\n\
    \            max = prime * prime;\n            count = 0;\n            while (prime\
    \ < max) {\n                temp = prime + 1;\n                if (temp % 2 ==\
    \ 0) {\n                    prime = temp;\n                    count++;\n    \
    \            }\n                else {\n                    prime = temp;\n  \
    \              }\n            }\n            sum += count;\n        }\n    }\n\
    \    ans = sum;\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpvq1_kp6s: /tmp/tmpvq1_kp6s.cpp:48: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138670
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, sum = 0;\n    long maxPrime = 0;\n    long prime =\
    \ 0;\n    long primeCount = 0;\n    long primeSum = 0;\n    long primeSumCount\
    \ = 0;\n    long primeSumCount2 = 0;\n    long primeSumCount3 = 0;\n    long primeSumCount4\
    \ = 0;\n    long primeSumCount5 = 0;\n    long primeSumCount6 = 0;\n    long primeSumCount7\
    \ = 0;\n    long primeSumCount8 = 0;\n    long primeSumCount9 = 0;\n    long primeSumCount10\
    \ = 0;\n    long primeSumCount11 = 0;\n    long primeSumCount12 = 0;\n    long\
    \ primeSumCount13 = 0;\n    long primeSumCount14 = 0;\n    long primeSumCount15\
    \ = 0;\n    long primeSumCount16 = 0;\n    long primeSumCount17 = 0;\n    long\
    \ primeSumCount18 = 0;\n    long primeSumCount19 = 0;\n    long primeSumCount20\
    \ = 0;\n    long primeSumCount21 = 0;\n    long primeSumCount22 = 0;\n    long\
    \ primeSumCount23 = 0;\n    long primeSumCount24 = 0;\n    long primeSumCount25\
    \ = 0;\n    long primeSumCount26 = 0;\n    long primeSumCount27 = 0;\n    long\
    \ primeSumCount28 = 0;\n    long primeSumCount29 = 0;\n    long primeSumCount30\
    \ = 0;\n    long primeSumCount31 = 0;\n    long primeSumCount32 = 0;\n    long\
    \ primeSumCount33 = 0;\n    long primeSumCount34 = 0;\n    long primeSumCount35\
    \ = 0;\n    long primeSumCount36 = 0;\n    long primeSumCount37 = 0;\n    long\
    \ primeSumCount38 = 0;\n    long primeSumCount39 = 0;\n    long primeSumCount40\
    \ = 0;\n    long primeSumCount41 = 0;\n    long primeSumCount42 = 0;\n    long\
    \ primeSumCount43 = 0;\n    long primeSumCount44 = 0;\n    long primeSumCount45\
    \ = 0;\n    long primeSumCount46 = 0;\n    long primeSumCount47 = 0;\n    long\
    \ primeSumCount48 = 0;\n    long primeSumCount49 = 0;\n    long primeSumCount50\
    \ = 0;\n    long primeSumCount51 = 0;\n    long primeSumCount52 = 0;\n    long\
    \ primeSumCount53 = 0;\n    long primeSumCount54 = 0;\n    long primeSumCount55\
    \ = 0;\n    long primeSumCount56 = 0;\n    long primeSumCount57 = 0;\n    long\
    \ primeSumCount58 = 0;\n    long primeSumCount59 = 0;\n    long primeSumCount60\
    \ = 0;\n    long primeSumCount\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdfhpg_8k.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdfhpg_8k.cpp:85:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   85 | }\n      | ^\n/tmp/tmpdfhpg_8k.cpp:85:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138669
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long n = lst.size();\n    long m =\
    \ lst.front();\n    for (long i = 2; i <= n; i++) {\n        if (lst.at(i) ==\
    \ m) {\n            ans += m;\n            prime = i;\n        }\n        else\
    \ {\n            long k = i;\n            while (k <= n && lst.at(k) == m) {\n\
    \                k++;\n            }\n            if (k <= n && lst.at(k) == m)\
    \ {\n                ans += m;\n                prime = k;\n            }\n  \
    \      }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  vector::_M_range_check: __n (which is 22) >= this->size() (which is 22)\n"
  stdout: ''
  timestamp: 1660138671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[1000];\n\
    \    long primes_size = 1000;\n    long primes_index = 0;\n    long primes_sum\
    \ = 0;\n    long primes_sum2 = 0;\n    long primes_sum3 = 0;\n    long primes_sum4\
    \ = 0;\n    long primes_sum5 = 0;\n    long primes_sum6 = 0;\n    long primes_sum7\
    \ = 0;\n    long primes_sum8 = 0;\n    long primes_sum9 = 0;\n    long primes_sum10\
    \ = 0;\n    long primes_sum11 = 0;\n    long primes_sum12 = 0;\n    long primes_sum13\
    \ = 0;\n    long primes_sum14 = 0;\n    long primes_sum15 = 0;\n    long primes_sum16\
    \ = 0;\n    long primes_sum17 = 0;\n    long primes_sum18 = 0;\n    long primes_sum19\
    \ = 0;\n    long primes_sum20 = 0;\n    long primes_sum21 = 0;\n    long primes_sum22\
    \ = 0;\n    long primes_sum23 = 0;\n    long primes_sum24 = 0;\n    long primes_sum25\
    \ = 0;\n    long primes_sum26 = 0;\n    long primes_sum27 = 0;\n    long primes_sum28\
    \ = 0;\n    long primes_sum29 = 0;\n    long primes_sum30 = 0;\n    long primes_sum31\
    \ = 0;\n    long primes_sum32 = 0;\n    long primes_sum33 = 0;\n    long primes_sum34\
    \ = 0;\n    long primes_sum35 = 0;\n    long primes_sum36 = 0;\n    long primes_sum37\
    \ = 0;\n    long primes_sum38 = 0;\n    long primes_sum39 = 0;\n    long primes_sum40\
    \ = 0;\n    long primes_sum41 = 0;\n    long primes_sum42 = 0;\n    long primes_sum43\
    \ = 0;\n    long primes_sum44 = 0;\n    long primes_sum45 = 0;\n    long primes_sum46\
    \ = 0;\n    long primes_sum47 = 0;\n    long primes_sum48 = 0;\n    long primes_sum49\
    \ = 0;\n    long primes_sum50 = 0;\n    long primes_sum51 = 0;\n    long primes_sum52\
    \ = 0;\n    long primes_sum53 = 0;\n    long primes_sum54 = 0;\n    long primes_sum55\
    \ = 0;\n    long primes_sum56 = 0;\n    long primes_sum57 = 0;\n    long primes_sum58\
    \ = 0;\n    long primes_sum59 = 0;\n    long primes_sum60\n}\nint main() {\n \
    \   auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp96kep1_.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpp96kep1_.cpp:84:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpp96kep1_.cpp:84:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138669
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long n\
    \ = lst.size();\n    long m = lst.front();\n    for (long i = 0; i < n; i++) {\n\
    \        sum += lst[i];\n        if (sum > max) {\n            max = sum;\n  \
    \      }\n    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] % m ==\
    \ 0) {\n            ans += lst[i] / m;\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138670
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long n = lst.size();\n    long m =\
    \ n / 2;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = n;\n\
    \    while (l > 1) {\n        if (lst[i] % 2 == 0) {\n            prime = lst[i];\n\
    \            i += 2;\n        } else {\n            prime = lst[i];\n        \
    \    i += 1;\n        }\n        ans += prime;\n        l = m / 2;\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138670
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    std::vector<bool> v(n);\n   \
    \ for(long i = 0; i < n; ++i) {\n        v[i] = false;\n    }\n    for(long i\
    \ = 0; i < n; ++i) {\n        if(v[i]) {\n            for(long j = i + 1; j <\
    \ n; ++j) {\n                if(lst[i] % lst[j] == 0) {\n                    v[j]\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    for(long i = 0; i < n; ++i) {\n        if(v[i]) {\n       \
    \     ans += lst[i];\n        }\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp_xzi345n: /tmp/tmp_xzi345n.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138670
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long max_prime_digit\
    \ = 0;\n    long max_prime_digit_sum = 0;\n    long prime_digit_sum = 0;\n   \
    \ long prime_digit = 0;\n    long prime_digit_sum = 0;\n    long prime_digit_sum2\
    \ = 0;\n    long prime_digit_sum3 = 0;\n    long prime_digit_sum4 = 0;\n    long\
    \ prime_digit_sum5 = 0;\n    long prime_digit_sum6 = 0;\n    long prime_digit_sum7\
    \ = 0;\n    long prime_digit_sum8 = 0;\n    long prime_digit_sum9 = 0;\n    long\
    \ prime_digit_sum10 = 0;\n    long prime_digit_sum11 = 0;\n    long prime_digit_sum12\
    \ = 0;\n    long prime_digit_sum13 = 0;\n    long prime_digit_sum14 = 0;\n   \
    \ long prime_digit_sum15 = 0;\n    long prime_digit_sum16 = 0;\n    long prime_digit_sum17\
    \ = 0;\n    long prime_digit_sum18 = 0;\n    long prime_digit_sum19 = 0;\n   \
    \ long prime_digit_sum20 = 0;\n    long prime_digit_sum21 = 0;\n    long prime_digit_sum22\
    \ = 0;\n    long prime_digit_sum23 = 0;\n    long prime_digit_sum24 = 0;\n   \
    \ long prime_digit_sum25 = 0;\n    long prime_digit_sum26 = 0;\n    long prime_digit_sum27\
    \ = 0;\n    long prime_digit_sum28 = 0;\n    long prime_digit_sum29 = 0;\n   \
    \ long prime_digit_sum30 = 0;\n    long prime_digit_sum31 = 0;\n    long prime_digit_sum32\
    \ = 0;\n    long prime_digit_sum33 = 0;\n    long prime_digit_sum34 = 0;\n   \
    \ long prime_digit_sum35 = 0;\n    long prime_digit_sum36 = 0;\n    long prime_digit_sum37\
    \ = 0;\n    long prime_digit_sum38 = 0;\n    long prime_digit_sum39 = 0;\n   \
    \ long prime_digit_sum40 = 0;\n    long prime_digit_sum41 = 0;\n    long prime_digit_sum42\
    \ = 0;\n    long prime_digit_sum43 = 0;\n    long prime_digit_sum44 = 0;\n   \
    \ long prime_digit_sum45 = 0;\n    long prime_digit_sum46 = 0;\n    long prime_digit_sum47\
    \ = 0;\n    long prime_digit_sum48 = 0;\n    long prime_digit_sum49 = 0;\n   \
    \ long prime_digit_sum50 = 0;\n    long prime_digit_sum51 = 0;\n    long prime_digit_sum52\
    \ = 0;\n    long prime_digit_sum\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkfrmwuuq.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpkfrmwuuq.cpp:25:10: error: redeclaration of \u2018long\
    \ int prime_digit_sum\u2019\n   25 |     long prime_digit_sum = 0;\n      |  \
    \        ^~~~~~~~~~~~~~~\n/tmp/tmpkfrmwuuq.cpp:23:10: note: \u2018long int prime_digit_sum\u2019\
    \ previously declared here\n   23 |     long prime_digit_sum = 0;\n      |   \
    \       ^~~~~~~~~~~~~~~\n/tmp/tmpkfrmwuuq.cpp:78:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpkfrmwuuq.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i > max) {\n            max = i;\n        }\n    }\n    for (long i\
    \ : lst) {\n        if (i % max == 0) {\n            ans += i;\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5jhkhl2i: /tmp/tmp5jhkhl2i.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long maxPrime = 0;\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 3 == 0) {\n            sum += i;\n        }\n        if (i % 5 == 0) {\n   \
    \         sum += i;\n        }\n        if (i % 7 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 11 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 13 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 17 == 0) {\n            sum += i;\n        }\n        if (i % 19 == 0) {\n \
    \           sum += i;\n        }\n        if (i % 23 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 29 == 0) {\n            sum += i;\n      \
    \  }\n        if (i % 31 == 0) {\n            sum += i;\n        }\n        if\
    \ (i % 37 == 0) {\n            sum += i;\n        }\n        if (i % 41 == 0)\
    \ {\n            sum += i;\n        }\n        if (i % 43 == 0) {\n          \
    \  sum += i;\n        }\n        if (i % 47 == 0) {\n            sum += i;\n \
    \       }\n        if (i % 53 == 0) {\n            sum += i;\n        }\n    \
    \    if (i % 59 == 0) {\n            sum += i;\n        }\n        if (i % 61\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 67 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 71 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 73 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 79 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 83 == 0) {\n            sum += i;\n        }\n        if (i % 89 == 0) {\n \
    \           sum += i;\n        }\n        if (i % 97 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 103 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 109 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 113 == 0) {\n            sum += i;\n        }\n        if (i % 121 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 127 == 0) {\n      \
    \      sum += i;\n        }\n        if (i % 131 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 137 == 0) {\n            sum += i;\n        }\n  \
    \      if (i % 143 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 149 == 0) {\n            sum += i;\n        }\n        if (i % 153 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 157 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 163 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 169 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 173 == 0) {\n            sum += i;\n        }\n        if (i % 179 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 183 == 0) {\n      \
    \      sum += i;\n        }\n        if (i % 189 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 193 == 0) {\n            sum += i;\n        }\n  \
    \      if (i % 197 == 0) {\n            sum += i;\n        }\n}\nint main() {\n\
    \    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdm6fum2z.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdm6fum2z.cpp:155:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  155 | int main() {\n      |     \
    \       ^\n/tmp/tmpdm6fum2z.cpp:166:1: error: expected \u2018}\u2019 at end of\
    \ input\n  166 | }\n      | ^\n/tmp/tmpdm6fum2z.cpp:18:39: note: to match this\
    \ \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |    \
    \                                   ^\n/tmp/tmpdm6fum2z.cpp:166:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n  166 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660138669
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = m;\n    long q = m;\n    long r = m;\n    long s = m;\n    long\
    \ t = m;\n    long u = m;\n    long v = m;\n    long w = m;\n    long x = m;\n\
    \    long y = m;\n    long z = m;\n    long a = m;\n    long b = m;\n    long\
    \ c = m;\n    long d = m;\n    long e = m;\n    long f = m;\n    long g = m;\n\
    \    long h = m;\n    long i = m;\n    long j = m;\n    long k = m;\n    long\
    \ l = m;\n    long m = m;\n    long n = m;\n    long o = m;\n    long p = m;\n\
    \    long q = m;\n    long r = m;\n    long s = m;\n    long t = m;\n    long\
    \ u = m;\n    long v = m;\n    long w = m;\n    long x = m;\n    long y = m;\n\
    \    long z = m;\n    long a = m;\n    long b = m;\n    long c = m;\n    long\
    \ d = m;\n    long e = m;\n    long f = m;\n    long g = m;\n    long h = m;\n\
    \    long i = m;\n    long j = m;\n    long k = m;\n    long l = m;\n    long\
    \ m = m;\n    long n = m;\n    long o = m;\n    long p = m;\n    long q = m;\n\
    \    long r = m;\n    long s = m;\n    long t = m;\n    long u = m;\n    long\
    \ v = m;\n    long w = m;\n    long x = m;\n    long y = m;\n    long z = m;\n\
    \    long a = m;\n    long b = m;\n    long c = m;\n    long d = m;\n    long\
    \ e = m;\n    long f = m;\n    long g = m;\n    long h = m;\n    long i = m;\n\
    \    long j = m;\n    long k = m;\n    long l = m;\n    long m = m;\n    long\
    \ n = m;\n    long o = m;\n    long p = m;\n    long q = m;\n    long r = m;\n\
    \    long s = m;\n    long t = m;\n    long u = m;\n    long v = m;\n    long\
    \ w = m;\n    long x = m;\n    long y = m;\n    long z = m;\n    long a = m;\n\
    \    long b = m;\n    long c = m;\n    long d = m;\n    long e = m;\n    long\
    \ f = m;\n    long g = m;\n    long h = m;\n    long i = m;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphtevki5q.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmphtevki5q.cpp:45:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   45 |     long m = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmphtevki5q.cpp:46:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   46 |     long n = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmphtevki5q.cpp:48:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   48 |     long p = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:22:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   22 |     long p =\
    \ m;\n      |          ^\n/tmp/tmphtevki5q.cpp:49:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   49 |     long q = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:23:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   23 |     long q =\
    \ m;\n      |          ^\n/tmp/tmphtevki5q.cpp:50:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   50 |     long r = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:24:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   24 |     long r =\
    \ m;\n      |          ^\n/tmp/tmphtevki5q.cpp:51:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   51 |     long s = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:25:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   25 |     long s =\
    \ m;\n      |          ^\n/tmp/tmphtevki5q.cpp:52:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   52 |     long t = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:26:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   26 |     long t =\
    \ m;\n      |          ^\n/tmp/tmphtevki5q.cpp:53:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   53 |     long u = m;\n      |          ^\n/tmp/tmphtevki5q.cpp:27:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   27 |     long u =\
    \ m;\n      |          ^\n/tmp/tmphtevki5q.cpp:54:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   54 |     long v = m;\n     "
  stdout: ''
  timestamp: 1660138669
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ primes[] = {0};\n    long primeSum = 0;\n    long primeSum2 = 0;\n    long primeSum3\
    \ = 0;\n    long primeSum4 = 0;\n    long primeSum5 = 0;\n    long primeSum6 =\
    \ 0;\n    long primeSum7 = 0;\n    long primeSum8 = 0;\n    long primeSum9 = 0;\n\
    \    long primeSum10 = 0;\n    long primeSum11 = 0;\n    long primeSum12 = 0;\n\
    \    long primeSum13 = 0;\n    long primeSum14 = 0;\n    long primeSum15 = 0;\n\
    \    long primeSum16 = 0;\n    long primeSum17 = 0;\n    long primeSum18 = 0;\n\
    \    long primeSum19 = 0;\n    long primeSum20 = 0;\n    long primeSum21 = 0;\n\
    \    long primeSum22 = 0;\n    long primeSum23 = 0;\n    long primeSum24 = 0;\n\
    \    long primeSum25 = 0;\n    long primeSum26 = 0;\n    long primeSum27 = 0;\n\
    \    long primeSum28 = 0;\n    long primeSum29 = 0;\n    long primeSum30 = 0;\n\
    \    long primeSum31 = 0;\n    long primeSum32 = 0;\n    long primeSum33 = 0;\n\
    \    long primeSum34 = 0;\n    long primeSum35 = 0;\n    long primeSum36 = 0;\n\
    \    long primeSum37 = 0;\n    long primeSum38 = 0;\n    long primeSum39 = 0;\n\
    \    long primeSum40 = 0;\n    long primeSum41 = 0;\n    long primeSum42 = 0;\n\
    \    long primeSum43 = 0;\n    long primeSum44 = 0;\n    long primeSum45 = 0;\n\
    \    long primeSum46 = 0;\n    long primeSum47 = 0;\n    long primeSum48 = 0;\n\
    \    long primeSum49 = 0;\n    long primeSum50 = 0;\n    long primeSum51 = 0;\n\
    \    long primeSum52 = 0;\n    long primeSum53 = 0;\n    long primeSum54 = 0;\n\
    \    long primeSum55 = 0;\n    long primeSum56 = 0;\n    long primeSum57 = 0;\n\
    \    long primeSum58 = 0;\n    long primeSum59 = 0;\n    long primeSum60 = 0;\n\
    \    long primeSum61 = 0;\n    long primeSum62 = 0;\n    long primeSum63 = 0;\n\
    \    long primeSum64 = 0;\n    long primeSum65 = 0;\n    long primeSum66 = 0;\n\
    \    long primeSum67 = 0;\n    long primeSum68 = 0;\n    long primeSum69 = 0;\n\
    \    long primeSum70 = 0;\n    \n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpxwowx2_0: /tmp/tmpxwowx2_0.cpp:96: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    long prime = 0;\n    long\
    \ prime_sum = 0;\n    long count = 0;\n    long digit = 0;\n    long digits =\
    \ 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n   \
    \ long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q =\
    \ 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n   \
    \ long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z =\
    \ 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n   \
    \ long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i =\
    \ 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n   \
    \ long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r =\
    \ 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n   \
    \ long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a =\
    \ 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n   \
    \ long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n   \
    \ long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s =\
    \ 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n   \
    \ long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b =\
    \ 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n   \
    \ long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n   \
    \ long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t =\
    \ 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n   \
    \ long y = 0;\n    long z = 0;\n    long a = 0;\n    long b\n}\nint main() {\n\
    \    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6onus3pg.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6onus3pg.cpp:52:10: error: redeclaration of \u2018long\
    \ int i\u2019\n   52 |     long i = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:26:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   26 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:53:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   53 |     long j = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:27:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   27 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:54:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   54 |     long k = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:28:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   28 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:55:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   55 |     long l = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:29:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   29 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:56:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   56 |     long m = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:30:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   30 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:57:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   57 |     long n = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:31:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   31 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:58:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   58 |     long o = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:32:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   32 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:59:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   59 |     long p = 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:33:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   33 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmp6onus3pg.cpp:60:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   60 |     long q = 0;\n      |          ^\n/tmp/"
  stdout: ''
  timestamp: 1660138670
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[1000];\n\
    \    memset(primes, 0, sizeof(primes));\n    primes[0] = 2;\n    primes[1] = 3;\n\
    \    primes[2] = 5;\n    primes[3] = 7;\n    primes[4] = 11;\n    primes[5] =\
    \ 13;\n    primes[6] = 17;\n    primes[7] = 19;\n    primes[8] = 23;\n    primes[9]\
    \ = 29;\n    primes[10] = 41;\n    primes[11] = 53;\n    primes[12] = 59;\n  \
    \  primes[13] = 67;\n    primes[14] = 81;\n    primes[15] = 97;\n    primes[16]\
    \ = 107;\n    primes[17] = 113;\n    primes[18] = 127;\n    primes[19] = 131;\n\
    \    primes[20] = 139;\n    primes[21] = 14;\n    primes[22] = 15;\n    primes[23]\
    \ = 17;\n    primes[24] = 19;\n    primes[25] = 23;\n    primes[26] = 29;\n  \
    \  primes[27] = 31;\n    primes[28] = 37;\n    primes[29] = 47;\n    primes[30]\
    \ = 51;\n    primes[31] = 53;\n    primes[32] = 59;\n    primes[33] = 61;\n  \
    \  primes[34] = 67;\n    primes[35] = 71;\n    primes[36] = 73 }\n    long sum\
    \ = 0;\n    for (long i = 0; i < n; i++) {\n        long curr = lst[i];\n    \
    \    if (primes[curr] == 0) {\n            primes[curr] = 1;\n            max\
    \ = curr;\n        }\n        else {\n            while (primes[curr] != 0) {\n\
    \                primes[curr] = primes[curr] + 1;\n                max = primes[curr];\n\
    \            }\n        }\n        sum += max;\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4c2vayo3.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp4c2vayo3.cpp:59:20: error: expected \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   59 |     primes[36] = 73 }\n      |                \
    \    ^~\n      |                    ;\n/tmp/tmp4c2vayo3.cpp:59:21: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n   59 |   \
    \  primes[36] = 73 }\n      |                     ^\n/tmp/tmp4c2vayo3.cpp: At\
    \ global scope:\n/tmp/tmp4c2vayo3.cpp:61:5: error: expected unqualified-id before\
    \ \u2018for\u2019\n   61 |     for (long i = 0; i < n; i++) {\n      |     ^~~\n\
    /tmp/tmp4c2vayo3.cpp:61:22: error: \u2018i\u2019 does not name a type\n   61 |\
    \     for (long i = 0; i < n; i++) {\n      |                      ^\n/tmp/tmp4c2vayo3.cpp:61:29:\
    \ error: \u2018i\u2019 does not name a type\n   61 |     for (long i = 0; i <\
    \ n; i++) {\n      |                             ^\n/tmp/tmp4c2vayo3.cpp:75:5:\
    \ error: expected unqualified-id before \u2018return\u2019\n   75 |     return\
    \ sum;\n      |     ^~~~~~\n/tmp/tmp4c2vayo3.cpp:76:1: error: expected declaration\
    \ before \u2018}\u2019 token\n   76 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138670
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long max_prime = 0;\n\
    \    long max_prime_digit = 0;\n    long max_prime_digit_sum = 0;\n    long prime_digit_sum\
    \ = 0;\n    long prime_digit_sum2 = 0;\n    long prime_digit_sum3 = 0;\n    long\
    \ prime_digit_sum4 = 0;\n    long prime_digit_sum5 = 0;\n    long prime_digit_sum6\
    \ = 0;\n    long prime_digit_sum7 = 0;\n    long prime_digit_sum8 = 0;\n    long\
    \ prime_digit_sum9 = 0;\n    long prime_digit_sum10 = 0;\n    long prime_digit_sum11\
    \ = 0;\n    long prime_digit_sum12 = 0;\n    long prime_digit_sum13 = 0;\n   \
    \ long prime_digit_sum14 = 0;\n    long prime_digit_sum15 = 0;\n    long prime_digit_sum16\
    \ = 0;\n    long prime_digit_sum17 = 0;\n    long prime_digit_sum18 = 0;\n   \
    \ long prime_digit_sum19 = 0;\n    long prime_digit_sum20 = 0;\n    long prime_digit_sum21\
    \ = 0;\n    long prime_digit_sum22 = 0;\n    long prime_digit_sum23 = 0;\n   \
    \ long prime_digit_sum24 = 0;\n    long prime_digit_sum25 = 0;\n    long prime_digit_sum26\
    \ = 0;\n    long prime_digit_sum27 = 0;\n    long prime_digit_sum28 = 0;\n   \
    \ long prime_digit_sum29 = 0;\n    long prime_digit_sum30 = 0;\n    long prime_digit_sum31\
    \ = 0;\n    long prime_digit_sum32 = 0;\n    long prime_digit_sum33 = 0;\n   \
    \ long prime_digit_sum34 = 0;\n    long prime_digit_sum35 = 0;\n    long prime_digit_sum36\
    \ = 0;\n    long prime_digit_sum37 = 0;\n    long prime_digit_sum38 = 0;\n   \
    \ long prime_digit_sum39 = 0;\n    long prime_digit_sum40 = 0;\n    long prime_digit_sum41\
    \ = 0;\n    long prime_digit_sum42 = 0;\n    long prime_digit_sum43 = 0;\n   \
    \ long prime_digit_sum44 = 0;\n    long prime_digit_sum45 = 0;\n    long prime_digit_sum46\
    \ = 0;\n    long prime_digit_sum47 = 0;\n    long prime_digit_sum48 = 0;\n   \
    \ long prime_digit_sum49 = 0;\n    long prime_digit_sum50 = 0;\n    long prime_digit_sum51\
    \ = 0;\n    long prime_digit_sum52 = 0;\n    long prime_digit_sum53 = 0;\n   \
    \ long prime_\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc30mq7ml.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpc30mq7ml.cpp:78:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpc30mq7ml.cpp:78:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138670
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjd81ft3q.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjd81ft3q.cpp:49:10: error: redeclaration of \u2018long\
    \ int i\u2019\n   49 |     long i = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:23:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   23 |     long i =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:50:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   50 |     long j = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:24:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   24 |     long j =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:51:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   51 |     long k = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:25:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   25 |     long k =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:52:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   52 |     long l = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:26:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   26 |     long l =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:53:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   53 |     long m = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:27:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   27 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:54:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   54 |     long n = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:28:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   28 |     long n =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:55:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   55 |     long o = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:29:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   29 |     long o =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:56:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   56 |     long p = 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:30:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   30 |     long p =\
    \ 1;\n      |          ^\n/tmp/tmpjd81ft3q.cpp:57:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   57 |     long q = 1;\n      |          ^\n/tmp/"
  stdout: ''
  timestamp: 1660138666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = lst[0];\n    long\
    \ cnt = 0;\n    for (long i : lst) {\n        if (i == cur) {\n            cnt++;\n\
    \        } else {\n            cnt = 0;\n        }\n        if (cnt > max) {\n\
    \            max = cnt;\n            ans = cur;\n        }\n        cur = i;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpi7t5h35m: /tmp/tmpi7t5h35m.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long cur\
    \ = 0;\n    long cnt = 0;\n    long n = 0;\n    long k = 0;\n    long max2 = 0;\n\
    \    long max3 = 0;\n    long max4 = 0;\n    long max5 = 0;\n    long max6 = 0;\n\
    \    long max7 = 0;\n    long max8 = 0;\n    long max9 = 0;\n    long max10 =\
    \ 0;\n    long max11 = 0;\n    long max12 = 0;\n    long max13 = 0;\n    long\
    \ max14 = 0;\n    long max15 = 0;\n    long max16 = 0;\n    long max17 = 0;\n\
    \    long max18 = 0;\n    long max19 = 0;\n    long max20 = 0;\n    long max21\
    \ = 0;\n    long max22 = 0;\n    long max23 = 0;\n    long max24 = 0;\n    long\
    \ max25 = 0;\n    long max26 = 0;\n    long max27 = 0;\n    long max28 = 0;\n\
    \    long max29 = 0;\n    long max30 = 0;\n    long max31 = 0;\n    long max32\
    \ = 0;\n    long max33 = 0;\n    long max34 = 0;\n    long max35 = 0;\n    long\
    \ max36 = 0;\n    long max37 = 0;\n    long max38 = 0;\n    long max39 = 0;\n\
    \    long max40 = 0;\n    long max41 = 0;\n    long max42 = 0;\n    long max43\
    \ = 0;\n    long max44 = 0;\n    long max45 = 0;\n    long max46 = 0;\n    long\
    \ max47 = 0;\n    long max48 = 0;\n    long max49 = 0;\n    long max50 = 0;\n\
    \    long max51 = 0;\n    long max52 = 0;\n    long max53 = 0;\n    long max54\
    \ = 0;\n    long max55 = 0;\n    long max56 = 0;\n    long max57 = 0;\n    long\
    \ max58 = 0;\n    long max59 = 0;\n    long max60 = 0;\n    long max61 = 0;\n\
    \    long max62 = 0;\n    long max63 = 0;\n    long max64 = 0;\n    long max65\
    \ = 0;\n    long max66 = 0;\n    long max67 = 0;\n    long max68 = 0;\n    long\
    \ max69 = 0;\n    long max70 = 0;\n    long max71 = 0;\n    long max72 = 0;\n\
    \    long max73 = 0;\n    long max74 = 0;\n    long max75 = 0;\n    long max76\
    \ = 0;\n    long max77 = 0;\n    long max78 = 0;\n    long max79 = 0;\n    long\
    \ max80 = 0;\n    long max81 = 0;\n    \n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmplohvy87k: /tmp/tmplohvy87k.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 ==\
    \ 0) {\n            prime = lst[i] / 2;\n            sum += prime;\n         \
    \   ans += prime;\n            max = std::max(prime, max);\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmprzd8bc30: /tmp/tmprzd8bc30.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i = 0; i < lst.size(); i++) {\n        cur = lst[i];\n        if (cur > max)\
    \ {\n            max = cur;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        cur = lst[i];\n        if (cur == max) {\n            ans +=\
    \ cur;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpc7iz9kek: /tmp/tmpc7iz9kek.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long n = lst.size();\n    long m =\
    \ lst.front();\n    long i = 2;\n    long j;\n    long k;\n    long temp;\n  \
    \  while (i < n) {\n        prime = 0;\n        for (j = i; j < n; j++) {\n  \
    \          if (lst.at(j) % i == 0) {\n                prime = 1;\n           \
    \     break;\n            }\n        }\n        if (prime == 0) {\n          \
    \  ans += m;\n        }\n        i++;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp6dsqjcay: /tmp/tmp6dsqjcay.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    for (long i : lst) {\n        if (i % 2 == 0)\
    \ {\n            max = i;\n            break;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            max = i;\n            break;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n     \
    \       max = i;\n            break;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i % 2 == 0) {\n            max = i;\n            break;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            max = i;\n            break;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n            max\
    \ = i;\n            break;\n        }\n    }\n    for (long i : lst) {\n     \
    \   if (i % 2 == 0) {\n            max = i;\n            break;\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n            max =\
    \ i;\n            break;\n        }\n    }\n    for (long i : lst) {\n       \
    \ if (i % 2 == 0) {\n            max = i;\n            break;\n        }\n   \
    \ }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n            max = i;\n\
    \            break;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            max = i;\n            break;\n        }\n    }\n  \
    \  for (long i : lst) {\n        if (i % 2 == 0) {\n            max = i;\n   \
    \         break;\n        }\n    }\n    for (long i : lst) {\n        if (i %\
    \ 2 == 0) {\n            max = i;\n            break;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i % 2 == 0) {\n            max = i;\n        \
    \    break;\n        }\n    }\n    for (long i : lst) {\n        if (i % 2 ==\
    \ 0) {\n            max = i;\n            break;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            max = i;\n            break;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n     \
    \       max = i;\n            break;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i % 2 == 0) {\n            max = i;\n            break;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    for (long i : lst) {\n\
    \        if (i % 2 == 0) {\n            max = i;\n            break;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i % 2 == 0) {\n            max\
    \ = i;\n            break;\n        }\n    }\n    for (long i : lst) {\n     \
    \   if (i % 2 == 0) {\n            max = i;\n            break;\n        }\n \
    \   }\n    for (\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptkz93qqj.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmptkz93qqj.cpp:159:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  159 | }\n      | ^\n/tmp/tmptkz93qqj.cpp:159:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n/tmp/tmptkz93qqj.cpp:158:10:\
    \ error: expected \u2018;\u2019 before \u2018}\u2019 token\n  158 |     for (\n\
    \      |          ^\n      |          ;\n  159 | }\n      | ~         \n/tmp/tmptkz93qqj.cpp:159:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  159 | }\n \
    \     | ^\n/tmp/tmptkz93qqj.cpp:158:10: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n  158 |     for (\n      |         ~^\n      |          )\n  159\
    \ | }\n      | ~         \n/tmp/tmptkz93qqj.cpp:159:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  159 | }\n      | ^\n/tmp/tmptkz93qqj.cpp:159:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138670
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long primes[] = {0};\n    long\
    \ primes_size = sizeof(primes) / sizeof(primes[0]);\n    long primes_index = 0;\n\
    \    long primes_sum = 0;\n    long primes_sum2 = 0;\n    long primes_sum3 = 0;\n\
    \    long primes_sum4 = 0;\n    long primes_sum5 = 0;\n    long primes_sum6 =\
    \ 0;\n    long primes_sum7 = 0;\n    long primes_sum8 = 0;\n    long primes_sum9\
    \ = 0;\n    long primes_sum10 = 0;\n    long primes_sum11 = 0;\n    long primes_sum12\
    \ = 0;\n    long primes_sum13 = 0;\n    long primes_sum14 = 0;\n    long primes_sum15\
    \ = 0;\n    long primes_sum16 = 0;\n    long primes_sum17 = 0;\n    long primes_sum18\
    \ = 0;\n    long primes_sum19 = 0;\n    long primes_sum20 = 0;\n    long primes_sum21\
    \ = 0;\n    long primes_sum22 = 0;\n    long primes_sum23 = 0;\n    long primes_sum24\
    \ = 0;\n    long primes_sum25 = 0;\n    long primes_sum26 = 0;\n    long primes_sum27\
    \ = 0;\n    long primes_sum28 = 0;\n    long primes_sum29 = 0;\n    long primes_sum30\
    \ = 0;\n    long primes_sum31 = 0;\n    long primes_sum32 = 0;\n    long primes_sum33\
    \ = 0;\n    long primes_sum34 = 0;\n    long primes_sum35 = 0;\n    long primes_sum36\
    \ = 0;\n    long primes_sum37 = 0;\n    long primes_sum38 = 0;\n    long primes_sum39\
    \ = 0;\n    long primes_sum40 = 0;\n    long primes_sum41 = 0;\n    long primes_sum42\
    \ = 0;\n    long primes_sum43 = 0;\n    long primes_sum44 = 0;\n    long primes_sum45\
    \ = 0;\n    long primes_sum46 = 0;\n    long primes_sum47 = 0;\n    long primes_sum48\
    \ = 0;\n    long primes_sum49 = 0;\n    long primes_sum50 = 0;\n    long primes_sum51\
    \ = 0;\n    long primes_sum52 = 0;\n    long primes_sum53 = 0;\n    long primes_sum54\
    \ = 0;\n    long primes_sum55 = 0;\n    long primes_sum56 = 0;\n    long primes_sum57\
    \ = 0;\n    long primes_sum58 = 0;\n    long primes_sum59 = 0;\n    long primes_sum\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph21ihvwc.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmph21ihvwc.cpp:83:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   83 | }\n      | ^\n/tmp/tmph21ihvwc.cpp:83:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n            if\
    \ (sum > max) {\n                max = sum;\n                ans = i;\n      \
    \      }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp68wedtm6: /tmp/tmp68wedtm6.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long temp\
    \ = 0;\n    long prime = 0;\n    long count = 0;\n    long sum = 0;\n    long\
    \ temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n\
    \    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9\
    \ = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n   \
    \ long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16\
    \ = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n   \
    \ long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23\
    \ = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n   \
    \ long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30\
    \ = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n   \
    \ long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37\
    \ = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n   \
    \ long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44\
    \ = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n   \
    \ long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51\
    \ = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n   \
    \ long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58\
    \ = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n   \
    \ long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65\
    \ = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n   \
    \ long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72\
    \ = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n   \
    \ long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79\
    \ = 0;\n    long temp80 = 0;\n    long temp81 = 0;\n    \n}\nint main() {\n  \
    \  auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpmah23eie: /tmp/tmpmah23eie.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = lst[0];\n    for\
    \ (long i = 1; i < lst.size(); i++) {\n        if (lst[i] > cur) {\n         \
    \   max = cur;\n            cur = lst[i];\n        } else if (lst[i] < cur) {\n\
    \            max = cur;\n            cur = lst[i];\n        } else {\n       \
    \     max = cur;\n            cur = lst[i];\n        }\n    }\n    long sum =\
    \ 0;\n    while (max != 0) {\n        sum += max % 10;\n        max /= 10;\n \
    \   }\n    ans = sum;\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5d9_8u6r: /tmp/tmp5d9_8u6r.cpp:44: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            cur = i;\n            while\
    \ (cur > 0) {\n                if (cur % 2 == 0) {\n                    cur =\
    \ cur / 2;\n                } else {\n                    cur = cur * 3;\n   \
    \             }\n            }\n            if (cur > max) {\n               \
    \ max = cur;\n            }\n        }\n    }\n    ans = max;\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpf09pvlgm: /tmp/tmpf09pvlgm.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n            if (i > max) {\n \
    \               max = i;\n            }\n        }\n    }\n    if (max % 2 ==\
    \ 0) {\n        ans += max;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpnhazchdj: /tmp/tmpnhazchdj.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long n = 0;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3\
    \ = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7\
    \ = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long\
    \ cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n\
    \    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18\
    \ = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long\
    \ cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n\
    \    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29\
    \ = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long\
    \ cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n\
    \    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40\
    \ = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long\
    \ cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n\
    \    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51\
    \ = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long\
    \ cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n\
    \    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62\
    \ = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long\
    \ cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n\
    \    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73\
    \ = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long\
    \ cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n\
    \    long cnt81 = 0;\n    long cnt82 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp0pe6nf5e: /tmp/tmp0pe6nf5e.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2 = 0;\n   \
    \ long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 =\
    \ 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long\
    \ temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n\
    \    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n    \n}\nint main() {\n  \
    \  auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpnlluts26: /tmp/tmpnlluts26.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138668
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    ans += i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 11 == 0) {\n            ans += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            ans += i;\n        }\n        if (i % 17\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 23 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 31 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 43 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 73 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            ans += i;\n        }\n        if (i % 83\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 97 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 109 == 0) {\n            ans += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            ans += i;\n        }\n        if (i % 127 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 131 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 137 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 141 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 147 == 0) {\n            ans += i;\n        }\n        if (i % 151 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 157 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 161 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 167 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 171 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 177 == 0) {\n            ans += i;\n        }\n        if (i % 181 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 187 == 0) {\n            an\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1jupsjdu.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1jupsjdu.cpp:143:13: error: \u2018an\u2019 was not declared\
    \ in this scope; did you mean \u2018ans\u2019?\n  143 |             an\n     \
    \ |             ^~\n      |             ans\n/tmp/tmp1jupsjdu.cpp:145:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  145\
    \ | int main() {\n      |            ^\n/tmp/tmp1jupsjdu.cpp:156:1: error: expected\
    \ \u2018}\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmp1jupsjdu.cpp:21:24:\
    \ note: to match this \u2018{\u2019\n   21 |     for (long i : lst) {\n      |\
    \                        ^\n/tmp/tmp1jupsjdu.cpp:156:1: error: expected \u2018\
    }\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmp1jupsjdu.cpp:18:39: note:\
    \ to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n\
    \      |                                       ^\n/tmp/tmp1jupsjdu.cpp:156:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  156 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            sum += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    sum += i;\n        }\n        if (i % 7 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 11 == 0) {\n            sum += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            sum += i;\n        }\n        if (i % 17\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 23 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 31 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            sum += i;\n        }\n        if (i % 41 == 0) {\n \
    \           sum += i;\n        }\n        if (i % 43 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            sum += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            sum += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            sum += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            sum += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  sum += i;\n        }\n        if (i % 71 == 0) {\n            sum += i;\n \
    \       }\n        if (i % 73 == 0) {\n            sum += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            sum += i;\n        }\n        if (i % 83\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 97 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 109 == 0) {\n            sum += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            sum += i;\n        }\n        if (i % 121 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 127 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 131 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 137 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 143 == 0) {\n            sum += i;\n        }\n        if (i % 149 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 153 == 0) {\n      \
    \      sum += i;\n        }\n        if (i % 157 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 163 == 0) {\n            sum += i;\n        }\n  \
    \      if (i % 169 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 173 == 0) {\n            sum += i;\n        }\n        if (i % 179 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 183 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 189 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 193 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 199 == 0) {\n            sum += i;\n        }\n        if (\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp233qdr3w.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp233qdr3w.cpp:155:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  155 | }\n      | ^\n/tmp/tmp233qdr3w.cpp:154:13:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  154 |         if\
    \ (\n      |            ~^\n      |             )\n  155 | }\n      | ~      \
    \      \n/tmp/tmp233qdr3w.cpp:155:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n  155 | }\n      | ^\n/tmp/tmp233qdr3w.cpp:156:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  156\
    \ | int main() {\n      |            ^\n/tmp/tmp233qdr3w.cpp:167:1: error: expected\
    \ \u2018}\u2019 at end of input\n  167 | }\n      | ^\n/tmp/tmp233qdr3w.cpp:18:39:\
    \ note: to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long>\
    \ lst) {\n      |                                       ^\n/tmp/tmp233qdr3w.cpp:167:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  167 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    long n = lst.size();\n   \
    \ for (long i = 0; i < n; i++) {\n        long temp = lst[i];\n        while (temp\
    \ > 0) {\n            long d = temp % 10;\n            if (d > max) {\n      \
    \          max = d;\n            }\n            temp /= 10;\n        }\n    }\n\
    \    sum = max;\n    for (long i = 0; i < n; i++) {\n        long temp = lst[i];\n\
    \        while (temp > 0) {\n            long d = temp % 10;\n            sum\
    \ += d;\n            temp /= 10;\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpkk576mg8: /tmp/tmpkk576mg8.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    for (long\
    \ i = 0; i < n; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > max)\
    \ {\n            ans += (lst[i] - max);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp6fcpb6jz: /tmp/tmp6fcpb6jz.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    long largestPrimeCount = 0;\n    long largestPrimeCount2 = 0;\n    long largestPrimeCount3\
    \ = 0;\n    long largestPrimeCount4 = 0;\n    long largestPrimeCount5 = 0;\n \
    \   long largestPrimeCount6 = 0;\n    long largestPrimeCount7 = 0;\n    long largestPrimeCount8\
    \ = 0;\n    long largestPrimeCount9 = 0;\n    long largestPrimeCount10 = 0;\n\
    \    long largestPrimeCount11 = 0;\n    long largestPrimeCount12 = 0;\n    long\
    \ largestPrimeCount13 = 0;\n    long largestPrimeCount14 = 0;\n    long largestPrimeCount15\
    \ = 0;\n    long largestPrimeCount16 = 0;\n    long largestPrimeCount17 = 0;\n\
    \    long largestPrimeCount18 = 0;\n    long largestPrimeCount19 = 0;\n    long\
    \ largestPrimeCount20 = 0;\n    long largestPrimeCount21 = 0;\n    long largestPrimeCount22\
    \ = 0;\n    long largestPrimeCount23 = 0;\n    long largestPrimeCount24 = 0;\n\
    \    long largestPrimeCount25 = 0;\n    long largestPrimeCount26 = 0;\n    long\
    \ largestPrimeCount27 = 0;\n    long largestPrimeCount28 = 0;\n    long largestPrimeCount29\
    \ = 0;\n    long largestPrimeCount30 = 0;\n    long largestPrimeCount31 = 0;\n\
    \    long largestPrimeCount32 = 0;\n    long largestPrimeCount33 = 0;\n    long\
    \ largestPrimeCount34 = 0;\n    long largestPrimeCount35 = 0;\n    long largestPrimeCount36\
    \ = 0;\n    long largestPrimeCount37 = 0;\n    long largestPrimeCount38 = 0;\n\
    \    long largestPrimeCount39 = 0;\n    long largestPrimeCount40 = 0;\n    long\
    \ largestPrimeCount41 = 0;\n    long largestPrimeCount42 = 0;\n    long largestPrimeCount43\
    \ = 0;\n    long largestPrimeCount44 = 0;\n    long largestPrimeCount45 = 0;\n\
    \    long largestPrimeCount46 = 0;\n    long largestPrimeCount47 = 0;\n    long\
    \ largestPrimeCount48 = 0;\n    long largestPrimeCount49 = 0;\n    long largestPrimeCount50\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg0j0lows.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpg0j0lows.cpp:72:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   72 | }\n      | ^\n/tmp/tmpg0j0lows.cpp:72:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138671
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long n = lst.size();\n    long m =\
    \ n / 2;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = n;\n\
    \    long m = n / 2;\n    long p = 0;\n    long q = 0;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n\
    \    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long\
    \ t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n\
    \    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long\
    \ c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n\
    \    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long\
    \ u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n\
    \    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long\
    \ d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long\
    \ e = 0;\n    long \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdvgyajvc.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdvgyajvc.cpp:26:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   26 |     long m = n / 2;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ n / 2;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:46:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   46 |     long i = 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:22:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   22 |     long i =\
    \ 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:47:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   47 |     long j = 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:23:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   23 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:48:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   48 |     long k = 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:24:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   24 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:49:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   49 |     long l = 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:25:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   25 |     long l =\
    \ n;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:50:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   50 |     long m = 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ n / 2;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:51:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   51 |     long n = 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmpdvgyajvc.cpp:53:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   53 |     long p = 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:27:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   27 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmpdvgyajvc.cpp:54:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   54 |     long q = 0;\n   "
  stdout: ''
  timestamp: 1660138671
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest == i) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpdopwwocj: /tmp/tmpdopwwocj.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += (lst[i] - max);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5a7yaoc1: /tmp/tmp5a7yaoc1.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ maxPrimeCount = 0;\n    long primeCount = 0;\n    long primeSum = 0;\n    long\
    \ primeSumCount = 0;\n    long primeSumCount2 = 0;\n    long primeSumCount3 =\
    \ 0;\n    long primeSumCount4 = 0;\n    long primeSumCount5 = 0;\n    long primeSumCount6\
    \ = 0;\n    long primeSumCount7 = 0;\n    long primeSumCount8 = 0;\n    long primeSumCount9\
    \ = 0;\n    long primeSumCount10 = 0;\n    long primeSumCount11 = 0;\n    long\
    \ primeSumCount12 = 0;\n    long primeSumCount13 = 0;\n    long primeSumCount14\
    \ = 0;\n    long primeSumCount15 = 0;\n    long primeSumCount16 = 0;\n    long\
    \ primeSumCount17 = 0;\n    long primeSumCount18 = 0;\n    long primeSumCount19\
    \ = 0;\n    long primeSumCount20 = 0;\n    long primeSumCount21 = 0;\n    long\
    \ primeSumCount22 = 0;\n    long primeSumCount23 = 0;\n    long primeSumCount24\
    \ = 0;\n    long primeSumCount25 = 0;\n    long primeSumCount26 = 0;\n    long\
    \ primeSumCount27 = 0;\n    long primeSumCount28 = 0;\n    long primeSumCount29\
    \ = 0;\n    long primeSumCount30 = 0;\n    long primeSumCount31 = 0;\n    long\
    \ primeSumCount32 = 0;\n    long primeSumCount33 = 0;\n    long primeSumCount34\
    \ = 0;\n    long primeSumCount35 = 0;\n    long primeSumCount36 = 0;\n    long\
    \ primeSumCount37 = 0;\n    long primeSumCount38 = 0;\n    long primeSumCount39\
    \ = 0;\n    long primeSumCount40 = 0;\n    long primeSumCount41 = 0;\n    long\
    \ primeSumCount42 = 0;\n    long primeSumCount43 = 0;\n    long primeSumCount44\
    \ = 0;\n    long primeSumCount45 = 0;\n    long primeSumCount46 = 0;\n    long\
    \ primeSumCount47 = 0;\n    long primeSumCount48 = 0;\n    long primeSumCount49\
    \ = 0;\n    long primeSumCount50 = 0;\n    long primeSumCount51 = 0;\n    long\
    \ primeSumCount52 = 0;\n    long primeSumCount53 = 0;\n    long primeSumCount54\
    \ = 0;\n    long primeSumCount55 = 0;\n    long primeSumCount56 = 0;\n    long\
    \ primeSumCount57 = 0;\n    long primeSumCount58 = 0;\n    long primeSumCount59\
    \ = 0;\n    long primeSumCount60 = 0;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpgc5eknzp: /tmp/tmpgc5eknzp.cpp:87: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    long prime = 0;\n    long\
    \ prime_sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ % 2 == 0) {\n            prime = lst[i] / 2;\n            prime_sum += prime\
    \ % 10;\n        }\n        if (lst[i] % 3 == 0) {\n            prime = lst[i]\
    \ / 3;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 5 == 0) {\n            prime = lst[i] / 5;\n            prime_sum += prime %\
    \ 10;\n        }\n        if (lst[i] % 7 == 0) {\n            prime = lst[i] /\
    \ 7;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] % 11\
    \ == 0) {\n            prime = lst[i] / 11;\n            prime_sum += prime %\
    \ 10;\n        }\n        if (lst[i] % 13 == 0) {\n            prime = lst[i]\
    \ / 13;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 17 == 0) {\n            prime = lst[i] / 17;\n            prime_sum += prime\
    \ % 10;\n        }\n        if (lst[i] % 19 == 0) {\n            prime = lst[i]\
    \ / 19;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 23 == 0) {\n            prime = lst[i] / 23;\n            prime_sum += prime\
    \ % 10;\n        }\n        if (lst[i] % 29 == 0) {\n            prime = lst[i]\
    \ / 29;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 31 == 0) {\n            prime = lst[i] / 31;\n            prime_sum += prime\
    \ % 10;\n        }\n        if (lst[i] % 37 == 0) {\n            prime = lst[i]\
    \ / 37;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 41 == 0) {\n            prime = lst[i] / 41;\n            prime_sum += prime\
    \ % 10;\n        }\n        if (lst[i] % 43 == 0) {\n            prime = lst[i]\
    \ / 43;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 47 == 0) {\n            prime = lst[i] / 47;\n            prime_sum += prime\
    \ % 10;\n        }\n        if (lst[i] % 53 == 0) {\n            prime = lst[i]\
    \ / 53;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 59 == 0) {\n            prime = lst[i] / 59;\n            prime_sum += prime\
    \ % 10;\n        }\n        if (lst[i] % 61 == 0) {\n            prime = lst[i]\
    \ / 61;\n            prime_sum += prime % 10;\n        }\n        if (lst[i] %\
    \ 67 == 0) {\n            prime = lst[i] / 67;\n            prime_sum += prime\
    \ \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkhlg99_s.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpkhlg99_s.cpp:98:31: error: expected \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   98 |             prime_sum += prime\n      |       \
    \                        ^\n      |                               ;\n   99 | }\n\
    \      | ~                              \n/tmp/tmpkhlg99_s.cpp:100:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  100\
    \ | int main() {\n      |            ^\n/tmp/tmpkhlg99_s.cpp:111:1: error: expected\
    \ \u2018}\u2019 at end of input\n  111 | }\n      | ^\n/tmp/tmpkhlg99_s.cpp:23:43:\
    \ note: to match this \u2018{\u2019\n   23 |     for (long i = 0; i < lst.size();\
    \ i++) {\n      |                                           ^\n/tmp/tmpkhlg99_s.cpp:111:1:\
    \ error: expected \u2018}\u2019 at end of input\n  111 | }\n      | ^\n/tmp/tmpkhlg99_s.cpp:18:39:\
    \ note: to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long>\
    \ lst) {\n      |                                       ^\n/tmp/tmpkhlg99_s.cpp:111:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  111 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138671
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (i == largest) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpczm6uebb: /tmp/tmpczm6uebb.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long n = 0;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3\
    \ = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7\
    \ = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long\
    \ cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n\
    \    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18\
    \ = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long\
    \ cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n\
    \    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29\
    \ = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long\
    \ cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n\
    \    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40\
    \ = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long\
    \ cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n\
    \    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51\
    \ = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long\
    \ cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n\
    \    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62\
    \ = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long\
    \ cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n\
    \    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73\
    \ = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long\
    \ cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n\
    \    long cnt81 = 0;\n    long cnt82 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp0pe6nf5e: /tmp/tmp0pe6nf5e.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long count = 0;\n    long n = lst.size();\n    long i = 0;\n \
    \   long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n\
    \ = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n \
    \   long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x\
    \ = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n \
    \   long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G\
    \ = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n \
    \   long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P\
    \ = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n \
    \   long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y\
    \ = 0;\n    long Z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n\
    \    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long\
    \ hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll =\
    \ 0;\n    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n\
    \    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long\
    \ uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy =\
    \ 0;\n    long zz = 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n\
    \    long ddd = 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n\
    \    long hhh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n\
    \    long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n    long ooo = 0;\n\
    \    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n\
    \    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n\
    \    long xxx = 0;\n\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp973f0szs.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp973f0szs.cpp:30:10: error: redeclaration of \u2018long\
    \ int n\u2019\n   30 |     long n = 0;\n      |          ^\n/tmp/tmp973f0szs.cpp:24:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   24 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmp973f0szs.cpp:119:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  119 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (i > largest) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (i == largest) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmph356n1mp: /tmp/tmph356n1mp.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long prime_sum = 0;\n    long prime_max = 0;\n    long prime_prime\
    \ = 0;\n    long prime_prime_sum = 0;\n    long prime_prime_max = 0;\n    long\
    \ prime_prime_prime = 0;\n    long prime_prime_prime_sum = 0;\n    long prime_prime_prime_max\
    \ = 0;\n    long prime_prime_prime_prime = 0;\n    long prime_prime_prime_prime_sum\
    \ = 0;\n    long prime_prime_prime_prime_max = 0;\n    long prime_prime_prime_prime_prime\
    \ = 0;\n    long prime_prime_prime_prime_prime_sum = 0;\n    long prime_prime_prime_prime_prime_max\
    \ = 0;\n    long prime_prime_prime_prime_prime_prime = 0;\n    long prime_prime_prime_prime_prime_prime_sum\
    \ = 0;\n    long prime_prime_prime_prime_prime_prime_max = 0;\n    long prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    long prime_prime_prime_prime_prime_prime_prime_sum = 0;\n    long\
    \ prime_prime_prime_prime_prime_prime_prime_max = 0;\n    long prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    long prime_prime_prime_prime_prime_prime_prime_prime_sum = 0;\n  \
    \  long prime_prime_prime_prime_prime_prime_prime_prime_max = 0;\n    long prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    long prime_prime_prime_prime_prime_prime_prime_prime_prime_sum = 0;\n\
    \    long prime_prime_prime_prime_prime_prime_prime_prime_prime_max = 0;\n   \
    \ long prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    long\
    \ prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_sum = 0;\n    long\
    \ prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_max = 0;\n    long\
    \ prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n   \
    \ long prime_prime_prime_prime_prime_\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcjl58uhf.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpcjl58uhf.cpp:54:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpcjl58uhf.cpp:54:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ primes[1000];\n    long primesCount = 0;\n    long primesSum = 0;\n    long\
    \ primesSum2 = 0;\n    long primesSum3 = 0;\n    long primesSum4 = 0;\n    long\
    \ primesSum5 = 0;\n    long primesSum6 = 0;\n    long primesSum7 = 0;\n    long\
    \ primesSum8 = 0;\n    long primesSum9 = 0;\n    long primesSum10 = 0;\n    long\
    \ primesSum11 = 0;\n    long primesSum12 = 0;\n    long primesSum13 = 0;\n   \
    \ long primesSum14 = 0;\n    long primesSum15 = 0;\n    long primesSum16 = 0;\n\
    \    long primesSum17 = 0;\n    long primesSum18 = 0;\n    long primesSum19 =\
    \ 0;\n    long primesSum20 = 0;\n    long primesSum21 = 0;\n    long primesSum22\
    \ = 0;\n    long primesSum23 = 0;\n    long primesSum24 = 0;\n    long primesSum25\
    \ = 0;\n    long primesSum26 = 0;\n    long primesSum27 = 0;\n    long primesSum28\
    \ = 0;\n    long primesSum29 = 0;\n    long primesSum30 = 0;\n    long primesSum31\
    \ = 0;\n    long primesSum32 = 0;\n    long primesSum33 = 0;\n    long primesSum34\
    \ = 0;\n    long primesSum35 = 0;\n    long primesSum36 = 0;\n    long primesSum37\
    \ = 0;\n    long primesSum38 = 0;\n    long primesSum39 = 0;\n    long primesSum40\
    \ = 0;\n    long primesSum41 = 0;\n    long primesSum42 = 0;\n    long primesSum43\
    \ = 0;\n    long primesSum44 = 0;\n    long primesSum45 = 0;\n    long primesSum46\
    \ = 0;\n    long primesSum47 = 0;\n    long primesSum48 = 0;\n    long primesSum49\
    \ = 0;\n    long primesSum50 = 0;\n    long primesSum51 = 0;\n    long primesSum52\
    \ = 0;\n    long primesSum53 = 0;\n    long primesSum54 = 0;\n    long primesSum55\
    \ = 0;\n    long primesSum56 = 0;\n    long primesSum57 = 0;\n    long primesSum58\
    \ = 0;\n    long primesSum59 = 0;\n    long primesSum60 = 0;\n    long primes\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzdu2msi7.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzdu2msi7.cpp:84:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpzdu2msi7.cpp:84:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long prime_sum = 0;\n    long prime_max = 0;\n    long prime_sum2\
    \ = 0;\n    long prime_max2 = 0;\n    long prime_sum3 = 0;\n    long prime_max3\
    \ = 0;\n    long prime_sum4 = 0;\n    long prime_max4 = 0;\n    long prime_sum5\
    \ = 0;\n    long prime_max5 = 0;\n    long prime_sum6 = 0;\n    long prime_max6\
    \ = 0;\n    long prime_sum7 = 0;\n    long prime_max7 = 0;\n    long prime_sum8\
    \ = 0;\n    long prime_max8 = 0;\n    long prime_sum9 = 0;\n    long prime_max9\
    \ = 0;\n    long prime_sum10 = 0;\n    long prime_max10 = 0;\n    long prime_sum11\
    \ = 0;\n    long prime_max11 = 0;\n    long prime_sum12 = 0;\n    long prime_max12\
    \ = 0;\n    long prime_sum13 = 0;\n    long prime_max13 = 0;\n    long prime_sum14\
    \ = 0;\n    long prime_max14 = 0;\n    long prime_sum15 = 0;\n    long prime_max15\
    \ = 0;\n    long prime_sum16 = 0;\n    long prime_max16 = 0;\n    long prime_sum17\
    \ = 0;\n    long prime_max17 = 0;\n    long prime_sum18 = 0;\n    long prime_max18\
    \ = 0;\n    long prime_sum19 = 0;\n    long prime_max19 = 0;\n    long prime_sum20\
    \ = 0;\n    long prime_max20 = 0;\n    long prime_sum21 = 0;\n    long prime_max21\
    \ = 0;\n    long prime_sum22 = 0;\n    long prime_max22 = 0;\n    long prime_sum23\
    \ = 0;\n    long prime_max23 = 0;\n    long prime_sum24 = 0;\n    long prime_max24\
    \ = 0;\n    long prime_sum25 = 0;\n    long prime_max25 = 0;\n    long prime_sum26\
    \ = 0;\n    long prime_max26 = 0;\n    long prime_sum27 = 0;\n    long prime_max27\
    \ = 0;\n    long prime_sum28 = 0;\n    long prime_max28 = 0;\n    long prime_sum29\
    \ = 0;\n    long prime_max29 = 0;\n    long prime_sum30 = 0;\n    long prime_max30\
    \ = 0;\n    long prime_sum31 = 0;\n    long prime_max31 = 0;\n    long prime_sum32\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnetkje1k.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpnetkje1k.cpp:86:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   86 | }\n      | ^\n/tmp/tmpnetkje1k.cpp:86:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138666
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[]\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997}; // prime numbers less than or equal to n\n    long p = 0;\n\
    \    for (long i = 0; i < n; i++) {\n        if (lst[i] > max) {\n           \
    \ max = lst[i];\n        }\n    }\n    for (long i = 0; i < n; i++) {\n      \
    \  if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for (long\
    \ i = 0; i < n; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (long i = 0; i < n;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > max) {\n    \
    \        max = lst[i];\n        }\n    }\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (long \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6iq0l8cc.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6iq0l8cc.cpp:59:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   59 | }\n      | ^\n/tmp/tmp6iq0l8cc.cpp:58:14: error:\
    \ expected \u2018;\u2019 before \u2018}\u2019 token\n   58 |     for (long\n \
    \     |              ^\n      |              ;\n   59 | }\n      | ~         \
    \    \n/tmp/tmp6iq0l8cc.cpp:59:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   59 | }\n      | ^\n/tmp/tmp6iq0l8cc.cpp:58:14: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   58 |     for (long\n      |   \
    \           ^\n      |              ;\n   59 | }\n      | ~             \n/tmp/tmp6iq0l8cc.cpp:59:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   59 | }\n \
    \     | ^\n/tmp/tmp6iq0l8cc.cpp:58:14: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n   58 |     for (long\n      |         ~    ^\n      |        \
    \      )\n   59 | }\n      | ~             \n/tmp/tmp6iq0l8cc.cpp:59:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n   59 | }\n      | ^\n\
    /tmp/tmp6iq0l8cc.cpp:59:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (i == largest) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpczm6uebb: /tmp/tmpczm6uebb.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i : lst) {\n        cur += i;\n        cnt += 1;\n     \
    \   if (cur > max) {\n            max = cur;\n        }\n    }\n    if (cnt >\
    \ 1) {\n        ans = max;\n        for (long i : lst) {\n            if (i %\
    \ max == 0) {\n                ans += i;\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp8lopamur: /tmp/tmp8lopamur.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    long prime = 0;\n    long\
    \ count = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        prime = 1;\n\
    \        for (long j = i; j < lst.size(); j++) {\n            if (lst[j] % i ==\
    \ 0) {\n                prime = 0;\n                break;\n            }\n  \
    \      }\n        if (prime == 1) {\n            max = lst[i];\n            sum\
    \ += lst[i];\n            count++;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long prime_sum = 0;\n    long prime_max = 0;\n    long prime_max2\
    \ = 0;\n    long prime_max3 = 0;\n    long prime_max4 = 0;\n    long prime_max5\
    \ = 0;\n    long prime_max6 = 0;\n    long prime_max7 = 0;\n    long prime_max8\
    \ = 0;\n    long prime_max9 = 0;\n    long prime_max10 = 0;\n    long prime_max11\
    \ = 0;\n    long prime_max12 = 0;\n    long prime_max13 = 0;\n    long prime_max14\
    \ = 0;\n    long prime_max15 = 0;\n    long prime_max16 = 0;\n    long prime_max17\
    \ = 0;\n    long prime_max18 = 0;\n    long prime_max19 = 0;\n    long prime_max20\
    \ = 0;\n    long prime_max21 = 0;\n    long prime_max22 = 0;\n    long prime_max23\
    \ = 0;\n    long prime_max24 = 0;\n    long prime_max25 = 0;\n    long prime_max26\
    \ = 0;\n    long prime_max27 = 0;\n    long prime_max28 = 0;\n    long prime_max29\
    \ = 0;\n    long prime_max30 = 0;\n    long prime_max31 = 0;\n    long prime_max32\
    \ = 0;\n    long prime_max33 = 0;\n    long prime_max34 = 0;\n    long prime_max35\
    \ = 0;\n    long prime_max36 = 0;\n    long prime_max37 = 0;\n    long prime_max38\
    \ = 0;\n    long prime_max39 = 0;\n    long prime_max40 = 0;\n    long prime_max41\
    \ = 0;\n    long prime_max42 = 0;\n    long prime_max43 = 0;\n    long prime_max44\
    \ = 0;\n    long prime_max45 = 0;\n    long prime_max46 = 0;\n    long prime_max47\
    \ = 0;\n    long prime_max48 = 0;\n    long prime_max49 = 0;\n    long prime_max50\
    \ = 0;\n    long prime_max51 = 0;\n    long prime_max52 = 0;\n    long prime_max53\
    \ = 0;\n    long prime_max54 = 0;\n    long prime_max55 = 0;\n    long prime_max56\
    \ = 0;\n    long prime_max57 = 0;\n    long prime_max58 = 0;\n    long prime_max59\
    \ = 0;\n    long prime_max60 = 0;\n    long prime_max61 = 0;\n    long \n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp95pei219.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp95pei219.cpp:86:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   86 | }\n      | ^\n/tmp/tmp95pei219.cpp:86:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (i == largest) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpczm6uebb: /tmp/tmpczm6uebb.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    ans += i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 11 == 0) {\n            ans += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            ans += i;\n        }\n        if (i % 17\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 23 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 31 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 43 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 73 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            ans += i;\n        }\n        if (i % 83\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 97 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 101 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 103 == 0) {\n            ans += i;\n        }\n        if (i\
    \ % 107 == 0) {\n            ans += i;\n        }\n        if (i % 109 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 113 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 127 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 131 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 137 == 0) {\n            ans += i;\n        }\n        if (i % 139 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 143 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 147 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 151 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 157 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 159 == 0) {\n            ans += i;\n        }\n        if (i % 163 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 167 == 0) {\n            ans\
    \ += \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt1goa24_.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpt1goa24_.cpp:144:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  144 | }\n      | ^\n/tmp/tmpt1goa24_.cpp:145:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  145 | int main() {\n      |            ^\n/tmp/tmpt1goa24_.cpp:156:1: error:\
    \ expected \u2018}\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmpt1goa24_.cpp:21:24:\
    \ note: to match this \u2018{\u2019\n   21 |     for (long i : lst) {\n      |\
    \                        ^\n/tmp/tmpt1goa24_.cpp:156:1: error: expected \u2018\
    }\u2019 at end of input\n  156 | }\n      | ^\n/tmp/tmpt1goa24_.cpp:18:39: note:\
    \ to match this \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n\
    \      |                                       ^\n/tmp/tmpt1goa24_.cpp:156:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  156 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \        }\n        if (cnt > max) {\n            max = cnt;\n            cur\
    \ = i;\n        }\n        if (i == cur) {\n            cnt++;\n        }\n  \
    \  }\n    ans = cur;\n    for (long i : lst) {\n        if (i == cur) {\n    \
    \        ans += i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp5ejmtu81: /tmp/tmp5ejmtu81.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    for (long i = 0; i <\
    \ lst.size(); i++) {\n        long prime = 0;\n        for (long j = i; j < lst.size();\
    \ j++) {\n            if (lst[j] % i == 0) {\n                prime = 1;\n   \
    \             break;\n            }\n        }\n        if (prime == 0) {\n  \
    \          ans += lst[i];\n        }\n        if (lst[i] > max_prime) {\n    \
    \        max_prime = lst[i];\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long\
    \ m = m;\n    long n = n;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long i = i;\n    long\
    \ j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n    long n = n;\n\
    \    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long\
    \ m = m;\n    long n = n;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long i = i;\n    long\
    \ j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n    long n = n;\n\
    \    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long\
    \ m = m;\n    long n = n;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long i = i;\n    long\
    \ j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n    long n = n;\n\
    \    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long\
    \ m = m;\n    long n = n;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long i = i;\n    long\
    \ j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n    long n = n;\n\
    \    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long\
    \ m = m;\n    long n = n;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long i = i;\n    long\
    \ j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n    long n = n;\n\
    \    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long\
    \ m = m;\n    \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprm08912q.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmprm08912q.cpp:26:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   26 |     long m = m;\n      |          ^\n/tmp/tmprm08912q.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmprm08912q.cpp:27:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   27 |     long n = n;\n      |          ^\n/tmp/tmprm08912q.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmprm08912q.cpp:28:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   28 |     long i = i;\n      |          ^\n/tmp/tmprm08912q.cpp:22:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   22 |     long i =\
    \ 2;\n      |          ^\n/tmp/tmprm08912q.cpp:29:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   29 |     long j = j;\n      |          ^\n/tmp/tmprm08912q.cpp:23:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   23 |     long j =\
    \ 2;\n      |          ^\n/tmp/tmprm08912q.cpp:30:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   30 |     long k = k;\n      |          ^\n/tmp/tmprm08912q.cpp:24:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   24 |     long k =\
    \ 2;\n      |          ^\n/tmp/tmprm08912q.cpp:31:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   31 |     long l = l;\n      |          ^\n/tmp/tmprm08912q.cpp:25:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   25 |     long l =\
    \ 2;\n      |          ^\n/tmp/tmprm08912q.cpp:32:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   32 |     long m = m;\n      |          ^\n/tmp/tmprm08912q.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmprm08912q.cpp:33:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   33 |     long n = n;\n      |          ^\n/tmp/tmprm08912q.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmprm08912q.cpp:34:10: error: redeclaration\
    \ of \u2018long int i\u2019\n   34 |   "
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long maxPrime = 0;\n    long sum = 0;\n    for (long i : lst) {\n\
    \        if (i == 0) {\n            continue;\n        }\n        long prime =\
    \ i;\n        while (prime > 1) {\n            if (i % prime == 0) {\n       \
    \         break;\n            }\n            prime = prime / 2;\n        }\n \
    \       if (prime > maxPrime) {\n            maxPrime = prime;\n        }\n  \
    \      sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpqh2ecxjl: /tmp/tmpqh2ecxjl.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = 2;\n    long q = n;\n    long r = 2;\n    long s = 2;\n    long\
    \ t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n\
    \    long y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n    long\
    \ c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 2;\n    long g = 2;\n\
    \    long h = 2;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long\
    \ l = 2;\n    long m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n\
    \    long q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n    long\
    \ u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n\
    \    long z = 2;\n    long a = 2;\n    long b = 2;\n    long c = 2;\n    long\
    \ d = 2;\n    long e = 2;\n    long f = 2;\n    long g = 2;\n    long h = 2;\n\
    \    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n\
    \    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long\
    \ v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n\
    \    long a = 2;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long\
    \ e = 2;\n    long f = 2;\n    long g = 2;\n    long h = 2;\n    long i = 2;\n\
    \    long j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n    long\
    \ n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n    long r = 2;\n\
    \    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n    long\
    \ w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 2;\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 2;\n    long g = 2;\n    long h = 2;\n    long i = 2;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqqr8g_5f.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpqqr8g_5f.cpp:45:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   45 |     long m = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:21:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   21 |     long m =\
    \ lst.front();\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:46:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   46 |     long n = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:20:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   20 |     long n =\
    \ lst.size();\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:48:10: error: redeclaration\
    \ of \u2018long int p\u2019\n   48 |     long p = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:22:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   22 |     long p =\
    \ 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:49:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   49 |     long q = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:23:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   23 |     long q =\
    \ n;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:50:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   50 |     long r = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:24:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   24 |     long r =\
    \ 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:51:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   51 |     long s = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:25:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   25 |     long s =\
    \ 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:52:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   52 |     long t = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:26:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   26 |     long t =\
    \ 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:53:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   53 |     long u = 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:27:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   27 |     long u =\
    \ 2;\n      |          ^\n/tmp/tmpqqr8g_5f.cpp:54:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   54 |     long v = 2;\n     "
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long count = 0;\n    long i = 1;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n\
    \    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long\
    \ J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n\
    \    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long\
    \ S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n\
    \    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppgr_ax_7.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmppgr_ax_7.cpp:76:10: error: redeclaration of \u2018long\
    \ int i\u2019\n   76 |     long i = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:24:10:\
    \ note: \u2018long int i\u2019 previously declared here\n   24 |     long i =\
    \ 1;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:77:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   77 |     long j = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:25:10:\
    \ note: \u2018long int j\u2019 previously declared here\n   25 |     long j =\
    \ 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:78:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   78 |     long k = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:26:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   26 |     long k =\
    \ 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:79:10: error: redeclaration of\
    \ \u2018long int l\u2019\n   79 |     long l = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:27:10:\
    \ note: \u2018long int l\u2019 previously declared here\n   27 |     long l =\
    \ 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:80:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   80 |     long m = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:28:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   28 |     long m =\
    \ 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:81:10: error: redeclaration of\
    \ \u2018long int n\u2019\n   81 |     long n = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:29:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   29 |     long n =\
    \ 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:82:10: error: redeclaration of\
    \ \u2018long int o\u2019\n   82 |     long o = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:30:10:\
    \ note: \u2018long int o\u2019 previously declared here\n   30 |     long o =\
    \ 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:83:10: error: redeclaration of\
    \ \u2018long int p\u2019\n   83 |     long p = 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:31:10:\
    \ note: \u2018long int p\u2019 previously declared here\n   31 |     long p =\
    \ 0;\n      |          ^\n/tmp/tmppgr_ax_7.cpp:84:10: error: redeclaration of\
    \ \u2018long int q\u2019\n   84 |     long q = 0;\n      |          ^\n/tmp/"
  stdout: ''
  timestamp: 1660138672
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long max2 = 0;\n    long max3\
    \ = 0;\n    long max4 = 0;\n    long max5 = 0;\n    long max6 = 0;\n    long max7\
    \ = 0;\n    long max8 = 0;\n    long max9 = 0;\n    long max10 = 0;\n    long\
    \ max11 = 0;\n    long max12 = 0;\n    long max13 = 0;\n    long max14 = 0;\n\
    \    long max15 = 0;\n    long max16 = 0;\n    long max17 = 0;\n    long max18\
    \ = 0;\n    long max19 = 0;\n    long max20 = 0;\n    long max21 = 0;\n    long\
    \ max22 = 0;\n    long max23 = 0;\n    long max24 = 0;\n    long max25 = 0;\n\
    \    long max26 = 0;\n    long max27 = 0;\n    long max28 = 0;\n    long max29\
    \ = 0;\n    long max30 = 0;\n    long max31 = 0;\n    long max32 = 0;\n    long\
    \ max33 = 0;\n    long max34 = 0;\n    long max35 = 0;\n    long max36 = 0;\n\
    \    long max37 = 0;\n    long max38 = 0;\n    long max39 = 0;\n    long max40\
    \ = 0;\n    long max41 = 0;\n    long max42 = 0;\n    long max43 = 0;\n    long\
    \ max44 = 0;\n    long max45 = 0;\n    long max46 = 0;\n    long max47 = 0;\n\
    \    long max48 = 0;\n    long max49 = 0;\n    long max50 = 0;\n    long max51\
    \ = 0;\n    long max52 = 0;\n    long max53 = 0;\n    long max54 = 0;\n    long\
    \ max55 = 0;\n    long max56 = 0;\n    long max57 = 0;\n    long max58 = 0;\n\
    \    long max59 = 0;\n    long max60 = 0;\n    long max61 = 0;\n    long max62\
    \ = 0;\n    long max63 = 0;\n    long max64 = 0;\n    long max65 = 0;\n    long\
    \ max66 = 0;\n    long max67 = 0;\n    long max68 = 0;\n    long max69 = 0;\n\
    \    long max70 = 0;\n    long max71 = 0;\n    long max72 = 0;\n    long max73\
    \ = 0;\n    long max74 = 0;\n    long max75 = 0;\n    long max76 = 0;\n    long\
    \ max77 = 0;\n    long max78 = 0;\n    long max79 = 0;\n    long max80 = 0;\n\
    \    long max81 = 0;\n    long max82 = 0;\n    long max83 = 0;\n    long max84\
    \ = 0;\n    long max85 = 0;\n    long \n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfc0g7_ki.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfc0g7_ki.cpp:106:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpfc0g7_ki.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = std::sqrt(n);\n\
    \    long max_prime_digit = 0;\n    for (long i = 2; i <= max_prime; i++) {\n\
    \        if (n % i == 0) {\n            max_prime_digit = i;\n            break;\n\
    \        }\n    }\n    for (long i = 0; i < n; i++) {\n        if (lst[i] % max_prime_digit\
    \ == 0) {\n            ans += lst[i] / max_prime_digit;\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp6j24lgnr: /tmp/tmp6j24lgnr.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138673
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long\
    \ temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n\
    \    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10\
    \ = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n   \
    \ long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17\
    \ = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n   \
    \ long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24\
    \ = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n   \
    \ long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31\
    \ = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n   \
    \ long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38\
    \ = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n   \
    \ long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45\
    \ = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n   \
    \ long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52\
    \ = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n   \
    \ long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59\
    \ = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n   \
    \ long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66\
    \ = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n   \
    \ long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73\
    \ = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n   \
    \ long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80\
    \ = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n    \n}\nint main() {\n  \
    \  auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmph5hkwfqh: /tmp/tmph5hkwfqh.cpp:110: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += (long)lst[i] % max;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmphihk4_xb: /tmp/tmphihk4_xb.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138673
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    long primes[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997}; // prime numbers array\n    long n = lst.size();\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long nPrime = 0;\n    long nPrimeSum = 0;\n    long nPrimeSum2 =\
    \ 0;\n    long nPrimeSum3 = 0;\n    long nPrimeSum4 = 0;\n    long nPrimeSum5\
    \ = 0;\n    long nPrimeSum6 = 0;\n    long nPrimeSum7 = 0;\n    long nPrimeSum8\
    \ = 0;\n    long nPrimeSum9 = 0;\n    long nPrimeSum10 = 0;\n    long nPrimeSum11\
    \ = 0;\n    long nPrimeSum12 = 0;\n    long nPrimeSum13 = 0;\n    long nPrimeSum14\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpjzn2gpma: /tmp/tmpjzn2gpma.cpp:48: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138673
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n\
    \    long cnt83 = 0;\n    long cnt84\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdr3pf2va.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdr3pf2va.cpp:106:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpdr3pf2va.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    ans += i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 11 == 0) {\n            ans += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            ans += i;\n        }\n        if (i % 17\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 23 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 31 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 43 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 73 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            ans += i;\n        }\n        if (i % 83\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 97 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 101 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 103 == 0) {\n            ans += i;\n        }\n        if (i\
    \ % 107 == 0) {\n            ans += i;\n        }\n        if (i % 109 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 111 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 113 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 115 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 117 == 0) {\n            ans += i;\n        }\n        if (i % 119 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 121 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 123 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 127 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 129 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 131 == 0) {\n            ans += i;\n        }\n        if (i % 133 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 135 == 0) {\n            ans\
    \ += i;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl03fkeds.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpl03fkeds.cpp:145:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  145 | int main() {\n      |     \
    \       ^\n/tmp/tmpl03fkeds.cpp:156:1: error: expected \u2018}\u2019 at end of\
    \ input\n  156 | }\n      | ^\n/tmp/tmpl03fkeds.cpp:21:24: note: to match this\
    \ \u2018{\u2019\n   21 |     for (long i : lst) {\n      |                   \
    \     ^\n/tmp/tmpl03fkeds.cpp:156:1: error: expected \u2018}\u2019 at end of input\n\
    \  156 | }\n      | ^\n/tmp/tmpl03fkeds.cpp:18:39: note: to match this \u2018\
    {\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |            \
    \                           ^\n/tmp/tmpl03fkeds.cpp:156:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  156 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long maxPrime = 0;\n    long sum = 0;\n    long prime = 0;\n   \
    \ long primeCount = 0;\n    long primeSum = 0;\n    long primeSumCount = 0;\n\
    \    long primeSumCount2 = 0;\n    long primeSumCount3 = 0;\n    long primeSumCount4\
    \ = 0;\n    long primeSumCount5 = 0;\n    long primeSumCount6 = 0;\n    long primeSumCount7\
    \ = 0;\n    long primeSumCount8 = 0;\n    long primeSumCount9 = 0;\n    long primeSumCount10\
    \ = 0;\n    long primeSumCount11 = 0;\n    long primeSumCount12 = 0;\n    long\
    \ primeSumCount13 = 0;\n    long primeSumCount14 = 0;\n    long primeSumCount15\
    \ = 0;\n    long primeSumCount16 = 0;\n    long primeSumCount17 = 0;\n    long\
    \ primeSumCount18 = 0;\n    long primeSumCount19 = 0;\n    long primeSumCount20\
    \ = 0;\n    long primeSumCount21 = 0;\n    long primeSumCount22 = 0;\n    long\
    \ primeSumCount23 = 0;\n    long primeSumCount24 = 0;\n    long primeSumCount25\
    \ = 0;\n    long primeSumCount26 = 0;\n    long primeSumCount27 = 0;\n    long\
    \ primeSumCount28 = 0;\n    long primeSumCount29 = 0;\n    long primeSumCount30\
    \ = 0;\n    long primeSumCount31 = 0;\n    long primeSumCount32 = 0;\n    long\
    \ primeSumCount33 = 0;\n    long primeSumCount34 = 0;\n    long primeSumCount35\
    \ = 0;\n    long primeSumCount36 = 0;\n    long primeSumCount37 = 0;\n    long\
    \ primeSumCount38 = 0;\n    long primeSumCount39 = 0;\n    long primeSumCount40\
    \ = 0;\n    long primeSumCount41 = 0;\n    long primeSumCount42 = 0;\n    long\
    \ primeSumCount43 = 0;\n    long primeSumCount44 = 0;\n    long primeSumCount45\
    \ = 0;\n    long primeSumCount46 = 0;\n    long primeSumCount47 = 0;\n    long\
    \ primeSumCount48 = 0;\n    long primeSumCount49 = 0;\n    long primeSumCount50\
    \ = 0;\n    long primeSumCount51 = 0;\n    long primeSumCount52 = 0;\n    long\
    \ primeSumCount53 = 0;\n    long primeSumCount54 = 0;\n    long primeSumCount55\
    \ = 0;\n    long primeSumCount56 = 0;\n    long primeSumCount57 = 0;\n    long\
    \ primeSumCount58 = 0;\n    long primeSumCount59 = 0;\n    long primeSumCount60\
    \ = 0;\n    long primeSumCount61 = 0;\n\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp7junmnnn: /tmp/tmp7junmnnn.cpp:89: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138673
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    long sum = 0;\n    long prime = 0;\n    long primeSum = 0;\n    long primeCount\
    \ = 0;\n    long primeSum2 = 0;\n    long primeCount2 = 0;\n    long primeSum3\
    \ = 0;\n    long primeCount3 = 0;\n    long primeSum4 = 0;\n    long primeCount4\
    \ = 0;\n    long primeSum5 = 0;\n    long primeCount5 = 0;\n    long primeSum6\
    \ = 0;\n    long primeCount6 = 0;\n    long primeSum7 = 0;\n    long primeCount7\
    \ = 0;\n    long primeSum8 = 0;\n    long primeCount8 = 0;\n    long primeSum9\
    \ = 0;\n    long primeCount9 = 0;\n    long primeSum10 = 0;\n    long primeCount10\
    \ = 0;\n    long primeSum11 = 0;\n    long primeCount11 = 0;\n    long primeSum12\
    \ = 0;\n    long primeCount12 = 0;\n    long primeSum13 = 0;\n    long primeCount13\
    \ = 0;\n    long primeSum14 = 0;\n    long primeCount14 = 0;\n    long primeSum15\
    \ = 0;\n    long primeCount15 = 0;\n    long primeSum16 = 0;\n    long primeCount16\
    \ = 0;\n    long primeSum17 = 0;\n    long primeCount17 = 0;\n    long primeSum18\
    \ = 0;\n    long primeCount18 = 0;\n    long primeSum19 = 0;\n    long primeCount19\
    \ = 0;\n    long primeSum20 = 0;\n    long primeCount20 = 0;\n    long primeSum21\
    \ = 0;\n    long primeCount21 = 0;\n    long primeSum22 = 0;\n    long primeCount22\
    \ = 0;\n    long primeSum23 = 0;\n    long primeCount23 = 0;\n    long primeSum24\
    \ = 0;\n    long primeCount24 = 0;\n    long primeSum25 = 0;\n    long primeCount25\
    \ = 0;\n    long primeSum26 = 0;\n    long primeCount26 = 0;\n    long primeSum27\
    \ = 0;\n    long primeCount27 = 0;\n    long primeSum28 = 0;\n    long primeCount28\
    \ = 0;\n    long primeSum29 = 0;\n    long primeCount29 = 0;\n    long primeSum30\
    \ = 0;\n    long primeCount30 = 0;\n    long primeSum31 = 0;\n    long primeCount31\
    \ = 0;\n    long primeSum32 = 0;\n    long primeCount32 = 0;\n    long primeSum33\
    \ = 0;\n    long primeCount33 = 0;\n    long primeSum34 = 0;\n    long primeCount34\
    \ = 0;\n    long primeSum35 = 0;\n    long primeCount35 = 0;\n    long prime\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqq9jxxpv.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpqq9jxxpv.cpp:95:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   95 | }\n      | ^\n/tmp/tmpqq9jxxpv.cpp:95:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660138672
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    long largestPrimeSum = 0;\n    long sum = 0;\n    long primeSum = 0;\n  \
    \  long primeSum2 = 0;\n    long primeSum3 = 0;\n    long primeSum4 = 0;\n   \
    \ long primeSum5 = 0;\n    long primeSum6 = 0;\n    long primeSum7 = 0;\n    long\
    \ primeSum8 = 0;\n    long primeSum9 = 0;\n    long primeSum10 = 0;\n    long\
    \ primeSum11 = 0;\n    long primeSum12 = 0;\n    long primeSum13 = 0;\n    long\
    \ primeSum14 = 0;\n    long primeSum15 = 0;\n    long primeSum16 = 0;\n    long\
    \ primeSum17 = 0;\n    long primeSum18 = 0;\n    long primeSum19 = 0;\n    long\
    \ primeSum20 = 0;\n    long primeSum21 = 0;\n    long primeSum22 = 0;\n    long\
    \ primeSum23 = 0;\n    long primeSum24 = 0;\n    long primeSum25 = 0;\n    long\
    \ primeSum26 = 0;\n    long primeSum27 = 0;\n    long primeSum28 = 0;\n    long\
    \ primeSum29 = 0;\n    long primeSum30 = 0;\n    long primeSum31 = 0;\n    long\
    \ primeSum32 = 0;\n    long primeSum33 = 0;\n    long primeSum34 = 0;\n    long\
    \ primeSum35 = 0;\n    long primeSum36 = 0;\n    long primeSum37 = 0;\n    long\
    \ primeSum38 = 0;\n    long primeSum39 = 0;\n    long primeSum40 = 0;\n    long\
    \ primeSum41 = 0;\n    long primeSum42 = 0;\n    long primeSum43 = 0;\n    long\
    \ primeSum44 = 0;\n    long primeSum45 = 0;\n    long primeSum46 = 0;\n    long\
    \ primeSum47 = 0;\n    long primeSum48 = 0;\n    long primeSum49 = 0;\n    long\
    \ primeSum50 = 0;\n    long primeSum51 = 0;\n    long primeSum52 = 0;\n    long\
    \ primeSum53 = 0;\n    long primeSum54 = 0;\n    long primeSum55 = 0;\n    long\
    \ primeSum56 = 0;\n    long primeSum57 = 0;\n    long primeSum58 = 0;\n    long\
    \ primeSum59 = 0;\n    long primeSum60 = 0;\n    long primeSum61 = 0;\n    long\
    \ primeSum62 = 0;\n    long primeSum63 = 0;\n    long primeSum64 = 0;\n    long\
    \ primeSum65 = 0;\n    long primeSum66 = 0;\n    long primeSum67 = 0;\n    long\
    \ primeSum68 = 0;\n    long primeSum69 = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp0ux6smce: /tmp/tmp0ux6smce.cpp:97: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138673
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = 0;\n    long largestPrime = 0;\n\
    \    long prime = 0;\n    long sum = 0;\n    long temp = 0;\n    long count =\
    \ 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n   \
    \ long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q =\
    \ 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n   \
    \ long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z =\
    \ 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n   \
    \ long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I =\
    \ 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n   \
    \ long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R =\
    \ 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n   \
    \ long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA\
    \ = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD = 0;\n    long AE = 0;\n\
    \    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n    long AI = 0;\n    long\
    \ AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long AM = 0;\n    long AN =\
    \ 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ = 0;\n    long AR = 0;\n\
    \    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n    long AV = 0;\n    long\
    \ AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long AZ = 0;\n    long BA =\
    \ 0;\n    long BB = 0;\n    long BC = 0;\n    long BD = 0;\n    long BE = 0;\n\
    \    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n    long BI = 0;\n    long\
    \ BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long BM = 0;\n    long BN =\
    \ 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ = 0;\n    long BR = 0;\n\
    \    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n    long BV = 0;\n    long\
    \ BW = 0;\n    long BX = 0;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpm8t15zem: /tmp/tmpm8t15zem.cpp:123: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138673
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i > max) {\n            max = i;\n        }\n    }\n    for (long i\
    \ : lst) {\n        if (i == max) {\n            ans += i;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmpjv9gt5dv: /tmp/tmpjv9gt5dv.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long count = 0;\n    long temp = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        if (temp > max) {\n            max =\
    \ temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   temp = lst[i];\n        if (temp > max) {\n            max = temp;\n     \
    \   }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n\
    \        if (temp > max) {\n            max = temp;\n        }\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n        if (temp\
    \ > max) {\n            max = temp;\n        }\n    }\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        temp = lst[i];\n        if (temp > max) {\n  \
    \          max = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        if (temp > max) {\n            max =\
    \ temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   temp = lst[i];\n        if (temp > max) {\n            max = temp;\n     \
    \   }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n\
    \        if (temp > max) {\n            max = temp;\n        }\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n        if (temp\
    \ > max) {\n            max = temp;\n        }\n    }\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        temp = lst[i];\n        if (temp > max) {\n  \
    \          max = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        if (temp > max) {\n            max =\
    \ temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   temp = lst[i];\n        if (temp > max) {\n            max = temp;\n     \
    \   }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n\
    \        if (temp > max) {\n            max = temp;\n        }\n    }\n    for\
    \ (long i = 0; i < lst.size(); i++) {\n        temp = lst[i];\n        if (temp\
    \ > max) {\n            max = temp;\n        }\n    }\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        temp = lst[i];\n        if (temp > max) {\n  \
    \          max = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        if (temp > max) {\n            max =\
    \ temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n     \
    \   temp = lst[i];\n        if (temp > max) {\n            max = temp;\n     \
    \   }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n}\nint main() {\n \
    \   auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2p7u2q2.cpp: In function \u2018long int skjkasdkd(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpk2p7u2q2.cpp:129:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  129 | int main() {\n      |     \
    \       ^\n/tmp/tmpk2p7u2q2.cpp:140:1: error: expected \u2018}\u2019 at end of\
    \ input\n  140 | }\n      | ^\n/tmp/tmpk2p7u2q2.cpp:18:39: note: to match this\
    \ \u2018{\u2019\n   18 | long skjkasdkd(std::vector<long> lst) {\n      |    \
    \                                   ^\n/tmp/tmpk2p7u2q2.cpp:140:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n  140 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660138673
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long cur\
    \ = 0;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4\
    \ = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8\
    \ = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long\
    \ cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n\
    \    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19\
    \ = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long\
    \ cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n\
    \    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30\
    \ = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long\
    \ cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n\
    \    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41\
    \ = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long\
    \ cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n\
    \    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52\
    \ = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long\
    \ cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n\
    \    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63\
    \ = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long\
    \ cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n\
    \    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74\
    \ = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long\
    \ cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n\
    \    long cnt82 = 0;\n    long cnt83 = 0;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: Exception
  stderr: 'tmp4f4a5xvo: /tmp/tmp4f4a5xvo.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)0,
    (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,
    (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,
    (long)324, (long)4, (long)3}))) == (10)'' failed.

    '
  stdout: ''
  timestamp: 1660138673

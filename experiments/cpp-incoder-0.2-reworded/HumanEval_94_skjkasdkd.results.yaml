language: cpp
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long primes[] = {2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997}; // primes less than n\n    long primes_size = sizeof(primes) / sizeof(primes[0]);\n\
    \    long is_prime[primes_size];\n    for (long i = 0; i < primes_size; i++) {\n\
    \        is_prime[i] = 0;\n    }\n    for (long i = 0; i < n; i++) {\n       \
    \ for (long j = 0; j < primes_size; j++) {\n            if (lst[i] == primes[j])\
    \ {\n                is_prime[j] = 1; // if prime then mark it as 1\n        \
    \        break;\n            }\n        }\n    }\n    for (long i = 0; i < primes_size;\
    \ i++) {\n        if (is_prime[i]) {\n            ans += primes[i];\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcych45h_.cpp: In function 'int main()':\n/tmp/tmpcych45h_.cpp:42:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcych45h_.cpp:2:\n/tmp/tmpcych45h_.cpp:43:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpcych45h_.cpp:43:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpcych45h_.cpp:43:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpcych45h_.cpp:43:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpcych45h_.cpp:43:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpcych45h_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    for (long i : lst) {\n        if (i % 2 == 0)\
    \ {\n            max = i;\n        }\n    }\n    long sum = 0;\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n        }\n  \
    \  }\n    return sum;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4afiulh_.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp4afiulh_.cpp:20:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmp4afiulh_.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmp4afiulh_.cpp: In function 'int main()':\n\
    /tmp/tmp4afiulh_.cpp:34:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4afiulh_.cpp:2:\n/tmp/tmp4afiulh_.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp4afiulh_.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp4afiulh_.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4afiulh_.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    ans += i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 11 == 0) {\n            ans += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            ans += i;\n        }\n        if (i % 17\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 23 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 31 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 43 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 73 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            ans += i;\n        }\n        if (i % 83\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 97 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 109 == 0) {\n            ans += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            ans += i;\n        }\n        if (i % 127 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 131 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 137 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 141 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 147 == 0) {\n            ans += i;\n        }\n        if (i % 151 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 157 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 161 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 167 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 171 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 177 == 0) {\n            ans += i;\n        }\n        if (i % 181 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 187 == 0) {\n            an\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp018pxf3y.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp018pxf3y.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmp018pxf3y.cpp:143:13:\
    \ error: 'an' was not declared in this scope\n             an\n             ^\n\
    /tmp/tmp018pxf3y.cpp:144:1: error: expected ';' before '}' token\n }\n ^\n/tmp/tmp018pxf3y.cpp:145:12:\
    \ error: a function-definition is not allowed here before '{' token\n int main()\
    \ {\n            ^\n/tmp/tmp018pxf3y.cpp:156:1: error: expected '}' at end of\
    \ input\n }\n ^\n/tmp/tmp018pxf3y.cpp:156:1: error: expected '}' at end of input\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i : lst) {\n        if (i == 0) {\n            continue;\n        }\n      \
    \  if (i % 2 == 0) {\n            ans += i;\n            continue;\n        }\n\
    \        max = i;\n    }\n    for (long i : lst) {\n        if (i == 0) {\n  \
    \          continue;\n        }\n        if (i % 2 == 0) {\n            ans +=\
    \ i;\n            continue;\n        }\n        if (i % max == 0) {\n        \
    \    cur = i;\n        }\n    }\n    if (cur > 0) {\n        ans += cur;\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ubasr_h.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp7ubasr_h.cpp:22:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmp7ubasr_h.cpp:32:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmp7ubasr_h.cpp: In function 'int main()':\n\
    /tmp/tmp7ubasr_h.cpp:50:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7ubasr_h.cpp:2:\n/tmp/tmp7ubasr_h.cpp:51:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp7ubasr_h.cpp:51:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp7ubasr_h.cpp:51:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp7ubasr_h.cpp:51:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long n = lst.size();\n    long m =\
    \ lst.front();\n    long b = 2;\n    long c = 1;\n    long d = 1;\n    long k\
    \ = 0;\n    long i = 1;\n    long j = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s\
    \ = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n \
    \   long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b\
    \ = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n \
    \   long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long l\
    \ = 1;\n    long m = 1;\n    long n = 1;\n    long p = 1;\n    long q = 1;\n \
    \   long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v\
    \ = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n \
    \   long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e\
    \ = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n \
    \   long j = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s\
    \ = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n \
    \   long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b\
    \ = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = \n}\n\
    int main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5s9ili6_.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp5s9ili6_.cpp:29:10: error: redeclaration of 'long int m'\n\
    \     long m = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:21:10: error: 'long int m'\
    \ previously declared here\n     long m = lst.front();\n          ^\n/tmp/tmp5s9ili6_.cpp:30:10:\
    \ error: redeclaration of 'long int n'\n     long n = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:20:10:\
    \ error: 'long int n' previously declared here\n     long n = lst.size();\n  \
    \        ^\n/tmp/tmp5s9ili6_.cpp:43:10: error: redeclaration of 'long int b'\n\
    \     long b = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:22:10: error: 'long int b'\
    \ previously declared here\n     long b = 2;\n          ^\n/tmp/tmp5s9ili6_.cpp:44:10:\
    \ error: redeclaration of 'long int c'\n     long c = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:23:10:\
    \ error: 'long int c' previously declared here\n     long c = 1;\n          ^\n\
    /tmp/tmp5s9ili6_.cpp:45:10: error: redeclaration of 'long int d'\n     long d\
    \ = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:24:10: error: 'long int d' previously\
    \ declared here\n     long d = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:50:10: error:\
    \ redeclaration of 'long int i'\n     long i = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:26:10:\
    \ error: 'long int i' previously declared here\n     long i = 1;\n          ^\n\
    /tmp/tmp5s9ili6_.cpp:51:10: error: redeclaration of 'long int j'\n     long j\
    \ = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:27:10: error: 'long int j' previously\
    \ declared here\n     long j = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:52:10: error:\
    \ redeclaration of 'long int l'\n     long l = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:28:10:\
    \ error: 'long int l' previously declared here\n     long l = 1;\n          ^\n\
    /tmp/tmp5s9ili6_.cpp:53:10: error: redeclaration of 'long int m'\n     long m\
    \ = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:21:10: error: 'long int m' previously\
    \ declared here\n     long m = lst.front();\n          ^\n/tmp/tmp5s9ili6_.cpp:54:10:\
    \ error: redeclaration of 'long int n'\n     long n = 1;\n          ^\n/tmp/tmp5s9ili6_.cpp:20:10:\
    \ error: 'long int n' previously declared here\n     long"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn58ps1l6.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpn58ps1l6.cpp:50:10: error: redeclaration of 'long int i'\n\
    \     long i = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:24:10: error: 'long int i'\
    \ previously declared here\n     long i = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:51:10:\
    \ error: redeclaration of 'long int j'\n     long j = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:25:10:\
    \ error: 'long int j' previously declared here\n     long j = 1;\n          ^\n\
    /tmp/tmpn58ps1l6.cpp:52:10: error: redeclaration of 'long int k'\n     long k\
    \ = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:26:10: error: 'long int k' previously\
    \ declared here\n     long k = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:53:10: error:\
    \ redeclaration of 'long int l'\n     long l = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:27:10:\
    \ error: 'long int l' previously declared here\n     long l = 1;\n          ^\n\
    /tmp/tmpn58ps1l6.cpp:54:10: error: redeclaration of 'long int m'\n     long m\
    \ = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:28:10: error: 'long int m' previously\
    \ declared here\n     long m = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:55:10: error:\
    \ redeclaration of 'long int n'\n     long n = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:29:10:\
    \ error: 'long int n' previously declared here\n     long n = 1;\n          ^\n\
    /tmp/tmpn58ps1l6.cpp:56:10: error: redeclaration of 'long int o'\n     long o\
    \ = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:30:10: error: 'long int o' previously\
    \ declared here\n     long o = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:57:10: error:\
    \ redeclaration of 'long int p'\n     long p = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:31:10:\
    \ error: 'long int p' previously declared here\n     long p = 1;\n          ^\n\
    /tmp/tmpn58ps1l6.cpp:58:10: error: redeclaration of 'long int q'\n     long q\
    \ = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:32:10: error: 'long int q' previously\
    \ declared here\n     long q = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:59:10: error:\
    \ redeclaration of 'long int r'\n     long r = 1;\n          ^\n/tmp/tmpn58ps1l6.cpp:33:10:\
    \ error: 'long int r' previously declared here\n     long r = 1;\n          ^\n\
    /tmp/tmpn"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long sum = 0;\n    long prime\
    \ = 0;\n    long temp = 0;\n    long count = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        temp = lst[i];\n        prime = 1;\n        while (temp != 0)\
    \ {\n            prime = prime * temp % 10;\n            temp = temp / 10;\n \
    \       }\n        if (prime > max) {\n            max = prime;\n        }\n \
    \       sum += prime % 10;\n    }\n    ans = sum;\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvx8f418d.cpp: In function 'int main()':\n/tmp/tmpvx8f418d.cpp:41:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvx8f418d.cpp:2:\n/tmp/tmpvx8f418d.cpp:42:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpvx8f418d.cpp:42:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpvx8f418d.cpp:42:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpvx8f418d.cpp:42:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpvx8f418d.cpp:42:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpvx8f418d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long max_prime_digit\
    \ = 0;\n    long prime_digit = 0;\n    long prime_digit_count = 0;\n    long prime_digit_sum\
    \ = 0;\n    long prime_digit_sum2 = 0;\n    long prime_digit_sum3 = 0;\n    long\
    \ prime_digit_sum4 = 0;\n    long prime_digit_sum5 = 0;\n    long prime_digit_sum6\
    \ = 0;\n    long prime_digit_sum7 = 0;\n    long prime_digit_sum8 = 0;\n    long\
    \ prime_digit_sum9 = 0;\n    long prime_digit_sum10 = 0;\n    long prime_digit_sum11\
    \ = 0;\n    long prime_digit_sum12 = 0;\n    long prime_digit_sum13 = 0;\n   \
    \ long prime_digit_sum14 = 0;\n    long prime_digit_sum15 = 0;\n    long prime_digit_sum16\
    \ = 0;\n    long prime_digit_sum17 = 0;\n    long prime_digit_sum18 = 0;\n   \
    \ long prime_digit_sum19 = 0;\n    long prime_digit_sum20 = 0;\n    long prime_digit_sum21\
    \ = 0;\n    long prime_digit_sum22 = 0;\n    long prime_digit_sum23 = 0;\n   \
    \ long prime_digit_sum24 = 0;\n    long prime_digit_sum25 = 0;\n    long prime_digit_sum26\
    \ = 0;\n    long prime_digit_sum27 = 0;\n    long prime_digit_sum28 = 0;\n   \
    \ long prime_digit_sum29 = 0;\n    long prime_digit_sum30 = 0;\n    long prime_digit_sum31\
    \ = 0;\n    long prime_digit_sum32 = 0;\n    long prime_digit_sum33 = 0;\n   \
    \ long prime_digit_sum34 = 0;\n    long prime_digit_sum35 = 0;\n    long prime_digit_sum36\
    \ = 0;\n    long prime_digit_sum37 = 0;\n    long prime_digit_sum38 = 0;\n   \
    \ long prime_digit_sum39 = 0;\n    long prime_digit_sum40 = 0;\n    long prime_digit_sum41\
    \ = 0;\n    long prime_digit_sum42 = 0;\n    long prime_digit_sum43 = 0;\n   \
    \ long prime_digit_sum44 = 0;\n    long prime_digit_sum45 = 0;\n    long prime_digit_sum46\
    \ = 0;\n    long prime_digit_sum47 = 0;\n    long prime_digit_sum48 = 0;\n   \
    \ long prime_digit_sum49 = 0;\n    long prime_digit_sum50 = 0;\n    long prime_digit_sum51\
    \ = 0;\n    long prime_digit_sum52 = 0;\n    long prime_digit_sum53 = 0;\n   \
    \ long prime_digit_sum54\n}\nint main() {\n    auto candidate = skjkasdkd;\n \
    \   assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1c0scwx7.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp1c0scwx7.cpp:78:1: error: expected initializer before '}' token\n\
    \ }\n ^\n/tmp/tmp1c0scwx7.cpp: In function 'int main()':\n/tmp/tmp1c0scwx7.cpp:80:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1c0scwx7.cpp:2:\n/tmp/tmp1c0scwx7.cpp:81:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp1c0scwx7.cpp:81:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp1c0scwx7.cpp:81:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp1c0scwx7.cpp:81:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp1c0scwx7.cpp:81:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            prime = i;\n            break;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (i % prime == 0) {\n            ans += i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnaqcwycw.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpnaqcwycw.cpp:20:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpnaqcwycw.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmpnaqcwycw.cpp: In function 'int main()':\n\
    /tmp/tmpnaqcwycw.cpp:34:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnaqcwycw.cpp:2:\n/tmp/tmpnaqcwycw.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpnaqcwycw.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpnaqcwycw.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpnaqcwycw.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long p = 2;\n    long q = m;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxg66eyeg.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpxg66eyeg.cpp:45:10: error: redeclaration of 'long int m'\n\
    \     long m = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:21:10: error: 'long int m'\
    \ previously declared here\n     long m = lst.front();\n          ^\n/tmp/tmpxg66eyeg.cpp:46:10:\
    \ error: redeclaration of 'long int n'\n     long n = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:20:10:\
    \ error: 'long int n' previously declared here\n     long n = lst.size();\n  \
    \        ^\n/tmp/tmpxg66eyeg.cpp:48:10: error: redeclaration of 'long int p'\n\
    \     long p = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:22:10: error: 'long int p'\
    \ previously declared here\n     long p = 2;\n          ^\n/tmp/tmpxg66eyeg.cpp:49:10:\
    \ error: redeclaration of 'long int q'\n     long q = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:23:10:\
    \ error: 'long int q' previously declared here\n     long q = m;\n          ^\n\
    /tmp/tmpxg66eyeg.cpp:50:10: error: redeclaration of 'long int r'\n     long r\
    \ = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:24:10: error: 'long int r' previously\
    \ declared here\n     long r = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:51:10: error:\
    \ redeclaration of 'long int s'\n     long s = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:25:10:\
    \ error: 'long int s' previously declared here\n     long s = 1;\n          ^\n\
    /tmp/tmpxg66eyeg.cpp:52:10: error: redeclaration of 'long int t'\n     long t\
    \ = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:26:10: error: 'long int t' previously\
    \ declared here\n     long t = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:53:10: error:\
    \ redeclaration of 'long int u'\n     long u = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:27:10:\
    \ error: 'long int u' previously declared here\n     long u = 1;\n          ^\n\
    /tmp/tmpxg66eyeg.cpp:54:10: error: redeclaration of 'long int v'\n     long v\
    \ = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:28:10: error: 'long int v' previously\
    \ declared here\n     long v = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:55:10: error:\
    \ redeclaration of 'long int w'\n     long w = 1;\n          ^\n/tmp/tmpxg66eyeg.cpp:29:10:\
    \ error: 'long int w' previously declared here\n     long w = 1;\n  "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vokl2di.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp1vokl2di.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmp1vokl2di.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmp1vokl2di.cpp: In function 'int main()':\n\
    /tmp/tmp1vokl2di.cpp:34:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1vokl2di.cpp:2:\n/tmp/tmp1vokl2di.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp1vokl2di.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp1vokl2di.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp1vokl2di.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    long primes[]\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997}; // primes less than n\n    long long sum = 0;\n    long long\
    \ cnt = 0;\n    long long cnt2 = 0;\n    long long cnt3 = 0;\n    long long cnt4\
    \ = 0;\n    long long cnt5 = 0;\n    long long cnt6 = 0;\n    long long cnt7 =\
    \ 0;\n    long long cnt8 = 0;\n    long long cnt9 = 0;\n    long long cnt10 =\
    \ 0;\n    long long cnt11 = 0;\n    long long cnt12 = 0;\n    long long cnt13\
    \ = 0;\n    long long cnt14 = 0;\n    long long cnt15 = 0;\n    long long cnt16\
    \ = 0;\n    long long cnt17 = 0;\n    long long cnt18 = 0;\n    long long cnt19\
    \ = 0;\n    long long cnt20 = 0;\n    long long cnt21 = 0;\n    long long cnt22\
    \ = 0;\n    long long cnt23 = 0;\n    \n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphae1o29_.cpp: In function 'int main()':\n/tmp/tmphae1o29_.cpp:49:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphae1o29_.cpp:2:\n/tmp/tmphae1o29_.cpp:50:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmphae1o29_.cpp:50:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmphae1o29_.cpp:50:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmphae1o29_.cpp:50:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmphae1o29_.cpp:50:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmphae1o29_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vokl2di.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp1vokl2di.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmp1vokl2di.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmp1vokl2di.cpp: In function 'int main()':\n\
    /tmp/tmp1vokl2di.cpp:34:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1vokl2di.cpp:2:\n/tmp/tmp1vokl2di.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp1vokl2di.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp1vokl2di.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp1vokl2di.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i > max) {\n            max = i;\n        }\n    }\n    for (long i\
    \ : lst) {\n        if (i == max) {\n            ans += i;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa6ausye4.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpa6ausye4.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpa6ausye4.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmpa6ausye4.cpp: In function 'int main()':\n\
    /tmp/tmpa6ausye4.cpp:34:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa6ausye4.cpp:2:\n/tmp/tmpa6ausye4.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpa6ausye4.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpa6ausye4.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpa6ausye4.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long prime = 1;\n    long sum = 0;\n    long temp = 0;\n    long temp2 =\
    \ 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n   \
    \ long temp80 = 0;\n    long temp81 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsu64ejbw.cpp: In function 'int main()':\n/tmp/tmpsu64ejbw.cpp:108:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsu64ejbw.cpp:2:\n/tmp/tmpsu64ejbw.cpp:109:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpsu64ejbw.cpp:109:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpsu64ejbw.cpp:109:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpsu64ejbw.cpp:109:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpsu64ejbw.cpp:109:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpsu64ejbw.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: te"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cnt = 0;\n    long sum\
    \ = 0;\n    long cur = 0;\n    for (long i : lst) {\n        if (i == 0) {\n \
    \           cnt++;\n        }\n        if (i % 2 == 0) {\n            cnt++;\n\
    \        }\n        if (cnt > max) {\n            max = cnt;\n            cur\
    \ = i;\n        }\n        cnt = 0;\n    }\n    ans = cur;\n    for (long i :\
    \ lst) {\n        if (i == 0) {\n            cnt++;\n        }\n        if (i\
    \ % 2 == 0) {\n            cnt++;\n        }\n        if (cnt > max) {\n     \
    \       max = cnt;\n            cur = i;\n        }\n        cnt = 0;\n    }\n\
    \    ans += cur;\n    for (long i : lst) {\n        if (i == 0) {\n          \
    \  cnt++;\n        }\n        if (i % 2 == 0) {\n            cnt++;\n        }\n\
    \        if (cnt > max) {\n            max = cnt;\n            cur = i;\n    \
    \    }\n        cnt = 0;\n    }\n    ans += cur;\n    for (long i : lst) {\n \
    \       if (i == 0) {\n            cnt++;\n        }\n        if (i % 2 == 0)\
    \ {\n            cnt++;\n        }\n        if (cnt > max) {\n            max\
    \ = cnt;\n            cur = i;\n        }\n        cnt = 0;\n    }\n    ans +=\
    \ cur;\n    for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n\
    \        }\n        if (i % 2 == 0) {\n            cnt++;\n        }\n       \
    \ if (cnt > max) {\n            max = cnt;\n            cur = i;\n        }\n\
    \        cnt = 0;\n    }\n    ans += cur;\n    for (long i : lst) {\n        if\
    \ (i == 0) {\n            cnt++;\n        }\n        if (i % 2 == 0) {\n     \
    \       cnt++;\n        }\n        if (cnt > max) {\n            max = cnt;\n\
    \            cur = i;\n        }\n        cnt = 0;\n    }\n    ans += cur;\n \
    \   for (long i : lst) {\n        if (i == 0) {\n            cnt++;\n        }\n\
    \        if (i % 2 == 0) {\n            cnt++;\n        }\n        if (cnt > max)\
    \ {\n            max = cnt;\n            cur = i;\n        }\n        cnt = 0;\n\
    \    }\n    ans += cur;\n    for (long i : lst) {\n        if (i == 0) {\n   \
    \         cnt++;\n        }\n        if (i % 2 == 0) {\n            cnt++;\n \
    \       }\n        if (cnt > max) {\n            max = cnt;\n            cur =\
    \ i;\n        }\n        cnt = 0;\n    }\n    ans += cur;\n    for (long i : lst)\
    \ {\n        if (i == 0) {\n            cnt++;\n        }\n        if (i % 2 ==\
    \ 0) {\n            cnt++;\n        }\n        if (cnt > \n}\nint main() {\n \
    \   auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq8yy9wxg.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpq8yy9wxg.cpp:24:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpq8yy9wxg.cpp:38:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmpq8yy9wxg.cpp:52:19: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (long i : lst) {\n     \
    \              ^\n/tmp/tmpq8yy9wxg.cpp:66:19: error: range-based 'for' loops are\
    \ not allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n\
    /tmp/tmpq8yy9wxg.cpp:80:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpq8yy9wxg.cpp:94:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmpq8yy9wxg.cpp:108:19: error: range-based\
    \ 'for' loops are not allowed in C++98 mode\n     for (long i : lst) {\n     \
    \              ^\n/tmp/tmpq8yy9wxg.cpp:122:19: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long i : lst) {\n                 \
    \  ^\n/tmp/tmpq8yy9wxg.cpp:136:19: error: range-based 'for' loops are not allowed\
    \ in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpq8yy9wxg.cpp:144:1:\
    \ error: expected primary-expression before '}' token\n }\n ^\n/tmp/tmpq8yy9wxg.cpp:144:1:\
    \ error: expected ')' before '}' token\n/tmp/tmpq8yy9wxg.cpp:144:1: error: expected\
    \ primary-expression before '}' token\n/tmp/tmpq8yy9wxg.cpp:144:1: error: expected\
    \ ';' before '}' token\n/tmp/tmpq8yy9wxg.cpp:145:12: error: a function-definition\
    \ is not allowed here before '{' token\n int main() {\n            ^\n/tmp/tmpq8yy9wxg.cpp:156:1:\
    \ error: expected '}' at end of input\n }\n ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (long i : lst) {\n        cur = i;\n        cnt = 0;\n       \
    \ while (cur != 0) {\n            if (cur % 2 == 0) {\n                cur = cur\
    \ / 2;\n                cnt++;\n            } else {\n                cur = cur\
    \ * 3 + 1;\n                cnt++;\n            }\n        }\n        if (cnt\
    \ > max) {\n            max = cnt;\n            ans = i;\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx4xngftd.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpx4xngftd.cpp:23:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpx4xngftd.cpp:\
    \ In function 'int main()':\n/tmp/tmpx4xngftd.cpp:43:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = skjkasdkd;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx4xngftd.cpp:2:\n/tmp/tmpx4xngftd.cpp:44:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpx4xngftd.cpp:44:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpx4xngftd.cpp:44:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpx4xngftd.cpp:44:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpx4xngftd.cpp:44:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/incl"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0;\n    long max = 0;\n    long temp = 0;\n\
    \    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5\
    \ = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long\
    \ temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n\
    \    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16\
    \ = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n   \
    \ long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23\
    \ = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n   \
    \ long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30\
    \ = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n   \
    \ long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37\
    \ = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n   \
    \ long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44\
    \ = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n   \
    \ long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51\
    \ = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n   \
    \ long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58\
    \ = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n   \
    \ long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65\
    \ = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n   \
    \ long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72\
    \ = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n   \
    \ long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79\
    \ = 0;\n    long temp80 = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n   \
    \ long temp83 = 0;\n    long temp84 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0vre4cwy.cpp: In function 'int main()':\n/tmp/tmp0vre4cwy.cpp:108:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0vre4cwy.cpp:2:\n/tmp/tmp0vre4cwy.cpp:109:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp0vre4cwy.cpp:109:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp0vre4cwy.cpp:109:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp0vre4cwy.cpp:109:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp0vre4cwy.cpp:109:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp0vre4cwy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: te"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long largest = lst[0];\n    for (long i : lst)\
    \ {\n        if (largest < i) {\n            largest = i;\n        }\n    }\n\
    \    for (long i : lst) {\n        if (largest % i == 0) {\n            ans +=\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vokl2di.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp1vokl2di.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmp1vokl2di.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmp1vokl2di.cpp: In function 'int main()':\n\
    /tmp/tmp1vokl2di.cpp:34:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1vokl2di.cpp:2:\n/tmp/tmp1vokl2di.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp1vokl2di.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp1vokl2di.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp1vokl2di.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector\
    \ of integers.\n// You need to find the largest prime value and return the sum\
    \ of its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i % 2 == 0) {\n            if (i > max) {\n        \
    \        ans += i - max;\n                max = i;\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1, (long)3,\
    \ (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181, (long)32,\
    \ (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4, (long)3})))\
    \ == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1,\
    \ (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40, (long)1,\
    \ (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) == (25));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv7n_5uv5.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpv7n_5uv5.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpv7n_5uv5.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmpv7n_5uv5.cpp: In function 'int main()':\n\
    /tmp/tmpv7n_5uv5.cpp:37:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv7n_5uv5.cpp:2:\n/tmp/tmpv7n_5uv5.cpp:38:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpv7n_5uv5.cpp:38:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpv7n_5uv5.cpp:38:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpv7n_5uv5.cpp:38:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''

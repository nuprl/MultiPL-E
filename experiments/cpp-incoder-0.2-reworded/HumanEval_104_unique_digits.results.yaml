language: cpp
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for (long long i : x) {\n        ans += i;\n    }\n    long long\
    \ ans2 = 0;\n    for (long long i : x) {\n        ans2 += i;\n    }\n    long\
    \ long ans3 = 0;\n    for (long long i : x) {\n        ans3 += i;\n    }\n   \
    \ long long ans4 = 0;\n    for (long long i : x) {\n        ans4 += i;\n    }\n\
    \    long long ans5 = 0;\n    for (long long i : x) {\n        ans5 += i;\n  \
    \  }\n    long long ans6 = 0;\n    for (long long i : x) {\n        ans6 += i;\n\
    \    }\n    long long ans7 = 0;\n    for (long long i : x) {\n        ans7 +=\
    \ i;\n    }\n    long long ans8 = 0;\n    for (long long i : x) {\n        ans8\
    \ += i;\n    }\n    long long ans9 = 0;\n    for (long long i : x) {\n       \
    \ ans9 += i;\n    }\n    long long ans10 = 0;\n    for (long long i : x) {\n \
    \       ans10 += i;\n    }\n    long long ans11 = 0;\n    for (long long i : x)\
    \ {\n        ans11 += i;\n    }\n    long long ans12 = 0;\n    for (long long\
    \ i : x) {\n        ans12 += i;\n    }\n    long long ans13 = 0;\n    for (long\
    \ long i : x) {\n        ans13 += i;\n    }\n    long long ans14 = 0;\n    for\
    \ (long long i : x) {\n        ans14 += i;\n    }\n    long long ans15 = 0;\n\
    \    for (long long i : x) {\n        ans15 += i;\n    }\n    long long ans16\
    \ = 0;\n    for (long long i : x) {\n        ans16 += i;\n    }\n    long long\
    \ ans17 = 0;\n    for (long long i : x) {\n        ans17 += i;\n    }\n    long\
    \ long ans18 = 0;\n    for (long long i : x) {\n        ans18 += i;\n    }\n \
    \   long long ans19 = 0;\n    for (long long i : x) {\n        ans19 += i;\n \
    \   }\n    long long ans20 = 0;\n    for (long long i : x) {\n        ans20 +=\
    \ i;\n    }\n    long long ans21 = 0;\n    for (long long i : x) {\n        ans21\
    \ += i;\n    }\n    long long ans22 = 0;\n    for (long long i : x) {\n      \
    \  ans22 += i;\n    }\n    long long ans23 = 0;\n    for (long long i : x) {\n\
    \        ans23 += i;\n    }\n\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqw0xao69.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpqw0xao69.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpqw0xao69.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpqw0xao69.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   15 |         ans += i;\n      |         ~~~~^~~~\n/tmp/tmpqw0xao69.cpp:106:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  106 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            ans.push_back(i);\n     \
    \   }\n    }\n    for(long long i : x){\n        if(sum % i == 0){\n         \
    \   ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp1wwfyt57: /tmp/tmp1wwfyt57.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 == 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 != 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 == 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 != 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 == 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 != 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 == 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 != 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 == 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 != 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 == 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 != 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 == 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        long long d = x[i]\
    \ % 10;\n        if(d % 2 != 0) {\n            y.push_back(x[i]);\n        }\n\
    \    }\n    \n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp7qzifrra: /tmp/tmp7qzifrra.cpp:105: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n\
    \        sum += i;\n    }\n    for(long long i : ans) {\n        long long d =\
    \ i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     sum += i;\n    }\n    for(long long i : ans) {\n        long long d = i\
    \ % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({(long)15, (long)33,\
    \ (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
    \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6crawbcu.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6crawbcu.cpp:111:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  111 | int main() {\n      |     \
    \       ^\n/tmp/tmp6crawbcu.cpp:117:1: error: expected \u2018}\u2019 at end of\
    \ input\n  117 | }\n      | ^\n/tmp/tmp6crawbcu.cpp:11:54: note: to match this\
    \ \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long> x)\
    \ {\n      |                                                      ^\n/tmp/tmp6crawbcu.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  117 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            long long tmp = (sum -\
    \ i) / 2;\n            if (tmp % 2 == 0) {\n                ans.push_back(tmp);\n\
    \            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({(long)15, (long)33,\
    \ (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
    \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpwc6fi9hr: /tmp/tmpwc6fi9hr.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpau4515xi.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpau4515xi.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpau4515xi.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long remainder = sum / 10;\n    for (long long i :\
    \ x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp_9x_js0b: /tmp/tmp_9x_js0b.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for (auto i : x) {\n        sum += i;\n\
    \        count += 1;\n    }\n    long long mod = sum % 10;\n    long long remain\
    \ = sum / 10;\n    long long temp;\n    for (auto i : x) {\n        temp = i;\n\
    \        while (temp > 0) {\n            temp = temp % 10;\n            if (temp\
    \ % 2 == 0 && temp != mod) {\n                ans.push_back(i);\n            \
    \    break;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ temp;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++) {\n\
    \        temp = x[i];\n        while(temp > 0) {\n            sum += temp % 10;\n\
    \            temp /= 10;\n        }\n        if(sum % 2 != 0) {\n            y.push_back(x[i]);\n\
    \        }\n    }\n    return y;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpyc7yt8cn: /tmp/tmpyc7yt8cn.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        ans = ans *\
    \ 10 + x[i];\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans = ans * 10 + x[i];\n        }\n    }\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans\
    \ = ans * 10 + x[i];\n        }\n    }\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 == 0) {\n            ans = ans * 10 + x[i];\n  \
    \      }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 != 0) {\n            ans = ans * 10 + x[i];\n        }\n    }\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0) {\n            ans\
    \ = ans * 10 + x[i];\n        }\n    }\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 != 0) {\n            ans = ans * 10 + x[i];\n  \
    \      }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans = ans * 10 + x[i];\n        }\n    }\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans\
    \ = ans * 10 + x[i];\n        }\n    }\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 == 0) {\n            ans = ans * 10 + x[i];\n  \
    \      }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 != 0) {\n            ans = ans * 10 + x[i];\n        }\n    }\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0) {\n            ans\
    \ = ans * 10 + x[i];\n        }\n    }\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 != 0) {\n            ans = ans * 10 + x[i];\n  \
    \      }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans = ans * 10 + x[i];\n        }\n    }\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans\
    \ = ans * 10 + x[i];\n        }\n    }\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 == 0) {\n            ans = ans * 10 + x[i];\n  \
    \      }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 != 0) {\n            ans = an\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmmq8un7s.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmmq8un7s.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpmmq8un7s.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpmmq8un7s.cpp:15:19: error: no match for \u2018operator*\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   15 |         ans = ans * 10 + x[i];\n      |               ~~~ ^ ~~\n    \
    \  |               |     |\n      |               |     int\n      |         \
    \      std::vector<long int>\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpmmq8un7s.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpmmq8un7s.cpp:15:21:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   15 |         ans = ans * 10 + x[i];\n      |                     ^~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpmmq8un7s.cpp:2:\n/usr/include/c++/9/complex:400:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpmmq8un7s.cpp:15:21:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   15 |         ans = ans * "
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            continue;\n        }\n  \
    \      long long d = sum % 10;\n        if(d != 0){\n            ans.push_back(i);\n\
    \        }\n        sum -= i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpl79aewd7: /tmp/tmpl79aewd7.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            continue;\n        }\n\
    \        long long temp = sum % 10;\n        sum += temp;\n        if(sum > 9)\
    \ {\n            sum -= 10;\n        }\n        ans.push_back(temp);\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpfsurxrgn: /tmp/tmpfsurxrgn.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (auto i : x) {\n        sum += i;\n    }\n    long long mod\
    \ = sum % 10;\n    for (auto i : x) {\n        if (i % 10 != mod) {\n        \
    \    ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp3vf2poc5: /tmp/tmp3vf2poc5.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        long long remain = sum % 10;\n        if (remain == i) {\n          \
    \  ans.push_back(i);\n        }\n    }\n    std::sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp9mihw_5h: /tmp/tmp9mihw_5h.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            ans.push_back(i);\n     \
    \   }\n    }\n    for(long long i : ans){\n        if(sum % i == 0){\n       \
    \     ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpdsg1bd18: /tmp/tmpdsg1bd18.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for (long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long mod = sum % 10;\n    if (mod\
    \ == 0) {\n        y.push_back(0);\n    } else {\n        y.push_back(mod);\n\
    \    }\n    for (long long i : x) {\n        long long temp = (sum - i) % 10;\n\
    \        if (temp == 0) {\n            y.push_back(0);\n        } else {\n   \
    \         y.push_back(temp);\n        }\n    }\n    std::sort(y.begin(), y.end());\n\
    \    return y;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7pveymc: /tmp/tmpm7pveymc.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n    long long count\
    \ = 0;\n    long long i = 0;\n    long long j = 0;\n    long long k = 0;\n   \
    \ long long l = x.size();\n    long long m = 1;\n    long long n = 1;\n    long\
    \ long p = 0;\n    long long q = 0;\n    long long r = 0;\n    long long s = 0;\n\
    \    long long t = 0;\n    long long u = 0;\n    long long v = 0;\n    long long\
    \ w = 0;\n    long long x = 0;\n    long long y = 0;\n    long long z = 0;\n \
    \   long long aa = 0;\n    long long bb = 0;\n    long long cc = 0;\n    long\
    \ long dd = 0;\n    long long ee = 0;\n    long long ff = 0;\n    long long gg\
    \ = 0;\n    long long hh = 0;\n    long long ii = 0;\n    long long jj = 0;\n\
    \    long long kk = 0;\n    long long ll = 0;\n    long long mm = 0;\n    long\
    \ long nn = 0;\n    long long oo = 0;\n    long long pp = 0;\n    long long qq\
    \ = 0;\n    long long rr = 0;\n    long long ss = 0;\n    long long tt = 0;\n\
    \    long long uu = 0;\n    long long vv = 0;\n    long long ww = 0;\n    long\
    \ long xx = 0;\n    long long yy = 0;\n    long long zz = 0;\n    long long aaa\
    \ = 0;\n    long long bbb = 0;\n    long long ccc = 0;\n    long long ddd = 0;\n\
    \    long long eee = 0;\n    long long fff = 0;\n    long long ggg = 0;\n    long\
    \ long hhh = 0;\n    long long iii = 0;\n    long long jjj = 0;\n    long long\
    \ kkk = 0;\n    long long lll = 0;\n    long long mmm = 0;\n    long long nnn\
    \ = 0;\n    long long oooo = 0;\n    long long ppp = 0;\n    long long qqq = 0;\n\
    \    long long rrr = 0;\n    long long sss = 0;\n    long long ttt = 0;\n    long\
    \ long uuu = 0;\n    long long vvv = 0;\n    long long www = 0;\n    long long\
    \ xxx = 0;\n    long long yyy = 0;\n    long long zzz = 0;\n    long long aaaa\
    \ = 0;\n    long long bbbb = 0;\n    long long cccc = 0;\n    long long dddd =\
    \ 0;\n    long long eeee = 0;\n    long long ffff = 0;\n    long long gggg = 0;\n\
    \    long long hhhh = 0;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsvxhuaxd.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpsvxhuaxd.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpsvxhuaxd.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpsvxhuaxd.cpp:31:15: error: declaration of \u2018long long\
    \ int x\u2019 shadows a parameter\n   31 |     long long x = 0;\n      |     \
    \          ^\n/tmp/tmpsvxhuaxd.cpp:94:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   94 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        long long remain = sum - i;\n        if (remain % 2 == 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpvbo__azm: /tmp/tmpvbo__azm.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ an = x.front();\n    long long ans = 0;\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        an = an * 10 + x[i];\n        if(an % 2 == 0) {\n          \
    \  ans++;\n        }\n    }\n    ans.push_back(an);\n    for(long long i = 0;\
    \ i < x.size(); i++) {\n        an = an * 10 + x[i];\n        if(an % 2 != 0)\
    \ {\n            ans.push_back(an);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2iyjtgsc.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2iyjtgsc.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp2iyjtgsc.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp2iyjtgsc.cpp:18:16: error: no \u2018operator++(int)\u2019\
    \ declared for postfix \u2018++\u2019 [-fpermissive]\n   18 |             ans++;\n\
    \      |             ~~~^~\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        ans += x[i];\n    }\n    while(sum > 0) {\n\
    \        ans /= 10;\n        sum += ans;\n        ans *= 10;\n    }\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpktaipj12.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpktaipj12.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpktaipj12.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpktaipj12.cpp:17:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   17 |     \
    \    ans += x[i];\n/tmp/tmpktaipj12.cpp:20:13: error: no match for \u2018operator/=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   20 |         ans /= 10;\n      |         ~~~~^~~~~\n/tmp/tmpktaipj12.cpp:21:13:\
    \ error: no match for \u2018operator+=\u2019 (operand types are \u2018long long\
    \ int\u2019 and \u2018std::vector<long int>\u2019)\n   21 |         sum += ans;\n\
    \      |         ~~~~^~~~~~\n/tmp/tmpktaipj12.cpp:22:13: error: no match for \u2018\
    operator*=\u2019 (operand types are \u2018std::vector<long int>\u2019 and \u2018\
    int\u2019)\n   22 |         ans *= 10;\n      |         ~~~~^~~~~\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        ans = ans *\
    \ 10 + x[i];\n    }\n    for(long long i = 1; i < ans / 10; i++) {\n        if(ans\
    \ % i == 0) {\n            ans = ans / i;\n            ans.push_back(i);\n   \
    \     }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpriypnxh2.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpriypnxh2.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpriypnxh2.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpriypnxh2.cpp:15:19: error: no match for \u2018operator*\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   15 |         ans = ans * 10 + x[i];\n      |               ~~~ ^ ~~\n    \
    \  |               |     |\n      |               |     int\n      |         \
    \      std::vector<long int>\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpriypnxh2.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpriypnxh2.cpp:15:21:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   15 |         ans = ans * 10 + x[i];\n      |                     ^~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpriypnxh2.cpp:2:\n/usr/include/c++/9/complex:400:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpriypnxh2.cpp:15:21:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   15 |         ans = ans * "
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    long long digit;\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        digit = x.at(i);\n        sum += digit;\n        if (sum % 2 == 0)\
    \ {\n            y.push_back(digit);\n        }\n    }\n    return y;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpprjgkd3g: /tmp/tmpprjgkd3g.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        long long rem = sum % 10;\n        if (rem == 0) {\n            ans.push_back(i);\n\
    \        }\n        sum -= i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpqh2t6ucp: /tmp/tmpqh2t6ucp.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpe5o56gnq: /tmp/tmpe5o56gnq.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x)\n    {\n        sum += i;\n    }\n    for(long\
    \ long i : x)\n    {\n        if(i % 2 == 0)\n        {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans)\n    {\n        if(sum % i == 0)\n\
    \        {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpp6hufhvo: /tmp/tmpp6hufhvo.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpe5o56gnq: /tmp/tmpe5o56gnq.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Write your code here\n    std::vector<long>\
    \ y;\n    for(long i=0;i<x.size();i++){\n        long sum=0;\n        for(long\
    \ j=0;j<i;j++){\n            sum+=x[j];\n        }\n        if(sum%2==0){\n  \
    \          y.push_back(x[i]);\n        }\n    }\n    return y;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpv58hsdh7: /tmp/tmpv58hsdh7.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(sum % 2 == 0) {\n     \
    \       ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpyg4g4hjf: /tmp/tmpyg4g4hjf.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans_sum = 0;\n    long long sum = 0;\n    long long ans_size = x.size();\n \
    \   for (long long i = 0; i < ans_size; i++) {\n        sum += x[i];\n       \
    \ if (sum % 2 == 0) {\n            ans.push_back(x[i]);\n            ans_sum +=\
    \ x[i];\n        }\n    }\n    if (ans_sum != 0) {\n        ans.push_back(ans_sum);\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpsbkc2y2d: /tmp/tmpsbkc2y2d.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n    long long count\
    \ = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long digit =\
    \ 0;\n    long long count = 0;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    long long digit = 0;\n    long long count = 0;\n    long long sum = 0;\n\
    \    long long ans = 0;\n    long long digit = 0;\n    long long count = 0;\n\
    \    long long sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n  \
    \  long long count = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long\
    \ long digit = 0;\n    long long count = 0;\n    long long sum = 0;\n    long\
    \ long ans = 0;\n    long long digit = 0;\n    long long count = 0;\n    long\
    \ long sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n    long long\
    \ count = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long digit\
    \ = 0;\n    long long count = 0;\n    long long sum = 0;\n    long long ans =\
    \ 0;\n    long long digit = 0;\n    long long count = 0;\n    long long sum =\
    \ 0;\n    long long ans = 0;\n    long long digit = 0;\n    long long count =\
    \ 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n\
    \    long long count = 0;\n    long long sum = 0;\n    long long ans = 0;\n  \
    \  long long digit = 0;\n    long long count = 0;\n    long long sum = 0;\n  \
    \  long long ans = 0;\n    long long digit = 0;\n    long long count = 0;\n  \
    \  long long sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n    long\
    \ long count = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long\
    \ digit = 0;\n    long long count = 0;\n    long long sum = 0;\n    long long\
    \ ans = 0;\n    long long digit = 0;\n    long long count = 0;\n    long long\
    \ sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n    long long count\
    \ = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long digit =\
    \ 0;\n    long long count = 0;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    long long digit = 0;\n    long long count = 0;\n    long long sum = 0;\n\
    \    long long ans = 0;\n    long long digit = 0;\n    long long count = 0;\n\
    \    long long sum = 0;\n    long long ans = 0;\n    long long digit = 0;\n  \
    \  long long count = 0;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3d1qpvtf.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp3d1qpvtf.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp3d1qpvtf.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp3d1qpvtf.cpp:17:15: error: redeclaration of \u2018long long\
    \ int sum\u2019\n   17 |     long long sum = 0;\n      |               ^~~\n/tmp/tmp3d1qpvtf.cpp:13:15:\
    \ note: \u2018long long int sum\u2019 previously declared here\n   13 |     long\
    \ long sum = 0;\n      |               ^~~\n/tmp/tmp3d1qpvtf.cpp:18:15: error:\
    \ conflicting declaration \u2018long long int ans\u2019\n   18 |     long long\
    \ ans = 0;\n      |               ^~~\n/tmp/tmp3d1qpvtf.cpp:12:23: note: previous\
    \ declaration as \u2018std::vector<long int> ans\u2019\n   12 |     std::vector<long>\
    \ ans;\n      |                       ^~~\n/tmp/tmp3d1qpvtf.cpp:19:15: error:\
    \ redeclaration of \u2018long long int digit\u2019\n   19 |     long long digit\
    \ = 0;\n      |               ^~~~~\n/tmp/tmp3d1qpvtf.cpp:15:15: note: \u2018\
    long long int digit\u2019 previously declared here\n   15 |     long long digit\
    \ = 0;\n      |               ^~~~~\n/tmp/tmp3d1qpvtf.cpp:20:15: error: redeclaration\
    \ of \u2018long long int count\u2019\n   20 |     long long count = 0;\n     \
    \ |               ^~~~~\n/tmp/tmp3d1qpvtf.cpp:16:15: note: \u2018long long int\
    \ count\u2019 previously declared here\n   16 |     long long count = 0;\n   \
    \   |               ^~~~~\n/tmp/tmp3d1qpvtf.cpp:21:15: error: redeclaration of\
    \ \u2018long long int sum\u2019\n   21 |     long long sum = 0;\n      |     \
    \          ^~~\n/tmp/tmp3d1qpvtf.cpp:13:15: note: \u2018long long int sum\u2019\
    \ previously declared here\n   13 |     long long sum = 0;\n      |          \
    \     ^~~\n/tmp/tmp3d1qpvtf.cpp:22:15: error: conflicting declaration \u2018long\
    \ long int ans\u2019\n   22 |     long long ans = 0;\n      |               ^~~\n\
    /tmp/tmp3d1qpvtf.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   1"
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            ans.push_back(i);\n     \
    \   }\n    }\n    for(long long i : ans){\n        if(sum % i == 0){\n       \
    \     ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpdsg1bd18: /tmp/tmpdsg1bd18.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long temp = sum % 10;\n        sum += temp;\n  \
    \      if(sum % 2 == 0) {\n            y.push_back(i);\n        }\n    }\n   \
    \ return y;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpawa15lip: /tmp/tmpawa15lip.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for(long long i : x){\n        sum +=\
    \ i;\n    }\n    for(long long i : x){\n        if(i % 2 == 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans){\n        ans += sum % 10;\n   \
    \     sum = (sum / 10) % 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaklr7vg.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmppaklr7vg.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmppaklr7vg.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmppaklr7vg.cpp:24:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   24 |         ans += sum % 10;\n      |         ~~~~^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long count = 0;\n    long long digit;\n\
    \    for (long long i = 0; i < x.size(); i++) {\n        digit = x.at(i);\n  \
    \      sum += digit;\n        ans += digit % 10;\n        count += 1;\n    }\n\
    \    ans = sum / count;\n    for (long long i = 0; i < x.size(); i++) {\n    \
    \    digit = x.at(i);\n        if (digit % 10 == ans) {\n            ans.push_back(digit);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe6xdpyvy.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpe6xdpyvy.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpe6xdpyvy.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpe6xdpyvy.cpp:20:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   20 |         ans += digit % 10;\n      |         ~~~~^~~~~~~~~~~~~\n/tmp/tmpe6xdpyvy.cpp:23:17:\
    \ error: no match for \u2018operator=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018long long int\u2019)\n   23 |     ans = sum / count;\n\
    \      |                 ^~~~~\nIn file included from /usr/include/c++/9/vector:72,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpe6xdpyvy.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018long long int\u2019 to \u2018const std::vector<long int>&\u2019\
    \n  199 |     operator=(const vector<_Tp, _Alloc>& __x)\n      |             \
    \  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpe6xdpyvy."
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for (long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            if (sum % 10 == 0) {\n                y.push_back(i);\n\
    \            }\n        }\n    }\n    return y;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({(long)15, (long)33,\
    \ (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
    \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpy6613qm_: /tmp/tmpy6613qm_.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long digit = i % 10;\n        if(digit % 2 == 0)\
    \ {\n            ans.push_back(i);\n        }\n    }\n    for(long long i : ans)\
    \ {\n        long long digit = i % 10;\n        if(digit % 2 != 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n    \
    \    long long digit = i % 10;\n        if(digit % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long digit = i %\
    \ 10;\n        if(digit % 2 != 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        long long digit = i % 10;\n    \
    \    if(digit % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long digit = i % 10;\n        if(digit\
    \ % 2 != 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        long long digit = i % 10;\n        if(digit % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n\
    \        long long digit = i % 10;\n        if(digit % 2 != 0) {\n           \
    \ ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n        long\
    \ long digit = i % 10;\n        if(digit % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long digit = i %\
    \ 10;\n        if(digit % 2 != 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans) {\n        long long digit = i % 10;\n    \
    \    if(digit % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long digit = i % 10;\n        if(digit\
    \ % 2 != 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        long long digit = i % 10;\n        if(digit % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n\
    \        long long digit = i % 10;\n        if(digit % 2 != 0) {\n           \
    \ ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n        long\
    \ long digit = i % 10;\n\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp__x3xigd.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp__x3xigd.cpp:105:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n  105 | int main() {\n      |     \
    \       ^\n/tmp/tmp__x3xigd.cpp:111:1: error: expected \u2018}\u2019 at end of\
    \ input\n  111 | }\n      | ^\n/tmp/tmp__x3xigd.cpp:11:54: note: to match this\
    \ \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long> x)\
    \ {\n      |                                                      ^\n/tmp/tmp__x3xigd.cpp:111:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  111 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    long long last = 0;\n   \
    \ for (long long i : x) {\n        if (i % 2 == 0) {\n            ans.push_back(last);\n\
    \        }\n        last = i;\n    }\n    ans.push_back(last);\n    ans.push_back(mod);\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpaq30e_2r: /tmp/tmpaq30e_2r.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long d = i % 10;\n        if(sum % 2 == 0 && d %\
    \ 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpduz9im4m: /tmp/tmpduz9im4m.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans_sum = 0;\n    long long ans_count = 0;\n    for (long long i : x) {\n  \
    \      ans_sum += i;\n        ans_count++;\n    }\n    long long ans_digit = ans_sum\
    \ / ans_count;\n    for (long long i : x) {\n        if (i % ans_digit != 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp65w3oci_: /tmp/tmp65w3oci_.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(sum % 2 == 0) {\n            ans.push_back(i);\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmph36npekf: /tmp/tmph36npekf.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] / 10;\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjbu2cpen.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjbu2cpen.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpjbu2cpen.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpe5o56gnq: /tmp/tmpe5o56gnq.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    for (long long i : x) {\n\
    \        if (i % 2 == 0) {\n            if (sum % 10 != 0) {\n               \
    \ ans.push_back(sum / 10);\n            }\n            sum += i;\n        }\n\
    \    }\n    if (sum % 10 != 0) {\n        ans.push_back(sum / 10);\n    }\n  \
    \  if (mod != 0) {\n        ans.push_back(mod);\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp5myciyyr: /tmp/tmp5myciyyr.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long temp = sum % 10;\n        sum += temp;\n  \
    \      if(sum % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpjez_s2gd: /tmp/tmpjez_s2gd.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for(long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long mod = sum % 10;\n    for(long\
    \ long i : x) {\n        sum += i;\n        count += 1;\n        if(sum % 10 ==\
    \ mod) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp6_sqn1fb: /tmp/tmp6_sqn1fb.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            y.push_back(i);\n        }\n    }\n    return y;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpokl301qh: /tmp/tmpokl301qh.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n   \
    \     }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpnnbdipfe: /tmp/tmpnnbdipfe.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093431
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ temp;\n    long long sum = 0;\n    long long count = 0;\n    for (long long\
    \ i = 0; i < x.size(); i++) {\n        temp = x[i];\n        while (temp != 0)\
    \ {\n            sum += temp % 10;\n            temp /= 10;\n        }\n     \
    \   if (sum % 2 == 0) {\n            y.push_back(x[i]);\n        }\n    }\n  \
    \  return y;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpmeh3zvg3: /tmp/tmpmeh3zvg3.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans_sum = 0;\n    for(long long i : x){\n        ans_sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(ans_sum % 2 == 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpa624mslx: /tmp/tmpa624mslx.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093434
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        long long remain = sum - i;\n        if (remain % 2 == 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpvbo__azm: /tmp/tmpvbo__azm.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans_sum = 0;\n    for (long long i : x) {\n        ans_sum += i;\n    }\n  \
    \  long long ans_len = ans_sum;\n    for (long long i : x) {\n        long long\
    \ remainder = i % 10;\n        if (remainder % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    long long ans_len = ans.size();\n    for (long long i :\
    \ ans) {\n        long long remainder = i % 10;\n        if (remainder % 2 ==\
    \ 0) {\n            ans.push_back(i);\n        }\n    }\n    long long ans_len\
    \ = ans.size();\n    for (long long i : ans) {\n        long long remainder =\
    \ i % 10;\n        if (remainder % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    long long ans_len = ans.size();\n    for (long long i :\
    \ ans) {\n        long long remainder = i % 10;\n        if (remainder % 2 ==\
    \ 0) {\n            ans.push_back(i);\n        }\n    }\n    long long ans_len\
    \ = ans.size();\n    for (long long i : ans) {\n        long long remainder =\
    \ i % 10;\n        if (remainder % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    long long ans_len = ans.size();\n    for (long long i :\
    \ ans) {\n        long long remainder = i % 10;\n        if (remainder % 2 ==\
    \ 0) {\n            ans.push_back(i);\n        }\n    }\n    long long ans_len\
    \ = ans.size();\n    for (long long i : ans) {\n        long long remainder =\
    \ i % 10;\n        if (remainder % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    long long ans_len = ans.size();\n    for (long long i :\
    \ ans) {\n        long long remainder = i % 10;\n        if (remainder % 2 ==\
    \ 0) {\n            ans.push_back(i);\n        }\n    }\n    long long ans_len\
    \ = ans.size();\n    for (long long i : ans) {\n        long long remainder =\
    \ i % 10;\n        if (remainder % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    long long ans_len = ans.size();\n    for (long long i :\
    \ ans) {\n        long long remainder = i % 10;\n        if (remainder % 2 ==\
    \ 0) {\n            ans.push_back(i);\n        }\n    }\n    long long ans_len\
    \ = ans.size();\n    for (long long i : ans) {\n        long long remainder =\
    \ i % 10;\n        if (remainder % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    long long ans_len = ans.size();\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpizs_thc0.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpizs_thc0.cpp:24:15: error: redeclaration of \u2018long\
    \ long int ans_len\u2019\n   24 |     long long ans_len = ans.size();\n      |\
    \               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:17:15: note: \u2018long long int\
    \ ans_len\u2019 previously declared here\n   17 |     long long ans_len = ans_sum;\n\
    \      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:31:15: error: redeclaration\
    \ of \u2018long long int ans_len\u2019\n   31 |     long long ans_len = ans.size();\n\
    \      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:17:15: note: \u2018long long\
    \ int ans_len\u2019 previously declared here\n   17 |     long long ans_len =\
    \ ans_sum;\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:38:15: error:\
    \ redeclaration of \u2018long long int ans_len\u2019\n   38 |     long long ans_len\
    \ = ans.size();\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:17:15: note:\
    \ \u2018long long int ans_len\u2019 previously declared here\n   17 |     long\
    \ long ans_len = ans_sum;\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:45:15:\
    \ error: redeclaration of \u2018long long int ans_len\u2019\n   45 |     long\
    \ long ans_len = ans.size();\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:17:15:\
    \ note: \u2018long long int ans_len\u2019 previously declared here\n   17 |  \
    \   long long ans_len = ans_sum;\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:52:15:\
    \ error: redeclaration of \u2018long long int ans_len\u2019\n   52 |     long\
    \ long ans_len = ans.size();\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:17:15:\
    \ note: \u2018long long int ans_len\u2019 previously declared here\n   17 |  \
    \   long long ans_len = ans_sum;\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:59:15:\
    \ error: redeclaration of \u2018long long int ans_len\u2019\n   59 |     long\
    \ long ans_len = ans.size();\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:17:15:\
    \ note: \u2018long long int ans_len\u2019 previously declared here\n   17 |  \
    \   long long ans_len = ans_sum;\n      |               ^~~~~~~\n/tmp/tmpizs_thc0.cpp:66:15:\
    \ error: redeclaration of \u2018long long int ans_len"
  stdout: ''
  timestamp: 1660093434
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x)\n        sum += i;\n    for(long long i :\
    \ x) {\n        if(i % 2 == 0)\n            continue;\n        long long temp\
    \ = sum;\n        while(temp > 0) {\n            long long mod = temp % 10;\n\
    \            if(mod != 0)\n                break;\n            temp /= 10;\n \
    \       }\n        if(temp == 0)\n            ans.push_back(i);\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp5p9ac_jt: /tmp/tmp5p9ac_jt.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n\
    \        long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : \n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9k_5dzxf.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp9k_5dzxf.cpp:108:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  108 | }\n      | ^\n/tmp/tmp9k_5dzxf.cpp:107:22:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  107 |     for(long\
    \ long i :\n      |        ~             ^\n      |                      )\n \
    \ 108 | }\n      | ~                     \n/tmp/tmp9k_5dzxf.cpp:108:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n  108 | }\n      | ^\n\
    /tmp/tmp9k_5dzxf.cpp:108:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660093434
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n\
    \        long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 != 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2\
    \ != 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp24yx9t39: /tmp/tmp24yx9t39.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n   \
    \     }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpeuy_zwvt: /tmp/tmpeuy_zwvt.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    for (long long i : x) {\n\
    \        if (i % 2 == 0) {\n            if (i % mod == 0) {\n                ans.push_back(i);\n\
    \            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({(long)15, (long)33,\
    \ (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
    \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpy0n5vvjc: /tmp/tmpy0n5vvjc.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long xx = x;\n    long long temp = 0;\n    long long count\
    \ = 0;\n    long long digit = 0;\n    long long i = 0;\n    long long j = 0;\n\
    \    long long k = 0;\n    long long l = 0;\n    long long m = 0;\n    long long\
    \ n = 0;\n    long long o = 0;\n    long long p = 0;\n    long long q = 0;\n \
    \   long long r = 0;\n    long long s = 0;\n    long long t = 0;\n    long long\
    \ u = 0;\n    long long v = 0;\n    long long w = 0;\n    long long x = 0;\n \
    \   long long y = 0;\n    long long z = 0;\n    long long A = 0;\n    long long\
    \ B = 0;\n    long long C = 0;\n    long long D = 0;\n    long long E = 0;\n \
    \   long long F = 0;\n    long long G = 0;\n    long long H = 0;\n    long long\
    \ I = 0;\n    long long J = 0;\n    long long K = 0;\n    long long L = 0;\n \
    \   long long M = 0;\n    long long N = 0;\n    long long O = 0;\n    long long\
    \ P = 0;\n    long long Q = 0;\n    long long R = 0;\n    long long S = 0;\n \
    \   long long T = 0;\n    long long U = 0;\n    long long V = 0;\n    long long\
    \ W = 0;\n    long long X = 0;\n    long long Y = 0;\n    long long Z = 0;\n \
    \   long long aa = 0;\n    long long bb = 0;\n    long long cc = 0;\n    long\
    \ long dd = 0;\n    long long ee = 0;\n    long long ff = 0;\n    long long gg\
    \ = 0;\n    long long hh = 0;\n    long long ii = 0;\n    long long jj = 0;\n\
    \    long long kk = 0;\n    long long ll = 0;\n    long long mm = 0;\n    long\
    \ long nn = 0;\n    long long oo = 0;\n    long long pp = 0;\n    long long qq\
    \ = 0;\n    long long rr = 0;\n    long long ss = 0;\n    long long tt = 0;\n\
    \    long long uu = 0;\n    long long vv = 0;\n    long long ww = 0;\n    long\
    \ long xx = 0;\n    long long yy = 0;\n    long long zz = 0;\n    long long Aa\
    \ = 0;\n    long long Bb = 0;\n    long long Cc = 0;\n    long long Dd = 0;\n\
    \    long long Ee = 0;\n    long long Ff = 0;\n    long long Gg = 0;\n    long\
    \ long Hh = 0;\n    long \n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bjj5hxc.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5bjj5hxc.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp5bjj5hxc.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp5bjj5hxc.cpp:14:20: error: cannot convert \u2018std::vector<long\
    \ int>\u2019 to \u2018long long int\u2019 in initialization\n   14 |     long\
    \ long xx = x;\n      |                    ^\n      |                    |\n \
    \     |                    std::vector<long int>\n/tmp/tmp5bjj5hxc.cpp:33:15:\
    \ error: declaration of \u2018long long int x\u2019 shadows a parameter\n   33\
    \ |     long long x = 0;\n      |               ^\n/tmp/tmp5bjj5hxc.cpp:85:15:\
    \ error: redeclaration of \u2018long long int xx\u2019\n   85 |     long long\
    \ xx = 0;\n      |               ^~\n/tmp/tmp5bjj5hxc.cpp:14:15: note: \u2018\
    long long int xx\u2019 previously declared here\n   14 |     long long xx = x;\n\
    \      |               ^~\n/tmp/tmp5bjj5hxc.cpp:97:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   97 | }\n      | ^\n/tmp/tmp5bjj5hxc.cpp:97:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660093434
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        if (sum % 10 == 0) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmprm1ydc9a: /tmp/tmprm1ydc9a.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long temp = sum % 10;\n        sum += temp;\n  \
    \      if(sum % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpjez_s2gd: /tmp/tmpjez_s2gd.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        long long tmp = sum - i;\n        if (tmp % 2 == 0) {\n            ans.push_back(tmp);\n\
    \        }\n    }\n    std::sort(ans.begin(), ans.end());\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpmud81fcv: /tmp/tmpmud81fcv.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        ans += x[i];\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 ==\
    \ 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i = 0; i\
    \ < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i]\
    \ % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        if(x[i] % 2 != 0) {\n            ans += x[i];\n\
    \n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_u_u9q3.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpv_u_u9q3.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpv_u_u9q3.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpv_u_u9q3.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpv_u_u9q3.cpp:19:17: error: no match for \u2018operator-=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   19 |     \
    \        ans -= x[i];\n/tmp/tmpv_u_u9q3.cpp:24:17: error: no match for \u2018\
    operator+=\u2019 (operand types are \u2018std::vector<long int>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type\u2019\
    \ {aka \u2018long int\u2019})\n   24 |             ans += x[i];\n/tmp/tmpv_u_u9q3.cpp:29:17:\
    \ error: no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   29 |             ans\
    \ -= x[i];\n/tmp/tmpv_u_u9q3.cpp:34:17: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   34 |     \
    \        ans += x[i];\n/tmp/tmpv_u_u9q3.cpp:39:17: error: no match for \u2018\
    operator-=\u2019 (operand types are \u2018std::vector<long int>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type\u2019\
    \ {aka \u2018long int\u2019})\n   39 |             ans -= x[i];\n/tmp/tmpv_u_u9q3.cpp:44:17:\
    \ error: no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<st"
  stdout: ''
  timestamp: 1660093434
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        if (sum % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6s1nbq5n.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6s1nbq5n.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp6s1nbq5n.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093434
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    for (long long i : x) {\n\
    \        if (i % 2 == 0) {\n            if (sum % 10 == mod) {\n             \
    \   ans.push_back(an);\n            }\n            an = i;\n            sum =\
    \ 0;\n            mod = i;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp04mi0faq: /tmp/tmp04mi0faq.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans_sum = 0;\n    long long ans_sum2 = 0;\n    long long ans_sum3 = 0;\n   \
    \ long long ans_sum4 = 0;\n    long long ans_sum5 = 0;\n    long long ans_sum6\
    \ = 0;\n    long long ans_sum7 = 0;\n    long long ans_sum8 = 0;\n    long long\
    \ ans_sum9 = 0;\n    long long ans_sum10 = 0;\n    long long ans_sum11 = 0;\n\
    \    long long ans_sum12 = 0;\n    long long ans_sum13 = 0;\n    long long ans_sum14\
    \ = 0;\n    long long ans_sum15 = 0;\n    long long ans_sum16 = 0;\n    long long\
    \ ans_sum17 = 0;\n    long long ans_sum18 = 0;\n    long long ans_sum19 = 0;\n\
    \    long long ans_sum20 = 0;\n    long long ans_sum21 = 0;\n    long long ans_sum22\
    \ = 0;\n    long long ans_sum23 = 0;\n    long long ans_sum24 = 0;\n    long long\
    \ ans_sum25 = 0;\n    long long ans_sum26 = 0;\n    long long ans_sum27 = 0;\n\
    \    long long ans_sum28 = 0;\n    long long ans_sum29 = 0;\n    long long ans_sum30\
    \ = 0;\n    long long ans_sum31 = 0;\n    long long ans_sum32 = 0;\n    long long\
    \ ans_sum33 = 0;\n    long long ans_sum34 = 0;\n    long long ans_sum35 = 0;\n\
    \    long long ans_sum36 = 0;\n    long long ans_sum37 = 0;\n    long long ans_sum38\
    \ = 0;\n    long long ans_sum39 = 0;\n    long long ans_sum40 = 0;\n    long long\
    \ ans_sum41 = 0;\n    long long ans_sum42 = 0;\n    long long ans_sum43 = 0;\n\
    \    long long ans_sum44 = 0;\n    long long ans_sum45 = 0;\n    long long ans_sum46\
    \ = 0;\n    long long ans_sum47 = 0;\n    long long ans_sum48 = 0;\n    long long\
    \ ans_sum49 = 0;\n    long long ans_sum50 = 0;\n    long long ans_sum51 = 0;\n\
    \    long long ans_sum52 = 0;\n    long long ans_sum53 = 0;\n    long long ans_sum54\
    \ = 0;\n    long long ans_sum55 = 0;\n    long long ans_sum56 = 0;\n    long long\
    \ ans_sum\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqjuzeh55.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpqjuzeh55.cpp:70:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   70 | }\n      | ^\n/tmp/tmpqjuzeh55.cpp:70:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660093434
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvcfec_up.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpvcfec_up.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpvcfec_up.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            ans.push_back(i);\n  \
    \      }\n    }\n    for (long long i : ans) {\n        if (sum % i == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp5sciiar8: /tmp/tmp5sciiar8.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long remainder = sum % 10;\n        if(remainder\
    \ == 0) {\n            ans.push_back(i);\n        }\n        sum -= i;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpivhoaw8z: /tmp/tmpivhoaw8z.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpqmmy96jc: /tmp/tmpqmmy96jc.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    for (long long i : x) {\n\
    \        if (i % 2 == 0) {\n            long long temp = i;\n            while\
    \ (temp > 0) {\n                temp -= mod;\n                ans.push_back(temp);\n\
    \            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({(long)15, (long)33,\
    \ (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
    \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpoqb65_ln: /tmp/tmpoqb65_ln.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpe5o56gnq: /tmp/tmpe5o56gnq.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    while (an > 0) {\n      \
    \  ans.push_back(an);\n        an = an / 10;\n    }\n    for (long long i : x)\
    \ {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpxob240j_: /tmp/tmpxob240j_.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n\
    \    }\n    for (long long i = 0; i < x.size(); i++) {\n        if (sum % 2 ==\
    \ 0) {\n            y.push_back(x[i]);\n        }\n    }\n    return y;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpnnlb3jvr: /tmp/tmpnnlb3jvr.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long digit = 0;\n    for (long long\
    \ i = 0; i < x.size(); i++) {\n        sum += x[i];\n        digit = sum % 10;\n\
    \        if (digit == 0) {\n            ans.push_back(x[i]);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpixigiwql.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpixigiwql.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpixigiwql.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Your code here\n    std::vector<long>\
    \ ans;\n    long long ans = 0;\n    for (long long i = 0; i < x.size(); i++) {\n\
    \        ans = x[i];\n        long long sum = 0;\n        while (ans > 0) {\n\
    \            sum += ans % 10;\n            ans /= 10;\n        }\n        if (sum\
    \ % 2 == 0) {\n            ans.push_back(sum);\n        }\n    }\n    std::sort(ans.begin(),\
    \ ans.end());\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfncn262j.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfncn262j.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpfncn262j.cpp:13:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   13 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpfncn262j.cpp:16:18: error: no match for \u2018operator=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   16 |     \
    \    ans = x[i];\n      |                  ^\nIn file included from /usr/include/c++/9/vector:72,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfncn262j.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type\u2019\
    \ {aka \u2018long int\u2019} to \u2018const std::vector<long int>&\u2019\n  199\
    \ |     operator=(const vector<_Tp, _Alloc>& __x)\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfncn262j.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:706:7:"
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long digit;\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        digit = x.at(i);\n        sum += digit;\n        while (sum > 0)\
    \ {\n            sum -= digit % 10;\n            ans.push_back(digit / 10);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpxodahck7: /tmp/tmpxodahck7.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            continue;\n        }\n\
    \        long long temp = sum % 10;\n        sum += temp;\n        ans.push_back(temp);\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmphjchg0q7: /tmp/tmphjchg0q7.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Write your code here\n    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for(long long i : x) {\n        sum += i;\n\
    \    }\n    for(long long i : x) {\n        if(sum % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp_e17w9vk: /tmp/tmp_e17w9vk.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for (long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long mod = sum % 10;\n    long long\
    \ remainder = sum / 10;\n    for (long long i : x) {\n        if (i % 2 == 0)\
    \ {\n            if (sum % 10 != 0) {\n                y.push_back(remainder);\n\
    \                sum += remainder;\n                count += 1;\n            }\n\
    \            sum += i;\n            count += 1;\n        }\n    }\n    if (sum\
    \ % 10 != 0) {\n        y.push_back(remainder);\n        sum += remainder;\n \
    \       count += 1;\n    }\n    if (count != x.size()) {\n        y.push_back(0);\n\
    \    }\n    std::sort(y.begin(), y.end());\n    return y;\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpp9ewv8fh: /tmp/tmpp9ewv8fh.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for(long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        if(sum % 2 == 0) {\n            count++;\n\
    \        }\n    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(sum\
    \ % 2 == 0 && x[i] % 2 == 0) {\n            y.push_back(x[i]);\n        }\n  \
    \  }\n    if(count > 0) {\n        std::sort(y.begin(), y.end());\n    }\n   \
    \ return y;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpyixk6wr0: /tmp/tmpyixk6wr0.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for (auto i : x) {\n        sum += i;\n\
    \    }\n    for (auto i : x) {\n        ans += i / sum;\n    }\n    for (auto\
    \ i : x) {\n        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n\
    \    for (auto i : x) {\n        if (ans % i == 0) {\n            ans /= i;\n\
    \        }\n    }\n    for (auto i : x) {\n        if (ans % i == 0) {\n     \
    \       ans /= i;\n        }\n    }\n    for (auto i : x) {\n        if (ans %\
    \ i == 0) {\n            ans /= i;\n        }\n    }\n    for (auto i : x) {\n\
    \        if (ans % i == 0) {\n            ans /= i;\n        }\n    }\n    for\
    \ (auto i : x) {\n        if (ans % i == 0) {\n            ans /= i;\n       \
    \ }\n    }\n    for (auto i : x) {\n        if (ans % i == 0) {\n            ans\
    \ /= i;\n        }\n    }\n    for (auto i : x) {\n        if (ans % i == 0) {\n\
    \            ans /= i;\n        }\n    }\n    for (auto i : x) {\n        if (ans\
    \ % i == 0) {\n            ans /= i;\n        }\n    }\n    for (auto i : x) {\n\
    \        if (ans % i == 0) {\n            ans /= i;\n        }\n    }\n    for\
    \ (auto i : x) {\n        if (ans % i == 0) {\n            ans /= i;\n       \
    \ }\n    }\n    for (auto i : x) {\n        if (ans % i == 0) {\n            ans\
    \ /= i;\n        }\n    }\n    for (auto i : x) {\n        if (ans % i == 0) {\n\
    \            ans /= i;\n        }\n    }\n    for (auto i : x) {\n        if (ans\
    \ % i == 0) {\n            ans /= i;\n        }\n    }\n    for (auto i : x) {\n\
    \        if (ans % i == 0) {\n            ans /= i;\n        }\n    }\n    for\
    \ (auto i : x) {\n        if (ans % i == 0) {\n            ans /= i;\n       \
    \ }\n    }\n    for (auto i : x) {\n        if (ans % i == 0) {\n            ans\
    \ /= i;\n        }\n    }\n    for (auto i : x) {\n        if (ans % i == 0) {\n\
    \            ans /= i;\n        }\n    }\n    for (auto i : x) {\n        if (ans\
    \ % i == 0) {\n            ans /= i;\n        }\n    }\n    for (auto i : x) {\n\
    \        if (ans % i == 0) {\n            ans /= i;\n        }\n    }\n    for\
    \ (auto i : x) {\n        if (an\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpywaprh1q.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpywaprh1q.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpywaprh1q.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpywaprh1q.cpp:19:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   19 |         ans += i / sum;\n      |         ~~~~^~~~~~~~~~\n/tmp/tmpywaprh1q.cpp:23:17:\
    \ error: no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018long int\u2019)\n   23 |             ans += i;\n      |\
    \             ~~~~^~~~\n/tmp/tmpywaprh1q.cpp:27:17: error: no match for \u2018\
    operator%\u2019 (operand types are \u2018std::vector<long int>\u2019 and \u2018\
    long int\u2019)\n   27 |         if (ans % i == 0) {\n      |             ~~~\
    \ ^ ~\n      |             |     |\n      |             |     long int\n     \
    \ |             std::vector<long int>\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpywaprh1q.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpywaprh1q.cpp:27:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   27 |         if (ans % i == 0) {\n     "
  stdout: ''
  timestamp: 1660093434
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for (long long i : x) {\n        sum +=\
    \ i;\n    }\n    for (long long i : x) {\n        ans += (i % 10) * sum;\n   \
    \ }\n    for (long long i : x) {\n        if (ans % 2 == 0) {\n            ans\
    \ /= 2;\n            ans.push_back(i / 10);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr96wfpyq.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpr96wfpyq.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpr96wfpyq.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpr96wfpyq.cpp:19:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   19 |         ans += (i % 10) * sum;\n      |         ~~~~^~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr96wfpyq.cpp:22:17: error: no match for \u2018operator%\u2019 (operand\
    \ types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n   22 |  \
    \       if (ans % 2 == 0) {\n      |             ~~~ ^ ~\n      |            \
    \ |     |\n      |             |     int\n      |             std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/valarray:603,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n            \
    \     from /tmp/tmpr96wfpyq.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpr96wfpyq.cpp:22:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   22 |         if (ans % 2 == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpr96"
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long temp = 0;\n    for (long long i : x) {\n        sum\
    \ += i;\n    }\n    for (long long i : x) {\n        temp = sum % 10;\n      \
    \  if (temp == 0)\n            ans.push_back(i);\n        sum -= temp;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpw7_giet3: /tmp/tmpw7_giet3.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Your code here\n    std::vector<long>\
    \ y;\n    long long temp;\n    long long sum = 0;\n    for(long long i = 0; i\
    \ < x.size(); i++) {\n        temp = x[i];\n        while(temp > 0) {\n      \
    \      sum += temp % 10;\n            temp /= 10;\n        }\n        if(sum %\
    \ 2 == 0) {\n            y.push_back(x[i]);\n        }\n    }\n    return y;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmphaqewccm: /tmp/tmphaqewccm.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ temp;\n    long long sum = 0;\n    long long count = 0;\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        temp = x[i];\n        sum += temp;\n    \
    \    count += 1;\n        if(sum % 2 == 0) {\n            y.push_back(temp);\n\
    \        }\n    }\n    for(long long i = 0; i < y.size(); i++) {\n        if(y[i]\
    \ % 2 != 0) {\n            y.erase(y.begin() + i);\n        }\n    }\n    return\
    \ y;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpwjq4fv8f: /tmp/tmpwjq4fv8f.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans_sum = 0;\n    long long ans_count = 0;\n    long long ans_digit = 0;\n \
    \   for (long long i = 0; i < x.size(); i++) {\n        ans_sum += x[i];\n   \
    \     ans_count += 1;\n        while (ans_count > 0 && ans_sum % 10 == 0) {\n\
    \            ans_sum -= ans_digit * 10;\n            ans_count -= 1;\n       \
    \     ans_digit += 1;\n        }\n        ans.push_back(x[i]);\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpeb288r5u: /tmp/tmpeb288r5u.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n\
    \        ans.push_back(i);\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpk1jebsy4: /tmp/tmpk1jebsy4.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for (long long i = 0; i < x.size(); i++) {\n        ans += x[i];\n\
    \    }\n    long long temp = ans;\n    ans = 0;\n    for (long long i = 0; i <\
    \ x.size(); i++) {\n        if (x[i] % 2 == 0) {\n            ans += x[i];\n \
    \       }\n    }\n    ans = temp + ans;\n    for (long long i = 0; i < x.size();\
    \ i++) {\n        if (x[i] % 2 == 0) {\n            ans += x[i];\n        }\n\
    \    }\n    for (long long i = 0; i < x.size(); i++) {\n        if (x[i] % 2 !=\
    \ 0) {\n            ans += x[i];\n        }\n    }\n    for (long long i = 0;\
    \ i < x.size(); i++) {\n        if (x[i] % 2 == 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for (long long i = 0; i < x.size(); i++) {\n        if\
    \ (x[i] % 2 != 0) {\n            ans += x[i];\n        }\n    }\n    for (long\
    \ long i = 0; i < x.size(); i++) {\n        if (x[i] % 2 == 0) {\n           \
    \ ans += x[i];\n        }\n    }\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        if (x[i] % 2 != 0) {\n            ans += x[i];\n        }\n    }\n\
    \    for (long long i = 0; i < x.size(); i++) {\n        if (x[i] % 2 == 0) {\n\
    \            ans += x[i];\n        }\n    }\n    for (long long i = 0; i < x.size();\
    \ i++) {\n        if (x[i] % 2 != 0) {\n            ans += x[i];\n        }\n\
    \    }\n    for (long long i = 0; i < x.size(); i++) {\n        if (x[i] % 2 ==\
    \ 0) {\n            ans += x[i];\n        }\n    }\n    for (long long i = 0;\
    \ i < x.size(); i++) {\n        if (x[i] % 2 != 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for (long long i = 0; i < x.size(); i++) {\n        if\
    \ (x[i] % 2 == 0) {\n            ans += x[i];\n        }\n    }\n    for (long\
    \ long i = 0; i < x.size(); i++) {\n        if (x[i] % 2 != 0) {\n           \
    \ ans += x[i];\n        }\n    }\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        if (x[i] % 2 == 0) {\n            ans += x[i];\n        }\n    }\n\
    \    for (long long i = 0; i < x.size(); i++) {\n        if (x[i] % 2 != 0) {\n\
    \            ans += x[i];\n        }\n    }\n    for (long long i = 0; i < x.size();\
    \ i++) {\n        if (x[i] % 2 == 0) {\n            ans += x[i];\n        }\n\
    \    }\n    for (long long i = 0; i < x.size(); i++) {\n        if (x[i] % 2 !=\
    \ 0) {\n            ans += x[i];\n        }\n    }\n    for (long long i = 0;\
    \ i < x.size(); i++) {\n        if (x[i] % 2 == 0) {\n            ans += x[i];\n\
    \        }\n    }\n    for (long long i = 0; i < x.size()\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyipcz9pv.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpyipcz9pv.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpyipcz9pv.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpyipcz9pv.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpyipcz9pv.cpp:17:22: error: cannot convert \u2018std::vector<long\
    \ int>\u2019 to \u2018long long int\u2019 in initialization\n   17 |     long\
    \ long temp = ans;\n      |                      ^~~\n      |                \
    \      |\n      |                      std::vector<long int>\n/tmp/tmpyipcz9pv.cpp:18:11:\
    \ error: no match for \u2018operator=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   18 |     ans = 0;\n      |           ^\n\
    In file included from /usr/include/c++/9/vector:72,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyipcz9pv.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018int\u2019 to \u2018const std::vector<long int>&\u2019\n  199 |\
    \     operator=(const vector<_Tp, _Alloc>& __x)\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/in"
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n   \
    \     }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpeuy_zwvt: /tmp/tmpeuy_zwvt.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n   \
    \     }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpeuy_zwvt: /tmp/tmpeuy_zwvt.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            continue;\n        }\n\
    \        if(sum % 10 == 0) {\n            ans.push_back(i);\n        }\n    }\n\
    \    sort(ans.begin(), ans.end());\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpk5ycg_7r: /tmp/tmpk5ycg_7r.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Your code here\n    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for (long long i : x) {\n        sum += i;\n\
    \    }\n    long long mod = sum % 10;\n    for (long long i : x) {\n        if\
    \ (i % 10 != mod) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp64c3ct8s: /tmp/tmp64c3ct8s.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            continue;\n        }\n\
    \        long long mod = sum % 10;\n        if(mod != 0) {\n            ans.push_back(i);\n\
    \            sum -= mod;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpqd7o27_y: /tmp/tmpqd7o27_y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long digit;\n    for (long long i : x) {\n        sum +=\
    \ i;\n        digit = sum % 10;\n        if (digit % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpfke0_fk9: /tmp/tmpfke0_fk9.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            continue;\n        }\n  \
    \      long long mod = sum % 10;\n        if(mod != 0){\n            ans.push_back(i);\n\
    \        }\n        sum -= i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpcozgh8je: /tmp/tmpcozgh8je.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long count = 0;\n    for(long long\
    \ i = 0; i < x.size(); i++) {\n        sum += x[i];\n        count += 1;\n   \
    \     if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n        }\n    }\n\
    \    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] / 10;\n\
    \    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i]\
    \ * 10;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] + ans[i - 1];\n    }\n    for(long long i = 0; i < ans.size(); i++)\
    \ {\n        ans[i] = ans[i] - ans[i - 1];\n    }\n    for(long long i = 0; i\
    \ < ans.size(); i++) {\n        ans[i] = ans[i] % 10;\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] - ans[i - 1];\n    }\n\
    \    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] / 10;\n\
    \    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i]\
    \ * 10;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] + ans[i - 1];\n    }\n    for(long long i = 0; i < ans.size(); i++)\
    \ {\n        ans[i] = ans[i] - ans[i - 1];\n    }\n    for(long long i = 0; i\
    \ < ans.size(); i++) {\n        ans[i] = ans[i] % 10;\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] - ans[i - 1];\n    }\n\
    \    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] / 10;\n\
    \    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i]\
    \ * 10;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] + ans[i - 1];\n    }\n    for(long long i = 0; i < ans.size(); i++)\
    \ {\n        ans[i] = ans[i] - ans[i - 1];\n    }\n    for(long long i = 0; i\
    \ < ans.size(); i++) {\n        ans[i] = ans[i] % 10;\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] - ans[i - 1];\n    }\n\
    \    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] / 10;\n\
    \    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i]\
    \ * 10;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] + ans[i - 1];\n    }\n    for(long long i = 0; i < ans.size(); i++)\
    \ {\n        ans[i] = ans[i] - ans[i - 1];\n    }\n    \n}\nint main() {\n   \
    \ auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzvjvhwpl.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzvjvhwpl.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpzvjvhwpl.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpzvjvhwpl.cpp:90:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   90 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // write your code here\n    std::vector<long>\
    \ y;\n    long long sum = 0;\n    for (long long i = 0; i < x.size(); i++) {\n\
    \        sum += x[i];\n    }\n    for (long long i = 0; i < x.size(); i++) {\n\
    \        if ((sum % 10) == 0) {\n            y.push_back(x[i]);\n        }\n \
    \   }\n    std::sort(y.begin(), y.end());\n    return y;\n}\nint main() {\n  \
    \  auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmposb4j_9q: /tmp/tmposb4j_9q.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Write your code here\n    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for(long long i : x){\n        sum += i;\n\
    \    }\n    for(long long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp5qpkc65d: /tmp/tmp5qpkc65d.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        long long d = sum % 10;\n        ans.push_back(d);\n        sum -= d;\n\
    \    }\n    std::sort(ans.begin(), ans.end());\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpi8sse1pp: /tmp/tmpi8sse1pp.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        if (sum % 10 == 0) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmprm1ydc9a: /tmp/tmprm1ydc9a.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n   \
    \     }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpeuy_zwvt: /tmp/tmpeuy_zwvt.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        while(sum % 10 == 0) {\n\
    \            sum -= 10;\n        }\n        sum += i;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp5ocquxn8: /tmp/tmp5ocquxn8.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(sum % 2 == 0) {\n            ans.push_back(i);\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmph36npekf: /tmp/tmph36npekf.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        ans += x[i];\n\
    \    }\n    while(ans % 2 == 0) {\n        ans /= 2;\n        ans.push_back(0);\n\
    \    }\n    for(long long i = 0; i < x.size(); i++) {\n        if(ans[x[i]] %\
    \ 2 == 0) {\n            ans[x[i]] /= 2;\n            ans.push_back(x[i]);\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfn868f_3.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfn868f_3.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpfn868f_3.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpfn868f_3.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpfn868f_3.cpp:17:15: error: no match for \u2018operator%\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   17 |     while(ans % 2 == 0) {\n      |           ~~~ ^ ~\n      |       \
    \    |     |\n      |           |     int\n      |           std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/valarray:603,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n            \
    \     from /tmp/tmpfn868f_3.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfn868f_3.cpp:17:17: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   17 |     while(ans % 2 == 0) {\n      |                 ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \              "
  stdout: ''
  timestamp: 1660093437
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long count = 0;\n    long long max\
    \ = 0;\n    long long min = 0;\n    long long temp = 0;\n    long long ans2 =\
    \ 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n\
    \    long long ans6 = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n \
    \   long long ans9 = 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n\
    \    long long ans12 = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n\
    \    long long ans15 = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n\
    \    long long ans18 = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n\
    \    long long ans21 = 0;\n    long long ans22 = 0;\n    long long ans23 = 0;\n\
    \    long long ans24 = 0;\n    long long ans25 = 0;\n    long long ans26 = 0;\n\
    \    long long ans27 = 0;\n    long long ans28 = 0;\n    long long ans29 = 0;\n\
    \    long long ans30 = 0;\n    long long ans31 = 0;\n    long long ans32 = 0;\n\
    \    long long ans33 = 0;\n    long long ans34 = 0;\n    long long ans35 = 0;\n\
    \    long long ans36 = 0;\n    long long ans37 = 0;\n    long long ans38 = 0;\n\
    \    long long ans39 = 0;\n    long long ans40 = 0;\n    long long ans = 1;\n\
    \    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n \
    \   long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n  \
    \  long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n  \
    \  long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22 = 0;\n\
    \    long long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25 = 0;\n\
    \    long long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28 = 0;\n\
    \    long long ans29\n}\nint main() {\n    auto candidate = unique_digits;\n \
    \   assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpycfdtl0s.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpycfdtl0s.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpycfdtl0s.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpycfdtl0s.cpp:58:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   58 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpycfdtl0s.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpycfdtl0s.cpp:59:15: error: redeclaration of \u2018long long\
    \ int ans2\u2019\n   59 |     long long ans2 = 0;\n      |               ^~~~\n\
    /tmp/tmpycfdtl0s.cpp:19:15: note: \u2018long long int ans2\u2019 previously declared\
    \ here\n   19 |     long long ans2 = 0;\n      |               ^~~~\n/tmp/tmpycfdtl0s.cpp:60:15:\
    \ error: redeclaration of \u2018long long int ans3\u2019\n   60 |     long long\
    \ ans3 = 0;\n      |               ^~~~\n/tmp/tmpycfdtl0s.cpp:20:15: note: \u2018\
    long long int ans3\u2019 previously declared here\n   20 |     long long ans3\
    \ = 0;\n      |               ^~~~\n/tmp/tmpycfdtl0s.cpp:61:15: error: redeclaration\
    \ of \u2018long long int ans4\u2019\n   61 |     long long ans4 = 0;\n      |\
    \               ^~~~\n/tmp/tmpycfdtl0s.cpp:21:15: note: \u2018long long int ans4\u2019\
    \ previously declared here\n   21 |     long long ans4 = 0;\n      |         \
    \      ^~~~\n/tmp/tmpycfdtl0s.cpp:62:15: error: redeclaration of \u2018long long\
    \ int ans5\u2019\n   62 |     long long ans5 = 0;\n      |               ^~~~\n\
    /tmp/tmpycfdtl0s.cpp:22:15: note: \u2018long long int ans5\u2019 previously declared\
    \ here\n   22 |     long long ans5 = 0;\n      |               ^~~~\n/tmp/tmpycfdtl0s.cpp:63:15:\
    \ error: redeclaration of \u2018long long int ans6\u2019\n   63 |     long long\
    \ ans6 = 0;\n      |               ^~~~\n/tmp/tmpycfdtl0s.cpp:23:15: note: \u2018\
    long long int ans6\u2019 previously declared here\n   23 |     lo"
  stdout: ''
  timestamp: 1660093436
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            continue;\n        }\n\
    \        long long mod = sum % 10;\n        if(mod != 0) {\n            ans.push_back(i);\n\
    \        }\n        sum -= i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpdsp50aqh: /tmp/tmpdsp50aqh.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for (long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long mod = sum % 10;\n    long long\
    \ remain = sum / 10;\n    long long last = 0;\n    for (long long i : x) {\n \
    \       if (i % 10 != 0) {\n            long long temp = remain;\n           \
    \ remain = last + 1;\n            last += 1;\n            sum += temp;\n     \
    \       count += 1;\n        }\n    }\n    long long ans = sum;\n    if (mod !=\
    \ 0) {\n        ans = ans - mod;\n    }\n    if (count != 0) {\n        ans =\
    \ ans - remain;\n    }\n    y.push_back(ans);\n    return y;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpknmjdb_8: /tmp/tmpknmjdb_8.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for(long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    for(long long i : x) {\n        if(i\
    \ % 2 == 0) {\n            sum += i;\n            count += 1;\n        }\n   \
    \ }\n    for(long long i = sum; i > 0; i /= 10) {\n        if(count % 2 == 0)\
    \ {\n            ans.push_back(i);\n            count += 1;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpaef2_9fv: /tmp/tmpaef2_9fv.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(sum % i == 0) {\n     \
    \       ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpoh0uanym: /tmp/tmpoh0uanym.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpe5o56gnq: /tmp/tmpe5o56gnq.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n\
    \    }\n    for (long long i = 0; i < x.size(); i++) {\n        if ((sum % 10)\
    \ == 0) {\n            y.push_back(x[i]);\n        }\n    }\n    std::sort(y.begin(),\
    \ y.end());\n    return y;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmps1ovqqmp: /tmp/tmps1ovqqmp.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long digit;\n    for (long long i : x) {\n        sum +=\
    \ i;\n        digit = sum % 10;\n        if (digit == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp8qrbfyfm: /tmp/tmp8qrbfyfm.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            ans.push_back(i);\n  \
    \      }\n    }\n    for (long long i : x) {\n        if (i % 2 != 0) {\n    \
    \        if (sum % 2 == 0) {\n                ans.push_back(i);\n            }\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp09w1hw7c: /tmp/tmp09w1hw7c.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093437
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] / 10;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n   \
    \     if(ans[i] != 0) {\n            ans[i] = ans[i] * 10;\n        }\n    }\n\
    \    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i] != 0) {\n\
    \            ans[i] = ans[i] + ans[i - 1];\n        }\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        if(ans[i] != 0) {\n            ans[i]\
    \ = ans[i] - ans[i - 1];\n        }\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] != 0) {\n            ans[i] = ans[i] + ans[i - 1];\n\
    \        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ != 0) {\n            ans[i] = ans[i] - ans[i - 1];\n        }\n    }\n    for(long\
    \ long i = 0; i < ans.size(); i++) {\n        if(ans[i] != 0) {\n            ans[i]\
    \ = ans[i] + ans[i - 1];\n        }\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] != 0) {\n            ans[i] = ans[i] - ans[i - 1];\n\
    \        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ != 0) {\n            ans[i] = ans[i] + ans[i - 1];\n        }\n    }\n    for(long\
    \ long i = 0; i < ans.size(); i++) {\n        if(ans[i] != 0) {\n            ans[i]\
    \ = ans[i] - ans[i - 1];\n        }\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] != 0) {\n            ans[i] = ans[i] + ans[i - 1];\n\
    \        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ != 0) {\n            ans[i] = ans[i] - ans[i - 1];\n        }\n    }\n    for(long\
    \ long i = 0; i < ans.size(); i++) {\n        if(ans[i] != 0) {\n            ans[i]\
    \ = ans[i] + ans[i - 1];\n        }\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] != 0) {\n            ans[i] = ans[i] - ans[i - 1];\n\
    \        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ != 0) {\n            ans[i] = ans[i] + ans[i - 1];\n        }\n    }\n    for(long\
    \ long i = 0; i < ans.size(); i++) {\n        if(ans[i] != 0) {\n            ans[i]\
    \ = ans[i] - ans[i - 1];\n\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpedjkqiak.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpedjkqiak.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpedjkqiak.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpedjkqiak.cpp:99:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n   99 | int main() {\n      |            ^\n\
    /tmp/tmpedjkqiak.cpp:105:1: error: expected \u2018}\u2019 at end of input\n  105\
    \ | }\n      | ^\n/tmp/tmpedjkqiak.cpp:94:47: note: to match this \u2018{\u2019\
    \n   94 |     for(long long i = 0; i < ans.size(); i++) {\n      |           \
    \                                    ^\n/tmp/tmpedjkqiak.cpp:105:1: error: expected\
    \ \u2018}\u2019 at end of input\n  105 | }\n      | ^\n/tmp/tmpedjkqiak.cpp:11:54:\
    \ note: to match this \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long>\
    \ x) {\n      |                                                      ^\n/tmp/tmpedjkqiak.cpp:105:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  105 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long digit = 0;\n    long long count\
    \ = 0;\n    long long i = 0;\n    long long j = 0;\n    long long k = 0;\n   \
    \ long long l = x.size();\n    long long m = l % 2 == 0 ? l / 2 : l / 2 + 1;\n\
    \    long long n = l / m;\n    long long p = 1;\n    long long q = 0;\n    long\
    \ long r = 0;\n    long long s = 0;\n    long long t = 0;\n    long long u = 0;\n\
    \    long long v = 0;\n    long long w = 0;\n    long long x = 0;\n    long long\
    \ y = 0;\n    long long z = 0;\n    long long A = 0;\n    long long B = 0;\n \
    \   long long C = 0;\n    long long D = 0;\n    long long E = 0;\n    long long\
    \ F = 0;\n    long long G = 0;\n    long long H = 0;\n    long long I = 0;\n \
    \   long long J = 0;\n    long long K = 0;\n    long long L = 0;\n    long long\
    \ M = 0;\n    long long N = 0;\n    long long O = 0;\n    long long P = 0;\n \
    \   long long Q = 0;\n    long long R = 0;\n    long long S = 0;\n    long long\
    \ T = 0;\n    long long U = 0;\n    long long V = 0;\n    long long W = 0;\n \
    \   long long X = 0;\n    long long Y = 0;\n    long long Z = 0;\n    long long\
    \ aa = 0;\n    long long bb = 0;\n    long long cc = 0;\n    long long dd = 0;\n\
    \    long long ee = 0;\n    long long ff = 0;\n    long long gg = 0;\n    long\
    \ long hh = 0;\n    long long ii = 0;\n    long long jj = 0;\n    long long kk\
    \ = 0;\n    long long ll = 0;\n    long long mm = 0;\n    long long nn = 0;\n\
    \    long long oo = 0;\n    long long pp = 0;\n    long long qq = 0;\n    long\
    \ long rr = 0;\n    long long ss = 0;\n    long long tt = 0;\n    long long uu\
    \ = 0;\n    long long vv = 0;\n    long long ww = 0;\n    long long xx = 0;\n\
    \    long long yy = 0;\n    long long zz = 0;\n    long long Aa = 0;\n    long\
    \ long Bb = 0;\n    long long Cc = 0;\n    long long Dd = 0;\n    long long Ee\
    \ = 0;\n    long long Ff = 0;\n    long long Gg = 0;\n    long long Hh = 0;\n\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8dlzem_k.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp8dlzem_k.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp8dlzem_k.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp8dlzem_k.cpp:31:15: error: declaration of \u2018long long\
    \ int x\u2019 shadows a parameter\n   31 |     long long x = 0;\n      |     \
    \          ^\n/tmp/tmp8dlzem_k.cpp:95:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   95 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long temp = 0;\n    long long count = 0;\n    for(long long\
    \ i = 0; i < x.size(); i++) {\n        temp = x[i];\n        while(temp > 0) {\n\
    \            ans[count] = temp % 10;\n            temp = temp / 10;\n        \
    \    count++;\n        }\n    }\n    for(long long i = 0; i < ans.size(); i++)\
    \ {\n        if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin() + i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmjz8qwty.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmjz8qwty.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpmjz8qwty.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Your code here\n    std::vector<long>\
    \ y;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++){\n \
    \       sum += x[i];\n    }\n    for(long long i = 0; i < x.size(); i++){\n  \
    \      if((sum % 10) == 0){\n            y.push_back(x[i]);\n        }\n    }\n\
    \    sort(y.begin(), y.end());\n    return y;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({(long)15, (long)33,\
    \ (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
    \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmplztu9dtp: /tmp/tmplztu9dtp.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        long long tmp = (sum - i) / 2;\n        long long tmp = tmp % 10;\n \
    \       if (tmp == 0 || tmp == 1) {\n            continue;\n        }\n      \
    \  ans.push_back(i);\n    }\n    std::sort(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3eeciq9j.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp3eeciq9j.cpp:22:19: error: redeclaration of \u2018long\
    \ long int tmp\u2019\n   22 |         long long tmp = tmp % 10;\n      |     \
    \              ^~~\n/tmp/tmp3eeciq9j.cpp:21:19: note: \u2018long long int tmp\u2019\
    \ previously declared here\n   21 |         long long tmp = (sum - i) / 2;\n \
    \     |                   ^~~\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long digit = 0;\n    long long count\
    \ = 0;\n    for (long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n\
    \        digit = sum % 10;\n        if (digit % 2 == 0) {\n            ans.push_back(digit);\n\
    \            sum += digit / 10;\n            count++;\n        }\n    }\n    if\
    \ (count > 0) {\n        ans.push_back(sum % 10);\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr6vkknvs.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpr6vkknvs.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpr6vkknvs.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x)\n        sum += i;\n    for(long long i :\
    \ x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long long\
    \ i : ans)\n        sum += i;\n    for(long long i : ans)\n        if(i % 2 ==\
    \ 0)\n            ans.push_back(i);\n    for(long long i : ans)\n        sum +=\
    \ i;\n    for(long long i : ans)\n        if(i % 2 == 0)\n            ans.push_back(i);\n\
    \    for(long long i : ans)\n        sum += i;\n    for(long long i : ans)\n \
    \       if(i % 2 == 0)\n            ans.push_back(i);\n    for(long long i : ans)\n\
    \        sum += i;\n    for(long long i : ans)\n        if(i % 2 == 0)\n     \
    \       ans.push_back(i);\n    for(long long i : ans)\n        sum += i;\n   \
    \ for(long long i : ans)\n        if(i % 2 == 0)\n            ans.push_back(i);\n\
    \    for(long long i : ans)\n        sum += i;\n    for(long long i : ans)\n \
    \       if(i % 2 == 0)\n            ans.push_back(i);\n    for(long long i : ans)\n\
    \        sum += i;\n    for(long long i : ans)\n        if(i % 2 == 0)\n     \
    \       ans.push_back(i);\n    for(long long i : ans)\n        sum += i;\n   \
    \ for(long long i : ans)\n        if(i % 2 == 0)\n            ans.push_back(i);\n\
    \    for(long long i : ans)\n        sum += i;\n    for(long long i : ans)\n \
    \       if(i % 2 == 0)\n            ans.push_back(i);\n    for(long long i : ans)\n\
    \        sum += i;\n    for(long long i : ans)\n        if(i % 2 == 0)\n     \
    \       ans.push_back(i);\n    for(long long i : ans)\n        sum += i;\n   \
    \ for(long long i : ans)\n        if(i % 2 == 0)\n            ans.push_back(i);\n\
    \    for(long long i : ans)\n        sum += i;\n    for(long long i : ans)\n \
    \       if(i % 2 == 0)\n            ans.push_back(i);\n    for(long long i : ans)\n\
    \        sum += i;\n    for(long long i : ans)\n        if(i % 2 == 0)\n     \
    \       ans.push_back(i);\n    for(long long i : ans)\n        sum += i;\n   \
    \ for(long long i : ans)\n        if(i % 2 == 0)\n            ans.push_back(i);\n\
    \    for(long long i : \n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_2mriaxj.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp_2mriaxj.cpp:90:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   90 | }\n      | ^\n/tmp/tmp_2mriaxj.cpp:89:22:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   89 |     for(long\
    \ long i :\n      |        ~             ^\n      |                      )\n \
    \  90 | }\n      | ~                     \n/tmp/tmp_2mriaxj.cpp:90:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   90 | }\n      | ^\n/tmp/tmp_2mriaxj.cpp:90:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for(long long i : x) {\n        ans = ans * 10 + i;\n    }\n \
    \   for(long long i = ans; i > 0; i = i / 10) {\n        if(i % 2 == 0) {\n  \
    \          ans.push_back(i);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps7wcz3yo.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmps7wcz3yo.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmps7wcz3yo.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmps7wcz3yo.cpp:15:19: error: no match for \u2018operator*\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   15 |         ans = ans * 10 + i;\n      |               ~~~ ^ ~~\n      |\
    \               |     |\n      |               |     int\n      |            \
    \   std::vector<long int>\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmps7wcz3yo.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmps7wcz3yo.cpp:15:21:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   15 |         ans = ans * 10 + i;\n      |                     ^~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmps7wcz3yo.cpp:2:\n/usr/include/c++/9/complex:400:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmps7wcz3yo.cpp:15:21:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   15 |         ans = ans * 10 + i"
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x)\n        sum += i;\n    for(long long i :\
    \ x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long long\
    \ i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 != 0)\n            ans.push_back(i);\n    for(long\
    \ long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmppeg9968b: /tmp/tmppeg9968b.cpp:95: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            long long temp = sum -\
    \ i;\n            while (temp > 0) {\n                y.push_back(temp % 10);\n\
    \                temp /= 10;\n            }\n        }\n    }\n    return y;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpdcvb5g69: /tmp/tmpdcvb5g69.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            y.push_back(i);\n        }\n    }\n    return y;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpokl301qh: /tmp/tmpokl301qh.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            continue;\n        }\n  \
    \      long long temp = sum % 10;\n        if(temp == 0){\n            ans.push_back(i);\n\
    \        }\n        sum += temp;\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp9taw7dfp: /tmp/tmp9taw7dfp.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(sum % 2 == 0) {\n     \
    \       ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpyg4g4hjf: /tmp/tmpyg4g4hjf.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long ans = sum / 10;\n    for (long long i : x) {\n\
    \        if (i % 2 == 0) {\n            ans += i;\n        }\n    }\n    if (mod\
    \ != 0) {\n        ans += mod;\n    }\n    ans.sort();\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2zbnbe8a.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2zbnbe8a.cpp:18:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   18 |     long long ans = sum / 10;\n      |      \
    \         ^~~\n/tmp/tmp2zbnbe8a.cpp:12:23: note: previous declaration as \u2018\
    std::vector<long int> ans\u2019\n   12 |     std::vector<long> ans;\n      | \
    \                      ^~~\n/tmp/tmp2zbnbe8a.cpp:21:17: error: no match for \u2018\
    operator+=\u2019 (operand types are \u2018std::vector<long int>\u2019 and \u2018\
    long long int\u2019)\n   21 |             ans += i;\n      |             ~~~~^~~~\n\
    /tmp/tmp2zbnbe8a.cpp:25:13: error: no match for \u2018operator+=\u2019 (operand\
    \ types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019)\n\
    \   25 |         ans += mod;\n      |         ~~~~^~~~~~\n/tmp/tmp2zbnbe8a.cpp:27:9:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018sort\u2019\
    \n   27 |     ans.sort();\n      |         ^~~~\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for (long long i : x) {\n        sum +=\
    \ i;\n        if (sum % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt2qc7ybj.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpt2qc7ybj.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpt2qc7ybj.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        sum += i;\n    }\n    for(long\
    \ long i : ans) {\n        if(sum % 10 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpjp9w4cpl: /tmp/tmpjp9w4cpl.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(sum % 2 == 0) {\n            ans.push_back(i);\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmph36npekf: /tmp/tmph36npekf.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long digit;\n    for (long long i : x) {\n        sum +=\
    \ i;\n    }\n    long long mod = sum % 10;\n    for (long long i : x) {\n    \
    \    digit = i % 10;\n        if (digit == 0) {\n            continue;\n     \
    \   }\n        if (digit % 2 == 0) {\n            continue;\n        }\n     \
    \   if (sum % 10 == digit) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpgeoas1qn: /tmp/tmpgeoas1qn.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long count = 0;\n    for(long long\
    \ i = 0; i < x.size(); i++) {\n        sum += x[i];\n        count += 1;\n   \
    \     if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n            sum +=\
    \ x[i];\n            count += 1;\n        }\n    }\n    for(long long i = 0; i\
    \ < ans.size(); i++) {\n        ans[i] = ans[i] / 2;\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] * count;\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] - 1;\n\
    \    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i]\
    \ * count;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] - 1;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n    \
    \    ans[i] = ans[i] * count;\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        ans[i] = ans[i] - 1;\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        ans[i] = ans[i] * count;\n    }\n    for(long long i = 0; i\
    \ < ans.size(); i++) {\n        ans[i] = ans[i] - 1;\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] * count;\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] - 1;\n\
    \    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i]\
    \ * count;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] - 1;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n    \
    \    ans[i] = ans[i] * count;\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        ans[i] = ans[i] - 1;\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        ans[i] = ans[i] * count;\n    }\n    for(long long i = 0; i\
    \ < ans.size(); i++) {\n        ans[i] = ans[i] - 1;\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] * count;\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] - 1;\n\
    \    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i]\
    \ * count;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        ans[i]\
    \ = ans[i] - 1;\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n    \
    \    ans[i] = ans[i] * count;\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        ans[i] = ans[i] - 1;\n    }\n    for(long long i = 0; i < \n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfsmt_62_.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfsmt_62_.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpfsmt_62_.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpfsmt_62_.cpp:95:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   95 | }\n      | ^\n/tmp/tmpfsmt_62_.cpp:94:29: error:\
    \ expected \u2018;\u2019 before \u2018}\u2019 token\n   94 |     for(long long\
    \ i = 0; i <\n      |                             ^\n      |                 \
    \            ;\n   95 | }\n      | ~                            \n/tmp/tmpfsmt_62_.cpp:95:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   95 | }\n \
    \     | ^\n/tmp/tmpfsmt_62_.cpp:94:29: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n   94 |     for(long long i = 0; i <\n      |        ~        \
    \            ^\n      |                             )\n   95 | }\n      | ~  \
    \                          \n/tmp/tmpfsmt_62_.cpp:95:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   95 | }\n      | ^\n/tmp/tmpfsmt_62_.cpp:95:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpqmmy96jc: /tmp/tmpqmmy96jc.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long ans = 0;\n    for(long long i = 0; i < x.size(); i++)\
    \ {\n        sum += x[i];\n        if(sum % 2 == 0) {\n            ans += x[i];\n\
    \        }\n    }\n    ans.push_back(ans);\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndjhgg8g.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpndjhgg8g.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpndjhgg8g.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpndjhgg8g.cpp:18:17: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   18 |     \
    \        ans += x[i];\n/tmp/tmpndjhgg8g.cpp:21:22: error: no matching function\
    \ for call to \u2018std::vector<long int>::push_back(std::vector<long int>&)\u2019\
    \n   21 |     ans.push_back(ans);\n      |                      ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpndjhgg8g.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |       push_back(const\
    \ value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       pus"
  stdout: ''
  timestamp: 1660093437
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            y.push_back(i);\n     \
    \   }\n    }\n    for(long long i : y) {\n        if(sum % i == 0) {\n       \
    \     y.push_back(i);\n        }\n    }\n    return y;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpuij9o41l: /tmp/tmpuij9o41l.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 == mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpkhgvy0vm: /tmp/tmpkhgvy0vm.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long digit = 0;\n    long long temp\
    \ = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        digit = x[x.size()\
    \ - i - 1] % 10;\n        sum += digit;\n        temp = sum % 10;\n        sum\
    \ += temp;\n        if(sum % 2 == 0) {\n            ans.push_back(x.size() - i\
    \ - 1);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({(long)15, (long)33,\
    \ (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33})));\n\
    \    assert(candidate((std::vector<long>({(long)152, (long)323, (long)1422, (long)10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnh8odfya.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpnh8odfya.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpnh8odfya.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            y.push_back(i);\n    \
    \    }\n    }\n    for (long long i : y) {\n        if (sum % i == 0) {\n    \
    \        y.push_back(i);\n        }\n    }\n    return y;\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpshid9rem: /tmp/tmpshid9rem.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ temp;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++) {\n\
    \        temp = x[i];\n        while(temp > 0) {\n            sum += temp % 10;\n\
    \            temp /= 10;\n        }\n        if(sum % 2 == 0) {\n            y.push_back(x[i]);\n\
    \        }\n    }\n    return y;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp5_dl3wwv: /tmp/tmp5_dl3wwv.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long digit = 0;\n    long long count\
    \ = 0;\n    long long size = x.size();\n    for (long long i = 0; i < size; i++)\
    \ {\n        digit = x.at(i);\n        sum += digit;\n        ans.push_back(digit);\n\
    \    }\n    for (long long i = 0; i < size; i++) {\n        digit = x.at(i);\n\
    \        sum += digit;\n        if (sum % 2 == 0) {\n            ans.push_back(digit);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr2nc_2ju.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpr2nc_2ju.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpr2nc_2ju.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            y.push_back(i);\n        }\n    }\n    return y;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpokl301qh: /tmp/tmpokl301qh.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    for (long long i : x) {\n\
    \        if (i % 2 == 0) {\n            long long sum = 0;\n            for (long\
    \ long j : x) {\n                sum += j;\n            }\n            long long\
    \ mod = sum % 10;\n            long long an = sum / 10;\n            if (an ==\
    \ an) {\n                if (mod == 0) {\n                    ans.push_back(i);\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpcmfi2dl7: /tmp/tmpcmfi2dl7.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long digit;\n    for (long long i : x) {\n        sum +=\
    \ i;\n    }\n    for (long long i : x) {\n        digit = sum % 10;\n        if\
    \ (digit % 2 == 0) {\n            ans.push_back(i);\n        }\n        sum -=\
    \ i;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpawzmt3lp: /tmp/tmpawzmt3lp.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            ans.push_back(i);\n     \
    \   }\n    }\n    for(long long i : x){\n        if(sum % i == 0){\n         \
    \   ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp1wwfyt57: /tmp/tmp1wwfyt57.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            ans.push_back(i);\n     \
    \   }\n    }\n    for(long long i : ans){\n        if(sum % i == 0){\n       \
    \     ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpdsg1bd18: /tmp/tmpdsg1bd18.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093433
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for(long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long mod = sum % 10;\n    for(long\
    \ long i : x) {\n        sum += i;\n        count += 1;\n        if(sum % 10 !=\
    \ mod) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpjp6onkc_: /tmp/tmpjp6onkc_.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n   \
    \     }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpnnbdipfe: /tmp/tmpnnbdipfe.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093431
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for (auto i : x) {\n        sum += i;\n\
    \        ++count;\n    }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n\
    \            sum += i;\n            ++count;\n        }\n    }\n    long long\
    \ ans = sum;\n    long long ans2 = 0;\n    for (auto i : x) {\n        if (i %\
    \ 2 == 0) {\n            ans2 += i;\n        }\n    }\n    for (auto i : x) {\n\
    \        if (i % 2 == 0) {\n            ans2 += i;\n        }\n    }\n    for\
    \ (auto i : x) {\n        if (i % 2 == 0) {\n            ans2 += i;\n        }\n\
    \    }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n            ans2 +=\
    \ i;\n        }\n    }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n  \
    \          ans2 += i;\n        }\n    }\n    for (auto i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans2 += i;\n        }\n    }\n    for (auto i : x)\
    \ {\n        if (i % 2 == 0) {\n            ans2 += i;\n        }\n    }\n   \
    \ for (auto i : x) {\n        if (i % 2 == 0) {\n            ans2 += i;\n    \
    \    }\n    }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n           \
    \ ans2 += i;\n        }\n    }\n    for (auto i : x) {\n        if (i % 2 == 0)\
    \ {\n            ans2 += i;\n        }\n    }\n    for (auto i : x) {\n      \
    \  if (i % 2 == 0) {\n            ans2 += i;\n        }\n    }\n    for (auto\
    \ i : x) {\n        if (i % 2 == 0) {\n            ans2 += i;\n        }\n   \
    \ }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n            ans2 += i;\n\
    \        }\n    }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n       \
    \     ans2 += i;\n        }\n    }\n    for (auto i : x) {\n        if (i % 2\
    \ == 0) {\n            ans2 += i;\n        }\n    }\n    for (auto i : x) {\n\
    \        if (i % 2 == 0) {\n            ans2 += i;\n        }\n    }\n    for\
    \ (auto i : x) {\n        if (i % 2 == 0) {\n            ans2 += i;\n        }\n\
    \    }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n            ans2 +=\
    \ i;\n        }\n    }\n    for (auto i : x) {\n        if (i % 2 == 0) {\n  \
    \          ans2 += i;\n        }\n    }\n    for (auto i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans2 += i;\n        }\n    }\n    for (auto i : x)\
    \ {\n        if (i % 2 == 0) {\n            ans2 += i;\n        }\n    }\n\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpnd25cw9o: /tmp/tmpnd25cw9o.cpp:136: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpe5o56gnq: /tmp/tmpe5o56gnq.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 == mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpkhgvy0vm: /tmp/tmpkhgvy0vm.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    for (long long i : x) {\n        ans += i;\n    }\n    long long\
    \ mod = ans % 10;\n    ans = ans / 10;\n    for (long long i : x) {\n        if\
    \ (i % 2 == 0 && i != mod) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjnyc4nth.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjnyc4nth.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpjnyc4nth.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpjnyc4nth.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   15 |         ans += i;\n      |         ~~~~^~~~\n/tmp/tmpjnyc4nth.cpp:17:25:\
    \ error: no match for \u2018operator%\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   17 |     long long mod = ans % 10;\n   \
    \   |                     ~~~ ^ ~~\n      |                     |     |\n    \
    \  |                     |     int\n      |                     std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/valarray:603,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n            \
    \     from /tmp/tmpjnyc4nth.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpjnyc4nth.cpp:17:27: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   17 |     long long mod = ans % 10;\n      |                           ^~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n             "
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpe5o56gnq: /tmp/tmpe5o56gnq.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for(long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    for(long long i : x) {\n        if(i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    if(count <\
    \ sum) {\n        return ans;\n    }\n    ans.clear();\n    for(long long i :\
    \ x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpaje_u94d: /tmp/tmpaje_u94d.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            y.push_back(i);\n     \
    \   }\n    }\n    for(long long i : y) {\n        if(sum % i == 0) {\n       \
    \     y.push_back(i);\n        }\n    }\n    return y;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpuij9o41l: /tmp/tmpuij9o41l.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    long long an = sum / 10;\n    while (an > 0) {\n      \
    \  ans.push_back(an);\n        an = an / 10;\n    }\n    ans.push_back(mod);\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmp5b2lnfd1: /tmp/tmp5b2lnfd1.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        long long tmp = sum % 10;\n        if(tmp == 0)\n   \
    \         ans.push_back(i);\n        sum -= tmp;\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpetb1fcvo: /tmp/tmpetb1fcvo.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        while(sum % 10 != 0) {\n\
    \            sum -= 10;\n        }\n        sum += i;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660093443
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(i % 2 == 0){\n            continue;\n        }\n  \
    \      if(sum % 10 == 0){\n            ans.push_back(i);\n        }\n    }\n \
    \   sort(ans.begin(), ans.end());\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmps7_4kfs4: /tmp/tmps7_4kfs4.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> y;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            y.push_back(i);\n    \
    \    }\n    }\n    for (long long i : y) {\n        if (sum % i == 0) {\n    \
    \        y.push_back(i);\n        }\n    }\n    return y;\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpshid9rem: /tmp/tmpshid9rem.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x) {\n        sum += i;\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpqmmy96jc: /tmp/tmpqmmy96jc.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long count = 0;\n    for(long long\
    \ i = 0; i < x.size(); i++) {\n        sum += x[i];\n        count += 1;\n   \
    \ }\n    for(long long i = 0; i < x.size(); i++) {\n        ans.push_back(x[i]);\n\
    \        ans.push_back(sum % 10);\n        ans.push_back(sum / 10);\n        sum\
    \ -= x[i];\n        count -= 1;\n    }\n    for(long long i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin() + i);\n\
    \        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ % 2 == 0) {\n            ans.erase(ans.begin() + i);\n        }\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i] % 2 == 0) {\n\
    \            ans.erase(ans.begin() + i);\n        }\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n \
    \       if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin() + i);\n     \
    \   }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ % 2 == 0) {\n            ans.erase(ans.begin() + i);\n        }\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i] % 2 == 0) {\n\
    \            ans.erase(ans.begin() + i);\n        }\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n \
    \       if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin() + i);\n     \
    \   }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ % 2 == 0) {\n            ans.erase(ans.begin() + i);\n        }\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i] % 2 == 0) {\n\
    \            ans.erase(ans.begin() + i);\n        }\n    }\n    for(long long\
    \ i = 0; i < ans.size(); i++) {\n        if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n \
    \       if(ans[i] % 2 == 0) {\n            ans.erase(ans.begin() + i);\n     \
    \   }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ % 2 == 0) {\n            ans.\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9fwt5a0z.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp9fwt5a0z.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp9fwt5a0z.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp9fwt5a0z.cpp:95:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   95 | }\n      | ^\n/tmp/tmp9fwt5a0z.cpp:96:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n   96\
    \ | int main() {\n      |            ^\n/tmp/tmp9fwt5a0z.cpp:102:1: error: expected\
    \ \u2018}\u2019 at end of input\n  102 | }\n      | ^\n/tmp/tmp9fwt5a0z.cpp:92:47:\
    \ note: to match this \u2018{\u2019\n   92 |     for(long long i = 0; i < ans.size();\
    \ i++) {\n      |                                               ^\n/tmp/tmp9fwt5a0z.cpp:102:1:\
    \ error: expected \u2018}\u2019 at end of input\n  102 | }\n      | ^\n/tmp/tmp9fwt5a0z.cpp:11:54:\
    \ note: to match this \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long>\
    \ x) {\n      |                                                      ^\n/tmp/tmp9fwt5a0z.cpp:102:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  102 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Write your code here\n    std::vector<long>\
    \ y;\n    for(long i=0;i<x.size();i++){\n        long sum=0;\n        for(long\
    \ j=0;j<i;j++){\n            sum+=x[j];\n        }\n        if(sum%2==0){\n  \
    \          y.push_back(x[i]);\n        }\n    }\n    sort(y.begin(),y.end());\n\
    \    return y;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpazlx6v1s: /tmp/tmpazlx6v1s.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            ans.push_back(i);\n  \
    \      }\n    }\n    if (sum % 2 != 0) {\n        ans.push_back(sum);\n    }\n\
    \    std::sort(ans.begin(), ans.end());\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmprbt42cqx: /tmp/tmprbt42cqx.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long digit;\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        digit = x.at(i);\n        sum += digit;\n    }\n    long long remain\
    \ = sum % 10;\n    long long temp;\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        digit = x.at(i);\n        temp = sum - remain;\n        if (temp\
    \ % 10 == digit) {\n            ans.push_back(x.at(i));\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpr17ld4ty: /tmp/tmpr17ld4ty.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n   \
    \     }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpnnbdipfe: /tmp/tmpnnbdipfe.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093431
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for(long long i : x)\n        sum += i;\n    for(long long i :\
    \ x)\n        ans.push_back(i);\n    for(long long i = sum; i > 0; i--)\n    \
    \    if(ans.find(i) == ans.end())\n            ans.push_back(i);\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbd3m33vu.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpbd3m33vu.cpp:19:16: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018find\u2019\n   19 |         if(ans.find(i)\
    \ == ans.end())\n      |                ^~~~\n"
  stdout: ''
  timestamp: 1660093438
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    for(long long i : x) {\n        sum +=\
    \ i;\n    }\n    for(long long i : x) {\n        ans += (i % 10) * sum;\n    }\n\
    \    for(long long i : x) {\n        if(ans % 2 == 0) {\n            ans /= 2;\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5kubin5z.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5kubin5z.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp5kubin5z.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp5kubin5z.cpp:19:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   19 |         ans += (i % 10) * sum;\n      |         ~~~~^~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5kubin5z.cpp:22:16: error: no match for \u2018operator%\u2019 (operand\
    \ types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n   22 |  \
    \       if(ans % 2 == 0) {\n      |            ~~~ ^ ~\n      |            | \
    \    |\n      |            |     int\n      |            std::vector<long int>\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5kubin5z.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5: note:\
    \ candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5kubin5z.cpp:22:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   22 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5kubin5z.c"
  stdout: ''
  timestamp: 1660093438
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // Your code here\n    std::vector<long>\
    \ y;\n    long long sum = 0;\n    for(long long i = 0; i < x.size(); i++) {\n\
    \        sum += x[i];\n    }\n    for(long long i = 0; i < x.size(); i++) {\n\
    \        if(sum % 2 == 0) {\n            y.push_back(x[i]);\n        }\n    }\n\
    \    return y;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpllh3779s: /tmp/tmpllh3779s.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    for (long long i : x) {\n        sum\
    \ += i;\n        count += 1;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmppnnq7q8c: /tmp/tmppnnq7q8c.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093439
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            continue;\n        }\n\
    \        if (sum % 10 == 0) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmprm1ydc9a: /tmp/tmprm1ydc9a.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093435
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    std::vector<long> ans;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    long long\
    \ mod = sum % 10;\n    for (long long i : x) {\n        if (i % 10 != mod) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({(long)15,\
    \ (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15,\
    \ (long)33})));\n    assert(candidate((std::vector<long>({(long)152, (long)323,\
    \ (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: Exception
  stderr: 'tmpm7mnr2ro: /tmp/tmpm7mnr2ro.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)15,
    (long)33, (long)1422, (long)1}))) == (std::vector<long>({(long)1, (long)15, (long)33}))''
    failed.

    '
  stdout: ''
  timestamp: 1660093432
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of positive\
    \ integers x. return a sorted vector of all \n// elements that hasn't any even\
    \ digit.\n// Note: Returned vector should be sorted in increasing order.\n// For\
    \ example:\n// >>> unique_digits((std::vector<long>({(long)15, (long)33, (long)1422,\
    \ (long)1})))\n// (std::vector<long>({(long)1, (long)15, (long)33}))\n// >>> unique_digits((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10})))\n// (std::vector<long>())\nstd::vector<long>\
    \ unique_digits(std::vector<long> x) {\n    // write your code here\n    std::vector<long>\
    \ ans;\n    long long ans = 0;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n \
    \       count += 1;\n    }\n    for (long long i = 0; i < x.size(); i++) {\n \
    \       if (sum % 2 == 0 && x[i] % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({(long)15, (long)33, (long)1422, (long)1})))\
    \ == (std::vector<long>({(long)1, (long)15, (long)33})));\n    assert(candidate((std::vector<long>({(long)152,\
    \ (long)323, (long)1422, (long)10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)12345,\
    \ (long)2033, (long)111, (long)151}))) == (std::vector<long>({(long)111, (long)151})));\n\
    \    assert(candidate((std::vector<long>({(long)135, (long)103, (long)31}))) ==\
    \ (std::vector<long>({(long)31, (long)135})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6qu8air5.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6qu8air5.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp6qu8air5.cpp:13:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   13 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  stdout: ''
  timestamp: 1660093439

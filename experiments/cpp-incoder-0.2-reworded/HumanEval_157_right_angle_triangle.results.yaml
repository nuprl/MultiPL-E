language: cpp
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0) {\n        return false;\n    }\n    long sq = sqrt(d);\n\
    \    long t1 = (-b + sq) / (2 * a);\n    long t2 = (-b - sq) / (2 * a);\n    if\
    \ (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzxplm5wo.cpp: In function 'int main()':\n/tmp/tmpzxplm5wo.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzxplm5wo.cpp:2:\n/tmp/tmpzxplm5wo.cpp:27:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0) {\n        return false;\n    }\n    long root = (long)\
    \ sqrt(d);\n    long s = (-b + root) / (2 * a);\n    long t = (-b - root) / (2\
    \ * a);\n    if (s < 0 || t < 0) {\n        return false;\n    }\n    if (s ==\
    \ 0 && t == 0) {\n        return true;\n    }\n    if (s == 0 && t > 0) {\n  \
    \      return true;\n    }\n    if (s == 0 && t < 0) {\n        return false;\n\
    \    }\n    if (s > 0 && t > 0) {\n        return true;\n    }\n    if (s < 0\
    \ && t < 0) {\n        return false;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpur2d86aw.cpp: In function 'int main()':\n/tmp/tmpur2d86aw.cpp:41:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpur2d86aw.cpp:2:\n/tmp/tmpur2d86aw.cpp:42:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    if (a == 0 || b == 0\
    \ || c == 0)\n        return false;\n    long d = b * b - 4 * a * c;\n    if (d\
    \ < 0)\n        return false;\n    long x = (-b + sqrt(d)) / (2 * a);\n    long\
    \ y = (-b - sqrt(d)) / (2 * a);\n    return (x > 0) && (y > 0);\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9y3q6if1.cpp: In function 'int main()':\n/tmp/tmp9y3q6if1.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9y3q6if1.cpp:2:\n/tmp/tmp9y3q6if1.cpp:24:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    long long int sum = a+b+c;\n    long long int sum1 = a*a+b*b+c*c;\n    long\
    \ long int sum2 = a*a+b*b-c*c;\n    long long int sum3 = a*a-b*b-c*c;\n    long\
    \ long int sum4 = a*a-b*b+c*c;\n    long long int sum5 = a*a+b*b+c*c-a*a;\n  \
    \  long long int sum6 = a*a+b*b-c*c-a*a;\n    long long int sum7 = a*a-b*b-c*c-a*a;\n\
    \    long long int sum8 = a*a-b*b+c*c-a*a;\n    long long int sum9 = a*a+b*b+c*c+a*a;\n\
    \    long long int sum10 = a*a+b*b-c*c+a*a;\n    long long int sum11 = a*a-b*b-c*c+a*a;\n\
    \    long long int sum12 = a*a-b*b+c*c+a*a;\n    long long int sum13 = a*a+b*b+c*c-a*a+a*a;\n\
    \    long long int sum14 = a*a+b*b-c*c-a*a+a*a;\n    long long int sum15 = a*a-b*b-c*c-a*a+a*a;\n\
    \    long long int sum16 = a*a-b*b+c*c-a*a-a*a;\n    long long int sum17 = a*a+b*b+c*c+a*a+a*a;\n\
    \    long long int sum18 = a*a+b*b-c*c+a*a+a*a;\n    long long int sum19 = a*a-b*b-c*c+a*a+a*a;\n\
    \    long long int sum20 = a*a-b*b+c*c-a*a-a*a;\n    long long int sum21 = a*a+b*b+c*c+a*a+a*a-a*a;\n\
    \    long long int sum22 = a*a+b*b-c*c-a*a-a*a;\n    long long int sum23 = a*a-b*b-c*c-a*a-a*a;\n\
    \    long long int sum24 = a*a-b*b+c*c-a*a-a*a;\n    long long int sum25 = a*a+b*b+c*c+a*a+a*a-a*a;\n\
    \    long long int sum26 = a*a+b*b-c*c-a*a-a*a;\n    long long int sum27 = a*a-b*b-c*c-a*\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm5dt6ri7.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmpm5dt6ri7.cpp:42:1: error: expected primary-expression\
    \ before '}' token\n }\n ^\n/tmp/tmpm5dt6ri7.cpp:42:1: error: expected ',' or\
    \ ';' before '}' token\n/tmp/tmpm5dt6ri7.cpp: In function 'int main()':\n/tmp/tmpm5dt6ri7.cpp:44:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm5dt6ri7.cpp:2:\n/tmp/tmpm5dt6ri7.cpp:45:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0)\n        return false;\n    long s = (-b + sqrt(d)) /\
    \ (2 * a);\n    long t = (-b - sqrt(d)) / (2 * a);\n    return (s == t);\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pbrzm32.cpp: In function 'int main()':\n/tmp/tmp9pbrzm32.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9pbrzm32.cpp:2:\n/tmp/tmp9pbrzm32.cpp:22:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    if (a == 0 || b == 0\
    \ || c == 0)\n        return false;\n    long d = b * b - 4 * a * c;\n    if (d\
    \ < 0)\n        return false;\n    long root = (long) sqrt(d);\n    long s = (-b\
    \ + root) / (2 * a);\n    long t = (-b - root) / (2 * a);\n    if (s == t)\n \
    \       return true;\n    return false;\n}\nint main() {\n    auto candidate =\
    \ right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n   \
    \ assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnqegi2am.cpp: In function 'int main()':\n/tmp/tmpnqegi2am.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnqegi2am.cpp:2:\n/tmp/tmpnqegi2am.cpp:27:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    if(a==b){\n        if(a==c){\n            return true;\n        }\n    }\n\
    \    else if(a==c){\n        return true;\n    }\n    else if(b==c){\n       \
    \ return false;\n    }\n    else if(a>b){\n        if(a>c){\n            return\
    \ false;\n        }\n    }\n    else if(b>c){\n        return false;\n    }\n\
    \    else if(a>c){\n        return true;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptikeonld.cpp: In function 'int main()':\n/tmp/tmptikeonld.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptikeonld.cpp:2:\n/tmp/tmptikeonld.cpp:39:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0) {\n        return false;\n    }\n    long root = d*d\
    \ / 2;\n    long x = -b + root;\n    long y = -a - root;\n    long d = x * x +\
    \ y * y;\n    return d == 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpes3c8qx4.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmpes3c8qx4.cpp:20:10: error: redeclaration of 'long\
    \ int d'\n     long d = x * x + y * y;\n          ^\n/tmp/tmpes3c8qx4.cpp:13:10:\
    \ error: 'long int d' previously declared here\n     long d = b * b - 4 * a *\
    \ c;\n          ^\n/tmp/tmpes3c8qx4.cpp: In function 'int main()':\n/tmp/tmpes3c8qx4.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpes3c8qx4.cpp:2:\n/tmp/tmpes3c8qx4.cpp:25:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(ac -\
    \ bc);\n    long abc = abs(ab - bc);\n    long acbc = abs(ac - bc);\n    long\
    \ abcb = abs(ab - bc);\n    long acbca = abs(ac - ca);\n    long abca = abs(ab\
    \ - ca);\n    long accab = abs(ac - ca);\n    long abcca = abs(ab - ca);\n   \
    \ long acbcab = abs(ac - cab);\n    long abccab = abs(ab - cab);\n    long acbcabc\
    \ = abs(ac - cab);\n    long abccabc = abs(ab - cab);\n    long acbcabcd = abs(ac\
    \ - cab);\n    long abccabcd = abs(ab - cab);\n    long acbcabcde = abs(ac - cab);\n\
    \    long abccabcde = abs(ab - cab);\n    long acbcabcdef = abs(ac - cab);\n \
    \   long abccabcdef = abs(ab - cab);\n    long acbcabcdefg = abs(ac - cab);\n\
    \    long abccabcdefg = abs(ab - cab);\n    long acbcabcdefgh = abs(ac - cab);\n\
    \    long abccabcdefgh = abs(ab - cab);\n    long acbcabcdefghi = abs(ac - cab);\n\
    \    long abccabcdefghi = abs(ab - cab);\n    long acbcabcdefghij = abs(ac - cab);\n\
    \    long abccabcdefghij = abs(ab - cab);\n    long acbcabcdefghijk = abs(ac -\
    \ cab);\n    long abccabcdefghijk = abs(ab - cab);\n    long acbcabcdefghijkl\
    \ = abs(ac - cab);\n    long abccabcdefghijkl = abs(ab - cab);\n    long acbcabcdefghijklm\
    \ = abs(ac - cab);\n    long abccabcdefghijklm = abs(ab - cab);\n    long acbcabcdefghijklmn\
    \ = abs(ac - cab);\n    long abccabcdefghijklmn = abs(ab - cab);\n    long acbcabcdefghijklmno\
    \ = abs(ac - cab);\n    long abccabcdefghijkl\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8k990zr0.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmp8k990zr0.cpp:20:27: error: 'ca' was not declared\
    \ in this scope\n     long acbca = abs(ac - ca);\n                           ^\n\
    /tmp/tmp8k990zr0.cpp:24:28: error: 'cab' was not declared in this scope\n    \
    \ long acbcab = abs(ac - cab);\n                            ^\n/tmp/tmp8k990zr0.cpp:52:1:\
    \ error: expected initializer before '}' token\n }\n ^\n/tmp/tmp8k990zr0.cpp:\
    \ In function 'int main()':\n/tmp/tmp8k990zr0.cpp:54:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = right_angle_triangle;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp8k990zr0.cpp:2:\n/tmp/tmp8k990zr0.cpp:55:35: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((3), (4), (5)) == (true));\n\
    \                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long cb = abs(c - b);\n\
    \    long abc = ab + ac;\n    long bcb = bc + cb;\n    long abbc = abb + bcc;\n\
    \    long abcc = abc + cbb;\n    long abbb = abbc + cbb;\n    long abbba = abbb\
    \ + cba;\n    long abbca = abbc + cab;\n    long abccb = abcc + cbc;\n    long\
    \ abccc = abcc + cbb;\n    long abbbc = abbb + cbc;\n    long abbbac = abbb +\
    \ cba;\n    long abbcaa = abbc + cab;\n    long abcccb = abccc + cbc;\n    long\
    \ abcccb = abccc + cbb;\n    long abbbcb = abbbc + cbc;\n    long abbbacb = abbbc\
    \ + cba;\n    long abbcaab = abbc + cab;\n    long abcccbc = abccc + cbc;\n  \
    \  long abcccbc = abccc + cbb;\n    long abbbcbb = abbbc + cbc;\n    long abbbacbb\
    \ = abbbc + cba;\n    long abbcaabb = abbc + cab;\n    long abcccbcb = abccc +\
    \ cbc;\n    long abcccbcb = abccc + cbb;\n    long abbbcbbb = abbbc + cbc;\n \
    \   long abbbacbbb = abbbc + cba;\n    long abbcaabbc = abbc + cab;\n    long\
    \ abcccbcc = abccc + cbc;\n    long abcccbcc = abccc + cbb;\n    long abbbcbbc\
    \ = abbbc + cbc;\n    long abbbacbbc = abbbc + cba;\n    long abbcaabbcc = abbc\
    \ + cab;\n    long abcccbccb = abccc + cbc;\n    long abcccbccb = abccc + cbb;\n\
    \    long abbbcbbcc = abbbc + cbc;\n    long abbbacbbcc = abbbc + cba;\n    long\
    \ abbcaabbccc = abbc + cab;\n    \n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpopyl9vdq.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmpopyl9vdq.cpp:19:17: error: 'abb' was not declared\
    \ in this scope\n     long abbc = abb + bcc;\n                 ^\n/tmp/tmpopyl9vdq.cpp:19:23:\
    \ error: 'bcc' was not declared in this scope\n     long abbc = abb + bcc;\n \
    \                      ^\n/tmp/tmpopyl9vdq.cpp:20:23: error: 'cbb' was not declared\
    \ in this scope\n     long abcc = abc + cbb;\n                       ^\n/tmp/tmpopyl9vdq.cpp:22:25:\
    \ error: 'cba' was not declared in this scope\n     long abbba = abbb + cba;\n\
    \                         ^\n/tmp/tmpopyl9vdq.cpp:23:25: error: 'cab' was not\
    \ declared in this scope\n     long abbca = abbc + cab;\n                    \
    \     ^\n/tmp/tmpopyl9vdq.cpp:24:25: error: 'cbc' was not declared in this scope\n\
    \     long abccb = abcc + cbc;\n                         ^\n/tmp/tmpopyl9vdq.cpp:30:10:\
    \ error: redeclaration of 'long int abcccb'\n     long abcccb = abccc + cbb;\n\
    \          ^\n/tmp/tmpopyl9vdq.cpp:29:10: error: 'long int abcccb' previously\
    \ declared here\n     long abcccb = abccc + cbc;\n          ^\n/tmp/tmpopyl9vdq.cpp:35:10:\
    \ error: redeclaration of 'long int abcccbc'\n     long abcccbc = abccc + cbb;\n\
    \          ^\n/tmp/tmpopyl9vdq.cpp:34:10: error: 'long int abcccbc' previously\
    \ declared here\n     long abcccbc = abccc + cbc;\n          ^\n/tmp/tmpopyl9vdq.cpp:40:10:\
    \ error: redeclaration of 'long int abcccbcb'\n     long abcccbcb = abccc + cbb;\n\
    \          ^\n/tmp/tmpopyl9vdq.cpp:39:10: error: 'long int abcccbcb' previously\
    \ declared here\n     long abcccbcb = abccc + cbc;\n          ^\n/tmp/tmpopyl9vdq.cpp:45:10:\
    \ error: redeclaration of 'long int abcccbcc'\n     long abcccbcc = abccc + cbb;\n\
    \          ^\n/tmp/tmpopyl9vdq.cpp:44:10: error: 'long int abcccbcc' previously\
    \ declared here\n     long abcccbcc = abccc + cbc;\n          ^\n/tmp/tmpopyl9vdq.cpp:50:10:\
    \ error: redeclaration of 'long int abcccbccb'\n     long abcccbccb = abccc +\
    \ cbb;\n          ^\n/tmp/tmpopyl9vdq.cpp:49:10: error: 'long int abcccbccb' previously\
    \ declared here\n     long abcccbccb = abccc + cbc;"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long long ans = (a *\
    \ b) - (c * a);\n    if (ans < 0) {\n        return false;\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjqugm_sy.cpp: In function 'int main()':\n/tmp/tmpjqugm_sy.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjqugm_sy.cpp:2:\n/tmp/tmpjqugm_sy.cpp:21:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0) {\n        return false;\n    }\n    long root = (long)\
    \ sqrt(d);\n    long s = (-b + root) / (2 * a);\n    long t = (-b - root) / (2\
    \ * a);\n    return (s == 0 && t == 0) || (s > 0 && t > 0);\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjr9rznxv.cpp: In function 'int main()':\n/tmp/tmpjr9rznxv.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjr9rznxv.cpp:2:\n/tmp/tmpjr9rznxv.cpp:24:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    if(a==b){\n        if(a==c){\n            return true;\n        }\n    }\n\
    \    if(a==c){\n        return true;\n    }\n    if(b==c){\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7d3j4cmk.cpp: In function 'int main()':\n/tmp/tmp7d3j4cmk.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7d3j4cmk.cpp:2:\n/tmp/tmp7d3j4cmk.cpp:29:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here.\n\
    \    if(a==b){\n        if(a==c){\n            return true;\n        }\n     \
    \   return false;\n    }\n    if(a==c){\n        return false;\n    }\n    if(b==c){\n\
    \        return false;\n    }\n    if(a>b){\n        if(a>c){\n            return\
    \ true;\n        }\n        return false;\n    }\n    if(b>c){\n        return\
    \ false;\n    }\n    if(a>c){\n        if(b>c){\n            return true;\n  \
    \      }\n        return false;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe5xfmbv3.cpp: In function 'int main()':\n/tmp/tmpe5xfmbv3.cpp:44:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpe5xfmbv3.cpp:2:\n/tmp/tmpe5xfmbv3.cpp:45:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    if(a==b){\n        if(a==c){\n            return true;\n        }\n    }\n\
    \    if(a==c){\n        if(b==c){\n            return true;\n        }\n    }\n\
    \    if(b==c){\n        if(a==c){\n            return true;\n        }\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg9d1ggui.cpp: In function 'int main()':\n/tmp/tmpg9d1ggui.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg9d1ggui.cpp:2:\n/tmp/tmpg9d1ggui.cpp:33:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here.\n\
    \    long a1 = abs(a - b), a2 = abs(a - c), b1 = abs(b - c), b2 = abs(b - a);\n\
    \    long c = a * b + b * c;\n    long d = a1 * b2 + b1 * c2;\n    long e = a2\
    \ * b1 + b2 * c1;\n    long f = a1 * c2 + b1 * a2;\n    long g = a2 * c1 + b2\
    \ * a1;\n    long h = a1 * b2 - b1 * a2;\n    long i = a2 * b1 - b2 * a1;\n  \
    \  long j = a1 * c2 - b1 * a2;\n    long k = a2 * c1 - b2 * a1;\n    long l =\
    \ a1 * b2 + b1 * c2;\n    long m = a2 * b1 - b2 * a1;\n    long n = a1 * c2 -\
    \ b1 * a2;\n    long o = a2 * c1 - b2 * a1;\n    long p = a1 * b1 - b1 * a2;\n\
    \    long q = a2 * b2 + b2 * c1;\n    long r = a1 * c1 + b1 * a2;\n    long s\
    \ = a2 * c2 - b2 * a1;\n    long t = a1 * b2 - b1 * a2;\n    long u = a2 * b1\
    \ + b2 * c1;\n    long v = a1 * c2 - b1 * a2;\n    long w = a2 * c1 + b2 * a1;\n\
    \    long x = a1 * b1 + b1 * c2;\n    long y = a2 * b2 - b2 * a1;\n    long z\
    \ = a1 * c1 + b1 * a2;\n    long a = a1 * b2 - b1 * a2;\n    long b = a2 * b1\
    \ - b2 * a1;\n    long c = a1 * c2 - b1 * a2;\n    long d = a2 * c1 - b2 * a1;\n\
    \    long e = a1 * b1 + b1 * c2;\n    long f = a2 * b2 - b2 * a1;\n    long g\
    \ = a1 * c1 + b1 * a2;\n    long h = a2 * c2 - b2 * a1;\n    long i = a1 * b2\
    \ + b1 * c2;\n    long j = a2 * b1 - b2 * a1;\n    long k = a1 * c2 + b1 * a2;\n\
    \    long l = a2 * c1 - b2 * a1;\n    long m = a1 * b1 - b1 * a2;\n    long n\
    \ = a2 * b2 + b2 * c1;\n    long o = a1 * c1 - b1 * a2;\n    long p = a2 * c2\
    \ + b2 * a1;\n    \n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8dkw1vk_.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmp8dkw1vk_.cpp:15:10: error: declaration of 'long\
    \ int c' shadows a parameter\n     long c = a * b + b * c;\n          ^\n/tmp/tmp8dkw1vk_.cpp:16:29:\
    \ error: 'c2' was not declared in this scope\n     long d = a1 * b2 + b1 * c2;\n\
    \                             ^\n/tmp/tmp8dkw1vk_.cpp:17:29: error: 'c1' was not\
    \ declared in this scope\n     long e = a2 * b1 + b2 * c1;\n                 \
    \            ^\n/tmp/tmp8dkw1vk_.cpp:39:10: error: declaration of 'long int a'\
    \ shadows a parameter\n     long a = a1 * b2 - b1 * a2;\n          ^\n/tmp/tmp8dkw1vk_.cpp:40:10:\
    \ error: declaration of 'long int b' shadows a parameter\n     long b = a2 * b1\
    \ - b2 * a1;\n          ^\n/tmp/tmp8dkw1vk_.cpp:41:10: error: redeclaration of\
    \ 'long int c'\n     long c = a1 * c2 - b1 * a2;\n          ^\n/tmp/tmp8dkw1vk_.cpp:15:10:\
    \ error: 'long int c' previously declared here\n     long c = a * b + b * c;\n\
    \          ^\n/tmp/tmp8dkw1vk_.cpp:42:10: error: redeclaration of 'long int d'\n\
    \     long d = a2 * c1 - b2 * a1;\n          ^\n/tmp/tmp8dkw1vk_.cpp:16:10: error:\
    \ 'long int d' previously declared here\n     long d = a1 * b2 + b1 * c2;\n  \
    \        ^\n/tmp/tmp8dkw1vk_.cpp:43:10: error: redeclaration of 'long int e'\n\
    \     long e = a1 * b1 + b1 * c2;\n          ^\n/tmp/tmp8dkw1vk_.cpp:17:10: error:\
    \ 'long int e' previously declared here\n     long e = a2 * b1 + b2 * c1;\n  \
    \        ^\n/tmp/tmp8dkw1vk_.cpp:44:10: error: redeclaration of 'long int f'\n\
    \     long f = a2 * b2 - b2 * a1;\n          ^\n/tmp/tmp8dkw1vk_.cpp:18:10: error:\
    \ 'long int f' previously declared here\n     long f = a1 * c2 + b1 * a2;\n  \
    \        ^\n/tmp/tmp8dkw1vk_.cpp:45:10: error: redeclaration of 'long int g'\n\
    \     long g = a1 * c1 + b1 * a2;\n          ^\n/tmp/tmp8dkw1vk_.cpp:19:10: error:\
    \ 'long int g' previously declared here\n     long g = a2 * c1 + b2 * a1;\n  \
    \        ^\n/tmp/tmp8dkw1vk_.cpp:46:10: error: redeclaration of 'long int h'\n\
    \     long h = a2 * c2 - b2 * a1;\n          ^\n/tmp/tmp8dkw1vk_.cpp:20:10: error:\
    \ 'long int h' previously "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long ab = abs(b - c);\n\
    \    long ac = abs(a - c);\n    long bc = abs(b - c);\n    long abc = ab + bc;\n\
    \    long acb = ac + bc;\n    long abac = ab + ac;\n    long acab = ac + ab;\n\
    \    long abcab = ab + bc;\n    long acbca = ac + bc;\n    long abcabc = ab +\
    \ ac;\n    long acbcab = ac + ab;\n    long abcabcb = ab + bc;\n    long acbcabd\
    \ = ac + ab;\n    long abcabcd = ab + ac;\n    long acbcabed = ac + ab;\n    long\
    \ abcabcde = ab + ac;\n    long acbcabfd = ac + ab;\n    long abcabcdef = ab +\
    \ ac;\n    long acbcabdef = ac + ab;\n    long abcabcdefg = ab + ac;\n    long\
    \ acbcabdefg = ac + ab;\n    long abcabcdefgh = ab + ac;\n    long acbcabdefgh\
    \ = ac + ab;\n    long abcabcdefghi = ab + ac;\n    long acbcabdefghi = ac + ab;\n\
    \    long abcabcdefghij = ab + ac;\n    long acbcabdefghij = ac + ab;\n    long\
    \ abcabcdefghijk = ab + ac;\n    long acbcabdefghijk = ac + ab;\n    long abcabcdefghijkl\
    \ = ab + ac;\n    long acbcabdefghijkl = ac + ab;\n    long abcabcdefghijkm =\
    \ ab + ac;\n    long acbcabdefghijkm = ac + ab;\n    long abcabcdefghijkn = ab\
    \ + ac;\n    long acbcabdefghijkn = ac + ab;\n    long abcabcdefghijkno = ab +\
    \ ac;\n    long acbcabdefghijkno = ac + ab;\n    long abcabcdefghijknop = ab +\
    \ ac;\n    long acbcabdefghijknop = ac + ab;\n    long abcabcdefghijknopq = ab\
    \ + ac;\n    long acbcabdefghijknop\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzu5mgrk_.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmpzu5mgrk_.cpp:54:1: error: expected initializer\
    \ before '}' token\n }\n ^\n/tmp/tmpzu5mgrk_.cpp: In function 'int main()':\n\
    /tmp/tmpzu5mgrk_.cpp:56:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = right_angle_triangle;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzu5mgrk_.cpp:2:\n/tmp/tmpzu5mgrk_.cpp:57:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0) {\n        return false;\n    }\n    long x = (b + c)\
    \ / 2;\n    long y = (-b - c) / 2;\n    long root = (long) sqrt(d);\n    long\
    \ xp = ((b * x) + (c * y)) / root;\n    long yp = ((-b * x) + (a * y)) / root;\n\
    \    return (xp == yp);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgrrotba.cpp: In function 'int main()':\n/tmp/tmpdgrrotba.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdgrrotba.cpp:2:\n/tmp/tmpdgrrotba.cpp:26:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    long l1 = abs(a) + abs(b) + abs(c);\n    long l2 = abs(a) + abs(b) + abs(c);\n\
    \    long l3 = abs(a) + abs(b) + abs(c);\n    long l4 = abs(a) + abs(b) + abs(c);\n\
    \    long l5 = abs(a) + abs(b) + abs(c);\n    long l6 = abs(a) + abs(b) + abs(c);\n\
    \    long l7 = abs(a) + abs(b) + abs(c);\n    long l8 = abs(a) + abs(b) + abs(c);\n\
    \    long l9 = abs(a) + abs(b) + abs(c);\n    long l10 = abs(a) + abs(b) + abs(c);\n\
    \    long l11 = abs(a) + abs(b) + abs(c);\n    long l12 = abs(a) + abs(b) + abs(c);\n\
    \    long l13 = abs(a) + abs(b) + abs(c);\n    long l14 = abs(a) + abs(b) + abs(c);\n\
    \    long l15 = abs(a) + abs(b) + abs(c);\n    long l16 = abs(a) + abs(b) + abs(c);\n\
    \    long l17 = abs(a) + abs(b) + abs(c);\n    long l18 = abs(a) + abs(b) + abs(c);\n\
    \    long l19 = abs(a) + abs(b) + abs(c);\n    long l20 = abs(a) + abs(b) + abs(c);\n\
    \    long l21 = abs(a) + abs(b) + abs(c);\n    long l22 = abs(a) + abs(b) + abs(c);\n\
    \    long l23 = abs(a) + abs(b) + abs(c);\n    long l24 = abs(a) + abs(b) + abs(c);\n\
    \    long l25 = abs(a) + abs(b) + abs(c);\n    long l26 = abs(a) + abs(b) + abs(c);\n\
    \    long l27 = abs(a) + abs(b) + abs(c);\n    long l28 = abs(a) + abs(b) + abs(c);\n\
    \    long l29 = abs(a) + abs(b) + abs(c);\n    long l30 = abs(a) + abs(b) + abs(c);\n\
    \    long l31 = abs(a) + abs(b) + abs(c);\n    long l32 = abs(a) + abs(b) + abs(c);\n\
    \    long l33 = abs(a) + abs(b) + abs(c);\n    long l34 = abs(a) + abs(b) + abs(c);\n\
    \    long l35 = abs(a) + abs(b) + abs(c);\n    long l36 = abs(a) + abs(b) + abs(c);\n\
    \    long l37 = abs(a) + abs(b) + abs(c);\n    long \n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz7_gx4v_.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmpz7_gx4v_.cpp:52:1: error: expected unqualified-id\
    \ before '}' token\n }\n ^\n/tmp/tmpz7_gx4v_.cpp: In function 'int main()':\n\
    /tmp/tmpz7_gx4v_.cpp:54:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = right_angle_triangle;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz7_gx4v_.cpp:2:\n/tmp/tmpz7_gx4v_.cpp:55:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return true if the three\n// sides form a right-angled\
    \ triangle, false otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0) {\n        return false;\n    }\n    long root = (long)\
    \ sqrt(d);\n    long t1 = (-b + root) / (2 * a);\n    long t2 = (-b - root) /\
    \ (2 * a);\n    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcnbpfgq7.cpp: In function 'int main()':\n/tmp/tmpcnbpfgq7.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcnbpfgq7.cpp:2:\n/tmp/tmpcnbpfgq7.cpp:27:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''

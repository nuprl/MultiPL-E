name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given vector of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original vector.\n// For example:\n// >>>\
  \ order_by_points((std::vector<long>({(long)1, (long)11, (long)-1, (long)-11, (long)-12})))\n\
  // (std::vector<long>({(long)-1, (long)-11, (long)1, (long)-12, (long)11}))\n//\
  \ >>> order_by_points((std::vector<long>()))\n// (std::vector<long>())\nstd::vector<long>\
  \ order_by_points(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12}))) == (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11})));\n    assert(candidate((std::vector<long>({(long)1234,\
  \ (long)423, (long)463, (long)145, (long)2, (long)423, (long)423, (long)53, (long)6,\
  \ (long)37, (long)3457, (long)3, (long)56, (long)0, (long)46}))) == (std::vector<long>({(long)0,\
  \ (long)2, (long)3, (long)6, (long)53, (long)423, (long)423, (long)423, (long)1234,\
  \ (long)145, (long)37, (long)46, (long)56, (long)463, (long)3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-11, (long)-32, (long)43, (long)54, (long)-98, (long)2, (long)-3}))) ==\
  \ (std::vector<long>({(long)-3, (long)-32, (long)-98, (long)-11, (long)1, (long)2,\
  \ (long)43, (long)54})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10, (long)11})))\
  \ == (std::vector<long>({(long)1, (long)10, (long)2, (long)11, (long)3, (long)4,\
  \ (long)5, (long)6, (long)7, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)6, (long)6, (long)-76, (long)-21, (long)23, (long)4}))) == (std::vector<long>({(long)-76,\
  \ (long)-21, (long)0, (long)4, (long)23, (long)6, (long)6})));\n}\n"
completions: ["    std::vector<long> nums2;\n    long sum = 0;\n    for (long num\
    \ : nums) {\n        sum += num;\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long num : nums_copy) {\n   \
    \     sum += num;\n    }\n    long max_num = std::numeric_limits<long>::max();\n\
    \    long min_num = std::numeric_limits<long>::min();\n    long max_sum = 0;\n\
    \    for (long num : nums_copy) {\n        max_sum = std::max(max_sum, num);\n\
    \        min_sum = std::min(min_sum, num);\n    }\n    long min_sum = std::numeric_limits<long>::min();\n\
    \    long max_sum = std::numeric_limits<long>::max();\n    for (long num : nums_copy)\
    \ {\n        if (num < min_num) {\n            std::swap(min_num, num);\n    \
    \    }\n        if (num > max_num) {\n            std::swap(max_num, num);\n \
    \       }\n    }\n    long min_num = std::numeric_limits<long>::min();\n    long\
    \ max_num = std::numeric_limits<long>::max();\n    for (long num : nums_copy)\
    \ {\n        if (num < min_num) {\n            std::swap(min_num, num);\n    \
    \    }\n        if (num > max_num) {\n            std::swap(max_num, num);\n \
    \       }\n    }\n    long min_sum = std::numeric_limits<long>::min();\n    long\
    \ max_sum = std::numeric_limits<long>::max();\n    for (long num : nums_copy)\
    \ {\n        if (num < min_sum) {\n            std::swap(min_sum, num);\n    \
    \    }\n        if (num > max_sum) {\n            std::swap(max_sum, num);\n \
    \       }\n    }\n    long min_sum = std::numeric_limits<long>::min();\n    long\
    \ max_sum = std::numeric_limits<long>::max();\n    for (long num : nums_copy)\
    \ {\n        if (num < min_sum) {\n            std::swap(min_sum, num);\n    \
    \    }\n        if (num > max_sum) {\n            std::swap(max_sum, num);\n \
    \       }\n    }\n    long min_sum = std::numeric_limits<long>::min();\n    long\
    \ max_sum = std::numeric_limits<long>::max();\n    for (long num : nums_copy)\
    \ {\n        if (num < min_sum) {\n            std::swap(min_sum, num);\n    \
    \    }\n        if (num > max_sum) {\n            std::swap(max_sum, num);\n \
    \       }\n    }\n    long min_sum = std::numeric_limits<long>::min();\n    long\
    \ max_sum = std::numeric_limits<long>::max();\n    for (long num : nums_copy)\
    \ {\n        if (num < min_sum) {\n", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b) -> bool {\n        return std::abs(a - b)\
    \ < 10;\n    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::accumulate(std::begin(nums_copy), std::end(nums_copy),\
    \ 0) > std::accumulate(std::begin(nums_copy), std::end(nums_copy), 0);\n    });\n\
    \    return nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a + b < sum - a + b;\n    });\n    return nums2;", " \
    \   // Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n  \
    \      return sum - a + b < sum - b + a;\n    });\n    return nums2;", "    //\
    \ Write your code here.\n    long long sum = 0;\n    for(long long i : nums){\n\
    \        sum += i;\n    }\n    long long max = 0;\n    for(long long i : nums){\n\
    \        if(sum > max){\n            max = sum;\n        }\n        sum += i;\n\
    \    }\n    std::vector<long> ans;\n    for(long long i : nums){\n        if(sum\
    \ == max){\n            ans.push_back(i);\n        }\n    }\n    return ans;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    long\
    \ sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n    }\n   \
    \ long max_sum = 0;\n    for (long num : nums_copy) {\n        max_sum = std::max(max_sum,\
    \ sum);\n        sum += num;\n    }\n    std::vector<long> result;\n    for (long\
    \ num : nums_copy) {\n        if (sum == max_sum) {\n            result.push_back(num);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::to_string(a) < std::to_string(b);\n    });\n\
    \    return nums_copy;", "    // Write your code here\n    std::vector<long> nums_sorted\
    \ = nums;\n    std::sort(nums_sorted.begin(), nums_sorted.end(), [](long a, long\
    \ b){\n        return a + b < 0;\n    });\n    return nums_sorted;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        nums2.push_back(nums[i]);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n \
    \       return sum - a + b < sum - b + a;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    long sum = 0;\n    std::vector<long> result;\n   \
    \ for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n   \
    \ }\n    std::sort(result.begin(), result.end(), [&sum](int i, int j) {\n    \
    \    return sum - j;\n    });\n    return result;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n   \
    \         if (i == j) {\n                continue;\n            }\n          \
    \  sum += nums[j];\n        }\n        if (sum > 0) {\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    long max = 0;\n    for (long i : nums2)\
    \ {\n        if (sum == i) {\n            max = i;\n        }\n    }\n    std::vector<long>\
    \ nums3;\n    for (long i : nums2) {\n        if (sum == i) {\n            nums3.push_back(i);\n\
    \        }\n    }\n    for (long i : nums3) {\n        nums2.push_back(i);\n \
    \   }\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy;\n    for(long num : nums){\n        nums_copy.push_back(num);\n \
    \   }\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        long sum = 0;\n        while(a){\n            sum += a%10;\n        \
    \    a /= 10;\n        }\n        while(b){\n            sum += b%10;\n      \
    \      b /= 10;\n        }\n        return sum - a - b;\n    });\n    return nums_copy;",
  "    // Write your code here.\n    long sum = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long index = 0;\n    for (auto &i : nums) {\n        sum += i;\n \
    \       if (sum > max) {\n            max = sum;\n        }\n        if (sum <\
    \ min) {\n            min = sum;\n        }\n    }\n    std::vector<long> result;\n\
    \    for (auto &i : nums) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : nums) {\n            sum += j;\n            if (sum > i) {\n             \
    \   result.push_back(i);\n                break;\n            }\n        }\n \
    \   }\n    for (auto &i : result) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : result) {\n            sum += j;\n            if (sum > i) {\n           \
    \     result.push_back(i);\n                break;\n            }\n        }\n\
    \    }\n    for (auto &i : result) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : result) {\n            sum += j;\n            if (sum < i) {\n           \
    \     result.push_back(i);\n                break;\n            }\n        }\n\
    \    }\n    for (auto &i : result) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : result) {\n            sum += j;\n            if (sum > i) {\n           \
    \     result.push_back(i);\n                break;\n            }\n        }\n\
    \    }\n    for (auto &i : result) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : result) {\n            sum += j;\n            if (sum < i) {\n           \
    \     result.push_back(i);\n                break;\n            }\n        }\n\
    \    }\n    for (auto &i : result) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : result) {\n            sum += j;\n            if (sum > i) {\n           \
    \     result.push_back(i);\n                break;\n            }\n        }\n\
    \    }\n    for (auto &i : result) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : result) {\n            sum += j;\n            if (sum < i) {\n           \
    \     result.push_back(i);\n                break;\n            }\n        }\n\
    \    }\n    for (auto &i : result) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (auto &j\
    \ : result) {\n            sum += j;\n            if (sum > i) {\n           \
    \     result.push_back(i);\n                break;\n            }\n        }\n\
    \    }", "    // Write your code here.\n    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) {\n    \
    \    return a + b < 0;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ result;\n    long long sum = 0;\n    for (long long i : nums) {\n        sum\
    \ += i;\n        result.push_back(i);\n    }\n    std::sort(result.begin(), result.end(),\
    \ [&sum](int i, int j) {\n        return sum - j;\n    });\n    return result;",
  "    std::vector<long> nums_copy = nums;\n    std::vector<long> nums_copy_sorted\
    \ = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n\
    \    }\n    for (long i : nums_copy) {\n        if (sum > i) {\n            nums_copy_sorted.push_back(i);\n\
    \            sum -= i;\n        }\n    }\n    return nums_copy_sorted;", "   \
    \ std::vector<long> numsCopy = nums;\n    std::sort(numsCopy.begin(), numsCopy.end(),\
    \ [](long a, long b){return a+b<0;});\n    return numsCopy;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a + b <\
    \ sum - a + b;\n    });\n    return nums2;", "    // Write your code here\n  \
    \  long long sum = 0;\n    for (long long i : nums) {\n        sum += i;\n   \
    \ }\n    std::vector<long> result;\n    for (long long i : nums) {\n        if\
    \ (sum == i) {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Write your code here.\n    std::vector<long> nums_copy = nums;\n\
    \    long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [sum](int a, int b) {\n   \
    \     return sum - a + b < sum - a + b;\n    });\n    return nums_copy;", "  \
    \  // Write your code here.\n    std::vector<long> nums2;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0; j <\
    \ nums.size(); j++) {\n            if (i == j) {\n                continue;\n\
    \            }\n            sum += nums[j];\n        }\n        if (sum < 0)\n\
    \            sum *= -1;\n        nums2.push_back(nums[i]);\n    }\n    return\
    \ nums2;", "    // Write your code here\n    std::vector<long> nums2;\n    long\
    \ sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    // Write\
    \ your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](int a, int b) {\n        return sum - a + b < sum - a +\
    \ b;\n    });\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ nums1;\n    for (auto &i : nums) {\n        int sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        nums1.push_back(sum);\n\
    \    }\n    std::sort(nums1.begin(), nums1.end());\n    return nums1;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b) -> bool {\n        return std::abs(a - b) < 10;\n    });\n    return\
    \ nums_copy;", "    std::vector<long> numsCopy = nums;\n    std::vector<long>\
    \ numsCopySorted = numsCopy;\n    long sum = 0;\n    for (long i : numsCopy) {\n\
    \        sum += i;\n    }\n    for (long i : numsCopy) {\n        if (sum > 0)\
    \ {\n            long temp = sum;\n            sum = 0;\n            for (long\
    \ j : numsCopySorted) {\n                sum += j;\n                if (sum >\
    \ temp) {\n                    numsCopySorted.insert(numsCopySorted.begin() +\
    \ i, numsCopySorted.begin() + j);\n                    break;\n              \
    \  }\n            }\n        }\n    }\n    return numsCopySorted;", "    // Write\
    \ your code here\n    std::vector<long> nums_copy;\n    nums_copy = nums;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums_copy[i];\n    }\n    long max_sum = 0;\n    long max_index = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        if (sum == max_sum) {\n      \
    \      max_index = i;\n        }\n        if (sum < max_sum) {\n            max_sum\
    \ = sum;\n        }\n    }\n    std::vector<long> result;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        if (i == max_index) {\n            result.push_back(nums[i]);\n\
    \        }\n    }\n    return result;", "    // Write your code here.\n    long\
    \ sum = 0;\n    long max = 0;\n    long min = 0;\n    long index = 0;\n    long\
    \ sum2 = 0;\n    long max2 = 0;\n    long min2 = 0;\n    long index2 = 0;\n  \
    \  long sum3 = 0;\n    long max3 = 0;\n    long min3 = 0;\n    long index3 = 0;\n\
    \    long sum4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n    long index4 =\
    \ 0;\n    long sum5 = 0;\n    long max5 = 0;\n    long min5 = 0;\n    long index5\
    \ = 0;\n    long sum6 = 0;\n    long max6 = 0;\n    long min6 = 0;\n    long index6\
    \ = 0;\n    long sum7 = 0;\n    long max7 = 0;\n    long min7 = 0;\n    long index7\
    \ = 0;\n    long sum8 = 0;\n    long max8 = 0;\n    long min8 = 0;\n    long index8\
    \ = 0;\n    long sum9 = 0;\n    long max9 = 0;\n    long min9 = 0;\n    long index9\
    \ = 0;\n    long sum10 = 0;\n    long max10 = 0;\n    long min10 = 0;\n    long\
    \ index10 = 0;\n    long sum11 = 0;\n    long max11 = 0;\n    long min11 = 0;\n\
    \    long index11 = 0;\n    long sum12 = 0;\n    long max12 = 0;\n    long min12\
    \ = 0;\n    long index12 = 0;\n    long sum13 = 0;\n    long max13 = 0;\n    long\
    \ min13 = 0;\n    long index13 = 0;\n    long sum14 = 0;\n    long max14 = 0;\n\
    \    long min14 = 0;\n    long index14 = 0;\n    long sum15 = 0;\n    long max15\
    \ = 0;\n    long min15 = 0;\n    long index15 = 0;\n    long sum16 = 0;\n    long\
    \ max16 = 0;\n    long min16 = 0;\n    long index16 = 0;\n    long sum17 = 0;\n\
    \    long max17 = 0;\n    long min17 = 0;\n    long index17 = 0;\n    long sum18\
    \ = 0;\n    long max18 = 0;\n    long min18 = 0;\n    long index18 = 0;\n    long\
    \ sum19 = 0;\n    long max19 = 0;\n    long min19 = 0;\n    long index19 = 0;\n\
    \    long sum20 = 0;\n    long max20 = 0;\n    long min20 = 0;\n    long index20\
    \ = 0;\n    long sum21 = 0;\n    long max21 = 0;\n    long min21 = 0;\n    long\
    \ index21 = 0;\n    long sum22 = 0;\n    long max22 = 0;\n    long min22 = 0;\n\
    \    long index22 = 0;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if\
    \ (sum > 0) {\n            nums2.push_back(i);\n        }\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b){return a+b<0;});\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long min_sum = sum;\n    long min_idx = -1;\n    for\
    \ (long i : nums_copy) {\n        long cur_sum = sum - i;\n        if (cur_sum\
    \ < min_sum) {\n            min_sum = cur_sum;\n            min_idx = i;\n   \
    \     }\n    }\n    std::vector<long> sorted_nums;\n    for (long i : nums_copy)\
    \ {\n        if (i == min_idx) {\n            sorted_nums.push_back(i);\n    \
    \    }\n    }\n    return sorted_nums;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    long max = 0;\n    for (long i : nums2)\
    \ {\n        if (sum > max) {\n            max = sum;\n        }\n        sum\
    \ -= i;\n    }\n    std::vector<long> nums3;\n    for (long i : nums2) {\n   \
    \     if (sum == max) {\n            nums3.push_back(i);\n        }\n    }\n \
    \   return nums3;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            if (i == j) {\n                continue;\n            }\n   \
    \         sum += nums[j];\n        }\n        if (sum > 0) {\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    long\
    \ long sum = 0;\n    for(long long i : nums)\n    {\n        sum += i;\n    }\n\
    \    long long maxSum = 0;\n    long long maxIndex = 0;\n    for(long long i :\
    \ nums)\n    {\n        if(sum == maxSum)\n        {\n            maxIndex = i;\n\
    \        }\n        if(sum > maxSum)\n        {\n            maxSum = sum;\n \
    \           maxIndex = i;\n        }\n    }\n    std::vector<long> ans;\n    ans.push_back(maxIndex);\n\
    \    return ans;", "    // Write your code here.\n    std::vector<long> nums_copy\
    \ = nums;\n    sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (auto &i : nums) {\n        sum += i;\n \
    \       nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(),\
    \ [&sum](long a, long b) -> bool {\n        return sum - a < sum - b;\n    });\n\
    \    return nums2;", "    // Write your code here\n    long long sum = 0;\n  \
    \  long long max = 0;\n    for (long long i : nums) {\n        sum += i;\n   \
    \     if (sum > max) {\n            max = sum;\n        }\n    }\n    std::vector<long>\
    \ ans;\n    for (long long i : nums) {\n        if (sum == i) {\n            ans.push_back(i);\n\
    \        }\n    }\n    std::sort(ans.begin(), ans.end(), [max](long long a, long\
    \ long b) { return (a + b) > max; });\n    return ans;", "    // Write your code\
    \ here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    long sum = 0;\n    long\
    \ max = 0;\n    for (long i : nums) {\n        sum += i;\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    std::vector<long> ans;\n  \
    \  for (long i : nums) {\n        if (sum - i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    // Write your code here.\n    long sum\
    \ = 0;\n    long max_sum = 0;\n    long min_sum = 0;\n    long max_index = -1;\n\
    \    long min_index = -1;\n    for (auto num : nums) {\n        sum += num;\n\
    \        if (sum > max_sum) {\n            max_sum = sum;\n            max_index\
    \ = num;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n\
    \            min_index = num;\n        }\n    }\n    std::vector<long> result;\n\
    \    for (auto num : nums) {\n        if (num == max_index) {\n            result.push_back(max_index);\n\
    \        } else if (num == min_index) {\n            result.push_back(min_index);\n\
    \        } else {\n            result.push_back(num);\n        }\n    }\n    return\
    \ result;", "    // Write your code here\n    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return a+b<0;});\n\
    \    return nums_copy;", "    std::vector<long> nums2;\n    long sum = 0;\n  \
    \  for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n   \
    \ }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) { return\
    \ sum - a + b; });\n    return nums2;", "    // Write your code here\n    long\
    \ sum = 0;\n    std::vector<long> result;\n    for (long num : nums) {\n     \
    \   sum += num;\n        result.push_back(num);\n    }\n    std::sort(result.begin(),\
    \ result.end(), [&sum](long a, long b){return sum - a - b < 0;});\n    return\
    \ result;", "    // Write your code here\n    long sum = 0;\n    long temp = 0;\n\
    \    long count = 0;\n    std::vector<long> result;\n    for (auto &num : nums)\
    \ {\n        sum += num;\n    }\n    for (auto &num : nums) {\n        temp =\
    \ sum % 10;\n        sum += temp;\n        if (sum == 0)\n            result.push_back(num);\n\
    \        else if (sum > 0) {\n            count++;\n        }\n    }\n    if (count\
    \ > 0)\n        for (auto &num : result) {\n            std::swap(num, result[count\
    \ - 1]);\n            count -= 1;\n        }\n    return result;", "    // Write\
    \ your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [sum](long a, long b) -> bool {\n        return a + b < sum;\n\
    \    });\n    return nums2;", "    std::vector<long> nums_copy = nums;\n    std::vector<long>\
    \ nums_copy_sorted = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n\
    \        sum += i;\n    }\n    long max_sum = sum;\n    long max_index = -1;\n\
    \    for (long i : nums_copy) {\n        long current_sum = sum - i;\n       \
    \ if (current_sum > max_sum) {\n            max_sum = current_sum;\n         \
    \   max_index = i;\n        }\n    }\n    nums_copy_sorted.erase(std::remove(nums_copy_sorted.begin(),\
    \ nums_copy_sorted.end(), max_index), nums_copy_sorted.end());\n    nums_copy_sorted.insert(nums_copy_sorted.begin(),\
    \ max_index);\n    return nums_copy_sorted;", "    // Write your code here\n \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n  \
    \  return nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ (a+b<0);});\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (auto num : nums)\
    \ {\n        sum += num;\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if\
    \ (sum > 0) {\n            nums2.push_back(i);\n        }\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b){return a+b<0;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a)\
    \ - std::abs(b));\n    });\n    return nums_copy;", "    std::vector<long> numsCopy\
    \ = nums;\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return numsCopy;", "    // Write your code here\n    std::vector<long>\
    \ nums1;\n    std::vector<long> nums2;\n    std::vector<long> nums3;\n    std::vector<long>\
    \ nums4;\n    std::vector<long> nums5;\n    std::vector<long> nums6;\n    std::vector<long>\
    \ nums7;\n    std::vector<long> nums8;\n    std::vector<long> nums9;\n    std::vector<long>\
    \ nums10;\n    std::vector<long> nums11;\n    std::vector<long> nums12;\n    std::vector<long>\
    \ nums13;\n    std::vector<long> nums14;\n    std::vector<long> nums15;\n    std::vector<long>\
    \ nums16;\n    std::vector<long> nums17;\n    std::vector<long> nums18;\n    std::vector<long>\
    \ nums19;\n    std::vector<long> nums20;\n    std::vector<long> nums21;\n    std::vector<long>\
    \ nums22;\n    std::vector<long> nums23;\n    std::vector<long> nums24;\n    std::vector<long>\
    \ nums25;\n    std::vector<long> nums26;\n    std::vector<long> nums27;\n    std::vector<long>\
    \ nums28;\n    std::vector<long> nums29;\n    std::vector<long> nums30;\n    std::vector<long>\
    \ nums31;\n    std::vector<long> nums32;\n    std::vector<long> nums33;\n    std::vector<long>\
    \ nums34;\n    std::vector<long> nums35;\n    std::vector<long> nums36;\n    std::vector<long>\
    \ nums37;\n    std::vector<long> nums38;\n    std::vector<long> nums39;\n    std::vector<long>\
    \ nums40;\n    std::vector<long> nums41;\n    std::vector<long> nums42;\n    std::vector<long>\
    \ nums43;\n    std::vector<long> nums44;\n    std::vector<long> nums45;\n    std::vector<long>\
    \ nums46;\n    std::vector<long> nums47;\n    std::vector<long> nums48;\n    std::vector<long>\
    \ nums49;\n    std::vector<long> nums50;\n    std::vector<long> nums51;\n    std::vector<long>\
    \ nums52;\n    std::vector<long> nums53;\n    std::vector<long> nums54;\n    std::vector<long>\
    \ nums55;\n    std::vector<long> nums56;\n    std::vector<long> nums57;\n    std::vector<long>\
    \ nums58;\n    std::vector<long> nums59", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long\
    \ j=0;j<nums.size();j++){\n            if(nums[j]<0){\n                sum+=nums[j];\n\
    \            }\n        }\n        if(sum==0){\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b){return sum - a + b < sum - b + a;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n \
    \       return sum - a < sum - b;\n    });\n    return nums2;", "    // Write\
    \ your code here\n    std::vector<long> nums_copy = nums;\n    long sum = 0;\n\
    \    for (long num : nums_copy) {\n        sum += num;\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [&sum](int a, int b) {\n        return sum - a + b < sum -\
    \ a + b;\n    });\n    return nums_copy;", "    std::vector<long> nums_copy =\
    \ nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", " \
    \   // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return (a+b) % 10 == 0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0; j <\
    \ nums.size(); j++) {\n            if (i == j) {\n                continue;\n\
    \            }\n            sum += nums[j];\n        }\n        if (sum > 0) {\n\
    \            nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n\
    \        return sum - a < sum - b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b) -> bool {\n        return std::abs(a - b) < std::abs(std::abs(a)\
    \ - std::abs(b));\n    });\n    return nums_copy;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::vector<long> nums_copy_sorted\
    \ = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n\
    \    }\n    long last_sum = 0;\n    for (long i : nums_copy) {\n        last_sum\
    \ += i;\n        if (last_sum > sum) {\n            nums_copy_sorted.push_back(i);\n\
    \            last_sum -= sum;\n        }\n    }\n    return nums_copy_sorted;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a<b;});\n    return nums_copy;",
  "    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n  \
    \      sum += i;\n        nums2.push_back(i);\n    }\n    long maxSum = 0;\n \
    \   for (long i : nums2) {\n        maxSum = max(maxSum, sum);\n    }\n    std::vector<long>\
    \ result;\n    for (long i : nums2) {\n        if (sum - i == maxSum) {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long num : nums) {\n        sum += num;\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n \
    \       return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::vector<long> nums_copy_sorted = nums;\n    std::vector<long>\
    \ nums_copy_sorted_reverse = nums;\n    long sum = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n    }\n    long max_sum = sum;\n\
    \    long min_sum = sum;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum > max_sum) {\n            max_sum = sum;\n\
    \        }\n        if (sum < min_sum) {\n            min_sum = sum;\n       \
    \ }\n    }\n    long min_sum_index = -1;\n    long max_sum_index = -1;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ == max_sum) {\n            max_sum_index = i;\n        }\n        if (sum ==\
    \ min_sum) {\n            min_sum_index = i;\n        }\n    }\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum ==\
    \ max_sum) {\n            nums_copy_sorted[max_sum_index] = nums[i];\n       \
    \ }\n        if (sum == min_sum) {\n            nums_copy_sorted[min_sum_index]\
    \ = nums[i];\n        }\n    }\n    for (long i = 0; i < nums_copy_sorted.size();\
    \ i++) {\n        nums_copy_sorted[i] = nums_copy_sorted[nums_copy_sorted.size()\
    \ - i - 1];\n    }\n    for (long i = 0; i < nums_copy_sorted.size(); i++) {\n\
    \        nums_copy_sorted_reverse[nums_copy_sorted.size() - i - 1] = nums_copy_sorted[i];\n\
    \    }\n    return nums_copy_sorted_reverse;", "    // Write your code here\n\
    \    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return std::accumulate(std::begin(nums_copy), std::end(nums_copy),\
    \ 0) > std::accumulate(std::begin(nums_copy), std::end(nums_copy), 0);\n    });\n\
    \    return nums_copy;", "    std::vector<long> nums_copy = nums;\n    long sum\
    \ = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    long max_sum\
    \ = 0;\n    long max_index = 0;\n    for (long i : nums_copy) {\n        if (sum\
    \ == i) {\n            max_index = i;\n            max_sum = i;\n        } else\
    \ if (sum > i) {\n            max_index = i;\n            max_sum = sum;\n   \
    \     }\n    }\n    std::vector<long> result;\n    for (long i : nums_copy) {\n\
    \        if (i == max_index) {\n            result.push_back(i);\n        } else\
    \ if (sum == max_sum) {\n            result.push_back(i);\n            result.push_back(max_index);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    std::vector<long> nums_copy_sorted = nums;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums_copy[i];\n        nums_copy_sorted.push_back(nums_copy[i]);\n\
    \    }\n    long max_sum = sum;\n    long min_sum = sum;\n    for (long i = 0;\
    \ i < nums_copy_sorted.size(); i++) {\n        sum += nums_copy_sorted[i];\n \
    \       if (sum > max_sum) {\n            max_sum = sum;\n        }\n        if\
    \ (sum < min_sum) {\n            min_sum = sum;\n        }\n    }\n    long min_sum_index\
    \ = 0;\n    long max_sum_index = 0;\n    for (long i = 0; i < nums_copy_sorted.size();\
    \ i++) {\n        sum += nums_copy_sorted[i];\n        if (sum == max_sum) {\n\
    \            max_sum_index = i;\n        }\n        if (sum == min_sum) {\n  \
    \          min_sum_index = i;\n        }\n    }\n    std::vector<long> nums_copy_sorted_reordered\
    \ = nums_copy_sorted;\n    for (long i = min_sum_index; i < nums_copy_sorted.size();\
    \ i++) {\n        nums_copy_sorted_reordered.insert(nums_copy_sorted_reordered.begin()\
    \ + i, nums_copy_sorted[i - 1]);\n    }\n    return nums_copy_sorted_reordered;",
  "    std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long num :\
    \ nums_copy) {\n        sum += num;\n    }\n    long last_sum = 0;\n    long last_index\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        long num = nums[i];\n\
    \        long cur_sum = sum - last_sum;\n        if (cur_sum > 0) {\n        \
    \    long index = last_index + 1;\n            while (cur_sum > 0) {\n       \
    \         sum += num;\n                cur_sum -= num;\n                last_sum\
    \ += num;\n                last_index = index;\n                index++;\n   \
    \         }\n        }\n    }\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a) - std::abs(b));\n\
    \    });\n    return nums_copy;", "    std::vector<long> numsCopy = nums;\n  \
    \  sort(numsCopy.begin(), numsCopy.end(), [](long a, long b){return a+b<0;});\n\
    \    return numsCopy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long j=0;j<nums.size();j++){\n\
    \            sum+=nums[j];\n        }\n        if(sum==i){\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    long\
    \ long sum = 0;\n    long long max = 0;\n    long long min = 0;\n    for (long\
    \ long i : nums) {\n        sum += i;\n        if (sum > max) {\n            max\
    \ = sum;\n        }\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n    }\n    std::vector<long> ans;\n    for (long long i : nums) {\n    \
    \    if (sum == i) {\n            ans.push_back(i);\n        }\n    }\n    std::sort(ans.begin(),\
    \ ans.end(), [&sum](long long a, long long b) {\n        return sum - a + b <\
    \ sum - b + a;\n    });\n    return ans;", "    std::vector<long> nums_copy =\
    \ nums;\n    sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   long max = 0;\n    for (long i : nums2) {\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n        sum -= i;\n    }\n    std::vector<long>\
    \ nums3;\n    for (long i : nums2) {\n        if (sum == max) {\n            nums3.push_back(i);\n\
    \        }\n    }\n    return nums3;", "    // Write your code here.\n    long\
    \ sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for (auto i : nums) {\n        if (sum - i == 0) {\n          \
    \  result.push_back(i);\n        }\n    }\n    return result;", "    // Write\
    \ your code here\n    std::vector<long> nums2;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            sum += nums[j];\n        }\n        if (sum == nums[i]) {\n \
    \           nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;", " \
    \   // Write your code here\n    std::vector<long> nums_copy = nums;\n    long\
    \ sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    long\
    \ max_sum = 0;\n    for (long i : nums_copy) {\n        if (sum > max_sum) {\n\
    \            max_sum = sum;\n        }\n        sum -= i;\n    }\n    long min_sum\
    \ = 0;\n    for (long i : nums_copy) {\n        if (sum < min_sum) {\n       \
    \     min_sum = sum;\n        }\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for (long i : nums_copy) {\n        if (sum == max_sum) {\n   \
    \         result.push_back(i);\n        } else if (sum == min_sum) {\n       \
    \     result.push_back(i);\n        } else {\n            result.push_back(i);\n\
    \            result.push_back(sum - i);\n        }\n    }\n    return result;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    long minSum = sum;\n    long minIndex = -1;\n    for (long i : nums2)\
    \ {\n        long sum2 = sum - i;\n        if (sum2 < minSum) {\n            minSum\
    \ = sum2;\n            minIndex = i;\n        }\n    }\n    std::vector<long>\
    \ nums3;\n    for (long i : nums2) {\n        if (i == minIndex) {\n         \
    \   nums3.push_back(i);\n        }\n    }\n    return nums3;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b){return sum - a + b < sum - b + a;});\n \
    \   return nums2;", "    std::vector<long> nums_copy = nums;\n    long sum = 0;\n\
    \    for (long num : nums_copy) {\n        sum += num;\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [&sum](long a, long b) {\n        return sum - a + b < sum\
    \ - b + a;\n    });\n    return nums_copy;", "    // Write your code here\n  \
    \  std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy)\
    \ {\n        sum += i;\n    }\n    long max_sum = 0;\n    long max_index = -1;\n\
    \    for (long i : nums_copy) {\n        if (sum == max_sum) {\n            max_index\
    \ = i;\n        }\n        sum += i % 10;\n    }\n    std::vector<long> result;\n\
    \    for (long i : nums_copy) {\n        if (i == max_index) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return a+b<0;});\n\
    \    return nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n    \
    \    }\n        if (sum == nums[i]) {\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    long\
    \ sum = 0;\n    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end(), [&sum](long a, long b) -> bool {\n        sum += (a / 10) +\
    \ (b / 10);\n        return sum == 0;\n    });\n    return nums_copy;", "    //\
    \ Write your code here.\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    long\
    \ sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [&sum](long a, long b) -> bool {\n        return sum - a <\
    \ sum - b;\n    });\n    return nums_copy;", "    std::vector<long> result;\n\
    \    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n       \
    \ result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (auto i : nums_copy)\
    \ {\n        sum += i;\n    }\n    long max_sum = 0;\n    for (auto i : nums_copy)\
    \ {\n        max_sum = std::max(max_sum, sum);\n        sum -= i;\n    }\n   \
    \ std::vector<long> result;\n    for (auto i : nums_copy) {\n        if (sum ==\
    \ max_sum) {\n            result.push_back(i);\n        }\n        sum -= i;\n\
    \    }\n    return result;", "    // Write your code here.\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n \
    \       sum += i;\n        nums2.push_back(i);\n    }\n    long maxSum = 0;\n\
    \    for (long i : nums2) {\n        maxSum = std::max(maxSum, sum);\n    }\n\
    \    std::vector<long> result;\n    for (long i : nums2) {\n        if (sum ==\
    \ maxSum) {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy = nums;\n    long sum\
    \ = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    long min_sum\
    \ = sum;\n    long max_sum = sum;\n    for (long i : nums_copy) {\n        sum\
    \ += i;\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n\
    \        if (sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n\
    \    std::vector<long> sorted_nums;\n    for (long i : nums_copy) {\n        long\
    \ diff = i - min_sum;\n        if (diff > 0) {\n            sorted_nums.push_back(i);\n\
    \        } else if (diff < 0) {\n            sorted_nums.push_back(max_sum + diff);\n\
    \        } else {\n            sorted_nums.push_back(min_sum + diff);\n      \
    \  }\n    }\n    return sorted_nums;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) -> bool {\n        return sum - a + b < sum - a + b;\n    });\n \
    \   return nums2;", "    std::vector<long> nums_copy = nums;\n    std::vector<long>\
    \ nums_copy_sorted = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n\
    \        sum += i;\n    }\n    long min_sum = sum;\n    long min_i = -1;\n   \
    \ for (long i : nums_copy) {\n        sum += i;\n        if (sum < min_sum) {\n\
    \            min_sum = sum;\n            min_i = i;\n        }\n    }\n    nums_copy_sorted.erase(std::remove(nums_copy_sorted.begin(),\
    \ nums_copy_sorted.end(), min_i),\n                           nums_copy_sorted.end());\n\
    \    nums_copy_sorted.insert(std::begin(nums_copy_sorted), min_i);\n    return\
    \ nums_copy_sorted;", "    // Write your code here\n    long sum = 0;\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [&sum](long\
    \ a, long b){\n        sum += (a % 10) + (b % 10);\n        return sum > 0;\n\
    \    });\n    return nums_copy;", "    std::vector<long> nums_copy = nums;\n \
    \   std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) -> bool {\n\
    \        return std::abs(a - b) < 10;\n    });\n    return nums_copy;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return sum -\
    \ a + b < sum - b + a;});\n    return nums2;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < 10;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n  \
    \      return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::vector<long> nums_sorted_by_sum;\n    long sum =\
    \ 0;\n    for (long num : nums_copy) {\n        sum += num;\n        nums_sorted_by_sum.push_back(sum);\n\
    \    }\n    std::sort(nums_sorted_by_sum.begin(), nums_sorted_by_sum.end());\n\
    \    return nums_sorted_by_sum;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    long long sum = 0;\n    for (long long i : nums_copy)\
    \ {\n        sum += i;\n    }\n    long long max_sum = 0;\n    long long max_index\
    \ = 0;\n    for (long long i : nums_copy) {\n        if (sum == i) {\n       \
    \     max_index = i;\n            max_sum = i;\n        }\n    }\n    long long\
    \ max_sum_index = 0;\n    for (long long i : nums_copy) {\n        if (sum ==\
    \ i) {\n            max_sum_index = i;\n        }\n    }\n    long long min_sum\
    \ = 0;\n    long long min_index = 0;\n    for (long long i : nums_copy) {\n  \
    \      if (sum < i) {\n            min_index = i;\n            min_sum = i;\n\
    \        }\n    }\n    long long min_sum_index = 0;\n    for (long long i : nums_copy)\
    \ {\n        if (sum < i) {\n            min_sum_index = i;\n        }\n    }\n\
    \    long long min_sum_index_index = 0;\n    for (long long i : nums_copy) {\n\
    \        if (sum < i) {\n            min_sum_index_index = i;\n        }\n   \
    \ }\n    long long min_sum_index_index_index = 0;\n    for (long long i : nums_copy)\
    \ {\n        if (sum < i) {\n            min_sum_index_index_index = i;\n    \
    \    }\n    }\n    long long min_sum_index_index_index = 0;\n    for (long long\
    \ i : nums_copy) {\n        if (sum < i) {\n            min_sum_index_index_index\
    \ = i;\n        }\n    }\n    long long min_sum_index_index_index = 0;\n    for\
    \ (long long i : nums_copy) {\n        if (sum < i) {\n            min_sum_index_index_index\
    \ = i;\n        }\n    }\n    long long min_sum_index_index_index = 0;\n    for\
    \ (long long i : nums_copy) {\n        if (sum < i) {\n            min_sum_index_index_index\
    \ = i;\n        }\n    }\n    long long min_sum_index_index_index = 0;\n    for\
    \ (long long i : nums_copy) {\n        if (sum < i) {\n            min_sum_index_index_index\
    \ = i;\n        }\n    }\n    long long min_sum_index_index_index = 0;\n    for\
    \ (long long i : nums_copy) {\n        if (sum < i) {\n            min_sum_index_index_index\
    \ = i;\n        }\n    }\n    long long min_sum_index_index_index = 0;\n    for\
    \ (long long i : nums_copy) {\n        if (sum < i) {\n            min_sum_index_index_index\
    \ = i;\n        }\n    }\n    long long min_sum_index_index_index = 0;\n    for\
    \ (long long i : nums_copy) {\n        if (sum < i) {\n            min_sum_index_index_index\
    \ = i;\n        }\n    }\n    long long min_sum_index_index", "    // Write your\
    \ code here.\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a + b <\
    \ 0;\n    });\n    return nums2;", "    std::vector<long> result;\n    long sum\
    \ = 0;\n    for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    // Write\
    \ your code here.\n    long sum = 0;\n    long temp = 0;\n    long ans = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        temp = nums[i];\n     \
    \   sum += temp;\n        if (sum > 0) {\n            ans = i;\n        }\n  \
    \  }\n    std::vector<long> ans;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        if (i == ans) {\n            ans.push_back(nums[i]);\n        }\n   \
    \ }\n    return ans;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a>b;});\n    return nums_copy;", "    // Write your code here\n    long sum\
    \ = 0;\n    long max_sum = 0;\n    long min_sum = 0;\n    long max_index = -1;\n\
    \    long min_index = -1;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    sum += nums[i];\n        if (sum > max_sum) {\n            max_sum = sum;\n\
    \            max_index = i;\n        }\n        if (sum < min_sum) {\n       \
    \     min_sum = sum;\n            min_index = i;\n        }\n    }\n    std::vector<long>\
    \ result;\n    for (long i = 0; i < nums.size(); i++) {\n        if (i == max_index)\
    \ {\n            result.push_back(nums[i]);\n        }\n        if (i == min_index)\
    \ {\n            result.push_back(nums[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    long maxSum\
    \ = sum;\n    long maxSumIndex = 0;\n    for (long i = 0; i < nums2.size(); i++)\
    \ {\n        long sum2 = sum - nums2[i];\n        if (sum2 > maxSum) {\n     \
    \       maxSum = sum2;\n            maxSumIndex = i;\n        }\n    }\n    std::vector<long>\
    \ ans;\n    ans.push_back(maxSumIndex);\n    return ans;", "    // Write your\
    \ code here.\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::to_string(a) < std::to_string(b);\n\
    \    });\n    return nums_copy;", "    std::vector<long> nums_copy = nums;\n \
    \   long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n\
    \    long max_sum = 0;\n    for (long i : nums_copy) {\n        max_sum = std::max(max_sum,\
    \ sum);\n    }\n    std::vector<long> nums_copy2 = nums;\n    for (long i : nums_copy2)\
    \ {\n        long sum2 = 0;\n        for (long j : nums_copy) {\n            sum2\
    \ += j;\n        }\n        if (sum2 == sum) {\n            nums_copy2.erase(nums_copy2.begin()\
    \ + nums_copy.size() - 1);\n        }\n    }\n    return nums_copy2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy =\
    \ nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n\
    \    }\n    long max_sum = 0;\n    long max_index = 0;\n    for (long i : nums_copy)\
    \ {\n        if (sum == max_sum) {\n            max_index = i;\n        }\n  \
    \      if (sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n  \
    \  std::vector<long> result;\n    for (long i : nums_copy) {\n        if (i ==\
    \ max_index) {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Write your code here\n    long sum = 0;\n    long max_sum\
    \ = 0;\n    long min_sum = 0;\n    long max_index = 0;\n    long min_index = 0;\n\
    \    long max_sum_index = 0;\n    long min_sum_index = 0;\n    long max_sum_index2\
    \ = 0;\n    long min_sum_index2 = 0;\n    long max_sum_index3 = 0;\n    long min_sum_index3\
    \ = 0;\n    long max_sum_index4 = 0;\n    long min_sum_index4 = 0;\n    long max_sum_index5\
    \ = 0;\n    long min_sum_index5 = 0;\n    long max_sum_index6 = 0;\n    long min_sum_index6\
    \ = 0;\n    long max_sum_index7 = 0;\n    long min_sum_index7 = 0;\n    long max_sum_index8\
    \ = 0;\n    long min_sum_index8 = 0;\n    long max_sum_index9 = 0;\n    long min_sum_index9\
    \ = 0;\n    long max_sum_index10 = 0;\n    long min_sum_index10 = 0;\n    long\
    \ max_sum_index11 = 0;\n    long min_sum_index11 = 0;\n    long max_sum_index12\
    \ = 0;\n    long min_sum_index12 = 0;\n    long max_sum_index13 = 0;\n    long\
    \ min_sum_index13 = 0;\n    long max_sum_index14 = 0;\n    long min_sum_index14\
    \ = 0;\n    long max_sum_index15 = 0;\n    long min_sum_index15 = 0;\n    long\
    \ max_sum_index16 = 0;\n    long min_sum_index16 = 0;\n    long max_sum_index17\
    \ = 0;\n    long min_sum_index17 = 0;\n    long max_sum_index18 = 0;\n    long\
    \ min_sum_index18 = 0;\n    long max_sum_index19 = 0;\n    long min_sum_index19\
    \ = 0;\n    long max_sum_index20 = 0;\n    long min_sum_index20 = 0;\n    long\
    \ max_sum_index21 = 0;\n    long min_sum_index21 = 0;\n    long max_sum_index22\
    \ = 0;\n    long min_sum_index22 = 0;\n    long max_sum_index23 = 0;\n    long\
    \ min_sum_index23 = 0;\n    long max_sum_index24 = 0;\n    long min_sum_index24\
    \ = 0;\n    long max_sum_index25 = 0;\n    long min_sum_index25 = 0;\n    long\
    \ max_sum_index26 = 0;\n    long min_sum_index26 = 0;\n    long max_sum_index27\
    \ = 0;\n    long min_sum_index27 = 0;\n    long max_sum_index28 = 0;\n    long\
    \ min_sum_index28 = 0;\n    long max_sum_index29 = 0;\n    long min_sum_index29\
    \ = 0;\n    long max_sum_index30 = 0;\n    long min_sum_index30 = 0;\n    long\
    \ max_sum_index31 = 0;\n", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    std::vector<long> nums2;\n    for (long &num : nums) {\n        long sum =\
    \ 0;\n        while (num != 0) {\n            sum += num % 10;\n            num\
    \ /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    std::vector<long> nums_copy = nums;\n\
    \    std::vector<long> nums_sorted_by_points;\n    long max_sum = 0;\n    for\
    \ (long i = 0; i < nums_copy.size(); i++) {\n        long sum = 0;\n        for\
    \ (long j = 0; j < nums_copy[i].size(); j++) {\n            sum += nums_copy[i][j];\n\
    \        }\n        if (sum > max_sum) {\n            max_sum = sum;\n       \
    \ }\n    }\n    for (long i = 0; i < nums_copy.size(); i++) {\n        long sum\
    \ = 0;\n        for (long j = 0; j < nums_copy[i].size(); j++) {\n           \
    \ sum += nums_copy[i][j];\n        }\n        if (sum == max_sum) {\n        \
    \    nums_sorted_by_points.push_back(i);\n        }\n    }\n    return nums_sorted_by_points;",
  "    // Write your code here.\n    long sum = 0;\n    std::vector<long> nums_copy\
    \ = nums;\n    for(long i : nums_copy){\n        sum += i;\n    }\n    std::vector<long>\
    \ nums_sorted = nums_copy;\n    std::sort(nums_sorted.begin(), nums_sorted.end(),\
    \ [&sum](long a, long b){return sum - a + b < sum - a + b;});\n    return nums_sorted;",
  "    // Write your code here.\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) { return\
    \ sum - a + b; });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b){\n        return sum - a + b < sum - b + a;\n    });\n    return\
    \ nums2;", "    std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for\
    \ (long i : nums_copy) {\n        sum += i;\n    }\n    long max_sum = 0;\n  \
    \  for (long i : nums_copy) {\n        max_sum = std::max(max_sum, sum);\n   \
    \ }\n    std::vector<long> result;\n    for (long i : nums_copy) {\n        if\
    \ (sum == max_sum) {\n            result.push_back(i);\n        }\n        sum\
    \ += i;\n    }\n    return result;", "    // Write your code here.\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) < std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n  \
    \      sum += nums[i];\n        nums2.push_back(nums[i]);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - b\
    \ + a;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n\
    \            if (sum > 0) {\n                nums2.push_back(nums[i]);\n     \
    \           nums2.push_back(nums[j]);\n                nums2.push_back(nums[i]);\n\
    \                nums2.push_back(nums[j]);\n                break;\n         \
    \   }\n        }\n    }\n    return nums2;", "    // Write your code here\n  \
    \  std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n  \
    \      sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [sum](long a, long b) -> bool {\n        return a + b == sum;\n\
    \    });\n    return nums2;", "    std::vector<long> nums_copy;\n    for (auto\
    \ num : nums) {\n        nums_copy.push_back(num);\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b) {\n        return std::abs(a) < std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    for (auto &i :\
    \ nums) {\n        long sum = 0;\n        while (i != 0) {\n            sum +=\
    \ i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n  \
    \  }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n \
    \       return sum - a + b < sum - b + a;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n \
    \       return sum - a < sum - b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a) + std::abs(b));\n\
    \    });\n    return nums_copy;", "    std::vector<long> nums_copy = nums;\n \
    \   long sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n   \
    \ }\n    long max_sum = 0;\n    long max_index = 0;\n    for (long i = 0; i <\
    \ nums_copy.size(); i++) {\n        long num = nums_copy[i];\n        long temp_sum\
    \ = sum - num;\n        if (temp_sum > max_sum) {\n            max_sum = temp_sum;\n\
    \            max_index = i;\n        }\n    }\n    nums_copy.erase(nums_copy.begin()\
    \ + max_index);\n    nums_copy.insert(nums_copy.begin(), max_sum);\n    return\
    \ nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        nums2.push_back(nums[i]);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return a + b < 0;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long\
    \ i : nums_copy) {\n        sum += i;\n    }\n    long min_sum = sum;\n    long\
    \ min_idx = -1;\n    for (long i : nums_copy) {\n        long cur_sum = sum -\
    \ i;\n        if (cur_sum < min_sum) {\n            min_sum = cur_sum;\n     \
    \       min_idx = i;\n        }\n    }\n    std::vector<long> result;\n    for\
    \ (long i : nums_copy) {\n        if (i == min_idx) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums2;\n    for\
    \ (auto &num : nums) {\n        nums2.push_back(num);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b){return a+b<b;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b){return sum - a\
    \ + b < sum - a + b;});\n    return nums2;", "    // Write your code here.\n \
    \   std::vector<long> nums2;\n    for (long i : nums) {\n        long sum = 0;\n\
    \        while (i != 0) {\n            sum += i % 10;\n            i /= 10;\n\
    \        }\n        if (sum > 0) {\n            nums2.push_back(i);\n        }\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [](long a, long b) { return\
    \ a + b < b; });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    for (auto &num : nums) {\n        int\
    \ sum = 0;\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    std::vector<long> nums2;\n    for (long\
    \ &num : nums) {\n        long sum = 0;\n        while (num != 0) {\n        \
    \    sum += num % 10;\n            num /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b) {\n        return\
    \ sum - a + b < sum - a + b;\n    });\n    return nums2;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;", " \
    \   // Write your code here\n    long sum = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long index = 0;\n    for (auto i : nums) {\n        sum += i;\n  \
    \      if (sum > max) {\n            max = sum;\n        }\n        if (sum <\
    \ min) {\n            min = sum;\n        }\n    }\n    std::vector<long> result;\n\
    \    for (auto i : nums) {\n        if (sum == i) {\n            result.push_back(i);\n\
    \        }\n        if (sum > i) {\n            result.push_back(i);\n       \
    \ }\n        if (sum < i) {\n            result.push_back(i);\n        }\n   \
    \ }\n    long temp = 0;\n    for (auto i : result) {\n        temp += i;\n   \
    \ }\n    for (auto i : result) {\n        if (temp > i) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long num : nums_copy) {\n   \
    \     sum += num;\n    }\n    long max_num = std::numeric_limits<long>::max();\n\
    \    long min_num = std::numeric_limits<long>::min();\n    long min_sum = std::numeric_limits<long>::max();\n\
    \    for (long num : nums_copy) {\n        if (num < min_num) {\n            min_num\
    \ = num;\n        }\n        if (num > max_num) {\n            max_num = num;\n\
    \        }\n    }\n    long min_sum_index = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long num = nums[i];\n        long sum = 0;\n        for (long\
    \ j = 0; j < nums_copy.size(); j++) {\n            sum += nums_copy[j];\n    \
    \    }\n        if (sum < min_sum) {\n            min_sum = sum;\n           \
    \ min_sum_index = i;\n        }\n    }\n    std::vector<long> sorted_nums;\n \
    \   for (long i = 0; i < nums.size(); i++) {\n        if (i == min_sum_index)\
    \ {\n            sorted_nums.push_back(nums[i]);\n        }\n    }\n    return\
    \ sorted_nums;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int a, int b) {\n   \
    \     return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your code\
    \ here.\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) > std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int\
    \ a, int b){return sum - a + b < sum - a + b;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums1;\n    std::vector<long> nums2;\n\
    \    std::vector<long> nums3;\n    std::vector<long> nums4;\n    std::vector<long>\
    \ nums5;\n    std::vector<long> nums6;\n    std::vector<long> nums7;\n    std::vector<long>\
    \ nums8;\n    std::vector<long> nums9;\n    std::vector<long> nums10;\n    std::vector<long>\
    \ nums11;\n    std::vector<long> nums12;\n    std::vector<long> nums13;\n    std::vector<long>\
    \ nums14;\n    std::vector<long> nums15;\n    std::vector<long> nums16;\n    std::vector<long>\
    \ nums17;\n    std::vector<long> nums18;\n    std::vector<long> nums19;\n    std::vector<long>\
    \ nums20;\n    std::vector<long> nums21;\n    std::vector<long> nums22;\n    std::vector<long>\
    \ nums23;\n    std::vector<long> nums24;\n    std::vector<long> nums25;\n    std::vector<long>\
    \ nums26;\n    std::vector<long> nums27;\n    std::vector<long> nums28;\n    std::vector<long>\
    \ nums29;\n    std::vector<long> nums30;\n    std::vector<long> nums31;\n    std::vector<long>\
    \ nums32;\n    std::vector<long> nums33;\n    std::vector<long> nums34;\n    std::vector<long>\
    \ nums35;\n    std::vector<long> nums36;\n    std::vector<long> nums37;\n    std::vector<long>\
    \ nums38;\n    std::vector<long> nums39;\n    std::vector<long> nums40;\n    std::vector<long>\
    \ nums41;\n    std::vector<long> nums42;\n    std::vector<long> nums43;\n    std::vector<long>\
    \ nums44;\n    std::vector<long> nums45;\n    std::vector<long> nums46;\n    std::vector<long>\
    \ nums47;\n    std::vector<long> nums48;\n    std::vector<long> nums49;\n    std::vector<long>\
    \ nums50;\n    std::vector<long> nums51;\n    std::vector<long> nums52;\n    std::vector<long>\
    \ nums53;\n    std::vector<long> nums54;\n    std::vector<long> nums55;\n    std::vector<long>\
    \ nums56;\n    std::vector<long> nums57;\n    std::vector<long> nums58;\n    std::vector<long>\
    \ nums59", "    std::vector<long> numsCopy = nums;\n    std::sort(numsCopy.begin(),\
    \ numsCopy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n  \
    \  return numsCopy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            if (i == j) {\n      \
    \          continue;\n            }\n            sum += nums[j];\n        }\n\
    \        if (sum > 0) {\n            nums2.push_back(nums[i]);\n        }\n  \
    \  }\n    return nums2;", "    std::vector<long> numsCopy = nums;\n    std::vector<long>\
    \ numsSorted;\n    long sum = 0;\n    for (long i : numsCopy) {\n        sum +=\
    \ i;\n        numsSorted.push_back(i);\n    }\n    std::sort(numsSorted.begin(),\
    \ numsSorted.end(), [&sum](long a, long b) {\n        return sum - a - b < 0;\n\
    \    });\n    return numsSorted;", "    // Write your code here\n    long long\
    \ sum = 0;\n    long long max = 0;\n    long long min = 0;\n    for (long long\
    \ i : nums) {\n        sum += i;\n        if (sum > max) {\n            max =\
    \ sum;\n        }\n        if (sum < min) {\n            min = sum;\n        }\n\
    \    }\n    std::vector<long> ans;\n    for (long long i : nums) {\n        if\
    \ (sum == i) {\n            ans.push_back(i);\n        }\n    }\n    ans.push_back(max);\n\
    \    ans.push_back(min);\n    return ans;", "    // Write your code here\n   \
    \ std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n   \
    \     sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a) > std::abs(b);\n    });\n    return\
    \ nums_copy;", "    std::vector<long> nums2;\n    long sum = 0;\n    for (long\
    \ num : nums) {\n        sum += num;\n        nums2.push_back(sum);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long max_sum = 0;\n    for (long i : nums_copy) {\n\
    \        max_sum = std::max(max_sum, i);\n    }\n    std::vector<long> result;\n\
    \    for (long i : nums_copy) {\n        if (i == 0) {\n            result.push_back(0);\n\
    \            continue;\n        }\n        long sum = 0;\n        for (long j\
    \ : nums_copy) {\n            sum += j;\n            if (sum == i) {\n       \
    \         result.push_back(i);\n                break;\n            }\n      \
    \  }\n    }\n    return result;", "    // Write your code here\n    long sum =\
    \ 0;\n    for(long i : nums){\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for(long i : nums){\n        if(sum == i){\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums){\n        if(sum > i){\n           \
    \ result.push_back(i);\n        }\n    }\n    for(long i : nums){\n        if(sum\
    \ < i){\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    // Write your code here\n    std::vector<long> nums2;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0; j <\
    \ nums.size(); j++) {\n            if (i == j) {\n                continue;\n\
    \            }\n            sum += nums[j];\n        }\n        if (sum > 0) {\n\
    \            nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_sorted = nums;\n    std::sort(nums_sorted.begin(),\
    \ nums_sorted.end(), [](long a, long b){\n        return a + b < 0;\n    });\n\
    \    return nums_sorted;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long num : nums_copy) {\n   \
    \     sum += num;\n    }\n    long max_sum = 0;\n    for (long num : nums_copy)\
    \ {\n        max_sum = std::max(max_sum, sum);\n        sum -= num;\n    }\n \
    \   std::vector<long> result;\n    for (long num : nums_copy) {\n        if (sum\
    \ == max_sum) {\n            result.push_back(num);\n        }\n    }\n    return\
    \ result;", "    // Write your code here\n    std::vector<long> nums2;\n    long\
    \ sum = 0;\n    for (auto &num : nums) {\n        sum += num;\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here.\n    std::vector<long> nums2;\n    for(long i=0;i<nums.size();i++){\n\
    \        long sum=0;\n        for(long j=i;j<nums.size();j++){\n            sum+=nums[j];\n\
    \        }\n        if(sum==0){\n            nums2.push_back(nums[i]);\n     \
    \   }\n    }\n    return nums2;", "    // Write your code here.\n    long sum\
    \ = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    std::vector<long>\
    \ nums_sorted = nums;\n    std::sort(nums_sorted.begin(), nums_sorted.end(), [sum](int\
    \ a, int b) -> bool {\n        return a + b == sum;\n    });\n    return nums_sorted;",
  "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<0;});\n    return nums_copy;", "    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n \
    \       result.push_back(i);\n    }\n    std::sort(result.begin(), result.end(),\
    \ [&sum](int a, int b) {\n        return sum - a + b < sum - b + a;\n    });\n\
    \    return result;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", "    //\
    \ Write your code here\n    long sum = 0;\n    std::vector<long> result;\n   \
    \ for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n   \
    \ }\n    std::sort(result.begin(), result.end(), [&sum](long a, long b){return\
    \ sum-a < sum-b;});\n    return result;", "    // Write your code here\n    long\
    \ sum = 0;\n    for(long i : nums){\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for(long i : nums){\n        if(sum == i){\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums2;\n    for\
    \ (auto &num : nums) {\n        long sum = 0;\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    for (auto i : nums)\
    \ {\n        long sum = 0;\n        while (i != 0) {\n            sum += i % 10;\n\
    \            i /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long num : nums) {\n        long sum = 0;\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(), nums2.end());\n\
    \    return nums2;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;"]
stop_tokens:
- "\n}"

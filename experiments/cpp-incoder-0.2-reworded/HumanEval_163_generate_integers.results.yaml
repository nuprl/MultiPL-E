language: cpp
name: HumanEval_163_generate_integers
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    long temp = a;\n    while (temp < b) {\n        result.push_back(temp);\n\
    \        temp += 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppdtrjeah.cpp: In function 'int main()':\n/tmp/tmppdtrjeah.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppdtrjeah.cpp:2:\n/tmp/tmppdtrjeah.cpp:23:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmppdtrjeah.cpp:23:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmppdtrjeah.cpp:23:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmppdtrjeah.cpp:23:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmppdtrjeah.cpp:23:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmppdtrjeah.cpp:23:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmppdtrjeah.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    if (a > b) {\n        std::swap(a, b);\n    }\n    for (long i = a; i <=\
    \ b; i++) {\n        if (i % 2 == 0) {\n            result.push_back(i);\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6w_9d1lx.cpp: In function 'int main()':\n/tmp/tmp6w_9d1lx.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6w_9d1lx.cpp:2:\n/tmp/tmp6w_9d1lx.cpp:26:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmp6w_9d1lx.cpp:26:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmp6w_9d1lx.cpp:26:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmp6w_9d1lx.cpp:26:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp6w_9d1lx.cpp:26:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp6w_9d1lx.cpp:26:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp6w_9d1lx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp;\n  long temp2;\n  long temp3;\n  long temp4;\n  long temp5;\n  long\
    \ temp6;\n  long temp7;\n  long temp8;\n  long temp9;\n  long temp10;\n  long\
    \ temp11;\n  long temp12;\n  long temp13;\n  long temp14;\n  long temp15;\n  long\
    \ temp16;\n  long temp17;\n  long temp18;\n  long temp19;\n  long temp20;\n  long\
    \ temp21;\n  long temp22;\n  long temp23;\n  long temp24;\n  long temp25;\n  long\
    \ temp26;\n  long temp27;\n  long temp28;\n  long temp29;\n  long temp30;\n  long\
    \ temp31;\n  long temp32;\n  long temp33;\n  long temp34;\n  long temp35;\n  long\
    \ temp36;\n  long temp37;\n  long temp38;\n  long temp39;\n  long temp40;\n  long\
    \ temp41;\n  long temp42;\n  long temp43;\n  long temp44;\n  long temp45;\n  long\
    \ temp46;\n  long temp47;\n  long temp48;\n  long temp49;\n  long temp50;\n  long\
    \ temp51;\n  long temp52;\n  long temp53;\n  long temp54;\n  long temp55;\n  long\
    \ temp56;\n  long temp57;\n  long temp58;\n  long temp59;\n  long temp60;\n  long\
    \ temp61;\n  long temp62;\n  long temp63;\n  long temp64;\n  long temp65;\n  long\
    \ temp66;\n  long temp67;\n  long temp68;\n  long temp69;\n  long temp70;\n  long\
    \ temp71;\n  long temp72;\n  long temp73;\n  long temp74;\n  long temp75;\n  long\
    \ temp76;\n  long temp77;\n  long temp78;\n  long temp79;\n  long temp80;\n  long\
    \ temp81;\n  long temp82;\n  long temp83;\n  long temp84;\n  long temp85;\n  long\
    \ temp86;\n  long temp87;\n  long temp88;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyif4kf3.cpp: In function 'int main()':\n/tmp/tmpmyif4kf3.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyif4kf3.cpp:2:\n/tmp/tmpmyif4kf3.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpmyif4kf3.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpmyif4kf3.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpmyif4kf3.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmyif4kf3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp;\n  long temp2;\n  long temp3;\n  long temp4;\n  long temp5;\n  long\
    \ temp6;\n  long temp7;\n  long temp8;\n  long temp9;\n  long temp10;\n  long\
    \ temp11;\n  long temp12;\n  long temp13;\n  long temp14;\n  long temp15;\n  long\
    \ temp16;\n  long temp17;\n  long temp18;\n  long temp19;\n  long temp20;\n  long\
    \ temp21;\n  long temp22;\n  long temp23;\n  long temp24;\n  long temp25;\n  long\
    \ temp26;\n  long temp27;\n  long temp28;\n  long temp29;\n  long temp30;\n  long\
    \ temp31;\n  long temp32;\n  long temp33;\n  long temp34;\n  long temp35;\n  long\
    \ temp36;\n  long temp37;\n  long temp38;\n  long temp39;\n  long temp40;\n  long\
    \ temp41;\n  long temp42;\n  long temp43;\n  long temp44;\n  long temp45;\n  long\
    \ temp46;\n  long temp47;\n  long temp48;\n  long temp49;\n  long temp50;\n  long\
    \ temp51;\n  long temp52;\n  long temp53;\n  long temp54;\n  long temp55;\n  long\
    \ temp56;\n  long temp57;\n  long temp58;\n  long temp59;\n  long temp60;\n  long\
    \ temp61;\n  long temp62;\n  long temp63;\n  long temp64;\n  long temp65;\n  long\
    \ temp66;\n  long temp67;\n  long temp68;\n  long temp69;\n  long temp70;\n  long\
    \ temp71;\n  long temp72;\n  long temp73;\n  long temp74;\n  long temp75;\n  long\
    \ temp76;\n  long temp77;\n  long temp78;\n  long temp79;\n  long temp80;\n  long\
    \ temp81;\n  long temp82;\n  long temp83;\n  long temp84;\n  long temp85;\n  long\
    \ temp86;\n  long temp87;\n  long temp88;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyif4kf3.cpp: In function 'int main()':\n/tmp/tmpmyif4kf3.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyif4kf3.cpp:2:\n/tmp/tmpmyif4kf3.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpmyif4kf3.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpmyif4kf3.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpmyif4kf3.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmyif4kf3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp;\n  long temp2;\n  long temp3;\n  long temp4;\n  long temp5;\n  long\
    \ temp6;\n  long temp7;\n  long temp8;\n  long temp9;\n  long temp10;\n  long\
    \ temp11;\n  long temp12;\n  long temp13;\n  long temp14;\n  long temp15;\n  long\
    \ temp16;\n  long temp17;\n  long temp18;\n  long temp19;\n  long temp20;\n  long\
    \ temp21;\n  long temp22;\n  long temp23;\n  long temp24;\n  long temp25;\n  long\
    \ temp26;\n  long temp27;\n  long temp28;\n  long temp29;\n  long temp30;\n  long\
    \ temp31;\n  long temp32;\n  long temp33;\n  long temp34;\n  long temp35;\n  long\
    \ temp36;\n  long temp37;\n  long temp38;\n  long temp39;\n  long temp40;\n  long\
    \ temp41;\n  long temp42;\n  long temp43;\n  long temp44;\n  long temp45;\n  long\
    \ temp46;\n  long temp47;\n  long temp48;\n  long temp49;\n  long temp50;\n  long\
    \ temp51;\n  long temp52;\n  long temp53;\n  long temp54;\n  long temp55;\n  long\
    \ temp56;\n  long temp57;\n  long temp58;\n  long temp59;\n  long temp60;\n  long\
    \ temp61;\n  long temp62;\n  long temp63;\n  long temp64;\n  long temp65;\n  long\
    \ temp66;\n  long temp67;\n  long temp68;\n  long temp69;\n  long temp70;\n  long\
    \ temp71;\n  long temp72;\n  long temp73;\n  long temp74;\n  long temp75;\n  long\
    \ temp76;\n  long temp77;\n  long temp78;\n  long temp79;\n  long temp80;\n  long\
    \ temp81;\n  long temp82;\n  long temp83;\n  long temp84;\n  long temp85;\n  long\
    \ temp86;\n  long temp87;\n  long temp88;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyif4kf3.cpp: In function 'int main()':\n/tmp/tmpmyif4kf3.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyif4kf3.cpp:2:\n/tmp/tmpmyif4kf3.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpmyif4kf3.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpmyif4kf3.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpmyif4kf3.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmyif4kf3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    long temp;\n    long temp2;\n    long temp3;\n    long temp4;\n    long temp5;\n\
    \    long temp6;\n    long temp7;\n    long temp8;\n    long temp9;\n    long\
    \ temp10;\n    long temp11;\n    long temp12;\n    long temp13;\n    long temp14;\n\
    \    long temp15;\n    long temp16;\n    long temp17;\n    long temp18;\n    long\
    \ temp19;\n    long temp20;\n    long temp21;\n    long temp22;\n    long temp23;\n\
    \    long temp24;\n    long temp25;\n    long temp26;\n    long temp27;\n    long\
    \ temp28;\n    long temp29;\n    long temp30;\n    long temp31;\n    long temp32;\n\
    \    long temp33;\n    long temp34;\n    long temp35;\n    long temp36;\n    long\
    \ temp37;\n    long temp38;\n    long temp39;\n    long temp40;\n    long temp41;\n\
    \    long temp42;\n    long temp43;\n    long temp44;\n    long temp45;\n    long\
    \ temp46;\n    long temp47;\n    long temp48;\n    long temp49;\n    long temp50;\n\
    \    long temp51;\n    long temp52;\n    long temp53;\n    long temp54;\n    long\
    \ temp55;\n    long temp56;\n    long temp57;\n    long temp58;\n    long temp59;\n\
    \    long temp60;\n    long temp61;\n    long temp62;\n    long temp63;\n    long\
    \ temp64;\n    long temp65;\n    long temp66;\n    long temp67;\n    long temp68;\n\
    \    long temp69;\n    long temp70;\n    long temp71;\n    long temp72;\n    long\
    \ temp73;\n    long temp74;\n    long temp75;\n    long temp76;\n    long temp77;\n\
    \    long temp78;\n    long temp79;\n    long temp80;\n    long temp81;\n    long\
    \ temp82;\n    long temp83;\n    long temp84;\n    long temp85;\n    long temp86;\n\
    \    long temp87;\n    long temp88\n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpq8w01qsd.cpp: In function 'std::vector<long int> generate_integers(long\
    \ int, long int)':\n/tmp/tmpq8w01qsd.cpp:102:1: error: expected initializer before\
    \ '}' token\n }\n ^\n/tmp/tmpq8w01qsd.cpp: In function 'int main()':\n/tmp/tmpq8w01qsd.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpq8w01qsd.cpp:2:\n/tmp/tmpq8w01qsd.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpq8w01qsd.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpq8w01qsd.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpq8w01qsd.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpq8w01qsd.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpq8w01qsd.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpq8w01qsd.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _In"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp;\n  long temp2;\n  long temp3;\n  long temp4;\n  long temp5;\n  long\
    \ temp6;\n  long temp7;\n  long temp8;\n  long temp9;\n  long temp10;\n  long\
    \ temp11;\n  long temp12;\n  long temp13;\n  long temp14;\n  long temp15;\n  long\
    \ temp16;\n  long temp17;\n  long temp18;\n  long temp19;\n  long temp20;\n  long\
    \ temp21;\n  long temp22;\n  long temp23;\n  long temp24;\n  long temp25;\n  long\
    \ temp26;\n  long temp27;\n  long temp28;\n  long temp29;\n  long temp30;\n  long\
    \ temp31;\n  long temp32;\n  long temp33;\n  long temp34;\n  long temp35;\n  long\
    \ temp36;\n  long temp37;\n  long temp38;\n  long temp39;\n  long temp40;\n  long\
    \ temp41;\n  long temp42;\n  long temp43;\n  long temp44;\n  long temp45;\n  long\
    \ temp46;\n  long temp47;\n  long temp48;\n  long temp49;\n  long temp50;\n  long\
    \ temp51;\n  long temp52;\n  long temp53;\n  long temp54;\n  long temp55;\n  long\
    \ temp56;\n  long temp57;\n  long temp58;\n  long temp59;\n  long temp60;\n  long\
    \ temp61;\n  long temp62;\n  long temp63;\n  long temp64;\n  long temp65;\n  long\
    \ temp66;\n  long temp67;\n  long temp68;\n  long temp69;\n  long temp70;\n  long\
    \ temp71;\n  long temp72;\n  long temp73;\n  long temp74;\n  long temp75;\n  long\
    \ temp76;\n  long temp77;\n  long temp78;\n  long temp79;\n  long temp80;\n  long\
    \ temp81;\n  long temp82;\n  long temp83;\n  long temp84;\n  long temp85;\n  long\
    \ temp86;\n  long temp87;\n  long temp88;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyif4kf3.cpp: In function 'int main()':\n/tmp/tmpmyif4kf3.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyif4kf3.cpp:2:\n/tmp/tmpmyif4kf3.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpmyif4kf3.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpmyif4kf3.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpmyif4kf3.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmyif4kf3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp = a;\n  while (temp < b) {\n    result.push_back(temp);\n    temp\
    \ += 2;\n  }\n  return result;\n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3w072_qs.cpp: In function 'int main()':\n/tmp/tmp3w072_qs.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3w072_qs.cpp:2:\n/tmp/tmp3w072_qs.cpp:23:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmp3w072_qs.cpp:23:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmp3w072_qs.cpp:23:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmp3w072_qs.cpp:23:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3w072_qs.cpp:23:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3w072_qs.cpp:23:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp3w072_qs.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    long temp = a;\n    long temp2 = b;\n    while (temp != 0) {\n        long\
    \ remainder = temp % 10;\n        result.push_back(remainder);\n        temp /=\
    \ 10;\n    }\n    while (temp2 != 0) {\n        long remainder = temp2 % 10;\n\
    \        result.push_back(remainder);\n        temp2 /= 10;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxys4xzhf.cpp: In function 'int main()':\n/tmp/tmpxys4xzhf.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxys4xzhf.cpp:2:\n/tmp/tmpxys4xzhf.cpp:31:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpxys4xzhf.cpp:31:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpxys4xzhf.cpp:31:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpxys4xzhf.cpp:31:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpxys4xzhf.cpp:31:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpxys4xzhf.cpp:31:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpxys4xzhf.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    if (a > b) {\n        std::swap(a, b);\n    }\n    long mid = (a + b) / 2;\n\
    \    long mid2 = mid / 2;\n    long mid3 = mid2 / 2;\n    long mid4 = mid3 / 2;\n\
    \    long mid5 = mid4 / 2;\n    long mid6 = mid5 / 2;\n    long mid7 = mid6 /\
    \ 2;\n    long mid8 = mid7 / 2;\n    long mid9 = mid8 / 2;\n    long mid10 = mid9\
    \ / 2;\n    long mid11 = mid10 / 2;\n    long mid12 = mid11 / 2;\n    long mid13\
    \ = mid12 / 2;\n    long mid14 = mid13 / 2;\n    long mid15 = mid14 / 2;\n   \
    \ long mid16 = mid15 / 2;\n    long mid17 = mid16 / 2;\n    long mid18 = mid17\
    \ / 2;\n    long mid19 = mid18 / 2;\n    long mid20 = mid19 / 2;\n    long mid21\
    \ = mid20 / 2;\n    long mid22 = mid21 / 2;\n    long mid23 = mid22 / 2;\n   \
    \ long mid24 = mid23 / 2;\n    long mid25 = mid24 / 2;\n    long mid26 = mid25\
    \ / 2;\n    long mid27 = mid26 / 2;\n    long mid28 = mid27 / 2;\n    long mid29\
    \ = mid28 / 2;\n    long mid30 = mid29 / 2;\n    long mid31 = mid30 / 2;\n   \
    \ long mid32 = mid31 / 2;\n    long mid33 = mid32 / 2;\n    long mid34 = mid33\
    \ / 2;\n    long mid35 = mid34 / 2;\n    long mid36 = mid35 / 2;\n    long mid37\
    \ = mid36 / 2;\n    long mid38 = mid37 / 2;\n    long mid39 = mid38 / 2;\n   \
    \ long mid40 = mid39 / 2;\n    long mid41 = mid40 / 2;\n    long mid42 = mid41\
    \ / 2;\n    long mid43 = mid42 / 2;\n    long mid44 = mid43 / 2;\n    long mid45\
    \ = mid44 / 2;\n    long mid46 = mid45 / 2;\n    long mid47 = mid46 / 2;\n   \
    \ long mid48 = mid47 / 2;\n    long mid49 = mid48 / 2;\n    long mid50 = mid49\
    \ / 2;\n    long mid51 = \n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpncpvpajh.cpp: In function 'std::vector<long int> generate_integers(long\
    \ int, long int)':\n/tmp/tmpncpvpajh.cpp:68:1: error: expected primary-expression\
    \ before '}' token\n }\n ^\n/tmp/tmpncpvpajh.cpp:68:1: error: expected ',' or\
    \ ';' before '}' token\n/tmp/tmpncpvpajh.cpp: In function 'int main()':\n/tmp/tmpncpvpajh.cpp:70:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpncpvpajh.cpp:2:\n/tmp/tmpncpvpajh.cpp:71:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpncpvpajh.cpp:71:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpncpvpajh.cpp:71:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpncpvpajh.cpp:71:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpncpvpajh.cpp:71:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpncpvpajh.cpp:71:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpncpvpajh.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<clas"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    if (a > b) {\n        std::swap(a, b);\n    }\n    long mid = (a + b) / 2;\n\
    \    long mid2 = mid / 2;\n    long mid3 = mid2 / 2;\n    long mid4 = mid3 / 2;\n\
    \    long mid5 = mid4 / 2;\n    long mid6 = mid5 / 2;\n    long mid7 = mid6 /\
    \ 2;\n    long mid8 = mid7 / 2;\n    long mid9 = mid8 / 2;\n    long mid10 = mid9\
    \ / 2;\n    long mid11 = mid10 / 2;\n    long mid12 = mid11 / 2;\n    long mid13\
    \ = mid12 / 2;\n    long mid14 = mid13 / 2;\n    long mid15 = mid14 / 2;\n   \
    \ long mid16 = mid15 / 2;\n    long mid17 = mid16 / 2;\n    long mid18 = mid17\
    \ / 2;\n    long mid19 = mid18 / 2;\n    long mid20 = mid19 / 2;\n    long mid21\
    \ = mid20 / 2;\n    long mid22 = mid21 / 2;\n    long mid23 = mid22 / 2;\n   \
    \ long mid24 = mid23 / 2;\n    long mid25 = mid24 / 2;\n    long mid26 = mid25\
    \ / 2;\n    long mid27 = mid26 / 2;\n    long mid28 = mid27 / 2;\n    long mid29\
    \ = mid28 / 2;\n    long mid30 = mid29 / 2;\n    long mid31 = mid30 / 2;\n   \
    \ long mid32 = mid31 / 2;\n    long mid33 = mid32 / 2;\n    long mid34 = mid33\
    \ / 2;\n    long mid35 = mid34 / 2;\n    long mid36 = mid35 / 2;\n    long mid37\
    \ = mid36 / 2;\n    long mid38 = mid37 / 2;\n    long mid39 = mid38 / 2;\n   \
    \ long mid40 = mid39 / 2;\n    long mid41 = mid40 / 2;\n    long mid42 = mid41\
    \ / 2;\n    long mid43 = mid42 / 2;\n    long mid44 = mid43 / 2;\n    long mid45\
    \ = mid44 / 2;\n    long mid46 = mid45 / 2;\n    long mid47 = mid46 / 2;\n   \
    \ long mid48 = mid47 / 2;\n    long mid49 = mid48 / 2;\n    long mid50 = mid49\
    \ / 2;\n    long mid51 = \n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpncpvpajh.cpp: In function 'std::vector<long int> generate_integers(long\
    \ int, long int)':\n/tmp/tmpncpvpajh.cpp:68:1: error: expected primary-expression\
    \ before '}' token\n }\n ^\n/tmp/tmpncpvpajh.cpp:68:1: error: expected ',' or\
    \ ';' before '}' token\n/tmp/tmpncpvpajh.cpp: In function 'int main()':\n/tmp/tmpncpvpajh.cpp:70:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpncpvpajh.cpp:2:\n/tmp/tmpncpvpajh.cpp:71:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpncpvpajh.cpp:71:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpncpvpajh.cpp:71:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpncpvpajh.cpp:71:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpncpvpajh.cpp:71:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpncpvpajh.cpp:71:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpncpvpajh.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<clas"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long c = a;\n  long d = b;\n  long temp;\n  while (c <= d) {\n    temp = c;\n\
    \    c = c + 1;\n    if (temp % 2 == 0) {\n      result.push_back(temp);\n   \
    \ }\n  }\n  return result;\n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt0e_h6yj.cpp: In function 'int main()':\n/tmp/tmpt0e_h6yj.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt0e_h6yj.cpp:2:\n/tmp/tmpt0e_h6yj.cpp:28:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpt0e_h6yj.cpp:28:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpt0e_h6yj.cpp:28:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpt0e_h6yj.cpp:28:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpt0e_h6yj.cpp:28:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpt0e_h6yj.cpp:28:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpt0e_h6yj.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  if (a < b) {\n    long mid = a + (b - a) / 2;\n    result.push_back(mid);\n\
    \    generate_integers(mid, b);\n  } else {\n    long mid = a + (b - a) / 2;\n\
    \    result.push_back(mid);\n    generate_integers(a, mid);\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = generate_integers;\n    assert(candidate((2),\
    \ (10)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((10),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((132),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((17),\
    \ (89)) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvtdg1tmv.cpp: In function 'int main()':\n/tmp/tmpvtdg1tmv.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvtdg1tmv.cpp:2:\n/tmp/tmpvtdg1tmv.cpp:27:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpvtdg1tmv.cpp:27:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpvtdg1tmv.cpp:27:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpvtdg1tmv.cpp:27:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpvtdg1tmv.cpp:27:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpvtdg1tmv.cpp:27:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpvtdg1tmv.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    long temp;\n    long temp2;\n    long temp3;\n    long temp4;\n    long temp5;\n\
    \    long temp6;\n    long temp7;\n    long temp8;\n    long temp9;\n    long\
    \ temp10;\n    long temp11;\n    long temp12;\n    long temp13;\n    long temp14;\n\
    \    long temp15;\n    long temp16;\n    long temp17;\n    long temp18;\n    long\
    \ temp19;\n    long temp20;\n    long temp21;\n    long temp22;\n    long temp23;\n\
    \    long temp24;\n    long temp25;\n    long temp26;\n    long temp27;\n    long\
    \ temp28;\n    long temp29;\n    long temp30;\n    long temp31;\n    long temp32;\n\
    \    long temp33;\n    long temp34;\n    long temp35;\n    long temp36;\n    long\
    \ temp37;\n    long temp38;\n    long temp39;\n    long temp40;\n    long temp41;\n\
    \    long temp42;\n    long temp43;\n    long temp44;\n    long temp45;\n    long\
    \ temp46;\n    long temp47;\n    long temp48;\n    long temp49;\n    long temp50;\n\
    \    long temp51;\n    long temp52;\n    long temp53;\n    long temp54;\n    long\
    \ temp55;\n    long temp56;\n    long temp57;\n    long temp58;\n    long temp59;\n\
    \    long temp60;\n    long temp61;\n    long temp62;\n    long temp63;\n    long\
    \ temp64;\n    long temp65;\n    long temp66;\n    long temp67;\n    long temp68;\n\
    \    long temp69;\n    long temp70;\n    long temp71;\n    long temp72;\n    long\
    \ temp73;\n    long temp74;\n    long temp75;\n    long temp76;\n    long temp77;\n\
    \    long temp78;\n    long temp79;\n    long temp80;\n    long temp81;\n    long\
    \ temp82;\n    long temp83;\n    long temp84;\n    long temp85;\n    long temp86;\n\
    \    long temp87;\n    long temp88\n}\nint main() {\n    auto candidate = generate_integers;\n\
    \    assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpq8w01qsd.cpp: In function 'std::vector<long int> generate_integers(long\
    \ int, long int)':\n/tmp/tmpq8w01qsd.cpp:102:1: error: expected initializer before\
    \ '}' token\n }\n ^\n/tmp/tmpq8w01qsd.cpp: In function 'int main()':\n/tmp/tmpq8w01qsd.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpq8w01qsd.cpp:2:\n/tmp/tmpq8w01qsd.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpq8w01qsd.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpq8w01qsd.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpq8w01qsd.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpq8w01qsd.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpq8w01qsd.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpq8w01qsd.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _In"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    long temp = a;\n    long temp2 = b;\n    while (temp2 > 0) {\n        result.push_back(temp\
    \ % 10);\n        temp /= 10;\n        temp2 /= 10;\n    }\n    if (temp > 0)\
    \ {\n        result.push_back(temp % 10);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = generate_integers;\n    assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((10),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((132),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((17),\
    \ (89)) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjt1bvfxr.cpp: In function 'int main()':\n/tmp/tmpjt1bvfxr.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjt1bvfxr.cpp:2:\n/tmp/tmpjt1bvfxr.cpp:28:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpjt1bvfxr.cpp:28:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpjt1bvfxr.cpp:28:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpjt1bvfxr.cpp:28:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpjt1bvfxr.cpp:28:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpjt1bvfxr.cpp:28:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpjt1bvfxr.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n    std::vector<long> result;\n\
    \    long c = a;\n    long d = b;\n    long temp;\n    while (c < d) {\n     \
    \   temp = a;\n        a = b;\n        b = temp;\n        long temp2 = c;\n  \
    \      c = d;\n        d = temp2;\n        result.push_back(c);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = generate_integers;\n    assert(candidate((2),\
    \ (10)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((10),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((132),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((17),\
    \ (89)) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8bg8hyjg.cpp: In function 'int main()':\n/tmp/tmp8bg8hyjg.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8bg8hyjg.cpp:2:\n/tmp/tmp8bg8hyjg.cpp:30:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmp8bg8hyjg.cpp:30:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmp8bg8hyjg.cpp:30:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmp8bg8hyjg.cpp:30:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8bg8hyjg.cpp:30:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp8bg8hyjg.cpp:30:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp8bg8hyjg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp;\n  long temp2;\n  long temp3;\n  long temp4;\n  long temp5;\n  long\
    \ temp6;\n  long temp7;\n  long temp8;\n  long temp9;\n  long temp10;\n  long\
    \ temp11;\n  long temp12;\n  long temp13;\n  long temp14;\n  long temp15;\n  long\
    \ temp16;\n  long temp17;\n  long temp18;\n  long temp19;\n  long temp20;\n  long\
    \ temp21;\n  long temp22;\n  long temp23;\n  long temp24;\n  long temp25;\n  long\
    \ temp26;\n  long temp27;\n  long temp28;\n  long temp29;\n  long temp30;\n  long\
    \ temp31;\n  long temp32;\n  long temp33;\n  long temp34;\n  long temp35;\n  long\
    \ temp36;\n  long temp37;\n  long temp38;\n  long temp39;\n  long temp40;\n  long\
    \ temp41;\n  long temp42;\n  long temp43;\n  long temp44;\n  long temp45;\n  long\
    \ temp46;\n  long temp47;\n  long temp48;\n  long temp49;\n  long temp50;\n  long\
    \ temp51;\n  long temp52;\n  long temp53;\n  long temp54;\n  long temp55;\n  long\
    \ temp56;\n  long temp57;\n  long temp58;\n  long temp59;\n  long temp60;\n  long\
    \ temp61;\n  long temp62;\n  long temp63;\n  long temp64;\n  long temp65;\n  long\
    \ temp66;\n  long temp67;\n  long temp68;\n  long temp69;\n  long temp70;\n  long\
    \ temp71;\n  long temp72;\n  long temp73;\n  long temp74;\n  long temp75;\n  long\
    \ temp76;\n  long temp77;\n  long temp78;\n  long temp79;\n  long temp80;\n  long\
    \ temp81;\n  long temp82;\n  long temp83;\n  long temp84;\n  long temp85;\n  long\
    \ temp86;\n  long temp87;\n  long temp88;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyif4kf3.cpp: In function 'int main()':\n/tmp/tmpmyif4kf3.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyif4kf3.cpp:2:\n/tmp/tmpmyif4kf3.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpmyif4kf3.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpmyif4kf3.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpmyif4kf3.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmyif4kf3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp;\n  long temp2;\n  long temp3;\n  long temp4;\n  long temp5;\n  long\
    \ temp6;\n  long temp7;\n  long temp8;\n  long temp9;\n  long temp10;\n  long\
    \ temp11;\n  long temp12;\n  long temp13;\n  long temp14;\n  long temp15;\n  long\
    \ temp16;\n  long temp17;\n  long temp18;\n  long temp19;\n  long temp20;\n  long\
    \ temp21;\n  long temp22;\n  long temp23;\n  long temp24;\n  long temp25;\n  long\
    \ temp26;\n  long temp27;\n  long temp28;\n  long temp29;\n  long temp30;\n  long\
    \ temp31;\n  long temp32;\n  long temp33;\n  long temp34;\n  long temp35;\n  long\
    \ temp36;\n  long temp37;\n  long temp38;\n  long temp39;\n  long temp40;\n  long\
    \ temp41;\n  long temp42;\n  long temp43;\n  long temp44;\n  long temp45;\n  long\
    \ temp46;\n  long temp47;\n  long temp48;\n  long temp49;\n  long temp50;\n  long\
    \ temp51;\n  long temp52;\n  long temp53;\n  long temp54;\n  long temp55;\n  long\
    \ temp56;\n  long temp57;\n  long temp58;\n  long temp59;\n  long temp60;\n  long\
    \ temp61;\n  long temp62;\n  long temp63;\n  long temp64;\n  long temp65;\n  long\
    \ temp66;\n  long temp67;\n  long temp68;\n  long temp69;\n  long temp70;\n  long\
    \ temp71;\n  long temp72;\n  long temp73;\n  long temp74;\n  long temp75;\n  long\
    \ temp76;\n  long temp77;\n  long temp78;\n  long temp79;\n  long temp80;\n  long\
    \ temp81;\n  long temp82;\n  long temp83;\n  long temp84;\n  long temp85;\n  long\
    \ temp86;\n  long temp87;\n  long temp88;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyif4kf3.cpp: In function 'int main()':\n/tmp/tmpmyif4kf3.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyif4kf3.cpp:2:\n/tmp/tmpmyif4kf3.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpmyif4kf3.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpmyif4kf3.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpmyif4kf3.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmyif4kf3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long temp;\n  long temp2;\n  long temp3;\n  long temp4;\n  long temp5;\n  long\
    \ temp6;\n  long temp7;\n  long temp8;\n  long temp9;\n  long temp10;\n  long\
    \ temp11;\n  long temp12;\n  long temp13;\n  long temp14;\n  long temp15;\n  long\
    \ temp16;\n  long temp17;\n  long temp18;\n  long temp19;\n  long temp20;\n  long\
    \ temp21;\n  long temp22;\n  long temp23;\n  long temp24;\n  long temp25;\n  long\
    \ temp26;\n  long temp27;\n  long temp28;\n  long temp29;\n  long temp30;\n  long\
    \ temp31;\n  long temp32;\n  long temp33;\n  long temp34;\n  long temp35;\n  long\
    \ temp36;\n  long temp37;\n  long temp38;\n  long temp39;\n  long temp40;\n  long\
    \ temp41;\n  long temp42;\n  long temp43;\n  long temp44;\n  long temp45;\n  long\
    \ temp46;\n  long temp47;\n  long temp48;\n  long temp49;\n  long temp50;\n  long\
    \ temp51;\n  long temp52;\n  long temp53;\n  long temp54;\n  long temp55;\n  long\
    \ temp56;\n  long temp57;\n  long temp58;\n  long temp59;\n  long temp60;\n  long\
    \ temp61;\n  long temp62;\n  long temp63;\n  long temp64;\n  long temp65;\n  long\
    \ temp66;\n  long temp67;\n  long temp68;\n  long temp69;\n  long temp70;\n  long\
    \ temp71;\n  long temp72;\n  long temp73;\n  long temp74;\n  long temp75;\n  long\
    \ temp76;\n  long temp77;\n  long temp78;\n  long temp79;\n  long temp80;\n  long\
    \ temp81;\n  long temp82;\n  long temp83;\n  long temp84;\n  long temp85;\n  long\
    \ temp86;\n  long temp87;\n  long temp88;\n}\nint main() {\n    auto candidate\
    \ = generate_integers;\n    assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((10), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((132), (2)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n    assert(candidate((17), (89)) == (std::vector<long>()));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyif4kf3.cpp: In function 'int main()':\n/tmp/tmpmyif4kf3.cpp:104:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyif4kf3.cpp:2:\n/tmp/tmpmyif4kf3.cpp:105:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmpmyif4kf3.cpp:105:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmpmyif4kf3.cpp:105:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpmyif4kf3.cpp:105:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpmyif4kf3.cpp:105:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpmyif4kf3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two positive integers\
    \ a and b, return the even digits between a\n// and b, in ascending order.\n//\
    \ For example:\n// >>> generate_integers((2), (8))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((8), (2))\n// (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8}))\n// >>> generate_integers((10), (14))\n// (std::vector<long>())\n\
    std::vector<long> generate_integers(long a, long b) {\n  std::vector<long> result;\n\
    \  long c = a;\n  long d = b;\n  while (b > 0) {\n    result.push_back(c);\n \
    \   if (c % 2 == 0) {\n      c = c + 1;\n    } else {\n      c = c - 1;\n    }\n\
    \    d = d - 1;\n    if (d < 0) {\n      d = b + 1;\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = generate_integers;\n    assert(candidate((2),\
    \ (10)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((10),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((132),\
    \ (2)) == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n    assert(candidate((17),\
    \ (89)) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphsveoxib.cpp: In function 'int main()':\n/tmp/tmphsveoxib.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = generate_integers;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphsveoxib.cpp:2:\n/tmp/tmphsveoxib.cpp:32:31: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2), (10))\
    \ == (std::vector<long>({(long)2, (long)4, (long)6, (long)8})));\n           \
    \                    ^\n/tmp/tmphsveoxib.cpp:32:54: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2), (10)) == (std::vector<long>({(long)2, (long)4, (long)6,\
    \ (long)8})));\n                                                      ^\n/tmp/tmphsveoxib.cpp:32:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((2), (10)) == (std::vector<long>({(long)2,\
    \ (long)4, (long)6, (long)8})));\n                                           \
    \                                                ^\n/tmp/tmphsveoxib.cpp:32:91:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmphsveoxib.cpp:32:91: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmphsveoxib.cpp:32:91: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmphsveoxib.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument"
  stdout: ''

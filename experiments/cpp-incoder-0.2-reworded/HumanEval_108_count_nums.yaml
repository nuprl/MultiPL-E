name: HumanEval_108_count_nums
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function count_nums\
  \ which takes a vector of integers and returns\n// the number of elements which\
  \ has a sum of digits > 0.\n// If a number is negative, then its first signed digit\
  \ will be negative:\n// e.g. -123 has signed digits -1, 2, and 3.\n// >>> count_nums((std::vector<long>()))\n\
  // (0)\n// >>> count_nums((std::vector<long>({(long)-1, (long)11, (long)-11})))\n\
  // (1)\n// >>> count_nums((std::vector<long>({(long)1, (long)1, (long)2})))\n//\
  \ (3)\nlong count_nums(std::vector<long> arr) {\n"
tests: "}\nint main() {\n    auto candidate = count_nums;\n    assert(candidate((std::vector<long>()))\
  \ == (0));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)0})))\
  \ == (0));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)2,\
  \ (long)-2, (long)3, (long)4, (long)5}))) == (6));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)6, (long)9, (long)-6, (long)0, (long)1, (long)5}))) == (5));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)100, (long)98, (long)-7, (long)1, (long)-1}))) == (4));\n    assert(candidate((std::vector<long>({(long)12,\
  \ (long)23, (long)34, (long)-45, (long)-56, (long)0}))) == (5));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)1}))) == (1));\n    assert(candidate((std::vector<long>({(long)1}))) ==\
  \ (1));\n}\n"
completions: ["  long ans = 0;\n  for (long i : arr) {\n    if (i >= 0) {\n      ans\
    \ += i;\n    } else {\n      ans += (i / 10) * 10;\n      ans -= i % 10;\n   \
    \ }\n  }\n  return ans;", "    long ans = 0;\n    for (long i : arr) {\n     \
    \   if (i >= 0) {\n            ans += (i / 10) + (i % 10);\n        } else {\n\
    \            ans += (i / 10) + (i % 10);\n            ans -= (i % 10);\n     \
    \   }\n    }\n    return ans;", "    long ans = 0;\n    for (long i : arr) {\n\
    \        if (i >= 0) {\n            ans += i;\n        } else {\n            ans\
    \ += (i / 10) * 10;\n            ans -= (i % 10) * 10;\n        }\n    }\n   \
    \ return ans;", "    long ans = 0;\n    for (long i : arr) {\n        if (i >=\
    \ 0) {\n            ans += (i % 10);\n        }\n    }\n    return ans;", "  \
    \  long ans = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        long sum\
    \ = 0;\n        for (long j = 0; j < arr[i]; j++)\n            sum += arr[j];\n\
    \        if (sum > 0)\n            ans++;\n    }\n    return ans;", "    long\
    \ ans = 0;\n    for (long i : arr) {\n        if (i >= 0) {\n            ans +=\
    \ i;\n        } else {\n            ans += (i / 10) * 10;\n            ans -=\
    \ (i % 10) * 10;\n        }\n    }\n    return ans;", "    long ans = 0;\n   \
    \ for (long i : arr) {\n        ans += count_nums(std::vector<long>({i}));\n \
    \   }\n    return ans;", "    long sum = 0;\n    for (long num : arr) {\n    \
    \    sum += num;\n    }\n    return sum;", "    long sum = 0;\n    for (long num\
    \ : arr) {\n        sum += num;\n    }\n    return sum;", "    long ans = 0;\n\
    \    for (long i : arr) {\n        if (i >= 0) {\n            ans += i;\n    \
    \    } else {\n            ans += (i / 10) * 10;\n            ans += i % 10;\n\
    \        }\n    }\n    return ans;", "    long ans = 0;\n    for (long i : arr)\
    \ {\n        if (i >= 0) {\n            ans += i;\n        }\n    }\n    return\
    \ ans;", "    long ans = 0;\n    for (long i : arr) {\n        if (i >= 0) {\n\
    \            ans += i;\n        }\n    }\n    return ans;", "    long ans = 0;\n\
    \    for (long i : arr) {\n        ans += (i >> 31) & 1;\n        ans += (i >>\
    \ 30) & 1;\n        ans += (i >> 29) & 1;\n        ans += (i >> 28) & 1;\n   \
    \     ans += (i >> 27) & 1;\n        ans += (i >> 26) & 1;\n        ans += (i\
    \ >> 25) & 1;\n        ans += (i >> 24) & 1;\n        ans += (i >> 23) & 1;\n\
    \        ans += (i >> 22) & 1;\n        ans += (i >> 21) & 1;\n        ans +=\
    \ (i >> 20) & 1;\n        ans += (i >> 19) & 1;\n        ans += (i >> 18) & 1;\n\
    \        ans += (i >> 17) & 1;\n        ans += (i >> 16) & 1;\n        ans +=\
    \ (i >> 15) & 1;\n        ans += (i >> 14) & 1;\n        ans += (i >> 13) & 1;\n\
    \        ans += (i >> 12) & 1;\n        ans += (i >> 11) & 1;\n        ans +=\
    \ (i >> 10) & 1;\n        ans += (i >> 9) & 1;\n        ans += (i >> 8) & 1;\n\
    \        ans += (i >> 7) & 1;\n        ans += (i >> 6) & 1;\n        ans += (i\
    \ >> 5) & 1;\n        ans += (i >> 4) & 1;\n        ans += (i >> 3) & 1;\n   \
    \     ans += (i >> 2) & 1;\n        ans += (i >> 1) & 1;\n        ans += (i >>\
    \ 0) & 1;\n    }\n    return ans;", "    long ans = 0;\n    for (long i : arr)\
    \ {\n        if (i >= 0) {\n            ans += 1;\n        }\n    }\n    return\
    \ ans;", "    long ans = 0;\n    for (long n : arr) {\n        ans += count_nums(std::vector<long>({n\
    \ - 1, n}));\n    }\n    return ans;", "    long ans = 0;\n    for (long i : arr)\
    \ {\n        if (i >= 0) {\n            ans += (i % 10);\n        }\n    }\n \
    \   return ans;", "  long ans = 0;\n  for (long i : arr) {\n    ans += count_digits(i);\n\
    \  }\n  return ans;", "    long ans = 0;\n    for (long i : arr) {\n        if\
    \ (i >= 0) {\n            ans += i;\n        } else {\n            ans += (i /\
    \ 10);\n            ans -= (i % 10);\n        }\n    }\n    return ans;", "  \
    \  long ans = 0;\n    for (long i : arr) {\n        ans += count_nums(std::vector<long>({i}));\n\
    \    }\n    return ans;", "    long ans = 0;\n    for (auto i : arr) {\n     \
    \   if (i >= 0) {\n            ans += i;\n        } else {\n            ans +=\
    \ (i / 10) * 10;\n            ans -= (i % 10) * 10;\n        }\n    }\n    return\
    \ ans;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_25_factorize
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ factor = 1;\n    long temp = n;\n    long count = 0;\n    while (temp != 1)\
    \ {\n        while (temp % factor == 0) {\n            factors.push_back(factor);\n\
    \            temp = temp / factor;\n            count++;\n        }\n        factor++;\n\
    \    }\n    return factors;\n}\nint main() {\n    auto candidate = factorize;\n\
    \    assert(candidate((2)) == (std::vector<long>({(long)2})));\n    assert(candidate((4))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2,\
    \ (long)2, (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3,\
    \ (long)19})));\n    assert(candidate((3249)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)19, (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps8jlzmxi.cpp: In function 'int main()':\n/tmp/tmps8jlzmxi.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmps8jlzmxi.cpp:2:\n/tmp/tmps8jlzmxi.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmps8jlzmxi.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmps8jlzmxi.cpp:29:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmps8jlzmxi.cpp:29:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmps8jlzmxi.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmps8jlzmxi.cpp:30:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmps8jlzmxi.cpp:30:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmps8jlzmxi.cpp:31:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n\n}\nint main() {\n    auto candidate = factorize;\n\
    \    assert(candidate((2)) == (std::vector<long>({(long)2})));\n    assert(candidate((4))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2,\
    \ (long)2, (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3,\
    \ (long)19})));\n    assert(candidate((3249)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)19, (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjifq7aw5.cpp: In function 'std::vector<long int> factorize(long\
    \ int)':\n/tmp/tmpjifq7aw5.cpp:38:10: error: declaration of 'long int n' shadows\
    \ a parameter\n     long n = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:40:10: error:\
    \ redeclaration of 'long int p'\n     long p = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:14:10:\
    \ error: 'long int p' previously declared here\n     long p = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:41:10: error: redeclaration of 'long int q'\n     long q\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:15:10: error: 'long int q' previously\
    \ declared here\n     long q = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:42:10: error:\
    \ redeclaration of 'long int r'\n     long r = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:16:10:\
    \ error: 'long int r' previously declared here\n     long r = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:43:10: error: redeclaration of 'long int s'\n     long s\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:17:10: error: 'long int s' previously\
    \ declared here\n     long s = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:44:10: error:\
    \ redeclaration of 'long int t'\n     long t = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:18:10:\
    \ error: 'long int t' previously declared here\n     long t = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:45:10: error: redeclaration of 'long int u'\n     long u\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:19:10: error: 'long int u' previously\
    \ declared here\n     long u = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:46:10: error:\
    \ redeclaration of 'long int v'\n     long v = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:20:10:\
    \ error: 'long int v' previously declared here\n     long v = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:47:10: error: redeclaration of 'long int w'\n     long w\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:21:10: error: 'long int w' previously\
    \ declared here\n     long w = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:48:10: error:\
    \ redeclaration of 'long int x'\n     long x = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:22:10:\
    \ error: 'long int x' previously declared here\n     long x = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:49:10: error: redeclaration of 'long int y'\n     long y\
    \ = n;\n          ^"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;\n\
    }\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2)) ==\
    \ (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
    \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
    \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
    \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpavc7yv2u.cpp: In function 'int main()':\n/tmp/tmpavc7yv2u.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpavc7yv2u.cpp:2:\n/tmp/tmpavc7yv2u.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpavc7yv2u.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpavc7yv2u.cpp:29:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmpavc7yv2u.cpp:29:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpavc7yv2u.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpavc7yv2u.cpp:30:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmpavc7yv2u.cpp:30:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpavc7yv2u.cpp:31:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n\n}\nint main() {\n    auto candidate = factorize;\n\
    \    assert(candidate((2)) == (std::vector<long>({(long)2})));\n    assert(candidate((4))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2,\
    \ (long)2, (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3,\
    \ (long)19})));\n    assert(candidate((3249)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)19, (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjifq7aw5.cpp: In function 'std::vector<long int> factorize(long\
    \ int)':\n/tmp/tmpjifq7aw5.cpp:38:10: error: declaration of 'long int n' shadows\
    \ a parameter\n     long n = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:40:10: error:\
    \ redeclaration of 'long int p'\n     long p = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:14:10:\
    \ error: 'long int p' previously declared here\n     long p = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:41:10: error: redeclaration of 'long int q'\n     long q\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:15:10: error: 'long int q' previously\
    \ declared here\n     long q = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:42:10: error:\
    \ redeclaration of 'long int r'\n     long r = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:16:10:\
    \ error: 'long int r' previously declared here\n     long r = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:43:10: error: redeclaration of 'long int s'\n     long s\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:17:10: error: 'long int s' previously\
    \ declared here\n     long s = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:44:10: error:\
    \ redeclaration of 'long int t'\n     long t = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:18:10:\
    \ error: 'long int t' previously declared here\n     long t = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:45:10: error: redeclaration of 'long int u'\n     long u\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:19:10: error: 'long int u' previously\
    \ declared here\n     long u = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:46:10: error:\
    \ redeclaration of 'long int v'\n     long v = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:20:10:\
    \ error: 'long int v' previously declared here\n     long v = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:47:10: error: redeclaration of 'long int w'\n     long w\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:21:10: error: 'long int w' previously\
    \ declared here\n     long w = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:48:10: error:\
    \ redeclaration of 'long int x'\n     long x = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:22:10:\
    \ error: 'long int x' previously declared here\n     long x = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:49:10: error: redeclaration of 'long int y'\n     long y\
    \ = n;\n          ^"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ factor = 1;\n    long count = 0;\n    long i = 2;\n    while (i <= n) {\n  \
    \      while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n            count++;\n        }\n        i++;\n    }\n    if (n != 1)\
    \ {\n        factors.push_back(n);\n        count++;\n    }\n    return factors;\n\
    }\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2)) ==\
    \ (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
    \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
    \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
    \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7tziftzw.cpp: In function 'int main()':\n/tmp/tmp7tziftzw.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7tziftzw.cpp:2:\n/tmp/tmp7tziftzw.cpp:33:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmp7tziftzw.cpp:33:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmp7tziftzw.cpp:33:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmp7tziftzw.cpp:33:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp7tziftzw.cpp:34:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmp7tziftzw.cpp:34:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmp7tziftzw.cpp:34:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp7tziftzw.cpp:35:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1)\n      \
    \  factors.push_back(n);\n    return factors;\n}\nint main() {\n    auto candidate\
    \ = factorize;\n    assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \    assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8))\
    \ == (std::vector<long>({(long)2, (long)2, (long)2})));\n    assert(candidate((57))\
    \ == (std::vector<long>({(long)3, (long)19})));\n    assert(candidate((3249))\
    \ == (std::vector<long>({(long)3, (long)3, (long)19, (long)19})));\n    assert(candidate((185193))\
    \ == (std::vector<long>({(long)3, (long)3, (long)3, (long)19, (long)19, (long)19})));\n\
    \    assert(candidate((20577)) == (std::vector<long>({(long)3, (long)19, (long)19,\
    \ (long)19})));\n    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3,\
    \ (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kq4nk2y.cpp: In function 'int main()':\n/tmp/tmp8kq4nk2y.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kq4nk2y.cpp:2:\n/tmp/tmp8kq4nk2y.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmp8kq4nk2y.cpp:28:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmp8kq4nk2y.cpp:28:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmp8kq4nk2y.cpp:28:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8kq4nk2y.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmp8kq4nk2y.cpp:29:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmp8kq4nk2y.cpp:29:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8kq4nk2y.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ factor = 1;\n    long count = 1;\n    long temp = 1;\n    long i = 2;\n    long\
    \ j = 0;\n    long k = 0;\n    long temp2 = 1;\n    long temp3 = 1;\n    long\
    \ temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n\
    \    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11\
    \ = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n   \
    \ long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18\
    \ = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n   \
    \ long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25\
    \ = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n   \
    \ long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32\
    \ = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n   \
    \ long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39\
    \ = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n   \
    \ long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46\
    \ = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n   \
    \ long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53\
    \ = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n   \
    \ long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60\
    \ = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n   \
    \ long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67\
    \ = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n   \
    \ long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74\
    \ = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n   \
    \ long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n    long temp81\n\
    }\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2)) ==\
    \ (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
    \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
    \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
    \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vzype5r.cpp: In function 'std::vector<long int> factorize(long\
    \ int)':\n/tmp/tmp1vzype5r.cpp:100:1: error: expected initializer before '}' token\n\
    \ }\n ^\n/tmp/tmp1vzype5r.cpp: In function 'int main()':\n/tmp/tmp1vzype5r.cpp:102:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1vzype5r.cpp:2:\n/tmp/tmp1vzype5r.cpp:103:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmp1vzype5r.cpp:103:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmp1vzype5r.cpp:103:58: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                                                          ^\n/tmp/tmp1vzype5r.cpp:103:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp1vzype5r.cpp:104:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmp1vzype5r.cpp:104:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n                                                             \
    \      ^\n/tmp/tmp1vzype5r.cpp:104:67: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp1vzype5r.cpp:105:48:\
    \ warning: extended initializer lists only avai"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ factor = 1;\n    long counter = 1;\n    long temp = 1;\n    while (n > 1) {\n\
    \        while (n % factor == 0) {\n            factors.push_back(factor);\n \
    \           n /= factor;\n            counter++;\n        }\n        factor *=\
    \ counter;\n        counter = 1;\n    }\n    factors.push_back(factor);\n    return\
    \ factors;\n}\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2))\
    \ == (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
    \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
    \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
    \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz3221iwi.cpp: In function 'int main()':\n/tmp/tmpz3221iwi.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz3221iwi.cpp:2:\n/tmp/tmpz3221iwi.cpp:31:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpz3221iwi.cpp:31:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpz3221iwi.cpp:31:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmpz3221iwi.cpp:31:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpz3221iwi.cpp:32:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpz3221iwi.cpp:32:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmpz3221iwi.cpp:32:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpz3221iwi.cpp:33:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    long factor = 1;\n    while (i <= n) {\n        while (n % i ==\
    \ 0) {\n            factor *= i;\n            n /= i;\n        }\n        factors.push_back(factor);\n\
    \        ++i;\n    }\n    return factors;\n}\nint main() {\n    auto candidate\
    \ = factorize;\n    assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \    assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8))\
    \ == (std::vector<long>({(long)2, (long)2, (long)2})));\n    assert(candidate((57))\
    \ == (std::vector<long>({(long)3, (long)19})));\n    assert(candidate((3249))\
    \ == (std::vector<long>({(long)3, (long)3, (long)19, (long)19})));\n    assert(candidate((185193))\
    \ == (std::vector<long>({(long)3, (long)3, (long)3, (long)19, (long)19, (long)19})));\n\
    \    assert(candidate((20577)) == (std::vector<long>({(long)3, (long)19, (long)19,\
    \ (long)19})));\n    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3,\
    \ (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8twk5ebw.cpp: In function 'int main()':\n/tmp/tmp8twk5ebw.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8twk5ebw.cpp:2:\n/tmp/tmp8twk5ebw.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmp8twk5ebw.cpp:28:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmp8twk5ebw.cpp:28:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmp8twk5ebw.cpp:28:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8twk5ebw.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmp8twk5ebw.cpp:29:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmp8twk5ebw.cpp:29:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8twk5ebw.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1)\n      \
    \  factors.push_back(n);\n    return factors;\n}\nint main() {\n    auto candidate\
    \ = factorize;\n    assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \    assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8))\
    \ == (std::vector<long>({(long)2, (long)2, (long)2})));\n    assert(candidate((57))\
    \ == (std::vector<long>({(long)3, (long)19})));\n    assert(candidate((3249))\
    \ == (std::vector<long>({(long)3, (long)3, (long)19, (long)19})));\n    assert(candidate((185193))\
    \ == (std::vector<long>({(long)3, (long)3, (long)3, (long)19, (long)19, (long)19})));\n\
    \    assert(candidate((20577)) == (std::vector<long>({(long)3, (long)19, (long)19,\
    \ (long)19})));\n    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3,\
    \ (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kq4nk2y.cpp: In function 'int main()':\n/tmp/tmp8kq4nk2y.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kq4nk2y.cpp:2:\n/tmp/tmp8kq4nk2y.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmp8kq4nk2y.cpp:28:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmp8kq4nk2y.cpp:28:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmp8kq4nk2y.cpp:28:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8kq4nk2y.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmp8kq4nk2y.cpp:29:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmp8kq4nk2y.cpp:29:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8kq4nk2y.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n\n}\nint main() {\n    auto candidate = factorize;\n\
    \    assert(candidate((2)) == (std::vector<long>({(long)2})));\n    assert(candidate((4))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2,\
    \ (long)2, (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3,\
    \ (long)19})));\n    assert(candidate((3249)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)19, (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjifq7aw5.cpp: In function 'std::vector<long int> factorize(long\
    \ int)':\n/tmp/tmpjifq7aw5.cpp:38:10: error: declaration of 'long int n' shadows\
    \ a parameter\n     long n = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:40:10: error:\
    \ redeclaration of 'long int p'\n     long p = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:14:10:\
    \ error: 'long int p' previously declared here\n     long p = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:41:10: error: redeclaration of 'long int q'\n     long q\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:15:10: error: 'long int q' previously\
    \ declared here\n     long q = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:42:10: error:\
    \ redeclaration of 'long int r'\n     long r = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:16:10:\
    \ error: 'long int r' previously declared here\n     long r = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:43:10: error: redeclaration of 'long int s'\n     long s\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:17:10: error: 'long int s' previously\
    \ declared here\n     long s = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:44:10: error:\
    \ redeclaration of 'long int t'\n     long t = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:18:10:\
    \ error: 'long int t' previously declared here\n     long t = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:45:10: error: redeclaration of 'long int u'\n     long u\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:19:10: error: 'long int u' previously\
    \ declared here\n     long u = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:46:10: error:\
    \ redeclaration of 'long int v'\n     long v = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:20:10:\
    \ error: 'long int v' previously declared here\n     long v = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:47:10: error: redeclaration of 'long int w'\n     long w\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:21:10: error: 'long int w' previously\
    \ declared here\n     long w = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:48:10: error:\
    \ redeclaration of 'long int x'\n     long x = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:22:10:\
    \ error: 'long int x' previously declared here\n     long x = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:49:10: error: redeclaration of 'long int y'\n     long y\
    \ = n;\n          ^"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    if (n != 1)\n        factors.push_back(n);\n    return factors;\n}\nint main()\
    \ {\n    auto candidate = factorize;\n    assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \    assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8))\
    \ == (std::vector<long>({(long)2, (long)2, (long)2})));\n    assert(candidate((57))\
    \ == (std::vector<long>({(long)3, (long)19})));\n    assert(candidate((3249))\
    \ == (std::vector<long>({(long)3, (long)3, (long)19, (long)19})));\n    assert(candidate((185193))\
    \ == (std::vector<long>({(long)3, (long)3, (long)3, (long)19, (long)19, (long)19})));\n\
    \    assert(candidate((20577)) == (std::vector<long>({(long)3, (long)19, (long)19,\
    \ (long)19})));\n    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3,\
    \ (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpss7d8ydc.cpp: In function 'int main()':\n/tmp/tmpss7d8ydc.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpss7d8ydc.cpp:2:\n/tmp/tmpss7d8ydc.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpss7d8ydc.cpp:28:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpss7d8ydc.cpp:28:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmpss7d8ydc.cpp:28:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpss7d8ydc.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpss7d8ydc.cpp:29:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmpss7d8ydc.cpp:29:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpss7d8ydc.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;\n}\nint main() {\n    auto\
    \ candidate = factorize;\n    assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \    assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8))\
    \ == (std::vector<long>({(long)2, (long)2, (long)2})));\n    assert(candidate((57))\
    \ == (std::vector<long>({(long)3, (long)19})));\n    assert(candidate((3249))\
    \ == (std::vector<long>({(long)3, (long)3, (long)19, (long)19})));\n    assert(candidate((185193))\
    \ == (std::vector<long>({(long)3, (long)3, (long)3, (long)19, (long)19, (long)19})));\n\
    \    assert(candidate((20577)) == (std::vector<long>({(long)3, (long)19, (long)19,\
    \ (long)19})));\n    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3,\
    \ (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnh637ncl.cpp: In function 'int main()':\n/tmp/tmpnh637ncl.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnh637ncl.cpp:2:\n/tmp/tmpnh637ncl.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpnh637ncl.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpnh637ncl.cpp:29:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmpnh637ncl.cpp:29:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpnh637ncl.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpnh637ncl.cpp:30:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmpnh637ncl.cpp:30:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpnh637ncl.cpp:31:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ factor = 1;\n    long i = 2;\n    while (i <= n) {\n        while (n % i ==\
    \ 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n  \
    \      i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;\n}\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2))\
    \ == (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
    \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
    \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
    \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwu094w3c.cpp: In function 'int main()':\n/tmp/tmpwu094w3c.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwu094w3c.cpp:2:\n/tmp/tmpwu094w3c.cpp:30:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpwu094w3c.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpwu094w3c.cpp:30:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmpwu094w3c.cpp:30:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpwu094w3c.cpp:31:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpwu094w3c.cpp:31:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmpwu094w3c.cpp:31:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpwu094w3c.cpp:32:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;\n\
    }\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2)) ==\
    \ (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
    \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
    \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
    \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpavc7yv2u.cpp: In function 'int main()':\n/tmp/tmpavc7yv2u.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpavc7yv2u.cpp:2:\n/tmp/tmpavc7yv2u.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpavc7yv2u.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpavc7yv2u.cpp:29:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmpavc7yv2u.cpp:29:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpavc7yv2u.cpp:30:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpavc7yv2u.cpp:30:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmpavc7yv2u.cpp:30:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpavc7yv2u.cpp:31:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n\n}\nint main() {\n    auto candidate = factorize;\n\
    \    assert(candidate((2)) == (std::vector<long>({(long)2})));\n    assert(candidate((4))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2,\
    \ (long)2, (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3,\
    \ (long)19})));\n    assert(candidate((3249)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)19, (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjifq7aw5.cpp: In function 'std::vector<long int> factorize(long\
    \ int)':\n/tmp/tmpjifq7aw5.cpp:38:10: error: declaration of 'long int n' shadows\
    \ a parameter\n     long n = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:40:10: error:\
    \ redeclaration of 'long int p'\n     long p = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:14:10:\
    \ error: 'long int p' previously declared here\n     long p = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:41:10: error: redeclaration of 'long int q'\n     long q\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:15:10: error: 'long int q' previously\
    \ declared here\n     long q = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:42:10: error:\
    \ redeclaration of 'long int r'\n     long r = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:16:10:\
    \ error: 'long int r' previously declared here\n     long r = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:43:10: error: redeclaration of 'long int s'\n     long s\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:17:10: error: 'long int s' previously\
    \ declared here\n     long s = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:44:10: error:\
    \ redeclaration of 'long int t'\n     long t = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:18:10:\
    \ error: 'long int t' previously declared here\n     long t = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:45:10: error: redeclaration of 'long int u'\n     long u\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:19:10: error: 'long int u' previously\
    \ declared here\n     long u = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:46:10: error:\
    \ redeclaration of 'long int v'\n     long v = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:20:10:\
    \ error: 'long int v' previously declared here\n     long v = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:47:10: error: redeclaration of 'long int w'\n     long w\
    \ = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:21:10: error: 'long int w' previously\
    \ declared here\n     long w = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:48:10: error:\
    \ redeclaration of 'long int x'\n     long x = n;\n          ^\n/tmp/tmpjifq7aw5.cpp:22:10:\
    \ error: 'long int x' previously declared here\n     long x = n;\n          ^\n\
    /tmp/tmpjifq7aw5.cpp:49:10: error: redeclaration of 'long int y'\n     long y\
    \ = n;\n          ^"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    long factor = 1;\n    while (i <= n) {\n        while (n % i ==\
    \ 0) {\n            factors.push_back(factor);\n            n /= i;\n        }\n\
    \        i++;\n        factor++;\n    }\n    if (n != 1) {\n        factors.push_back(factor);\n\
    \    }\n    return factors;\n}\nint main() {\n    auto candidate = factorize;\n\
    \    assert(candidate((2)) == (std::vector<long>({(long)2})));\n    assert(candidate((4))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2,\
    \ (long)2, (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3,\
    \ (long)19})));\n    assert(candidate((3249)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)19, (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzpi0hcdx.cpp: In function 'int main()':\n/tmp/tmpzpi0hcdx.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzpi0hcdx.cpp:2:\n/tmp/tmpzpi0hcdx.cpp:31:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpzpi0hcdx.cpp:31:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpzpi0hcdx.cpp:31:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmpzpi0hcdx.cpp:31:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpzpi0hcdx.cpp:32:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpzpi0hcdx.cpp:32:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmpzpi0hcdx.cpp:32:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpzpi0hcdx.cpp:33:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ i = 2;\n    long p = n;\n    while (p != 1) {\n        while (p % i == 0) {\n\
    \            factors.push_back(i);\n            p /= i;\n        }\n        i++;\n\
    \    }\n    return factors;\n}\nint main() {\n    auto candidate = factorize;\n\
    \    assert(candidate((2)) == (std::vector<long>({(long)2})));\n    assert(candidate((4))\
    \ == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2,\
    \ (long)2, (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3,\
    \ (long)19})));\n    assert(candidate((3249)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)19, (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
    \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
    \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4l2uhx5.cpp: In function 'int main()':\n/tmp/tmph4l2uhx5.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph4l2uhx5.cpp:2:\n/tmp/tmph4l2uhx5.cpp:27:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmph4l2uhx5.cpp:27:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmph4l2uhx5.cpp:27:58: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n \
    \                                                         ^\n/tmp/tmph4l2uhx5.cpp:27:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmph4l2uhx5.cpp:28:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmph4l2uhx5.cpp:28:67: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n\
    \                                                                   ^\n/tmp/tmph4l2uhx5.cpp:28:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmph4l2uhx5.cpp:29:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((8)) == (std::vector<long>({(long)2, (long)2, (long)2})));\n\
    \                           "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ factor = 1;\n    long factorization = 1;\n    long remainder = 0;\n    long\
    \ counter = 1;\n    long temp = 1;\n    long temp2 = 1;\n    long temp3 = 1;\n\
    \    long temp4 = 1;\n    long temp5 = 1;\n    long temp6 = 1;\n    long temp7\
    \ = 1;\n    long temp8 = 1;\n    long temp9 = 1;\n    long temp10 = 1;\n    long\
    \ temp11 = 1;\n    long temp12 = 1;\n    long temp13 = 1;\n    long temp14 = 1;\n\
    \    long temp15 = 1;\n    long temp16 = 1;\n    long temp17 = 1;\n    long temp18\
    \ = 1;\n    long temp19 = 1;\n    long temp20 = 1;\n    long temp21 = 1;\n   \
    \ long temp22 = 1;\n    long temp23 = 1;\n    long temp24 = 1;\n    long temp25\
    \ = 1;\n    long temp26 = 1;\n    long temp27 = 1;\n    long temp28 = 1;\n   \
    \ long temp29 = 1;\n    long temp30 = 1;\n    long temp31 = 1;\n    long temp32\
    \ = 1;\n    long temp33 = 1;\n    long temp34 = 1;\n    long temp35 = 1;\n   \
    \ long temp36 = 1;\n    long temp37 = 1;\n    long temp38 = 1;\n    long temp39\
    \ = 1;\n    long temp40 = 1;\n    long temp41 = 1;\n    long temp42 = 1;\n   \
    \ long temp43 = 1;\n    long temp44 = 1;\n    long temp45 = 1;\n    long temp46\
    \ = 1;\n    long temp47 = 1;\n    long temp48 = 1;\n    long temp49 = 1;\n   \
    \ long temp50 = 1;\n    long temp51 = 1;\n    long temp52 = 1;\n    long temp53\
    \ = 1;\n    long temp54 = 1;\n    long temp55 = 1;\n    long temp56 = 1;\n   \
    \ long temp57 = 1;\n    long temp58 = 1;\n    long temp59 = 1;\n    long temp60\
    \ = 1;\n    long temp61 = 1;\n    long temp62 = 1;\n    long temp63 = 1;\n   \
    \ long temp64 = 1;\n    long temp65 = 1;\n    long temp66 = 1;\n    long temp67\
    \ = 1;\n    long temp68 = 1;\n    long temp69 = 1;\n    long temp70 = 1;\n   \
    \ long temp71 = 1;\n    long temp72 = 1;\n    long temp73 = 1;\n    long temp74\
    \ = 1;\n    long temp75 = 1;\n    long temp76 = 1;\n    long temp77 = 1;\n   \
    \ long temp78 = 1;\n    long temp79 = 1;\n    long temp80\n}\nint main() {\n \
    \   auto candidate = factorize;\n    assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \    assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8))\
    \ == (std::vector<long>({(long)2, (long)2, (long)2})));\n    assert(candidate((57))\
    \ == (std::vector<long>({(long)3, (long)19})));\n    assert(candidate((3249))\
    \ == (std::vector<long>({(long)3, (long)3, (long)19, (long)19})));\n    assert(candidate((185193))\
    \ == (std::vector<long>({(long)3, (long)3, (long)3, (long)19, (long)19, (long)19})));\n\
    \    assert(candidate((20577)) == (std::vector<long>({(long)3, (long)19, (long)19,\
    \ (long)19})));\n    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3,\
    \ (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjh6_ncaq.cpp: In function 'std::vector<long int> factorize(long\
    \ int)':\n/tmp/tmpjh6_ncaq.cpp:98:1: error: expected initializer before '}' token\n\
    \ }\n ^\n/tmp/tmpjh6_ncaq.cpp: In function 'int main()':\n/tmp/tmpjh6_ncaq.cpp:100:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = factorize;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjh6_ncaq.cpp:2:\n/tmp/tmpjh6_ncaq.cpp:101:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                         ^\n/tmp/tmpjh6_ncaq.cpp:101:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((2)) == (std::vector<long>({(long)2})));\n            \
    \                                    ^\n/tmp/tmpjh6_ncaq.cpp:101:58: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \                                                          ^\n/tmp/tmpjh6_ncaq.cpp:101:58:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpjh6_ncaq.cpp:102:48: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n   \
    \                                             ^\n/tmp/tmpjh6_ncaq.cpp:102:67:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((4)) == (std::vector<long>({(long)2,\
    \ (long)2})));\n                                                             \
    \      ^\n/tmp/tmpjh6_ncaq.cpp:102:67: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpjh6_ncaq.cpp:103:48:\
    \ warning: extended initializer lists only avail"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime\
    \ factors of given integer in the order from smallest to largest.\n// Each of\
    \ the factors should be vectored number of times corresponding to how many times\
    \ it appeares in factorization.\n// Input number should be equal to the product\
    \ of all factors\n// >>> factorize((8))\n// (std::vector<long>({(long)2, (long)2,\
    \ (long)2}))\n// >>> factorize((25))\n// (std::vector<long>({(long)5, (long)5}))\n\
    // >>> factorize((70))\n// (std::vector<long>({(long)2, (long)5, (long)7}))\n\
    std::vector<long> factorize(long n) {\n    std::vector<long> factors;\n    long\
    \ factor = 1;\n    long count = 0;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n\
    \    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long\
    \ t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n\
    \    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long\
    \ c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n\
    \    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long\
    \ l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long\
    \ u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n\
    \    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long\
    \ d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n\
    \    long i = n;\n    long j = n;\n    \n}\nint main() {\n    auto candidate =\
    \ factorize;\n    assert(candidate((2)) == (std::vector<long>({(long)2})));\n\
    \    assert(candidate((4)) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((8))\
    \ == (std::vector<long>({(long)2, (long)2, (long)2})));\n    assert(candidate((57))\
    \ == (std::vector<long>({(long)3, (long)19})));\n    assert(candidate((3249))\
    \ == (std::vector<long>({(long)3, (long)3, (long)19, (long)19})));\n    assert(candidate((185193))\
    \ == (std::vector<long>({(long)3, (long)3, (long)3, (long)19, (long)19, (long)19})));\n\
    \    assert(candidate((20577)) == (std::vector<long>({(long)3, (long)19, (long)19,\
    \ (long)19})));\n    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3,\
    \ (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp03mzjkt1.cpp: In function 'std::vector<long int> factorize(long\
    \ int)':\n/tmp/tmp03mzjkt1.cpp:40:10: error: declaration of 'long int n' shadows\
    \ a parameter\n     long n = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:42:10: error:\
    \ redeclaration of 'long int p'\n     long p = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:16:10:\
    \ error: 'long int p' previously declared here\n     long p = n;\n          ^\n\
    /tmp/tmp03mzjkt1.cpp:43:10: error: redeclaration of 'long int q'\n     long q\
    \ = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:17:10: error: 'long int q' previously\
    \ declared here\n     long q = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:44:10: error:\
    \ redeclaration of 'long int r'\n     long r = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:18:10:\
    \ error: 'long int r' previously declared here\n     long r = n;\n          ^\n\
    /tmp/tmp03mzjkt1.cpp:45:10: error: redeclaration of 'long int s'\n     long s\
    \ = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:19:10: error: 'long int s' previously\
    \ declared here\n     long s = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:46:10: error:\
    \ redeclaration of 'long int t'\n     long t = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:20:10:\
    \ error: 'long int t' previously declared here\n     long t = n;\n          ^\n\
    /tmp/tmp03mzjkt1.cpp:47:10: error: redeclaration of 'long int u'\n     long u\
    \ = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:21:10: error: 'long int u' previously\
    \ declared here\n     long u = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:48:10: error:\
    \ redeclaration of 'long int v'\n     long v = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:22:10:\
    \ error: 'long int v' previously declared here\n     long v = n;\n          ^\n\
    /tmp/tmp03mzjkt1.cpp:49:10: error: redeclaration of 'long int w'\n     long w\
    \ = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:23:10: error: 'long int w' previously\
    \ declared here\n     long w = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:50:10: error:\
    \ redeclaration of 'long int x'\n     long x = n;\n          ^\n/tmp/tmp03mzjkt1.cpp:24:10:\
    \ error: 'long int x' previously declared here\n     long x = n;\n          ^\n\
    /tmp/tmp03mzjkt1.cpp:51:10: error: redeclaration of 'long int y'\n     long y\
    \ = n;\n          ^"
  stdout: ''

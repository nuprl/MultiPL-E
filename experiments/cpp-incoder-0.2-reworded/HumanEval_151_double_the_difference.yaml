name: HumanEval_151_double_the_difference
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of numbers,\
  \ return the sum of squares of the numbers\n// in the vector that are odd. Ignore\
  \ numbers that are negative or not integers.\n// >>> double_the_difference((std::vector<float>({(long)1,\
  \ (long)3, (long)2, (long)0})))\n// (10)\n// >>> double_the_difference((std::vector<float>({(long)-1,\
  \ (long)-2, (long)0})))\n// (0)\n// >>> double_the_difference((std::vector<float>({(long)9,\
  \ (long)-2})))\n// (81)\n// >>> double_the_difference((std::vector<float>({(long)0})))\n\
  // (0)\n// If the input vector is empty, return 0.\nlong double_the_difference(std::vector<float>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)5.0, (float)4.0})))\
  \ == (25));\n    assert(candidate((std::vector<float>({(float)0.1, (float)0.2, (float)0.3})))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)-10.0, (float)-20.0,\
  \ (float)-30.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)-1.0,\
  \ (float)-2.0, (float)8.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)0.2,\
  \ (float)3.0, (float)5.0}))) == (34));\n    assert(candidate((std::vector<float>({(float)-9.0,\
  \ (float)-7.0, (float)-5.0, (float)-3.0, (float)-1.0, (float)1.0, (float)3.0, (float)5.0,\
  \ (float)7.0, (float)9.0}))) == (165));\n}\n"
completions: ["  long sum = 0;\n  for (float i : lst) {\n    if (i >= 0) {\n     \
    \ sum += i * i;\n    }\n  }\n  return sum;", "  long sum = 0;\n  for (float x\
    \ : lst) {\n    if (x >= 0) {\n      sum += x * x;\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    if (n <= 0)\n        return 0;\n\
    \    for (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum\
    \ += lst[i] * lst[i];\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        if (f > 0)\n            sum += (long)f*f;\n    }\n    return sum;",
  "    long sum = 0;\n    for (float f : lst) {\n        if (f > 0)\n            sum\
    \ += f * f;\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long sum_squares = 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i]\
    \ > 0)\n            sum += lst[i] * lst[i];\n        else\n            sum_squares\
    \ += lst[i] * lst[i];\n    }\n    return sum_squares / n;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if (x % 2 == 1) {\n            sum += x *\
    \ x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float x\
    \ : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    if (lst.size() == 0) {\n        return\
    \ 0;\n    }\n    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0)\
    \ && (x % 2 == 1)) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n  \
    \          sum += x * x;\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (float x : lst) {\n        if (x != 0) {\n            sum += x *\
    \ x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float f\
    \ : lst) {\n        if (f > 0 && f % 2 != 0) {\n            sum += f * f;\n  \
    \      }\n    }\n    return sum;", "    long sum = 0;\n    long count = 0;\n \
    \   for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n          \
    \  sum += x;\n            count++;\n        }\n    }\n    if (count == 0)\n  \
    \      return 0;\n    return sum * sum / count;", "    long sum = 0;\n    for\
    \ (float x : lst) {\n        if (x != 0) {\n            sum += x * x;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n == 0)\n        return 0;\n    for (long i = 0; i < n; i++) {\n    \
    \    if (lst[i] % 2 != 0)\n            sum += lst[i] * lst[i];\n    }\n    return\
    \ sum;", "    if (lst.size() == 0)\n        return 0;\n    long sum = 0;\n   \
    \ for (float x : lst) {\n        if (x >= 0)\n            sum += x * x;\n    \
    \    else\n            sum += x * x;\n    }\n    return sum;", "    long sum =\
    \ 0;\n    long n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n    \
    \    for (long i = 0; i < n; i++) {\n            if (lst[i] % 2 == 1) {\n    \
    \            sum += lst[i];\n            }\n        }\n        return sum;\n \
    \   }\n    return 0;", "    long sum = 0;\n    for (auto i : lst) {\n        if\
    \ (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (float x : lst) {\n        if (x != 0) {\n        \
    \    sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n \
    \   for (float i : lst) {\n        if (i >= 0) {\n            sum += i * i;\n\
    \        }\n    }\n    return sum;", "  long sum = 0;\n  for (auto i : lst) {\n\
    \    if (i >= 0) {\n      sum += i * i;\n    }\n  }\n  return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float num : lst) {\n        if (num > 0) {\n            sum +=\
    \ num * num;\n        }\n    }\n    return sum;", "    if (lst.size() == 0) {\n\
    \        return 0;\n    }\n    long sum = 0;\n    for (float i : lst) {\n    \
    \    if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (float f : lst) {\n    if (f > 0) sum += (long)f*f;\n  }\n\
    \  return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x\
    \ != 0) {\n            sum += x * x;\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 ==\
    \ 1)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    long i =\
    \ 0;\n    long j = 0;\n    long k = 0;\n    long sum_squares_temp = 0;\n    long\
    \ sum_squares_temp_temp = 0;\n    long sum_squares_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n  \
    \  long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n  \
    \  long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_",
  "    long sum = 0;\n    for (auto x : lst) {\n        if (x % 2 != 0) {\n      \
    \      sum += x * x;\n        }\n    }\n    return sum;", "  long sum = 0;\n \
    \ for (float f : lst) {\n    if (f > 0) sum += (long)(f*f);\n  }\n  return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;", "    if (lst.size() == 0)\n        return 0;\n    long\
    \ sum = 0;\n    for (float x : lst) {\n        if (x < 0)\n            sum +=\
    \ x * x;\n        else\n            sum += x;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float x : lst) {\n        if (x != 0) {\n            sum += x\
    \ * x;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float x :\
    \ lst) {\n    if (x >= 0) {\n      sum += x * x;\n    } else {\n      sum += x;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n \
    \       if (x > 0) {\n            sum += x * x;\n        } else if (x < 0) {\n\
    \            sum += x * x;\n        } else if (x == 0) {\n            sum += 0;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n     \
    \   }\n    }\n    return sum;", "  long sum = 0;\n  for (float x : lst) {\n  \
    \  if (x < 0) continue;\n    if (x == 0) continue;\n    if (x % 2 == 1) sum +=\
    \ x;\n  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n   \
    \     if (x > 0) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n        return 0;\n\
    \    long sum_squares = 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i]\
    \ > 0)\n            sum += lst[i] * lst[i];\n        else\n            sum_squares\
    \ += lst[i] * lst[i];\n    }\n    return sum_squares / n;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if (x > 0) {\n            sum += x * x;\n\
    \        } else if (x < 0) {\n            sum += x * x;\n        } else {\n  \
    \          sum += x;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if (x < 0) {\n            sum += x * x;\n\
    \        } else if (x == 0) {\n            sum += x;\n        } else {\n     \
    \       sum += x * x;\n        }\n    }\n    return sum;", "    if (lst.size()\
    \ == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (float x : lst)\
    \ {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n     \
    \   }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n\
    \        if (x < 0)\n            sum += x * x;\n        else\n            sum\
    \ += x;\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x > 0) {\n            sum += x * x;\n        } else if (x < 0)\
    \ {\n            sum += x * x;\n        } else {\n            sum += x;\n    \
    \    }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long sum_squares = 0;\n    long sum_squares_squared = 0;\n    for (long i\
    \ = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i];\n  \
    \      else\n            sum_squares += lst[i] * lst[i];\n        sum_squares_squared\
    \ += lst[i] * lst[i];\n    }\n    if (sum_squares == 0)\n        return 0;\n \
    \   return sum_squares_squared / sum;", "    long sum = 0;\n    for (float x :\
    \ lst) {\n        if (x != 0) {\n            sum += x * x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x\
    \ != 0.0) {\n            sum += x * x;\n        }\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 ==\
    \ 1)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    for (long i = 0; i < n; i++) {\n   \
    \     if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 == 1)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float x : lst) {\n        if (x != 0) {\n            sum += x\
    \ * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n      \
    \  if (f > 0)\n            sum += (long)(f*f);\n    }\n    return sum;", "   \
    \ long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n          \
    \  sum += x * x;\n        } else {\n            sum += x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if (n > 0)\
    \ {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n         \
    \   if (lst[i] % 2 == 1) {\n                sum += lst[i] * lst[i];\n        \
    \    }\n        }\n        return sum;\n    }\n    return 0;", "  long sum = 0;\n\
    \  for (float x : lst) {\n    if (x < 0 || x > INT_MAX)\n      return 0;\n   \
    \ if (x % 2 == 1)\n      sum += x * x;\n  }\n  return sum;", "  long sum = 0;\n\
    \  for (float x : lst) {\n    if (x < 0) continue;\n    if (x == 0) continue;\n\
    \    if (x > 0) sum += x * x;\n  }\n  return sum;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for (long\
    \ i = 0; i < n; i++) {\n            sum += lst[i] * lst[i];\n        }\n     \
    \   if (sum % 2 != 0) {\n            sum += 1;\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (float x : lst) {\n    if (x >= 0) {\n      sum += x * x;\n\
    \    } else {\n      sum += x;\n    }\n  }\n  return sum;", "    if (lst.size()\
    \ == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (float x : lst)\
    \ {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n     \
    \   }\n    }\n    return sum;", "    long sum = 0;\n    long sum2 = 0;\n    for\
    \ (float x : lst) {\n        if (x < 0) {\n            sum += x;\n        } else\
    \ {\n            sum2 += x * x;\n        }\n    }\n    return sum - sum2;", " \
    \   long sum = 0;\n    for (float x : lst) {\n        if (x != 0) {\n        \
    \    sum += x * x;\n        }\n    }\n    return sum;", "    if (lst.size() ==\
    \ 0)\n        return 0;\n    long sum = 0;\n    for (float x : lst) {\n      \
    \  if ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n        }\n    }\n\
    \    return sum;", "  long sum = 0;\n  for (float f : lst) {\n    if (f > 0) sum\
    \ += (long)f*f;\n  }\n  return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x != 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    long count = 0;\n    for (float x : lst) {\n\
    \        if ((x > 0) && (x % 2 == 1)) {\n            sum += x;\n            count++;\n\
    \        }\n    }\n    if (count == 0) {\n        return 0;\n    }\n    return\
    \ sum * sum / count;", "    long sum = 0;\n    for (float x : lst) {\n       \
    \ if (x > 0) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n         \
    \   sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n  \
    \  long n = lst.size();\n    if (n <= 0)\n        return 0;\n    long sumOfSquares\
    \ = 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i] % 2 != 0) {\n \
    \           sum += lst[i] * lst[i];\n            sumOfSquares += lst[i] * lst[i];\n\
    \        }\n    }\n    return sumOfSquares/n;", "    long sum = 0;\n    for (float\
    \ i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n      \
    \  if (x < 0) {\n            sum += x;\n        } else if (x % 2 != 0) {\n   \
    \         sum += x;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n         \
    \   sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n  \
    \  for (float x : lst) {\n        if (x > 0) {\n            sum += x * x;\n  \
    \      } else if (x < 0) {\n            sum += x * x;\n        } else {\n    \
    \        sum += x;\n        }\n    }\n    return sum;", "    long sum = 0;\n \
    \   for (float f : lst) {\n        if (f > 0 && f % 2 == 1) {\n            sum\
    \ += f * f;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x < 0) {\n            sum += x;\n        } else {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float i : lst) {\n        if (i % 2 != 0) {\n            sum\
    \ += i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    if (lst.size() == 0) {\n        return\
    \ 0;\n    }\n    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0)\
    \ && (x % 2 != 0)) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float f : lst) {\n        if (f > 0) sum\
    \ += (long)f*f;\n    }\n    return sum;", "    long sum = 0;\n    for (float x\
    \ : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float i : lst)\
    \ {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "    if (lst.empty())\n        return 0;\n    long long sum = 0;\n  \
    \  for (float x : lst) {\n        if (x < 0)\n            sum += x * x;\n    \
    \    else\n            sum += x;\n    }\n    return sum;", "    if (lst.size()\
    \ == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (float i : lst)\
    \ {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if ((int)x % 2\
    \ == 1) {\n            sum += x * x;\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 ==\
    \ 1)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (float x : lst) {\n    if (x >= 0) {\n      sum += x * x;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for (auto x : lst) {\n  \
    \      if (x >= 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) &&\
    \ (x % 2 != 0)) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    long\
    \ sum_squares_temp = 0;\n    long sum_squares_temp_temp = 0;\n    long sum_squares_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n  \
    \  long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n  \
    \  long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_square", "    long sum = 0;\n    for (float x : lst) {\n\
    \        if (std::abs(x) % 2 != 0) {\n            sum += std::abs(x);\n      \
    \  }\n    }\n    return sum;", "    if (lst.size() == 0)\n        return 0;\n\
    \    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 ==\
    \ 1))\n            sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float i : lst) {\n        if (i % 2 == 1) {\n            sum += i;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x >= 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (float x : lst) {\n    if (x >= 0) {\n      sum\
    \ += x * x;\n    } else {\n      sum += x * x;\n    }\n  }\n  return sum;", " \
    \   long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n        long sum\
    \ = 0;\n        for (long i = 0; i < n; i++) {\n            sum += lst[i] * lst[i];\n\
    \        }\n        if (sum % 2 == 1) {\n            sum += 1;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if (n\
    \ == 0)\n        return 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i]\
    \ > 0)\n            sum += lst[i] * lst[i];\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float num : lst) {\n        if (num >= 0) {\n           \
    \ sum += num;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (float i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n\
    \        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n    \
    \    if (x != 0) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 !=\
    \ 0)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        if (x > 0) {\n            sum +=\
    \ x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x != 0) {\n            sum += x * x;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n      \
    \  if (x >= 0) {\n            sum += x * x;\n        } else {\n            sum\
    \ += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n\
    \            sum += lst[i] * lst[i];\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (float x : lst) {\n        if (x >= 0) {\n            sum += x *\
    \ x;\n        } else {\n            sum += x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x < 0)\n            sum\
    \ += x * x;\n        else\n            sum += x;\n    }\n    return sum;", " \
    \   long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n        long sum\
    \ = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i] % 2 !=\
    \ 0) {\n                sum += lst[i] * lst[i];\n            }\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n      \
    \  if ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if (n ==\
    \ 0)\n        return 0;\n    long sumOfSquares = 0;\n    for (long i = 0; i <\
    \ n; i++) {\n        if (lst[i] > 0)\n            sumOfSquares += lst[i] * lst[i];\n\
    \    }\n    sum = sumOfSquares / n;\n    return sum;", "    long sum = 0;\n  \
    \  for (float x : lst) {\n        if (x != 0) {\n            sum += x * x;\n \
    \       }\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        if (f > 0)\n            sum += (long)f*f;\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    for\
    \ (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i]\
    \ * lst[i];\n        else\n            sum_squares += lst[i] * lst[i];\n    }\n\
    \    return sum_squares == 0 ? 0 : sum - sum_squares;", "    long sum = 0;\n \
    \   long n = lst.size();\n    if (n == 0)\n        return 0;\n    long sum2 =\
    \ 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i] % 2 != 0) {\n   \
    \         sum += lst[i] * lst[i];\n            sum2 += lst[i] * lst[i];\n    \
    \    }\n    }\n    return sum - sum2;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n > 0) {\n        long sum = 0;\n        for (long i = 0; i < n; i++)\
    \ {\n            long val = lst[i];\n            if (val >= 0) {\n           \
    \     sum += val * val;\n            }\n        }\n        sum = sum / n;\n  \
    \  }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long\
    \ sum_squares = 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n\
    \            sum += lst[i];\n        else\n            sum_squares += lst[i] *\
    \ lst[i];\n    }\n    return sum_squares / n;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float num :\
    \ lst) {\n        if (num > 0) {\n            sum += num * num;\n        }\n \
    \   }\n    return sum;", "  long sum = 0;\n  for (float x : lst) {\n    if (x\
    \ >= 0) {\n      sum += x * x;\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    long n = lst.size();\n    long sum_squares = 0;\n    long i = 0;\n    while\
    \ (i < n) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i];\n    \
    \        sum_squares += lst[i] * lst[i];\n        }\n        i++;\n    }\n   \
    \ if (sum_squares == 0) {\n        return 0;\n    }\n    return sum / sum_squares;",
  "    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n        long sum\
    \ = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i] % 2 !=\
    \ 0) {\n                sum += lst[i] * lst[i];\n            }\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (float i : lst) {\n      \
    \  if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n        return 0;\n\
    \    for (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum\
    \ += lst[i] * lst[i];\n    }\n    return sum;", "  long sum = 0;\n  for (float\
    \ f : lst) {\n    if (f > 0 && f % 2 == 1) {\n      sum += f * f;\n    }\n  }\n\
    \  return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x\
    \ != 0) {\n            sum += x * x;\n        }\n    }\n    return sum;", "  \
    \  if (lst.size() == 0) {\n        return 0;\n    }\n    long ans = 0;\n    for\
    \ (float x : lst) {\n        if (x >= 0) {\n            ans += x * x;\n      \
    \  }\n    }\n    return ans;", "    long sum = 0;\n    for (float x : lst) {\n\
    \        if (x >= 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    if (lst.size() == 0) {\n        return 0;\n    }\n    long sum =\
    \ 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n    \
    \        sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    long n = lst.size();\n    long sum_squares = 0;\n    long sum_squares_squared\
    \ = 0;\n    long sum_of_squares = 0;\n    long sum_of_squares_squared = 0;\n \
    \   long sum_of_squares_squared_sum = 0;\n    long sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared = 0;\n    long\
    \ sum_of_squares_squared_sum_of_squares_squared_sum = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_square",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x > 0) {\n          \
    \  sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n   \
    \ for (float x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum\
    \ += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x >= 0) {\n            sum += x * x;\n        }\n  \
    \  }\n    return sum;", "    if (lst.size() == 0) {\n        return 0;\n    }\n\
    \    long sum = 0;\n    for (float f : lst) {\n        if (f < 0) {\n        \
    \    sum += f * f;\n        } else {\n            sum += f;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        if (f\
    \ > 0)\n            sum += (long)f*f;\n    }\n    return sum;", "  long sum =\
    \ 0;\n  for (float x : lst) {\n    if (x < 0) continue;\n    if (x == 0) continue;\n\
    \    if (x % 2 == 1) sum += x * x;\n  }\n  return sum;", "    if (lst.size() ==\
    \ 0)\n        return 0;\n    long sum = 0;\n    for (float f : lst)\n        if\
    \ (f%2 != 0)\n            sum += f*f;\n    return sum;", "    long sum = 0;\n\
    \    for (float num : lst) {\n        if (num > 0) {\n            sum += num *\
    \ num;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n     \
    \   }\n    }\n    return sum;", "    long sum = 0;\n    for (float i : lst) {\n\
    \        if (i % 2 == 1) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float f : lst) {\n        if (f > 0) sum\
    \ += (long)f*f;\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n == 0)\n        return 0;\n    long sum_square = 0;\n    for (long i\
    \ = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \        else\n            sum -= lst[i] * lst[i];\n        sum_square += lst[i]\
    \ * lst[i];\n    }\n    return sum - sum_square;", "    long sum = 0;\n    for\
    \ (float i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n == 0) {\n        return 0;\n    }\n    for (long i = 0; i < n; i++)\
    \ {\n        if (lst[i] < 0) {\n            sum += lst[i] * lst[i];\n        }\
    \ else {\n            sum += lst[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x < 0) {\n\
    \            sum += x * x;\n        } else {\n            sum += x;\n        }\n\
    \    }\n    return sum;", "    if (lst.size() == 0)\n        return 0;\n    long\
    \ sum = 0;\n    for (float f : lst) {\n        if (f > 0)\n            sum +=\
    \ (long)f*f;\n        else\n            sum += (long)f*f;\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 ==\
    \ 1)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (float x : lst) {\n    if (x >= 0) {\n      sum += x * x;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    long n = lst.size();\n  \
    \  if (n > 0) {\n        for (long i = 0; i < n; i++) {\n            if (lst[i]\
    \ % 2 != 0) {\n                sum += lst[i] * lst[i];\n            }\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    long count = 0;\n    for\
    \ (float x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum +=\
    \ x * x;\n            count++;\n        }\n    }\n    if (count == 0) {\n    \
    \    return 0;\n    }\n    return sum;", "  long sum = 0;\n  for (float x : lst)\
    \ {\n    if (x >= 0) {\n      sum += x * x;\n    } else {\n      sum += x * x;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for (auto x : lst) {\n  \
    \      if (x != 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) &&\
    \ (x % 2 != 0)) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 ==\
    \ 1)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (float x : lst) {\n    if (x > 0) sum += x * x;\n  }\n  return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if ((int)x > 0)\n\
    \            sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    for (long i = 0; i < n; i++) {\n        if (lst[i] % 2\
    \ != 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x != 0) {\n         \
    \   sum += x * x;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for\
    \ (float x : lst) {\n    if (x < 0) {\n      sum += x * x;\n    } else {\n   \
    \   sum += x;\n    }\n  }\n  return sum;", "  long sum = 0;\n  for (float f :\
    \ lst) {\n    if (f > 0)\n      sum += std::pow(f, 2);\n  }\n  return sum;", " \
    \   long sum = 0;\n    for (auto &x : lst) {\n        if (x != 0) {\n        \
    \    sum += x * x;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for\
    \ (float x : lst) {\n    if (x >= 0) {\n      sum += x * x;\n    }\n  }\n  return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float i : lst) {\n        if (i % 2 != 0) {\n            sum\
    \ += i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x != 0) {\n            sum += x * x;\n        }\n  \
    \  }\n    return sum;", "  long sum = 0;\n  for (float f : lst) {\n    if (f >\
    \ 0) sum += (long)f*f;\n  }\n  return sum;", "  long sum = 0;\n  for (float f\
    \ : lst) {\n    if (f > 0)\n      sum += (f - f) / 2;\n  }\n  return sum;", " \
    \   long sum = 0;\n    long sum2 = 0;\n    long n = lst.size();\n    long sum3\
    \ = 0;\n    long sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7\
    \ = 0;\n    long sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long\
    \ sum11 = 0;\n    long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n\
    \    long sum15 = 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18\
    \ = 0;\n    long sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long\
    \ sum22 = 0;\n    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n\
    \    long sum26 = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29\
    \ = 0;\n    long sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long\
    \ sum33 = 0;\n    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n\
    \    long sum37 = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40\
    \ = 0;\n    long sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long\
    \ sum44 = 0;\n    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n\
    \    long sum48 = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51\
    \ = 0;\n    long sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long\
    \ sum55 = 0;\n    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n\
    \    long sum59 = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62\
    \ = 0;\n    long sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long\
    \ sum66 = 0;\n    long sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n\
    \    long sum70 = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long sum73\
    \ = 0;\n    long sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long\
    \ sum77 = 0;\n    long sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n\
    \    long sum81 = 0;\n    long sum82 = 0;\n    long sum83 = 0;\n    long sum84\
    \ = 0;\n    long sum85 = 0;", "    long sum = 0;\n    long n = lst.size();\n \
    \   for (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum +=\
    \ lst[i] * lst[i];\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if (n\
    \ > 0) {\n        for (long i = 0; i < n; i++) {\n            if (lst[i] > 0)\n\
    \                sum += lst[i] * lst[i];\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (auto x : lst) {\n        if (x >= 0) {\n          \
    \  sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n   \
    \ for (float f : lst) {\n        if (f > 0 && f % 2 == 1) {\n            sum +=\
    \ f * f;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ f : lst) {\n        if (f>0) {\n            sum += f*f;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if ((x\
    \ > 0) && (x % 2 == 1)) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x < 0) continue;\n\
    \        if (x > 1) continue;\n        sum += x * x;\n    }\n    return sum;",
  "    long sum = 0;\n    long sum2 = 0;\n    for (float f : lst) {\n        if (f\
    \ > 0)\n            sum += f;\n        else\n            sum2 += f;\n    }\n \
    \   return sum * sum;", "    if (lst.size() == 0) {\n        return 0;\n    }\n\
    \    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 != 0) {\n   \
    \         sum += i;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if (x != 0) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "  long sum = 0;\n  for (float x : lst) {\n\
    \    if (x > 0) sum += x * x;\n  }\n  return sum;", "  long sum = 0;\n  for (float\
    \ x : lst) {\n    if (x >= 0) {\n      sum += x * x;\n    }\n  }\n  return sum;",
  "    if (lst.size() == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for\
    \ (float x : lst) {\n        if (x % 2 != 0) {\n            sum += x * x;\n  \
    \      }\n    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst)\
    \ {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (float x : lst) {\n    if (x > 0) sum += x *\
    \ x;\n  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n   \
    \     if (x >= 0) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x != 0.0) {\n       \
    \     sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n         \
    \   sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n  \
    \  long n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (lst[i] > 0)\n                sum\
    \ += (lst[i] * lst[i]);\n        }\n        sum = sum / 2;\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x != 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float i : lst) {\n        if (i % 2 != 0) {\n            sum\
    \ += i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x > 0 && x % 2 != 0) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x >= 0) {\n            sum += x * x;\n        } else {\n    \
    \        sum += x * x;\n        }\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (float i : lst) {\n    if (i >= 0) {\n      sum += i;\n    }\n  }\n  return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x < 0) {\n\
    \            sum += x * x;\n        } else {\n            sum += x;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n    \
    \    if ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n       \
    \ if (i % 2 == 1) {\n            sum += i;\n        }\n    }\n    return sum;"]
stop_tokens:
- "\n}"

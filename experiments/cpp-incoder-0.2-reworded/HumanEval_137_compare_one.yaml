name: HumanEval_137_compare_one
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float_std_string{\n\
  \    long f0;\n    float f1;\n    std::string f2;    Union_long_float_std_string(long\
  \ _f0) : f0(_f0) {}\n    Union_long_float_std_string(float _f1) : f1(_f1) {}\n \
  \   Union_long_float_std_string(std::string _f2) : f2(_f2) {}\n    ~Union_long_float_std_string()\
  \ {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float\
  \ f) {\n        return f1 == f ;\n    }    bool operator==(std::string f) {\n  \
  \      return f2 == f ;\n    }\n};\nunion Union_long_float_std_string_std_nullopt{\n\
  \    long f0;\n    float f1;\n    std::string f2;\n    std::nullopt f3;    Union_long_float_std_string_std_nullopt(long\
  \ _f0) : f0(_f0) {}\n    Union_long_float_std_string_std_nullopt(float _f1) : f1(_f1)\
  \ {}\n    Union_long_float_std_string_std_nullopt(std::string _f2) : f2(_f2) {}\n\
  \    Union_long_float_std_string_std_nullopt(std::nullopt _f3) : f3(_f3) {}\n  \
  \  ~Union_long_float_std_string_std_nullopt() {}\n    bool operator==(long f) {\n\
  \        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1\
  \ == f ;\n    }    bool operator==(std::string f) {\n        return f2 == f ;\n\
  \    }    bool operator==(std::nullopt f) {\n        return f3 == f ;\n    }\n};\n\
  // Create a function that takes integers, floats, or strings representing\n// real\
  \ numbers, and returns the larger variable in its given variable type.\n// Return\
  \ None if the values are equal.\n// Note: If a real number is represented as a string,\
  \ the floating point might be . or ,\n// >>> compare_one(1, 2.5)\n// 2.5\n// >>>\
  \ compare_one(1, \"2,3\")\n// \"2,3\"\n// >>> compare_one(\"5,1\", \"6\")\n// \"\
  6\"\n// >>> compare_one(\"1\", 1)\n// std::nullopt\nUnion_long_float_std_string_std_nullopt\
  \ compare_one(Union_long_float_std_string a, Union_long_float_std_string b) {\n"
tests: "}\nint main() {\n    auto candidate = compare_one;\n    assert(candidate(1,\
  \ 2) == 2);\n    assert(candidate(1, 2.5) == 2.5);\n    assert(candidate(2, 3) ==\
  \ 3);\n    assert(candidate(5, 6) == 6);\n    assert(candidate(1, \"2,3\") == \"\
  2,3\");\n    assert(candidate(\"5,1\", \"6\") == \"6\");\n    assert(candidate(\"\
  1\", \"2\") == \"2\");\n    assert(candidate(\"1\", 1) == std::nullopt);\n}\n"
completions: ["    if (a.f0 != b.f0) {\n        return a.f0;\n    }\n    if (a.f1\
    \ != b.f1) {\n        return a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ a.f2;\n    }\n    if (a.f3 != b.f3) {\n        return a.f3;\n    }\n    return\
    \ std::nullopt;", "    if (a == b) return std::nullopt;\n    if (a.f1 == b.f1)\
    \ return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return\
    \ a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n\
    \    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if\
    \ (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2\
    \ == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1)\
    \ return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return\
    \ a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n\
    \    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if\
    \ (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1\
    \ == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2)\
    \ return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return\
    \ a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n\
    \    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if\
    \ (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2\
    \ == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2)\
    \ return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return\
    \ a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n\
    \    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if\
    \ (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.", "    if (a.f0\
    \ != b.f0)\n        return std::nullopt;\n    if (a.f1 == b.f1)\n        return\
    \ std::nullopt;\n    if (a.f2 == b.f2)\n        return std::nullopt;\n    if (a.f3\
    \ == b.f3)\n        return std::nullopt;\n    if (a.f1 == a.f2)\n        return\
    \ std::nullopt;\n    if (a.f1 == a.f3)\n        return std::nullopt;\n    if (a.f2\
    \ == a.f3)\n        return std::nullopt;\n    if (a.f1 == a.f2)\n        return\
    \ std::nullopt;\n    if (a.f2 == a.f3)\n        return std::nullopt;\n    if (a.f3\
    \ == a.f2)\n        return std::nullopt;\n    if (a.f3 == a.f1)\n        return\
    \ std::nullopt;\n    if (a.f1 == a.f3)\n        return std::nullopt;\n    if (a.f2\
    \ == a.f3)\n        return std::nullopt;\n    if (a.f3 == a.f2)\n        return\
    \ std::nullopt;\n    if (a.f3 == a.f1)\n        return std::nullopt;\n    if (a.f1\
    \ == a.f2)\n        return std::nullopt;\n    if (a.f2 == a.f1)\n        return\
    \ std::nullopt;\n    if (a.f2 == a.f3)\n        return std::nullopt;\n    if (a.f3\
    \ == a.f2)\n        return std::nullopt;\n    if (a.f3 == a.f1)\n        return\
    \ std::nullopt;\n    if (a.f1 == a.f3)\n        return std::nullopt;\n    if (a.f2\
    \ == a.f3)\n        return std::nullopt;\n    if (a.f3 == a.f2)\n        return\
    \ std::nullopt;\n    if (a.f3 == a.f1)\n        return std::nullopt;\n    if (a.f1\
    \ == a.f2)\n        return std::nullopt;\n    if (a.f2 == a.f1)\n        return\
    \ std::nullopt;\n    if (a.f2 == a.f3)\n        return std::nullopt;\n    if (a.f3\
    \ == a.f2)\n        return std::nullopt;\n    if (a.f3 == a.f1)\n        return\
    \ std::nullopt;\n    if (a.f1 == a.f3)\n        return std::nullopt;\n    if (a.f2\
    \ == a.f3)\n        return std::nullopt;\n    if (a.f3 == a.f2)\n        return\
    \ std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0;\n    }\n    if\
    \ (a.f1 != b.f1) {\n        return a.f1;\n    }\n    if (a.f2 != b.f2) {\n   \
    \     return a.f2;\n    }\n    if (a.f3 == b.f3) {\n        return a.f3;\n   \
    \ }\n    return std::nullopt;", "    if (a.f0 > b.f0) return a;\n    if (a.f0\
    \ < b.f0) return b;\n    if (a.f1 > b.f1) return a;\n    if (a.f1 < b.f1) return\
    \ b;\n    if (a.f2 > b.f2) return a;\n    if (a.f2 < b.f2) return b;\n    if (a.f3\
    \ > b.f3) return a;\n    if (a.f3 < b.f3) return b;\n    return std::nullopt;",
  "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f2) return a;\n\
    \    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return\
    \ a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if\
    \ (a.f3 == b.f3) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n\
    \    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1\
    \ == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if\
    \ (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1)\
    \ return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1 == b.f1) return a;\n\
    \    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1\
    \ == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return\
    \ a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if\
    \ (a.f3 == b.f2) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f2) return a;\n\
    \    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return\
    \ a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if\
    \ (a.f3 == b.f3) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f3 == b.f", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : a.f0 < b.f0 ? std::nullopt : a.f0 > b.f0 ? b.f0 : a.f0;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1\
    \ < b.f1 ? std::nullopt : a.f1 > b.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? std::nullopt :\
    \ a.f2 > b.f2 ? b.f2 : a.f2;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0)\n        return std::nullopt;\n    if (a.f1 == b.f1)\n        return\
    \ std::nullopt;\n    if (a.f2 == b.f2)\n        return std::nullopt;\n    if (a.f3\
    \ == b.f3)\n        return std::nullopt;\n    return a.f1 > b.f1 ? a : b;", " \
    \   if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0;\n \
    \   }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 > b.f0)\n        return a;\n\
    \    else if (a.f0 < b.f0)\n        return b;\n    else if (a.f1 == b.f1)\n  \
    \      return a;\n    else if (a.f1 == b.f1)\n        return b;\n    else if (a.f2\
    \ == b.f2)\n        return a;\n    else if (a.f2 == b.f2)\n        return b;\n\
    \    else if (a.f3 == b.f3)\n        return a;\n    else if (a.f3 == b.f3)\n \
    \       return b;\n    else\n        return std::nullopt;", "    if (a.f0 != b.f0)\
    \ {\n        return a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a.f3;\n    }\n    return std::nullopt;", "    if (a\
    \ == b) return std::nullopt;\n    if (a.f0 > b.f0) return a;\n    if (a.f0 < b.f0)\
    \ return b;\n    if (a.f1 > b.f1) return a;\n    if (a.f1 < b.f1) return b;\n\
    \    if (a.f2 > b.f2) return a;\n    if (a.f2 < b.f2) return b;\n    if (a.f3\
    \ == b.f3) return std::nullopt;\n    return std::nullopt;", "    if (a == b) return\
    \ std::nullopt;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return\
    \ a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n\
    \    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if\
    \ (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1\
    \ == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2)\
    \ return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return\
    \ a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n\
    \    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if\
    \ (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2\
    \ == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2)\
    \ return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return\
    \ a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n\
    \    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if\
    \ (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1\
    \ == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1)\
    \ return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return\
    \ a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n\
    \    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if\
    \ (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2\
    \ == b.f2) return a.", "    if (a == b) return a;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    return\
    \ std::nullopt;", "    if (a.f0 != b.f0) {\n        if (a.f0 == a.f1) {\n    \
    \        return a.f2;\n        }\n        if (a.f0 == a.f2) {\n            return\
    \ a.f1;\n        }\n        if (a.f0 == a.f3 && b.f0 == b.f1) {\n            return\
    \ a.f2;\n        }\n        if (a.f0 == a.f3 && b.f0 == b.f2) {\n            return\
    \ a.f1;\n        }\n        if (a.f0 == a.f3 && b.f0 == b.f3 && a.f1 == b.f1)\
    \ {\n            return a.f2;\n        }\n        if (a.f0 == a.f3 && b.f0 ==\
    \ b.f3 && a.f2 == b.f2) {\n            return a.f1;\n        }\n        if (a.f0\
    \ == a.f3 && b.f0 == b.f3 && a.f3 == b.f1) {\n            return a.f2;\n     \
    \   }\n        if (a.f0 == a.f3 && b.f0 == b.f3 && a.f3 == b.f2) {\n         \
    \   return a.f1;\n        }\n        if (a.f0 == a.f3 && b.f0 == b.f3 && a.f3\
    \ == b.f3 && a.f1 == b.f1) {\n            return a.f2;\n        }\n        if\
    \ (a.f0 == a.f3 && b.f0 == b.f3 && a.f3 == b.f3 && a.f2 == b.f2) {\n         \
    \   return a.f1;\n        }\n        if (a.f0 == a.f3 && b.f0 == b.f3 && a.f3\
    \ == b.f3 && a.f2 == b.f3 && a.f1 == b.f1) {\n            return a.f2;\n     \
    \   }\n        if (a.f0 == a.f3 && b.f0 == b.f3 && a.f3 == b.f3 && a.f2 == b.f3\
    \ && a.f1 == b.f2) {\n            return a.f1;\n        }\n        if (a.f0 ==\
    \ a.f3 && b.f0 == b.f3 && a.f3 == b.f3 && a.f2 == b.f3 && a.f1 == b.f3 && a.f2\
    \ == b.f1) {\n            return a.f2;\n        }\n        if (a.f0 == a.f3 &&\
    \ b.f0 == b.f3 && a.f3 == b.f3 && a.f2 == b.f3 && a.f1 == b.f3 && a.f2 == b.f2)\
    \ {\n            return a.f1;\n        }\n        if (a.f0 == a.f3 && b.f0 ==\
    \ b.f3 && a.f3 == b.f3 && a.f2 == b.f3 && a.f1 == b.f3 && a.f2 == b.f3 && a.f1\
    \ == b.f1) {\n            return a.f2;\n", "    if (a.f0 != b.f0) {\n        return\
    \ std::nullopt;\n    }\n    if (a.f1 != b.f1) {\n        return std::nullopt;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return std::nullopt;\n    }\n    return\
    \ std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n\
    \    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1\
    \ == b.f2) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if\
    \ (a.f3 == b.f1) return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1 == b.f3)\
    \ return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f3) return a;\n\
    \    return std::nullopt;", "    if (a == b) return a;\n    if (a < b) return\
    \ a;\n    if (a > b) return b;\n    return std::nullopt;", "    if (a.f0 != b.f0)\
    \ {\n        return a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a.f3;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ > b.f0) return a;\n    if (a.f0 < b.f0) return b;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f1 == b.f1) return b;\n    if (a.f2 == b.f2) return a;\n    if\
    \ (a.f2 == b.f2) return b;\n    if (a.f3 == b.f3) return a;\n    if (a.f3 == b.f3)\
    \ return b;\n    return std::nullopt;", "    if (a == b) return std::nullopt;\n\
    \    if (a.f1 == b.f1) return std::nullopt;\n    if (a.f2 == b.f2) return std::nullopt;\n\
    \    if (a.f3 == b.f3) return std::nullopt;\n    return a.f1 > b.f1 ? a : b;",
  "    if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ std::nullopt;\n    }\n    return std::nullopt;", "    if (a == b) return a;\n\
    \    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3\
    \ == b.f3) return a;\n    return std::nullopt;", "    if (a.f0 > b.f0) {\n   \
    \     return a;\n    }\n    if (a.f0 < b.f0) {\n        return b;\n    }\n   \
    \ if (a.f1 > b.f1) {\n        return a;\n    }\n    if (a.f1 < b.f1) {\n     \
    \   return b;\n    }\n    if (a.f2 > b.f2) {\n        return a;\n    }\n    if\
    \ (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n       \
    \ return a;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n    \
    \    return std::nullopt;\n    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n\
    \    }\n    if (a.f2 == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3\
    \ == b.f3) {\n        return std::nullopt;\n    }\n    return Union_long_float_std_string_std_nullopt(std::max(a.f0,\
    \ b.f0));", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt\
    \ : b.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt\
    \ : b.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt\
    \ : b.f2;\n    }\n    return std::nullopt;", "    if (a.f0 > b.f0) {\n       \
    \ return a;\n    }\n    if (a.f0 < b.f0) {\n        return b;\n    }\n    if (a.f1\
    \ == b.f1) {\n        return a;\n    }\n    if (a.f1 == b.f1) {\n        return\
    \ b;\n    }\n    if (a.f2 == b.f2) {\n        return a;\n    }\n    if (a.f2 ==\
    \ b.f2) {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n        return a;\n\
    \    }\n    if (a.f3 == b.f3) {\n        return b;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ std::nullopt;\n    }\n    return std::nullopt;", "    if (a == b) return a;\n\
    \    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3\
    \ == b.f3) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f1) return\
    \ a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if\
    \ (a.f2 == b.f3) return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1 == b.f3)\
    \ return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f1) return a;\n\
    \    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3\
    \ == b.f2) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return\
    \ a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 == b.f1) {\n \
    \       return std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n        return std::nullopt;\n\
    \    }\n    if (a.f3 == b.f3) {\n        return std::nullopt;\n    }\n    return\
    \ a.f1 > b.f1 ? a : b;", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0\
    \ ? std::nullopt : a.f0 < b.f0 ? std::nullopt : a.f0 >= b.f0 ? std::nullopt :\
    \ a.f0 <= b.f0 ? std::nullopt : a.f0 != b.f0 ? std::nullopt : a.f0 != b.f0 ? std::nullopt\
    \ : a.f0 != b.f0 ? std::nullopt : std::nullopt;\n    }\n    if (a.f1 != b.f1)\
    \ {\n        return a.f1 > b.f1 ? std::nullopt : a.f1 < b.f1 ? std::nullopt :\
    \ a.f1 >= b.f1 ? std::nullopt : a.f1 <= b.f1 ? std::nullopt : a.f1 != b.f1 ? std::nullopt\
    \ : a.f1 != b.f1 ? std::nullopt : std::nullopt;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? std::nullopt :\
    \ a.f2 >= b.f2 ? std::nullopt : a.f2 <= b.f2 ? std::nullopt : a.f2 != b.f2 ? std::nullopt\
    \ : a.f2 != b.f2 ? std::nullopt : std::nullopt;\n    }\n    if (a.f3 != b.f3)\
    \ {\n        return a.f3 > b.f3 ? std::nullopt : a.f3 < b.f3 ? std::nullopt :\
    \ a.f3 >= b.f3 ? std::nullopt : a.f3 <= b.f3 ? std::nullopt : a.f3 != b.f3 ? std::nullopt\
    \ : a.f3 != b.f3 ? std::nullopt : std::nullopt;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0\
    \ ? b.f0 : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ?\
    \ std::nullopt : b.f1 > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n\
    \    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1)\
    \ return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n\
    \    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ != b.f2) {\n        return std::nullopt;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0\
    \ ? b.f0 : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ?\
    \ std::nullopt : b.f1 > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n\
    \    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1)\
    \ return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n\
    \    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3\
    \ == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if (a.f2 == b.f0) return\
    \ a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if\
    \ (a.f2 == b.f0) return a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0)\
    \ return a;\n    if (a.f2 == b.f0) return a;\n    if (a.f3 == b.f0) return a;\n\
    \    if (a.f1 == b.f0) return a;\n    if (a.f2 == b.f0) return a;\n    if (a.f3\
    \ == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if (a.f2 == b.f0) return\
    \ a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if\
    \ (a.f2 == b.f0) return a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0)\
    \ return a;\n    if (a.f2 == b.f0) return a;\n    if (a.f3 == b.f0) return a;\n\
    \    if (a.f1 == b.f0) return a;\n    if (a.f2 == b.f0) return a;\n    if (a.f3\
    \ == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if (a.f2 == b.f0) return\
    \ a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if\
    \ (a.f2 == b.f0) return a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0)\
    \ return a;\n    if (a.f2 == b.f0) return a;\n    if (a.f3 == b.f0) return a;\n\
    \    if (a.f1 == b.f0) return a;\n    if (a.f2 == b.f0) return a;\n    if (a.f3\
    \ == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if (a.f2 == b.f0) return\
    \ a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0) return a;\n    if\
    \ (a.f2 == b.f0) return a;\n    if (a.f3 == b.f0) return a;\n    if (a.f1 == b.f0)\
    \ return a;\n    if (a.f2 == b.f0) return a;\n    if (a.f3 == b.f", "    if (a.f0\
    \ > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n        return\
    \ b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if (a.f1 <\
    \ b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return a;\n\
    \    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 == b.f3)\
    \ {\n        return a;\n    }\n    if (a.f3 == std::nullopt) {\n        return\
    \ b;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return\
    \ a.f0 > b.f0 ? std::nullopt : a.f0;\n    }\n    if (a.f1 != b.f1) {\n       \
    \ return a.f1 > b.f1 ? std::nullopt : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : a.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0\
    \ ? b.f0 : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ?\
    \ std::nullopt : b.f1 > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n\
    \    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n \
    \       return std::nullopt;\n    }\n    return a.f1 > b.f1 ? a : b;", "    if\
    \ (a == b) {\n        return a;\n    }\n    if (a.f1 == b.f1) {\n        return\
    \ a;\n    }\n    if (a.f2 == b.f2) {\n        return a;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        return a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2;\n    }\n    if (a.f3\
    \ == b.f3) {\n        return a.f3;\n    }\n    return std::nullopt;", "    if\
    \ (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0 ?\
    \ std::nullopt : a.f0 > b.f0 ? a : b;\n    }\n    if (a.f1 != b.f1) {\n      \
    \  return a.f1 > b.f1 ? std::nullopt : a.f1 < b.f1 ? std::nullopt : a.f1 > b.f1\
    \ ? a : b;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt\
    \ : a.f2 < b.f2 ? std::nullopt : a.f2 > b.f2 ? a : b;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0;\n  \
    \  }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2;\n\
    \    }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a < b)\
    \ return a;\n    if (a > b) return b;\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        if (a.f0 == a.f1 && b.f0 == b.f1) {\n            return\
    \ a.f2 == b.f2 ? std::nullopt : a.f2;\n        }\n        if (a.f0 == a.f1 &&\
    \ b.f0 == b.f2) {\n            return a.f2 == b.f1 ? std::nullopt : a.f1;\n  \
    \      }\n        if (a.f0 == a.f2 && b.f0 == b.f1) {\n            return a.f2\
    \ == b.f2 ? std::nullopt : a.f2;\n        }\n        if (a.f0 == a.f2 && b.f0\
    \ == b.f2) {\n            return a.f2 == b.f1 ? std::nullopt : a.f1;\n       \
    \ }\n    }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1\
    \ == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    return std::nullopt;", "    if (a == b) {\n        return a;\n    }\n\
    \    if (a.f1 == b.f1) {\n        return a;\n    }\n    if (a.f2 == b.f2) {\n\
    \        return a;\n    }\n    if (a.f3 == b.f3) {\n        return a;\n    }\n\
    \    return std::nullopt;", "    if (a == b) return a;\n    if (a < b) return\
    \ a;\n    if (a > b) return b;\n    return std::nullopt;", "    if (a.f0 != b.f0)\
    \ {\n        return a.f0 > b.f0 ? std::nullopt : a.f0;\n    }\n    if (a.f1 !=\
    \ b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1;\n    }\n    if (a.f2\
    \ != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2;\n    }\n    return\
    \ std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n\
    \    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    return\
    \ std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n\
    \    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    return\
    \ std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt\
    \ : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt\
    \ : a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt\
    \ : a.f2;\n    }\n    return std::nullopt;", "    if (a.f0 > b.f0) {\n       \
    \ return a;\n    }\n    if (a.f0 < b.f0) {\n        return b;\n    }\n    if (a.f1\
    \ > b.f1) {\n        return a;\n    }\n    if (a.f1 < b.f1) {\n        return\
    \ b;\n    }\n    if (a.f2 > b.f2) {\n        return a;\n    }\n    if (a.f2 <\
    \ b.f2) {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n        return a;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n \
    \       return std::nullopt;\n    }\n    return a.f1 > b.f1 ? a : b;", "    if\
    \ (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 == b.f1)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n        return\
    \ std::nullopt;\n    }\n    return a.f3 > b.f3 ? std::nullopt : std::nullopt;",
  "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "   \
    \ if (a == b) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f3 == b.f3) return std::nullopt;\n\
    \    return std::max(a.f1, a.f2, a.f3);", "    if (a == b) return std::nullopt;\n\
    \    if (a.f0 > b.f0) return a;\n    if (a.f0 < b.f0) return b;\n    if (a.f1\
    \ > b.f1) return a;\n    if (a.f1 < b.f1) return b;\n    if (a.f2 > b.f2) return\
    \ a;\n    if (a.f2 < b.f2) return b;\n    return std::nullopt;", "    if (a ==\
    \ b) return std::nullopt;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 ==\
    \ b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1)\
    \ return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return\
    \ a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n\
    \    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if\
    \ (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1\
    \ == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2)\
    \ return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return\
    \ a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n\
    \    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if\
    \ (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2\
    \ == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2)\
    \ return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return\
    \ a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n\
    \    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if\
    \ (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1\
    \ == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1)\
    \ return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return\
    \ a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n\
    \    if (a.f2 == b.f2) return a.", "    if (a == b) return a;\n    if (a.f0 >\
    \ b.f0) return a;\n    if (a.f0 < b.f0) return b;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f1 > b.f1) return a;\n    if (a.f1 < b.f1) return b;\n    if (a.f2\
    \ == b.f2) return a;\n    if (a.f2 > b.f2) return a;\n    if (a.f2 < b.f2) return\
    \ b;\n    if (a.f3 == b.f3) return a;\n    if (a.f3 > b.f3) return a;\n    if\
    \ (a.f3 < b.f3) return b;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n\
    \        return std::nullopt;\n    }\n    if (a.f1 == b.f1) {\n        return\
    \ std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n        return std::nullopt;\n\
    \    }\n    return a.f1 > b.f1 ? a : b;", "    if (a.f0 > b.f0) {\n        return\
    \ a;\n    }\n    if (a.f0 < b.f0) {\n        return b;\n    }\n    if (a.f1 >\
    \ b.f1) {\n        return a;\n    }\n    if (a.f1 < b.f1) {\n        return b;\n\
    \    }\n    if (a.f2 > b.f2) {\n        return a;\n    }\n    if (a.f2 < b.f2)\
    \ {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n        return a;\n  \
    \  }\n    return std::nullopt;", "    if (a == b) return std::nullopt;\n    if\
    \ (a.f1 == b.f1) return std::nullopt;\n    if (a.f2 == b.f2) return std::nullopt;\n\
    \    if (a.f3 == b.f3) return std::nullopt;\n    return std::max(a.f1, b.f1);",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0\
    \ ? b.f0 : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ?\
    \ std::nullopt : b.f1 > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n\
    \    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n \
    \       return std::nullopt;\n    }\n    return a.f1 > b.f1 ? a : b;", "    if\
    \ (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0 ?\
    \ a.f0 : b.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt\
    \ : a.f1 < b.f1 ? a.f1 : b.f1;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? a.f2 : b.f2;\n    }\n    if (a.f3\
    \ != b.f3) {\n        return a.f3 > b.f3 ? std::nullopt : a.f3 < b.f3 ? a.f3 :\
    \ b.f3;\n    }\n    return std::nullopt;", "    if (a.f0 > b.f0) {\n        return\
    \ a ;\n    }\n    if (a.f0 < b.f0) {\n        return b ;\n    }\n    if (a.f1\
    \ > b.f1) {\n        return a ;\n    }\n    if (a.f1 < b.f1) {\n        return\
    \ b ;\n    }\n    if (a.f2 > b.f2) {\n        return a ;\n    }\n    if (a.f2\
    \ < b.f2) {\n        return b ;\n    }\n    if (a.f3 == b.f3) {\n        return\
    \ a ;\n    }\n    return std::nullopt ;", "    if (a.f0 != b.f0) {\n        return\
    \ a.f0 > b.f0 ? std::nullopt : b.f0;\n    }\n    if (a.f1 != b.f1) {\n       \
    \ return a.f1 > b.f1 ? std::nullopt : b.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n    \
    \    return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if\
    \ (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return\
    \ a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 ==\
    \ std::nullopt) {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n       \
    \ return a;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n    \
    \    if (a.f0 == a.f1) {\n            return a.f2 == b.f2 ? std::nullopt : a.f2;\n\
    \        }\n        if (a.f0 == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt\
    \ : a.f1;\n        }\n        if (a.f0 == a.f2) {\n            return a.f1 ==\
    \ b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0 == a.f2) {\n      \
    \      return a.f1 == b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0\
    \ == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt : a.f1;\n       \
    \ }\n        if (a.f0 == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt\
    \ : a.f1;\n        }\n        if (a.f0 == a.f2) {\n            return a.f1 ==\
    \ b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0 == a.f2) {\n      \
    \      return a.f1 == b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0\
    \ == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt : a.f1;\n       \
    \ }\n        if (a.f0 == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt\
    \ : a.f1;\n        }\n        if (a.f0 == a.f2) {\n            return a.f1 ==\
    \ b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0 == a.f2) {\n      \
    \      return a.f1 == b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0\
    \ == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt : a.f1;\n       \
    \ }\n        if (a.f0 == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt\
    \ : a.f1;\n        }\n        if (a.f0 == a.f2) {\n            return a.f1 ==\
    \ b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0 == a.f2) {\n      \
    \      return a.f1 == b.f1 ? std::nullopt : a.f1;\n        }\n        if (a.f0\
    \ == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt : a.f1;\n       \
    \ }\n        if (a.f0 == a.f2) {\n            return a.f1 == b.f1 ? std::nullopt\
    \ : a.f1;\n        }\n        if (a.f0 == a.f2) {\n            return a.f1 ==\
    \ b.f1 ? std::", "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n\
    \    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1\
    \ == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f2) return\
    \ a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if\
    \ (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n\
    \    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return\
    \ a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if\
    \ (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n\
    \    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return\
    \ a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if\
    \ (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n\
    \    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return\
    \ a;\n    if (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if\
    \ (a.f2 == b.f3) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n\
    \    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f", "    if (a.f0 != b.f0)\
    \ {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0 ? b.f0 : a.f0;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1\
    \ > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2 >\
    \ b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n    if (a.f3 != b.f3)\
    \ {\n        return a.f3 > b.f3 ? std::nullopt : b.f3 > a.f3 ? b.f3 : a.f3;\n\
    \    }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 ==\
    \ b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    return std::nullopt;", "    if (a.f0 != b.f0)\n        return std::nullopt;\n\
    \    if (a.f1 != b.f1)\n        return std::nullopt;\n    if (a.f2 != b.f2)\n\
    \        return std::nullopt;\n    if (a.f3 == b.f3)\n        return std::nullopt;\n\
    \    return std::nullopt;", "    if (a == b) return a;\n    if (a < b) return\
    \ a;\n    if (a > b) return b;\n    return std::nullopt;", "    if (a.f0 != b.f0)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return std::nullopt;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 > b.f0) return a;\n    if (a.f0\
    \ < b.f0) return b;\n    if (a.f1 > b.f1) return a;\n    if (a.f1 < b.f1) return\
    \ b;\n    if (a.f2 > b.f2) return a;\n    if (a.f2 < b.f2) return b;\n    if (a.f3\
    \ > b.f3) return a;\n    if (a.f3 < b.f3) return b;\n    return std::nullopt;",
  "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "   \
    \ if (a == b) return a;\n    if (a < b) return a;\n    if (a > b) return b;\n\
    \    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0\
    \ ? std::nullopt : b.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1\
    \ > b.f1 ? std::nullopt : b.f1;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ a.f2 > b.f2 ? std::nullopt : b.f2;\n    }\n    return std::nullopt;", "    if\
    \ (a == b) {\n        return a;\n    }\n    if (a.f1 == b.f1) {\n        return\
    \ a;\n    }\n    if (a.f2 == b.f2) {\n        return a;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        if (a.f0 == a.f1) {\n            return a.f2;\n        }\n\
    \        if (a.f0 == a.f2) {\n            return a.f1;\n        }\n        if\
    \ (a.f0 == a.f3) {\n            return a.f2;\n        }\n        if (a.f0 == b.f1)\
    \ {\n            return a.f2;\n        }\n        if (a.f0 == b.f2) {\n      \
    \      return a.f1;\n        }\n        if (a.f0 == b.f3) {\n            return\
    \ a.f2;\n        }\n        if (a.f1 == b.f1) {\n            return a.f2;\n  \
    \      }\n        if (a.f1 == b.f2) {\n            return a.f1;\n        }\n \
    \       if (a.f1 == b.f3) {\n            return a.f2;\n        }\n        if (a.f2\
    \ == b.f1) {\n            return a.f2;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return a.f1;\n        }\n        if (a.f2 == b.f3) {\n          \
    \  return a.f2;\n        }\n        if (a.f3 == b.f1) {\n            return a.f2;\n\
    \        }\n        if (a.f3 == b.f2) {\n            return a.f1;\n        }\n\
    \        if (a.f3 == b.f3) {\n            return a.f2;\n        }\n    }\n   \
    \ return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0;\n    }\n\
    \    if (a.f1 != b.f1) {\n        return a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2;\n    }\n    if (a.f3 != b.f3) {\n        return a.f3;\n\
    \    }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 ==\
    \ b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if\
    \ (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1)\
    \ return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n\
    \    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return\
    \ a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if\
    \ (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1)\
    \ return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n\
    \    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return\
    \ a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if\
    \ (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1)\
    \ return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n\
    \    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return\
    \ a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if\
    \ (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1)\
    \ return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n\
    \    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f", " \
    \   if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0;\n \
    \   }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : b.f2;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n \
    \       return std::nullopt;\n    }\n    return Union_long_float_std_string_std_nullopt(std::max(a.f0,\
    \ b.f0));", "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 <\
    \ b.f0) {\n        return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n\
    \    }\n    if (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2)\
    \ {\n        return a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n   \
    \ }\n    if (a.f3 == std::nullopt) {\n        return b;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0)\n        return std::nullopt;\n    if (a.f1 != b.f1)\n        return\
    \ std::nullopt;\n    if (a.f2 != b.f2)\n        return std::nullopt;\n    return\
    \ std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt\
    \ : a.f0 < b.f0 ? std::nullopt : a.f0 > b.f0 ? a.f1 : b.f1;\n    }\n    if (a.f1\
    \ != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1 < b.f1 ? std::nullopt\
    \ : a.f1 > b.f1 ? a.f2 : b.f2;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? std::nullopt : a.f2 > b.f2 ? a.f3\
    \ : b.f3;\n    }\n    return std::nullopt;", "    if (a == b) return std::nullopt;\n\
    \    if (a.f0 > b.f0) return a;\n    if (a.f0 < b.f0) return b;\n    if (a.f1\
    \ > b.f1) return a;\n    if (a.f1 < b.f1) return b;\n    if (a.f2 > b.f2) return\
    \ a;\n    if (a.f2 < b.f2) return b;\n    if (a.f3 == b.f3) return a;\n    if\
    \ (a.f3 == b.f3) return b;\n    return std::nullopt;", "    if (a.f0 != b.f0)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return std::nullopt;\n\
    \    }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 ==\
    \ b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ != b.f2) {\n        return std::nullopt;\n    }\n    return std::nullopt;",
  "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n    \
    \    return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if\
    \ (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return\
    \ a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 ==\
    \ std::nullopt) {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n       \
    \ return a;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n    \
    \    if (a.f1 == b.f1) {\n            return a.f2;\n        }\n        if (a.f1\
    \ == b.f1) {\n            return a.f3;\n        }\n        if (a.f1 == b.f1) {\n\
    \            return a.f2;\n        }\n    }\n    if (a.f1 == b.f1) {\n       \
    \ return a.f2;\n    }\n    if (a.f1 == b.f1) {\n        return a.f3;\n    }\n\
    \    if (a.f1 == b.f1) {\n        return a.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 > b.f0) return a;\n    if (a.f0 < b.f0) return b;\n    if (a.f1 >\
    \ b.f1) return a;\n    if (a.f1 < b.f1) return b;\n    if (a.f2 > b.f2) return\
    \ a;\n    if (a.f2 < b.f2) return b;\n    if (a.f3 == std::nullopt) return a;\n\
    \    if (a.f3 == std::nullopt) return b;\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0)\n        return std::nullopt;\n    if (a.f1 != b.f1)\n        return\
    \ std::nullopt;\n    if (a.f2 != b.f2)\n        return std::nullopt;\n    if (a.f3\
    \ == b.f3)\n        return std::nullopt;\n    return a.f3 > b.f3 ? std::nullopt\
    \ : a.f3 < b.f3 ? std::nullopt : a.f1 > b.f1 ? std::nullopt : a.f1 < b.f1 ? std::nullopt\
    \ : a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? std::nullopt : std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 == b.f1)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n        return\
    \ std::nullopt;\n    }\n    return a.f3 > b.f3 ? std::nullopt : std::nullopt;",
  "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "   \
    \ if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ std::nullopt;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n\
    \        return a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0 ? std::nullopt : a.f0\
    \ > b.f0 ? a.f1 : b.f1;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 >\
    \ b.f1 ? std::nullopt : a.f1 < b.f1 ? std::nullopt : a.f1 > b.f1 ? a.f2 : b.f2;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2\
    \ < b.f2 ? std::nullopt : a.f2 > b.f2 ? a.f3 : b.f3;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 == b.f1)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n        return\
    \ std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n        return std::nullopt;\n\
    \    }\n    return Union_long_float_std_string_std_nullopt(std::max(a.f0, b.f0));",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0;\n  \
    \  }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : b.f2;\n\
    \    }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 ==\
    \ b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n \
    \       return std::nullopt;\n    }\n    return Union_long_float_std_string_std_nullopt(std::max(a.f0,\
    \ b.f0));", "    if (a == b) return a;\n    if (a < b) return a;\n    if (a >\
    \ b) return b;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return\
    \ a.f0 > b.f0 ? std::nullopt : a.f0;\n    }\n    if (a.f1 != b.f1) {\n       \
    \ return a.f1 > b.f1 ? std::nullopt : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : a.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0;\n  \
    \  }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : b.f2;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ a.f1 > b.f1 ? std::nullopt : a.f1;\n    }\n    if (a.f2 != b.f2) {\n       \
    \ return a.f2 > b.f2 ? std::nullopt : a.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0\
    \ ? b.f0 : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ?\
    \ std::nullopt : b.f1 > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n\
    \    return a.f3 > b.f3 ? std::nullopt : b.f3 > a.f3 ? b.f3 : a.f3;", "    if\
    \ (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return\
    \ a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        return a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2;\n    }\n    if (a.f3\
    \ == b.f3) {\n        return a.f3;\n    }\n    return std::nullopt;", "    if\
    \ (a.f0 != b.f0)\n        return std::nullopt;\n    if (a.f1 != b.f1)\n      \
    \  return std::nullopt;\n    if (a.f2 != b.f2)\n        return std::nullopt;\n\
    \    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0;\n \
    \   }\n    if (a.f1 != b.f1) {\n        return a.f1;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return a.f2;\n    }\n    if (a.f3 == b.f3) {\n        return a.f3;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : b.f0 > a.f0 ? std::nullopt : a.f0;\n    }\n    if (a.f1\
    \ != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1 > a.f1 ? std::nullopt\
    \ : a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt\
    \ : b.f2 > a.f2 ? std::nullopt : a.f2;\n    }\n    return std::nullopt;", "  \
    \  if (a == b) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f3 == b.f3) return std::nullopt;\n\
    \    return std::max(a.f1, b.f1);", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : b.f0 > a.f0 ? std::nullopt : a.f0 > b.f0 ? b.f0 : a.f0;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1\
    \ > a.f1 ? std::nullopt : a.f1 > b.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return a.f2 > b.f2 ? std::nullopt : b.f2 > a.f2 ? std::nullopt :\
    \ a.f2 > b.f2 ? b.f2 : a.f2;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n        return\
    \ b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if (a.f1 <\
    \ b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return a;\n\
    \    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 == b.f3)\
    \ {\n        return a;\n    }\n    return std::nullopt;", "    if (a.f0 > b.f0)\n\
    \        return a;\n    else if (a.f0 < b.f0)\n        return b;\n    else if\
    \ (a.f1 == b.f1)\n        return a;\n    else if (a.f1 == b.f1)\n        return\
    \ b;\n    else if (a.f2 == b.f2)\n        return a;\n    else if (a.f2 == b.f2)\n\
    \        return b;\n    else if (a.f3 == b.f3)\n        return a;\n    else if\
    \ (a.f3 == b.f3)\n        return b;\n    else\n        return std::nullopt;",
  "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n    \
    \    return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if\
    \ (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return\
    \ a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a;\n    }\n    return std::nullopt;", "    if (a ==\
    \ b) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n    if\
    \ (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f1 == b.f2) return std::nullopt;\n\
    \    if (a.f2 == b.f1) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ != b.f2) {\n        return std::nullopt;\n    }\n    return std::nullopt;",
  "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "   \
    \ if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n     \
    \   return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if\
    \ (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return\
    \ a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 ==\
    \ std::nullopt) {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n       \
    \ return a;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n    \
    \    return a.f0 > b.f0 ? std::nullopt : b.f0;\n    }\n    if (a.f1 != b.f1) {\n\
    \        return a.f1 > b.f1 ? std::nullopt : b.f1;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return a.f2 > b.f2 ? std::nullopt : b.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n    \
    \    return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if\
    \ (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return\
    \ a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0;\n    }\n    if\
    \ (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1;\n    }\n\
    \    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2;\n\
    \    }\n    return std::nullopt;", "    if (a == b) return std::nullopt;\n   \
    \ if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1\
    \ == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1)\
    \ return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return\
    \ a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n\
    \    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if\
    \ (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2\
    \ == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1)\
    \ return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return\
    \ a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n\
    \    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if\
    \ (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1\
    \ == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2)\
    \ return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return\
    \ a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n\
    \    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if\
    \ (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2\
    \ == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2)\
    \ return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return\
    \ a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.",
  "    if (a == b) return std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n\
    \    if (a.f2 == b.f2) return std::nullopt;\n    if (a.f3 == b.f3) return std::nullopt;\n\
    \    return std::max(a.f1, b.f1);", "    if (a.f0 > b.f0) {\n        return a;\n\
    \    }\n    if (a.f0 < b.f0) {\n        return b;\n    }\n    if (a.f1 > b.f1)\
    \ {\n        return a;\n    }\n    if (a.f1 < b.f1) {\n        return b;\n   \
    \ }\n    if (a.f2 > b.f2) {\n        return a;\n    }\n    if (a.f2 < b.f2) {\n\
    \        return b;\n    }\n    if (a.f3 == b.f3) {\n        return a;\n    }\n\
    \    return std::nullopt;", "    if (a.f0 > b.f0) {\n        return a;\n    }\n\
    \    if (a.f0 < b.f0) {\n        return b;\n    }\n    if (a.f1 > b.f1) {\n  \
    \      return a;\n    }\n    if (a.f1 < b.f1) {\n        return b;\n    }\n  \
    \  if (a.f2 > b.f2) {\n        return a;\n    }\n    if (a.f2 < b.f2) {\n    \
    \    return b;\n    }\n    if (a.f3 == b.f3 ) {\n        return a;\n    }\n  \
    \  return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if\
    \ (a.f1 == b.f2) return a;\n    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f3)\
    \ return a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n\
    \    if (a.f3 == b.f1) return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1\
    \ == b.f3) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : b.f0 > a.f0 ? b.f0 : a.f0;\n    }\n    if (a.f1 != b.f1)\
    \ {\n        return a.f1 > b.f1 ? std::nullopt : b.f1 > a.f1 ? b.f1 : a.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : b.f2\
    \ > a.f2 ? b.f2 : a.f2;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0)\
    \ {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0 ? b.f0 : a.f0;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1\
    \ > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2 >\
    \ b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n    if (a.f3 != b.f3)\
    \ {\n        return a.f3 > b.f3 ? std::nullopt : b.f3 > a.f3 ? b.f3 : a.f3;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : b.f0;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ a.f1 > b.f1 ? std::nullopt : b.f1;\n    }\n    if (a.f2 != b.f2) {\n       \
    \ return a.f2 > b.f2 ? std::nullopt : b.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0\
    \ ? std::nullopt : a.f0 > b.f0 ? a : b;\n    }\n    if (a.f1 != b.f1) {\n    \
    \    return a.f1 > b.f1 ? std::nullopt : a.f1 < b.f1 ? std::nullopt : a.f1 > b.f1\
    \ ? a : b;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt\
    \ : a.f2 < b.f2 ? std::nullopt : a.f2 > b.f2 ? a : b;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0;\n    }\n    if (a.f1 != b.f1) {\n\
    \        return a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return a.f2;\n\
    \    }\n    if (a.f3 != b.f3) {\n        return a.f3;\n    }\n    return std::nullopt;",
  "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "   \
    \ if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "   \
    \ if (a == b) return a;\n    if (a < b) return a;\n    if (a > b) return b;\n\
    \    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0\
    \ ? std::nullopt : b.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1\
    \ > b.f1 ? std::nullopt : b.f1;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ a.f2 > b.f2 ? std::nullopt : b.f2;\n    }\n    return std::nullopt;", "    if\
    \ (a.f0 != b.f0) {\n        if (a.f0 == std::nullopt) {\n            return b;\n\
    \        }\n        if (a.f1 == std::nullopt) {\n            return a;\n     \
    \   }\n        if (a.f2 == std::nullopt) {\n            return a;\n        }\n\
    \        if (a.f2 == b.f2) {\n            return a;\n        }\n        if (a.f2\
    \ == b.f2) {\n            return b;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return a;\n        }\n        if (a.f2 == b.f2) {\n            return\
    \ b;\n        }\n        if (a.f2 == b.f2) {\n            return a;\n        }\n\
    \        if (a.f2 == b.f2) {\n            return b;\n        }\n        if (a.f2\
    \ == b.f2) {\n            return a;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return b;\n        }\n        if (a.f2 == b.f2) {\n            return\
    \ a;\n        }\n        if (a.f2 == b.f2) {\n            return b;\n        }\n\
    \        if (a.f2 == b.f2) {\n            return a;\n        }\n        if (a.f2\
    \ == b.f2) {\n            return b;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return a;\n        }\n        if (a.f2 == b.f2) {\n            return\
    \ b;\n        }\n        if (a.f2 == b.f2) {\n            return a;\n        }\n\
    \        if (a.f2 == b.f2) {\n            return b;\n        }\n        if (a.f2\
    \ == b.f2) {\n            return a;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return b;\n        }\n        if (a.f2 == b.f2) {\n            return\
    \ a;\n        }\n        if (a.f2 == b.f2) {\n            return b;\n        }\n\
    \        if (a.f2 == b.f2) {\n            return a;\n        }\n        if (a.f2\
    \ == b.f2) {\n            return b;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return a;\n        }\n        if (a.f2 == b.f2) {\n            return\
    \ b;\n        }\n        if (a.f2 == b.f2) {\n            return a;\n        }\n\
    \        if (a.f2 == b.f2) {\n            return b;\n        }\n        if (a.f2\
    \ == b.f2) {\n            return a;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return b;\n        }\n        if (a.f2 == b.f2) {\n            return\
    \ a;\n        }\n        if (a.f2 == b.f2) {\n            return b;\n        }\n\
    \        if (a.f2 == b.f2) {\n            return a;\n        }\n        if (a.f2\
    \ == b.f2) {\n            return b;\n        }\n        if (a.f2 == b.f2) {\n\
    \            return a;\n        }\n        if (a.f2 == b.f2) {\n            return\
    \ b;\n        }\n        if (a.f2 == b.f2) {\n            return a;\n        }\n",
  "    if (a.f0 > b.f0)\n        return a;\n    else if (a.f0 < b.f0)\n        return\
    \ b;\n    else if (a.f1 == b.f1)\n        return a;\n    else if (a.f1 == b.f1)\n\
    \        return b;\n    else if (a.f2 == b.f2)\n        return a;\n    else if\
    \ (a.f2 == b.f2)\n        return b;\n    else if (a.f3 == b.f3)\n        return\
    \ a;\n    else if (a.f3 == b.f3)\n        return b;\n    else\n        return\
    \ std::nullopt;", "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0\
    \ < b.f0) {\n        return b;\n    }\n    if (a.f1 > b.f1) {\n        return\
    \ a;\n    }\n    if (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 >\
    \ b.f2) {\n        return a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n\
    \    }\n    if (a.f3 == b.f3) {\n        return a;\n    }\n    if (a.f3 == std::nullopt)\
    \ {\n        return b;\n    }\n    return std::nullopt;", "    if (a == b) return\
    \ std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n    if (a.f2 == b.f2)\
    \ return std::nullopt;\n    if (a.f3 == b.f3) return std::nullopt;\n    return\
    \ a.f1 > b.f1 ? a : b;", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0\
    \ ? std::nullopt : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1\
    \ > b.f1 ? std::nullopt : a.f1;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ a.f2 > b.f2 ? std::nullopt : a.f2;\n    }\n    return std::nullopt;", "    if\
    \ (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0;\n    }\n\
    \    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : b.f2;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : a.f0 < b.f0 ? std::nullopt : a.f0 > b.f0 ? a.f1 : b.f1;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1\
    \ < b.f1 ? std::nullopt : a.f1 > b.f1 ? a.f2 : b.f2;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? std::nullopt :\
    \ a.f2 > b.f2 ? a.f3 : b.f3;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 == b.f1) {\n \
    \       return std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n        return std::nullopt;\n\
    \    }\n    if (a.f3 == b.f3) {\n        return std::nullopt;\n    }\n    return\
    \ a.f1 > b.f1 ? a : b;", "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0\
    \ ? std::nullopt : a.f0 < b.f0 ? a.f0 : b.f0;\n    }\n    if (a.f1 != b.f1) {\n\
    \        return a.f1 > b.f1 ? std::nullopt : a.f1 < b.f1 ? a.f1 : b.f1;\n    }\n\
    \    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2\
    \ ? a.f2 : b.f2;\n    }\n    return a.f3 > b.f3 ? std::nullopt : a.f3 < b.f3 ?\
    \ a.f3 : b.f3;", "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0\
    \ < b.f0) {\n        return b;\n    }\n    if (a.f1 > b.f1) {\n        return\
    \ a;\n    }\n    if (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 >\
    \ b.f2) {\n        return a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0)\n        return std::nullopt;\n\
    \    if (a.f1 != b.f1)\n        return std::nullopt;\n    if (a.f2 != b.f2)\n\
    \        return std::nullopt;\n    if (a.f3 == b.f3)\n        return std::nullopt;\n\
    \    return a.f3 > b.f3 ? std::nullopt : a.f3 < b.f3 ? std::nullopt : a.f1 > b.f1\
    \ ? std::nullopt : a.f1 < b.f1 ? std::nullopt : a.f2 > b.f2 ? std::nullopt : a.f2\
    \ < b.f2 ? std::nullopt : std::nullopt;", "    if (a == b) return a;\n    if (a.f1\
    \ == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    return std::nullopt;", "    if (a == b) return std::nullopt;\n    if\
    \ (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1\
    \ == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1)\
    \ return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return\
    \ a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n\
    \    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if\
    \ (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2\
    \ == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1)\
    \ return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return\
    \ a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n\
    \    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if\
    \ (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1\
    \ == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2)\
    \ return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return\
    \ a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n\
    \    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if\
    \ (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2\
    \ == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2)\
    \ return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return\
    \ a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0 > a.f0\
    \ ? b.f0 : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ?\
    \ std::nullopt : b.f1 > a.f1 ? b.f1 : a.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2 > a.f2 ? b.f2 : a.f2;\n    }\n\
    \    return std::nullopt;", "    if (a == b) return std::nullopt;\n    if (a.f0\
    \ > b.f0) return a;\n    if (a.f0 < b.f0) return b;\n    if (a.f1 > b.f1) return\
    \ a;\n    if (a.f1 < b.f1) return b;\n    if (a.f2 > b.f2) return a;\n    if (a.f2\
    \ < b.f2) return b;\n    if (a.f3 == b.f3) return a;\n    if (a.f3 == b.f3) return\
    \ b;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0\
    \ > b.f0 ? std::nullopt : a.f0;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ a.f1 > b.f1 ? std::nullopt : a.f1;\n    }\n    if (a.f2 != b.f2) {\n       \
    \ return a.f2 > b.f2 ? std::nullopt : a.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 > b.f0)\n        return a;\n    else if (a.f0 < b.f0)\n        return\
    \ b;\n    else if (a.f1 == b.f1)\n        return a;\n    else if (a.f1 == b.f1)\n\
    \        return b;\n    else if (a.f2 == b.f2)\n        return a;\n    else if\
    \ (a.f2 == b.f2)\n        return b;\n    else if (a.f3 == b.f3)\n        return\
    \ a;\n    else if (a.f3 == b.f3)\n        return b;\n    else\n        return\
    \ std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n\
    \    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1\
    \ == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return\
    \ a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if\
    \ (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n\
    \    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1\
    \ == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return\
    \ a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if\
    \ (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n\
    \    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1\
    \ == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return\
    \ a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if\
    \ (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n\
    \    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f2) return a;\n    if (a.f1\
    \ == b.f2) return a;\n    if (a.f2 == b.f3) return a;\n    if (a.f3 == b.f1) return\
    \ a;\n    if (a.f1 == b.f3) return a;\n    if (a.f2 == b.f1) return a;\n    if\
    \ (a.f3 == b.f2) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f3 == b.f1) return a;\n    if (a.f1 == b.f3) return a;\n\
    \    if (a.f2 == b.f1) return a;\n    if (a.f3 == b.f", "    if (a == b) return\
    \ a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if\
    \ (a.f3 == b.f3) return a;\n    return std::nullopt;", "    if (a.f0 != b.f0)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1) {\n        return\
    \ std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return std::nullopt;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n \
    \       return std::nullopt;\n    }\n    return Union_long_float_std_string_std_nullopt(std::max(a.f0,\
    \ b.f0));", "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if\
    \ (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0;\n  \
    \  }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : a.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 > b.f0) {\n        return a;\n\
    \    }\n    if (a.f0 < b.f0) {\n        return b;\n    }\n    if (a.f1 > b.f1)\
    \ {\n        return a;\n    }\n    if (a.f1 < b.f1) {\n        return b;\n   \
    \ }\n    if (a.f2 > b.f2) {\n        return a;\n    }\n    if (a.f2 < b.f2) {\n\
    \        return b;\n    }\n    return std::nullopt;", "    if (a == b) return\
    \ a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if\
    \ (a.f3 == b.f3) return a;\n    if (a.f1 == b.f2) return a;\n    if (a.f2 == b.f3)\
    \ return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n\
    \    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2\
    \ == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if\
    \ (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3)\
    \ return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n\
    \    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2\
    \ == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if\
    \ (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3)\
    \ return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n\
    \    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2\
    \ == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if\
    \ (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3)\
    \ return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n\
    \    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2\
    \ == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if (a.f1 == b.f1) return\
    \ a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n    if\
    \ (a.f1 == b.f", "    if (a.f0 != b.f0)\n        return std::nullopt;\n    if\
    \ (a.f1 != b.f1)\n        return std::nullopt;\n    if (a.f2 != b.f2)\n      \
    \  return std::nullopt;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n\
    \        return std::nullopt;\n    }\n    if (a.f1 == b.f1) {\n        return\
    \ std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n        return std::nullopt;\n\
    \    }\n    if (a.f3 == b.f3) {\n        return std::nullopt;\n    }\n    return\
    \ Union_long_float_std_string_std_nullopt(std::max(a.f0, b.f0));", "    if (a.f0\
    \ != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1) {\n \
    \       return std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return std::nullopt;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return a.f0;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return a.f1;\n    }\n    if (a.f2 !=\
    \ b.f2) {\n        return a.f2;\n    }\n    return a.f3;", "    if (a == b) return\
    \ std::nullopt;\n    if (a.f1 == b.f1) return std::nullopt;\n    if (a.f2 == b.f2)\
    \ return std::nullopt;\n    if (a.f3 == b.f3) return std::nullopt;\n    if (a.f0\
    \ < b.f0) return a;\n    if (a.f0 > b.f0) return b;\n    if (a.f1 < b.f1) return\
    \ a;\n    if (a.f1 > b.f1) return b;\n    if (a.f2 < b.f2) return a;\n    if (a.f2\
    \ > b.f2) return b;\n    return a;", "    if (a == b) return std::nullopt;\n \
    \   if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if\
    \ (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1\
    \ == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2)\
    \ return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return\
    \ a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n\
    \    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if\
    \ (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2\
    \ == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2)\
    \ return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return\
    \ a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n\
    \    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if\
    \ (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1\
    \ == b.f2) return a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1)\
    \ return a.f2;\n    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return\
    \ a.f2;\n    if (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n\
    \    if (a.f2 == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if\
    \ (a.f2 == b.f1) return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2\
    \ == b.f2) return a.f1;\n    if (a.f1 == b.f2) return a.f2;\n    if (a.f2 == b.f1)\
    \ return a.f1;\n    if (a.f1 == b.f1) return a.f2;\n    if (a.f2 == b.f2) return\
    \ a.", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1\
    \ == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2 == b.f2) {\n \
    \       return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n        return std::nullopt;\n\
    \    }\n    return a.f1 > b.f1 ? a : b;", "    if (a.f0 != b.f0) {\n        return\
    \ a.f0 > b.f0 ? std::nullopt : b.f0;\n    }\n    if (a.f1 != b.f1) {\n       \
    \ return a.f1 > b.f1 ? std::nullopt : b.f1;\n    }\n    if (a.f2 != b.f2) {\n\
    \        return a.f2 > b.f2 ? std::nullopt : b.f2;\n    }\n    return std::nullopt;",
  "    if (a == b) return a;\n    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2)\
    \ return a;\n    if (a.f3 == b.f3) return a;\n    return std::nullopt;", "   \
    \ if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n     \
    \   return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if\
    \ (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return\
    \ a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 ==\
    \ b.f3) {\n        return a;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n        return\
    \ b;\n    }\n    if (a.f1 == b.f1) {\n        return a;\n    }\n    if (a.f1 ==\
    \ b.f1) {\n        return b;\n    }\n    if (a.f2 == b.f2) {\n        return a;\n\
    \    }\n    if (a.f2 == b.f2) {\n        return b;\n    }\n    if (a.f3 == b.f3)\
    \ {\n        return a;\n    }\n    if (a.f3 == b.f3) {\n        return b;\n  \
    \  }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 == b.f1)\
    \ return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return a;\n\
    \    return std::nullopt;", "    if (a == b) return a;\n    if (a < b) return\
    \ a;\n    if (a > b) return b;\n    return std::nullopt;", "    if (a.f0 != b.f0)\n\
    \        return std::nullopt;\n    if (a.f1 != b.f1)\n        return std::nullopt;\n\
    \    if (a.f2 != b.f2)\n        return std::nullopt;\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1)\
    \ {\n        return std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return\
    \ std::nullopt;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n\
    \        return a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0 ? std::nullopt : a.f0\
    \ > b.f0 ? a.f0 : b.f0;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 >\
    \ b.f1 ? std::nullopt : a.f1 < b.f1 ? std::nullopt : a.f1 > b.f1 ? a.f1 : b.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2\
    \ < b.f2 ? std::nullopt : a.f2 > b.f2 ? a.f2 : b.f2;\n    }\n    return std::nullopt;",
  "    if (a.f0 > b.f0) {\n        return a;\n    }\n    if (a.f0 < b.f0) {\n    \
    \    return b;\n    }\n    if (a.f1 > b.f1) {\n        return a;\n    }\n    if\
    \ (a.f1 < b.f1) {\n        return b;\n    }\n    if (a.f2 > b.f2) {\n        return\
    \ a;\n    }\n    if (a.f2 < b.f2) {\n        return b;\n    }\n    if (a.f3 ==\
    \ std::nullopt) {\n        return b;\n    }\n    if (a.f3 == b.f3) {\n       \
    \ return a;\n    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n    \
    \    return std::nullopt;\n    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n\
    \    }\n    if (a.f2 == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3\
    \ == b.f3) {\n        return std::nullopt;\n    }\n    return a.f1 > b.f1 ? a\
    \ : b;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n    }\n    if\
    \ (a.f1 != b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return std::nullopt;\n    }\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        return std::nullopt;\n    }\n    if (a.f1 != b.f1) {\n \
    \       return std::nullopt;\n    }\n    if (a.f2 != b.f2) {\n        return std::nullopt;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    if (a.f3 == b.f3) {\n \
    \       return std::nullopt;\n    }\n    return a.f1 > b.f1 ? a : b;", "    if\
    \ (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0 ?\
    \ std::nullopt : a.f0 >= b.f0 ? std::nullopt : a.f0 <= b.f0 ? std::nullopt : a.f0\
    \ != b.f0 ? std::nullopt : a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0 ? std::nullopt\
    \ : a.f0 >= b.f0 ? std::nullopt : a.f0 <= b.f0 ? std::nullopt : a.f0 != b.f0 ?\
    \ std::nullopt : a.f0 > b.f0 ? std::nullopt : a.f0 < b.f0 ? std::nullopt : a.f0\
    \ >= b.f0 ? std::nullopt : a.f0 <= b.f0 ? std::nullopt : a.f0 != b.f0 ? std::nullopt\
    \ : std::nullopt;\n    }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1\
    \ ? std::nullopt : a.f1 < b.f1 ? std::nullopt : a.f1 >= b.f1 ? std::nullopt :\
    \ a.f1 <= b.f1 ? std::nullopt : a.f1 != b.f1 ? std::nullopt : a.f1 > b.f1 ? std::nullopt\
    \ : a.f1 < b.f1 ? std::nullopt : a.f1 >= b.f1 ? std::nullopt : a.f1 <= b.f1 ?\
    \ std::nullopt : a.f1 != b.f1 ? std::nullopt : a.f1 > b.f1 ? std::nullopt : a.f1\
    \ < b.f1 ? std::nullopt : a.f1 >= b.f1 ? std::nullopt : a.f1 <= b.f1 ? std::nullopt\
    \ : a.f1 != b.f1 ? std::nullopt : std::nullopt;\n    }\n    if (a.f2 != b.f2)\
    \ {\n        return a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? std::nullopt :\
    \ a.f2 >= b.f2 ? std::nullopt : a.f2 <= b.f2 ? std::nullopt : a.f2 != b.f2 ? std::nullopt\
    \ : a.f2 > b.f2 ? std::nullopt : a.f2 < b.f2 ? ", "    if (a == b) return a;\n\
    \    if (a.f1 == b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3\
    \ == b.f3) return a;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n  \
    \      return a.f0 > b.f0 ? std::nullopt : a.f0;\n    }\n    if (a.f1 != b.f1)\
    \ {\n        return a.f1 > b.f1 ? std::nullopt : a.f1;\n    }\n    if (a.f2 !=\
    \ b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : a.f2;\n    }\n    return\
    \ std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n   \
    \ }\n    if (a.f1 == b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ == b.f2) {\n        return std::nullopt;\n    }\n    return a.f1 > b.f1 ? a\
    \ : b;", "    if (a == b) return a;\n    if (a < b) return a;\n    if (a > b)\
    \ return b;\n    return std::nullopt;", "    if (a.f0 != b.f0)\n        return\
    \ std::nullopt;\n    if (a.f1 != b.f1)\n        return std::nullopt;\n    if (a.f2\
    \ != b.f2)\n        return std::nullopt;\n    return std::nullopt;", "    if (a.f0\
    \ != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0;\n    }\n    if\
    \ (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1;\n    }\n\
    \    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : b.f2;\n\
    \    }\n    return std::nullopt;", "    if (a == b) return a;\n    if (a.f1 ==\
    \ b.f1) return a;\n    if (a.f2 == b.f2) return a;\n    if (a.f3 == b.f3) return\
    \ a;\n    return std::nullopt;", "    if (a.f0 != b.f0) {\n        return std::nullopt;\n\
    \    }\n    if (a.f1 != b.f1) {\n        return std::nullopt;\n    }\n    if (a.f2\
    \ != b.f2) {\n        return std::nullopt;\n    }\n    return std::nullopt;",
  "    if (a.f0 != b.f0) {\n        return a.f0 > b.f0 ? std::nullopt : b.f0;\n  \
    \  }\n    if (a.f1 != b.f1) {\n        return a.f1 > b.f1 ? std::nullopt : b.f1;\n\
    \    }\n    if (a.f2 != b.f2) {\n        return a.f2 > b.f2 ? std::nullopt : b.f2;\n\
    \    }\n    return std::nullopt;", "    if (a.f0 > b.f0) {\n        return a;\n\
    \    }\n    if (a.f0 < b.f0) {\n        return b;\n    }\n    if (a.f1 > b.f1)\
    \ {\n        return a;\n    }\n    if (a.f1 < b.f1) {\n        return b;\n   \
    \ }\n    if (a.f2 > b.f2) {\n        return a;\n    }\n    if (a.f2 < b.f2) {\n\
    \        return b;\n    }\n    if (a.f3 == b.f3) {\n        return a;\n    }\n\
    \    return std::nullopt;", "    if (a.f0 > b.f0)\n        return a;\n    else\
    \ if (a.f0 < b.f0)\n        return b;\n    else if (a.f1 == b.f1)\n        return\
    \ a;\n    else if (a.f1 == b.f1)\n        return b;\n    else if (a.f2 == b.f2)\n\
    \        return a;\n    else if (a.f2 == b.f2)\n        return b;\n    else if\
    \ (a.f3 == b.f3)\n        return a;\n    else if (a.f3 == b.f3)\n        return\
    \ b;\n    else\n        return std::nullopt;"]
stop_tokens:
- "\n}"

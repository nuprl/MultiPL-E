language: cpp
name: HumanEval_47_median
results:
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long l1 = 0, l2 = mid;\n    long long m1 = 0, m2 = mid;\n\
    \    float midVal = l[mid];\n    while (true) {\n        if (l1 < mid) m1 = l1;\n\
    \        if (l2 < mid) m2 = l2;\n        if (m1 < m2 && m1 < midVal) l1 = m1 +\
    \ 1;\n        if (m2 < mid) l2 = m2;\n        if (l1 > l2) break;\n        midVal\
    \ = l[mid];\n    }\n    return midVal;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  assert(n != 0);\n  long long mid = n / 2;\n\
    \  if (n % 2 == 0) {\n    return l[mid];\n  } else {\n    return (l[mid] + l[mid])\
    \ / 2.0;\n  }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjxq0mq1f: /tmp/tmpjxq0mq1f.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2-1]\
    \ + (l[n/2] - l[n/2-1])/2.0;\n    } else {\n        return l[n/2];\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpn3gs7btx: /tmp/tmpn3gs7btx.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsvwqa8ra: /tmp/tmpsvwqa8ra.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3ob8an_q: /tmp/tmp3ob8an_q.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwjp6ihae: /tmp/tmpwjp6ihae.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long m1 = mid;\n    long long m2 = mid + 1;\n    long long\
    \ m3 = mid + 2;\n    long long m4 = mid + 3;\n    long long m5 = mid + 4;\n  \
    \  long long m6 = mid + 5;\n    long long m7 = mid + 6;\n    long long m8 = mid\
    \ + 7;\n    long long m9 = mid + 8;\n    long long m10 = mid + 9;\n    long long\
    \ m11 = mid + 10;\n    long long m12 = mid + 11;\n    long long m13 = mid + 12;\n\
    \    long long m14 = mid + 13;\n    long long m15 = mid + 14;\n    long long m16\
    \ = mid + 15;\n    long long m17 = mid + 16;\n    long long m18 = mid + 17;\n\
    \    long long m19 = mid + 18;\n    long long m20 = mid + 19;\n    long long m21\
    \ = mid + 20;\n    long long m22 = mid + 21;\n    long long m23 = mid + 22;\n\
    \    long long m24 = mid + 23;\n    long long m25 = mid + 24;\n    long long m26\
    \ = mid + 25;\n    long long m27 = mid + 26;\n    long long m28 = mid + 27;\n\
    \    long long m29 = mid + 28;\n    long long m30 = mid + 29;\n    long long m31\
    \ = mid + 30;\n    long long m32 = mid + 31;\n    long long m33 = mid + 32;\n\
    \    long long m34 = mid + 33;\n    long long m35 = mid + 34;\n    long long m36\
    \ = mid + 35;\n    long long m37 = mid + 36;\n    long long m38 = mid + 37;\n\
    \    long long m39 = mid + 38;\n    long long m40 = mid + 39;\n    long long m41\
    \ = mid + 40;\n    long long m42 = mid + 41;\n    long long m43 = mid + 42;\n\
    \    long long m44 = mid + 43;\n    long long m45 = mid + 44;\n    long long m46\
    \ = mid + 45;\n    long long m47 = mid + 46;\n    long long m48 = mid + 47;\n\
    \    long long m49 = mid + 48;\n    long long m50 = mid + 49;\n    long long m51\
    \ = m\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vwyty2c.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp7vwyty2c.cpp:62:21: error: \u2018m\u2019 was not declared in this scope;\
    \ did you mean \u2018m9\u2019?\n   62 |     long long m51 = m\n      |       \
    \              ^\n      |                     m9\n/tmp/tmp7vwyty2c.cpp:63:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   63 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l[0] + (l.size() / 2);\n\
    \    float midval = mid;\n    float leftval = l[0];\n    float rightval = l[l.size()\
    \ - 1];\n    float leftmedian = midval;\n    float rightmedian = midval;\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] < midval) {\n      \
    \      leftval = l[i];\n            leftmedian = midval;\n        } else if (l[i]\
    \ > midval) {\n            rightval = l[i];\n            rightmedian = midval;\n\
    \        } else {\n            midval = l[i];\n        }\n    }\n    return (leftmedian\
    \ + rightmedian) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpoin6_bx0: /tmp/tmpoin6_bx0.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    long long midVal = l[mid];\n\
    \    while (left < right) {\n        long long midValLeft = l[left];\n       \
    \ long long midValRight = l[right];\n        if (midValLeft < midValRight) {\n\
    \            left++;\n        } else if (midValLeft > midValRight) {\n       \
    \     right--;\n        } else {\n            return midVal;\n        }\n    }\n\
    \    return l[left];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmon1i_vo: /tmp/tmpmon1i_vo.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsmr07jft: /tmp/tmpsmr07jft.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return (b\
    \ - a) / 2.0;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpndpmnbb3: /tmp/tmpndpmnbb3.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    float c =\
    \ l[mid];\n    float d = l[n - 1];\n    if (a > b) std::swap(a, b);\n    if (b\
    \ > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) \n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplp4rdsg3.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmplp4rdsg3.cpp:60:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   60 | }\n      | ^\n/tmp/tmplp4rdsg3.cpp:60:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   60 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    }\n    return rightval;\n}\nint main() {\n  \
    \  auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpvv1hmgpa: /tmp/tmpvv1hmgpa.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 1) {\n        return\
    \ l[size / 2];\n    }\n    float mid = size / 2;\n    float a = l[mid];\n    float\
    \ b = l[size / 2 - 1];\n    return a + (b - a) * ((size / 2) - 1);\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6wo_9zxg: /tmp/tmp6wo_9zxg.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsvwqa8ra: /tmp/tmpsvwqa8ra.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwjp6ihae: /tmp/tmpwjp6ihae.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    }\n    return rightval;\n}\nint main() {\n  \
    \  auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpvv1hmgpa: /tmp/tmpvv1hmgpa.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 % 2\
    \ == 0) {\n        return ((l1[l1 / 2 - 1] + l1[l1 / 2]) / 2.0f);\n    } else\
    \ {\n        return ((l2[l2 / 2 - 1] + l2[l2 / 2]) / 2.0f);\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb08h7b5l.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpb08h7b5l.cpp:15:31: error: invalid types \u2018long long int[long long\
    \ int]\u2019 for array subscript\n   15 |         return ((l1[l1 / 2 - 1] + l1[l1\
    \ / 2]) / 2.0f);\n      |                               ^\n/tmp/tmpb08h7b5l.cpp:15:44:\
    \ error: invalid types \u2018long long int[long long int]\u2019 for array subscript\n\
    \   15 |         return ((l1[l1 / 2 - 1] + l1[l1 / 2]) / 2.0f);\n      |     \
    \                                       ^\n/tmp/tmpb08h7b5l.cpp:17:31: error:\
    \ invalid types \u2018long long int[long long int]\u2019 for array subscript\n\
    \   17 |         return ((l2[l2 / 2 - 1] + l2[l2 / 2]) / 2.0f);\n      |     \
    \                          ^\n/tmp/tmpb08h7b5l.cpp:17:44: error: invalid types\
    \ \u2018long long int[long long int]\u2019 for array subscript\n   17 |      \
    \   return ((l2[l2 / 2 - 1] + l2[l2 / 2]) / 2.0f);\n      |                  \
    \                          ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        float\
    \ mid = l[size / 2];\n        float left = l[size / 2 - 1];\n        float right\
    \ = l[size / 2];\n        return ((mid < left) ? left : ((mid > right) ? right\
    \ : mid));\n    } else {\n        float mid = l[size / 2 - 1];\n        float\
    \ left = l[size / 2];\n        float right = l[size / 2 + 1];\n        return\
    \ ((mid < left) ? left : ((mid > right) ? right : mid));\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6b4_1vlw: /tmp/tmp6b4_1vlw.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgfrnlo38: /tmp/tmpgfrnlo38.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbcrzc0cq: /tmp/tmpbcrzc0cq.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = n - 2;\n    long l5 = n - 3;\n    long l6 = n - 4;\n    long l7 = n - 5;\n\
    \    long l8 = n - 6;\n    long l9 = n - 7;\n    long l10 = n - 8;\n    long l11\
    \ = n - 9;\n    long l12 = n - 10;\n    long l13 = n - 11;\n    long l14 = n -\
    \ 12;\n    long l15 = n - 13;\n    long l16 = n - 14;\n    long l17 = n - 15;\n\
    \    long l18 = n - 16;\n    long l19 = n - 17;\n    long l20 = n - 18;\n    long\
    \ l21 = n - 19;\n    long l22 = n - 20;\n    long l23 = n - 21;\n    long l24\
    \ = n - 22;\n    long l25 = n - 23;\n    long l26 = n - 24;\n    long l27 = n\
    \ - 25;\n    long l28 = n - 26;\n    long l29 = n - 27;\n    long l30 = n - 28;\n\
    \    long l31 = n - 29;\n    long l32 = n - 30;\n    long l33 = n - 31;\n    long\
    \ l34 = n - 32;\n    long l35 = n - 33;\n    long l36 = n - 34;\n    long l37\
    \ = n - 35;\n    long l38 = n - 36;\n    long l39 = n - 37;\n    long l40 = n\
    \ - 38;\n    long l41 = n - 39;\n    long l42 = n - 40;\n    long l43 = n - 41;\n\
    \    long l44 = n - 42;\n    long l45 = n - 43;\n    long l46 = n - 44;\n    long\
    \ l47 = n - 45;\n    long l48 = n - 46;\n    long l49 = n - 47;\n    long l50\
    \ = n - 48;\n    long l51 = n - 49;\n    long l52 = n - 50;\n    long l53 = n\
    \ - 51;\n    long l54 = n - 52;\n    long l55 = n - 53;\n    long l56 = n - 54;\n\
    \    long l57 = n - 55;\n    long l58 = n - 56;\n    long l\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppu1wt1hz.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmppu1wt1hz.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmppu1wt1hz.cpp:71:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   71 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  assert(n >= 2);\n  long long mid = n / 2;\n\
    \  long long l1 = mid;\n  long long l2 = n - mid;\n  long long l3 = n - 1;\n \
    \ long long l4 = mid;\n  long long l5 = mid;\n  long long l6 = n - 1;\n  long\
    \ long l7 = mid;\n  long long l8 = n - 1;\n  long long l9 = mid;\n  long long\
    \ l10 = mid;\n  long long l11 = n - 1;\n  long long l12 = mid;\n  long long l13\
    \ = mid;\n  long long l14 = n - 1;\n  long long l15 = mid;\n  long long l16 =\
    \ n - 1;\n  long long l17 = mid;\n  long long l18 = mid;\n  long long l19 = n\
    \ - 1;\n  long long l20 = mid;\n  long long l21 = mid;\n  long long l22 = n -\
    \ 1;\n  long long l23 = mid;\n  long long l24 = mid;\n  long long l25 = n - 1;\n\
    \  long long l26 = mid;\n  long long l27 = mid;\n  long long l28 = n - 1;\n  long\
    \ long l29 = mid;\n  long long l30 = mid;\n  long long l31 = n - 1;\n  long long\
    \ l32 = mid;\n  long long l33 = mid;\n  long long l34 = n - 1;\n  long long l35\
    \ = mid;\n  long long l36 = mid;\n  long long l37 = n - 1;\n  long long l38 =\
    \ mid;\n  long long l39 = mid;\n  long long l40 = n - 1;\n  long long l41 = mid;\n\
    \  long long l42 = mid;\n  long long l43 = n - 1;\n  long long l44 = mid;\n  long\
    \ long l45 = mid;\n  long long l46 = n - 1;\n  long long l47 = mid;\n  long long\
    \ l48 = mid;\n  long long l49 = n - 1;\n  long long l50 = mid;\n  long long l51\
    \ = mid;\n  long long l52 = n - 1;\n  long long l53 = mid;\n  long long l54 =\
    \ mid;\n  long long l55 = n - 1;\n  long long l56 = \n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpabhk20kc.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpabhk20kc.cpp:68:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   68 | }\n      | ^\n/tmp/tmpabhk20kc.cpp:68:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   68 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid];\n    float\
    \ rightval = l[n - 1];\n    for (long long i = mid + 1; i < n; i++) {\n      \
    \  if (l[i] < leftval) leftval = l[i];\n        if (l[i] > rightval) rightval\
    \ = l[i];\n    }\n    return (leftval + rightval) / 2;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp9clx4nzp: /tmp/tmp9clx4nzp.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\n\
    \    return right;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp947o0y8w: /tmp/tmp947o0y8w.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    }\n    float m = (float)l[n/2];\n    float h = (float)l[n/2-1];\n    return\
    \ (h + m) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8b8fs7dd: /tmp/tmp8b8fs7dd.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long m1 = mid;\n    long long m2 = mid + 1;\n    long long\
    \ m3 = mid + 2;\n    long long m4 = mid + 3;\n    long long m5 = mid + 4;\n  \
    \  long long m6 = mid + 5;\n    long long m7 = mid + 6;\n    long long m8 = mid\
    \ + 7;\n    long long m9 = mid + 8;\n    long long m10 = mid + 9;\n    long long\
    \ m11 = mid + 10;\n    long long m12 = mid + 11;\n    long long m13 = mid + 12;\n\
    \    long long m14 = mid + 13;\n    long long m15 = mid + 14;\n    long long m16\
    \ = mid + 15;\n    long long m17 = mid + 16;\n    long long m18 = mid + 17;\n\
    \    long long m19 = mid + 18;\n    long long m20 = mid + 19;\n    long long m21\
    \ = mid + 20;\n    long long m22 = mid + 21;\n    long long m23 = mid + 22;\n\
    \    long long m24 = mid + 23;\n    long long m25 = mid + 24;\n    long long m26\
    \ = mid + 25;\n    long long m27 = mid + 26;\n    long long m28 = mid + 27;\n\
    \    long long m29 = mid + 28;\n    long long m30 = mid + 29;\n    long long m31\
    \ = mid + 30;\n    long long m32 = mid + 31;\n    long long m33 = mid + 32;\n\
    \    long long m34 = mid + 33;\n    long long m35 = mid + 34;\n    long long m36\
    \ = mid + 35;\n    long long m37 = mid + 36;\n    long long m38 = mid + 37;\n\
    \    long long m39 = mid + 38;\n    long long m40 = mid + 39;\n    long long m41\
    \ = mid + 40;\n    long long m42 = mid + 41;\n    long long m43 = mid + 42;\n\
    \    long long m44 = mid + 43;\n    long long m45 = mid + 44;\n    long long m46\
    \ = mid + 45;\n    long long m47 = mid + 46;\n    long long m48 = mid + 47;\n\
    \    long long m49 = mid + 48;\n    long long m50 = mid + 49;\n    long long m51\
    \ = m\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vwyty2c.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp7vwyty2c.cpp:62:21: error: \u2018m\u2019 was not declared in this scope;\
    \ did you mean \u2018m9\u2019?\n   62 |     long long m51 = m\n      |       \
    \              ^\n      |                     m9\n/tmp/tmp7vwyty2c.cpp:63:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   63 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (auto i : l)\
    \ {\n        sum += i;\n        ++count;\n    }\n    if (count == 0)\n       \
    \ return 0;\n    float avg = sum / count;\n    long long mid = count / 2;\n  \
    \  float median = (l[mid] + l[count - 1]) / 2;\n    return avg < median ? avg\
    \ : median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpu_1b2_hs: /tmp/tmpu_1b2_hs.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgfrnlo38: /tmp/tmpgfrnlo38.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    long long left = l[mid];\n    long long right = l[n - 1];\n\
    \    if (left > right) return left;\n    return right;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjjvfvs9t: /tmp/tmpjjvfvs9t.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    }\n    else {\n        return (l[n/2] + l[n/2-1])/2;\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpcozow1sw: /tmp/tmpcozow1sw.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n % 2 == 0);\n    long long\
    \ int m = n / 2;\n    long long int left = 0, right = m;\n    float mid;\n   \
    \ while (left < right) {\n        mid = (left + right) / 2;\n        if (l[mid]\
    \ <= l[mid + 1]) {\n            left = mid + 1;\n        } else {\n          \
    \  right = mid;\n        }\n    }\n    mid = (left + right) / 2;\n    mid = l[mid];\n\
    \    return mid;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpb4qdv0m9: /tmp/tmpb4qdv0m9.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return a +\
    \ (b - a) * ((float)n / (float)2);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpy1icj2iq: /tmp/tmpy1icj2iq.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n % 2 == 0);\n    long mid = n / 2;\n\
    \    long l1 = l[mid];\n    long l2 = l[mid+1];\n    if (l2 < l1) {\n        std::swap(l1,\
    \ l2);\n    }\n    return ((l1 + l2) / 2.0);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpv3fnep7l: /tmp/tmpv3fnep7l.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    float midval = l[mid];\n \
    \   while (left < right) {\n        long long midvalleft = l[left];\n        long\
    \ long midvalright = l[right];\n        if (midvalleft < midvalright) {\n    \
    \        left++;\n        } else if (midvalleft > midvalright) {\n           \
    \ right--;\n        } else {\n            return midval;\n        }\n    }\n \
    \   return midval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp10i5n5br: /tmp/tmp10i5n5br.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l[0] + (l.size() / 2);\n\
    \    float median = mid;\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < mid) {\n            median = l[i];\n        }\n    }\n    return median;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpaww9id8v: /tmp/tmpaww9id8v.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = (float)sum / l.size();\n    return\
    \ median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0w1l2lbw: /tmp/tmp0w1l2lbw.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (long long i\
    \ = 0; i < l.size(); i++) {\n        sum += l[i];\n        count += 1;\n    }\n\
    \    if (count % 2 == 0) {\n        return (sum / 2);\n    } else {\n        return\
    \ (sum / 2 + l[count / 2]);\n    }\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmk1ds1x9: /tmp/tmpmk1ds1x9.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 1);\n    long long int\
    \ mid = n / 2;\n    long long int left = 0, right = mid;\n    float midval = l[mid];\n\
    \    while (left < right) {\n        long long int midvalleft = l[left];\n   \
    \     long long int midvalright = l[right];\n        if (midvalleft > midvalright)\
    \ {\n            long long int temp = midvalleft;\n            midvalleft = midvalright;\n\
    \            midvalright = temp;\n        }\n        if (midvalright < midvalleft)\
    \ {\n            long long int temp = midvalright;\n            midvalright =\
    \ midvalleft;\n            midvalleft = temp;\n        }\n        if (midvalleft\
    \ > midvalright) {\n            long long int temp = midvalleft;\n           \
    \ midvalleft = midvalright;\n            midvalright = temp;\n        }\n    \
    \    long long int midvalmid = l[mid];\n        if (midvalmid < midvalleft) {\n\
    \            midvalleft = midvalmid;\n        }\n        if (midvalmid > midvalright)\
    \ {\n            midvalright = midvalmid;\n        }\n        long long int midvalmidleft\
    \ = l[mid];\n        long long int midvalmidright = l[mid];\n        if (midvalmidleft\
    \ > midvalmidright) {\n            long long int temp = midvalmidleft;\n     \
    \       midvalmidleft = midvalmidright;\n            midvalmidright = temp;\n\
    \        }\n        if (midvalmidright < midvalmidleft) {\n            long long\
    \ int temp = midvalmidright;\n            midvalmidright = midvalmidleft;\n  \
    \          midvalmidleft = temp;\n        }\n        if (midvalmidleft > midvalmidright)\
    \ {\n            long long int temp = midvalmidleft;\n            midvalmidleft\
    \ = midvalmidright;\n            midvalmidright = temp;\n        }\n        long\
    \ long int midvalmidmid = l[mid];\n        if (midvalmidmid < midvalmidleft) {\n\
    \            midvalmidleft = midvalmidmid;\n        }\n        if (midvalmidmid\
    \ > midvalmidright) {\n            midvalmidright = midvalmidmid;\n        }\n\
    \        long long int midvalmidmidleft = l[mid];\n        long long int midvalmidmidright\
    \ = l[mid];\n        if (midvalmidmidleft > midvalmidmidright) {\n           \
    \ long long int temp = midvalmidmidleft;\n            midval\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyp47rq1p.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpyp47rq1p.cpp:67:19: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n   67 |             midval\n      |                   ^\n      |    \
    \               ;\n   68 | }\n      | ~                  \n/tmp/tmpyp47rq1p.cpp:69:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   69 | int main() {\n      |            ^\n/tmp/tmpyp47rq1p.cpp:76:1: error:\
    \ expected \u2018}\u2019 at end of input\n   76 | }\n      | ^\n/tmp/tmpyp47rq1p.cpp:14:26:\
    \ note: to match this \u2018{\u2019\n   14 |     while (left < right) {\n    \
    \  |                          ^\n/tmp/tmpyp47rq1p.cpp:76:1: error: expected \u2018\
    }\u2019 at end of input\n   76 | }\n      | ^\n/tmp/tmpyp47rq1p.cpp:8:35: note:\
    \ to match this \u2018{\u2019\n    8 | float median(std::vector<long> l) {\n \
    \     |                                   ^\n/tmp/tmpyp47rq1p.cpp:76:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   76 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 1) {\n        return l[n/2];\n\
    \    }\n    float mid = l[n/2-1] + l[n/2];\n    return mid / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0a3nopzt: /tmp/tmp0a3nopzt.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2)\n        return l[0];\n  \
    \  long long mid = n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n\
    \    if (l2 == 0)\n        return l[0];\n    if (l1 < l2)\n        return median(l,\
    \ l1, mid);\n    return median(l, mid, l2);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5v1msbdx.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp5v1msbdx.cpp:18:33: error: too many arguments to function \u2018float\
    \ median(std::vector<long int>)\u2019\n   18 |         return median(l, l1, mid);\n\
    \      |                                 ^\n/tmp/tmp5v1msbdx.cpp:8:7: note: declared\
    \ here\n    8 | float median(std::vector<long> l) {\n      |       ^~~~~~\n/tmp/tmp5v1msbdx.cpp:19:29:\
    \ error: too many arguments to function \u2018float median(std::vector<long int>)\u2019\
    \n   19 |     return median(l, mid, l2);\n      |                            \
    \ ^\n/tmp/tmp5v1msbdx.cpp:8:7: note: declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n"
  stdout: ''
  timestamp: 1659792383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float median = l[mid];\n    for\
    \ (long long i = mid; i < l.size(); i++) {\n        median = std::max(median,\
    \ l[i]);\n    }\n    return median;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcvw2u5vm.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpcvw2u5vm.cpp:12:39: error: no matching function for call to \u2018\
    max(float&, __gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type&)\u2019\
    \n   12 |         median = std::max(median, l[i]);\n      |                  \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpcvw2u5vm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:222:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::max(const\
    \ _Tp&, const _Tp&)\u2019\n  222 |     max(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcvw2u5vm.cpp:12:39:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    float\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   12 |         median =\
    \ std::max(median, l[i]);\n      |                                       ^\nIn\
    \ file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /"
  stdout: ''
  timestamp: 1659792383
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  if (n < 2) return 0;\n  long long mid = n\
    \ / 2;\n  long long left = 0, right = mid;\n  while (left < right) {\n    long\
    \ long mid1 = (left + right) / 2;\n    long long mid2 = mid - 1;\n    if (l[mid1]\
    \ > l[mid2]) {\n      right = mid1;\n    } else {\n      left = mid2;\n    }\n\
    \  }\n  return l[mid];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792388
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n\
    \ - 1];\n    if (left == right) return left;\n    if (left > right) return median(l[mid]);\n\
    \    return median(l[n - 1]);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6985cs9k.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp6985cs9k.cpp:15:43: error: could not convert \u2018l.std::vector<long\
    \ int>::operator[](((std::vector<long int>::size_type)mid))\u2019 from \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type\u2019\
    \ {aka \u2018long int\u2019} to \u2018std::vector<long int>\u2019\n   15 |   \
    \  if (left > right) return median(l[mid]);\n      |                         \
    \                  ^\n      |                                           |\n  \
    \    |                                           __gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type {aka long int}\n/tmp/tmp6985cs9k.cpp:16:27: error:\
    \ could not convert \u2018l.std::vector<long int>::operator[](((std::vector<long\
    \ int>::size_type)(n - 1)))\u2019 from \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019} to \u2018std::vector<long\
    \ int>\u2019\n   16 |     return median(l[n - 1]);\n      |                  \
    \         ^\n      |                           |\n      |                    \
    \       __gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type\
    \ {aka long int}\n"
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    float m1 = l1;\n \
    \   float m2 = l2;\n    float m = (m1 + m2) / 2;\n    if (m == l1) return m1;\n\
    \    if (m == l2) return m2;\n    if (m == m1) return l1;\n    if (m == m2) return\
    \ l2;\n    if (m == m) return m1;\n    if (m == m) return m2;\n    return m;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmphdi_5lpg: /tmp/tmphdi_5lpg.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    long l3 = mid;\n    long l4 =\
    \ n - mid;\n    long l5 = mid;\n    long l6 = n - mid;\n    long l7 = mid;\n \
    \   long l8 = n - mid;\n    long l9 = mid;\n    long l10 = n - mid;\n    long\
    \ l11 = mid;\n    long l12 = n - mid;\n    long l13 = mid;\n    long l14 = n -\
    \ mid;\n    long l15 = mid;\n    long l16 = n - mid;\n    long l17 = mid;\n  \
    \  long l18 = n - mid;\n    long l19 = mid;\n    long l20 = n - mid;\n    long\
    \ l21 = 0;\n    long l22 = 0;\n    long l23 = 0;\n    long l24 = 0;\n    long\
    \ l25 = 0;\n    long l26 = 0;\n    long l27 = 0;\n    long l28 = 0;\n    long\
    \ l29 = 0;\n    long l30 = 0;\n    long l31 = 0;\n    long l32 = 0;\n    long\
    \ l33 = 0;\n    long l34 = 0;\n    long l35 = 0;\n    long l36 = 0;\n    long\
    \ l37 = 0;\n    long l38 = 0;\n    long l39 = 0;\n    long l40 = 0;\n    long\
    \ l41 = 0;\n    long l42 = 0;\n    long l43 = 0;\n    long l44 = 0;\n    long\
    \ l45 = 0;\n    long l46 = 0;\n    long l47 = 0;\n    long l48 = 0;\n    long\
    \ l49 = 0;\n    long l50 = 0;\n    long l51 = 0;\n    long l52 = 0;\n    long\
    \ l53 = 0;\n    long l54 = 0;\n    long l55 = 0;\n    long l56 = 0;\n    long\
    \ l57 = 0;\n    long l58 = 0;\n    long l59 = 0;\n    long l60 = 0;\n    long\
    \ l61 = 0;\n    long l62 = 0;\n    long l63 = 0;\n    long l64 = 0;\n    long\
    \ l65 = 0;\n    long l66 = 0;\n    long l67 = 0;\n    long l68 = 0;\n    long\
    \ l69 = 0;\n    long l70 = 0;\n    long l71 = 0;\n    long l72 = 0;\n    long\
    \ l73 = 0;\n    long l74 = 0;\n    long l75 = 0;\n    long l76\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nqvwln5.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp1nqvwln5.cpp:88:1: error: expected initializer before \u2018}\u2019\
    \ token\n   88 | }\n      | ^\n/tmp/tmp1nqvwln5.cpp:88:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   88 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return a +\
    \ (b - a) * ((n - 1) / 2.0);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8fnj_yyl: /tmp/tmp8fnj_yyl.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    float mid = static_cast<float>(l[n-1]\
    \ + l[n-1]) / 2;\n    float low = l[n-1];\n    float high = l[n-1];\n    for (long\
    \ long i = 2; i < n; i++) {\n        low = std::min(low, l[i-1]);\n        high\
    \ = std::max(high, l[i-1]);\n    }\n    return mid + ((high - low) / 2);\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppq_7_pr_.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmppq_7_pr_.cpp:15:35: error: no matching function for call to \u2018\
    min(float&, __gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type&)\u2019\
    \n   15 |         low = std::min(low, l[i-1]);\n      |                      \
    \             ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmppq_7_pr_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:198:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmppq_7_pr_.cpp:15:35:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    float\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |         low = std::min(low,\
    \ l[i-1]);\n      |                                   ^\nIn file included from\
    \ /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/g"
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n % 2 == 0);\n    long mid = n / 2;\n\
    \    long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = mid;\n    long l5 = mid + 1;\n    long l6 = mid + 2;\n    long l7 = n - 1;\n\
    \    long l8 = n;\n    long l9 = n / 2;\n    long l10 = mid + 1;\n    long l11\
    \ = mid;\n    long l12 = mid + 2;\n    long l13 = mid;\n    long l14 = n - 1;\n\
    \    long l15 = mid;\n    long l16 = mid + 1;\n    long l17 = mid;\n    long l18\
    \ = mid + 2;\n    long l19 = mid;\n    long l20 = n - 1;\n    long l21 = mid;\n\
    \    long l22 = mid + 1;\n    long l23 = mid + 2;\n    long l24 = mid;\n    long\
    \ l25 = n - 1;\n    long l26 = mid;\n    long l27 = mid + 1;\n    long l28 = mid\
    \ + 2;\n    long l29 = mid;\n    long l30 = n - 1;\n    long l31 = mid;\n    long\
    \ l32 = mid + 1;\n    long l33 = mid + 2;\n    long l34 = mid;\n    long l35 =\
    \ n - 1;\n    long l36 = mid;\n    long l37 = mid + 1;\n    long l38 = mid + 2;\n\
    \    long l39 = mid;\n    long l40 = n - 1;\n    long l41 = mid;\n    long l42\
    \ = mid + 1;\n    long l43 = mid + 2;\n    long l44 = mid;\n    long l45 = n -\
    \ 1;\n    long l46 = mid;\n    long l47 = mid + 1;\n    long l48 = mid + 2;\n\
    \    long l49 = mid;\n    long l50 = n - 1;\n    long l51 = mid;\n    long l52\
    \ = mid + 1;\n    long l53 = mid + 2;\n    long l54 = mid;\n    long l55 = n -\
    \ 1;\n    long l56 = mid;\n    long l57 = mid + 1;\n    long l58 = mid + 2;\n\
    \    long l59 = mid;\n    long l60 = n - 1;\n    long l61 = mid;\n    long l62\
    \ = mid + 1;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpl_kixayh: /tmp/tmpl_kixayh.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0;\n    long mid = n / 2;\n\
    \    long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = n - 2;\n    long l5 = n - 3;\n    long l6 = n - 4;\n    long l7 = n - 5;\n\
    \    long l8 = n - 6;\n    long l9 = n - 7;\n    long l10 = n - 8;\n    long l11\
    \ = n - 9;\n    long l12 = n - 10;\n    long l13 = n - 11;\n    long l14 = n -\
    \ 12;\n    long l15 = n - 13;\n    long l16 = n - 14;\n    long l17 = n - 15;\n\
    \    long l18 = n - 16;\n    long l19 = n - 17;\n    long l20 = n - 18;\n    long\
    \ l21 = n - 19;\n    long l22 = n - 20;\n    long l23 = n - 21;\n    long l24\
    \ = n - 22;\n    long l25 = n - 23;\n    long l26 = n - 24;\n    long l27 = n\
    \ - 25;\n    long l28 = n - 26;\n    long l29 = n - 27;\n    long l30 = n - 28;\n\
    \    long l31 = n - 29;\n    long l32 = n - 30;\n    long l33 = n - 31;\n    long\
    \ l34 = n - 32;\n    long l35 = n - 33;\n    long l36 = n - 34;\n    long l37\
    \ = n - 35;\n    long l38 = n - 36;\n    long l39 = n - 37;\n    long l40 = n\
    \ - 38;\n    long l41 = n - 39;\n    long l42 = n - 40;\n    long l43 = n - 41;\n\
    \    long l44 = n - 42;\n    long l45 = n - 43;\n    long l46 = n - 44;\n    long\
    \ l47 = n - 45;\n    long l48 = n - 46;\n    long l49 = n - 47;\n    long l50\
    \ = n - 48;\n    long l51 = n - 49;\n    long l52 = n - 50;\n    long l53 = n\
    \ - 51;\n    long l54 = n - 52;\n    long l55 = n - 53;\n    long l56 = n - 54;\n\
    \    long l57 = n - 55;\n    long l58 = n - 56;\n    long \n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8crcxlnx.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp8crcxlnx.cpp:71:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmp8crcxlnx.cpp:71:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   71 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\
    \ else {\n        return right;\n    }\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsgjpvmwc: /tmp/tmpsgjpvmwc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwjp6ihae: /tmp/tmpwjp6ihae.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l1 < l2) return\
    \ l1;\n    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmps0ez50je: /tmp/tmps0ez50je.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        float mid\
    \ = (ll) / 2;\n        float a = l[mid];\n        float b = l[mid-1];\n      \
    \  return ((a + b) / 2.0);\n    }\n    else {\n        float mid = ll / 2;\n \
    \       float a = l[mid];\n        float b = l[mid-1];\n        return ((b - a)\
    \ / 2.0);\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxloj3mxg: /tmp/tmpxloj3mxg.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 1) {\n        return l[n/2];\n\
    \    }\n    float mid = l[n/2-1] + l[n/2];\n    return mid / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6ld9vxe8: /tmp/tmp6ld9vxe8.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long mid = l.size() / 2;\n    float midval\
    \ = l[mid];\n    float leftval = l[mid-1];\n    float rightval = l[mid+1];\n \
    \   if (leftval > rightval) return midval;\n    else return rightval;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptgxpflqr: /tmp/tmptgxpflqr.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n - 1];\n\
    \    if (left > right) {\n        return left;\n    } else {\n        return right;\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpw489g0zu: /tmp/tmpw489g0zu.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsvwqa8ra: /tmp/tmpsvwqa8ra.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgfrnlo38: /tmp/tmpgfrnlo38.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long m1 = mid;\n    long long m2 = mid + 1;\n    long long\
    \ m3 = mid + 2;\n    long long m4 = mid + 3;\n    long long m5 = mid + 4;\n  \
    \  long long m6 = mid + 5;\n    long long m7 = mid + 6;\n    long long m8 = mid\
    \ + 7;\n    long long m9 = mid + 8;\n    long long m10 = mid + 9;\n    long long\
    \ m11 = mid + 10;\n    long long m12 = mid + 11;\n    long long m13 = mid + 12;\n\
    \    long long m14 = mid + 13;\n    long long m15 = mid + 14;\n    long long m16\
    \ = mid + 15;\n    long long m17 = mid + 16;\n    long long m18 = mid + 17;\n\
    \    long long m19 = mid + 18;\n    long long m20 = mid + 19;\n    long long m21\
    \ = mid + 20;\n    long long m22 = mid + 21;\n    long long m23 = mid + 22;\n\
    \    long long m24 = mid + 23;\n    long long m25 = mid + 24;\n    long long m26\
    \ = mid + 25;\n    long long m27 = mid + 26;\n    long long m28 = mid + 27;\n\
    \    long long m29 = mid + 28;\n    long long m30 = mid + 29;\n    long long m31\
    \ = mid + 30;\n    long long m32 = mid + 31;\n    long long m33 = mid + 32;\n\
    \    long long m34 = mid + 33;\n    long long m35 = mid + 34;\n    long long m36\
    \ = mid + 35;\n    long long m37 = mid + 36;\n    long long m38 = mid + 37;\n\
    \    long long m39 = mid + 38;\n    long long m40 = mid + 39;\n    long long m41\
    \ = mid + 40;\n    long long m42 = mid + 41;\n    long long m43 = mid + 42;\n\
    \    long long m44 = mid + 43;\n    long long m45 = mid + 44;\n    long long m46\
    \ = mid + 45;\n    long long m47 = mid + 46;\n    long long m48 = mid + 47;\n\
    \    long long m49 = mid + 48;\n    long long m50 = mid + 49;\n    long long m51\
    \ = m\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vwyty2c.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp7vwyty2c.cpp:62:21: error: \u2018m\u2019 was not declared in this scope;\
    \ did you mean \u2018m9\u2019?\n   62 |     long long m51 = m\n      |       \
    \              ^\n      |                     m9\n/tmp/tmp7vwyty2c.cpp:63:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   63 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    long long\
    \ l3 = n - 1;\n    long long l4 = mid;\n    long long l5 = n;\n    long long l6\
    \ = n - 1;\n    long long l7 = n - 2;\n    long long l8 = n - 3;\n    long long\
    \ l9 = n - 4;\n    long long l10 = n - 5;\n    long long l11 = n - 6;\n    long\
    \ long l12 = n - 7;\n    long long l13 = n - 8;\n    long long l14 = n - 9;\n\
    \    long long l15 = n - 10;\n    long long l16 = n - 11;\n    long long l17 =\
    \ n - 12;\n    long long l18 = n - 13;\n    long long l19 = n - 14;\n    long\
    \ long l20 = n - 15;\n    long long l21 = 0;\n    long long l22 = 0;\n    long\
    \ long l23 = 0;\n    long long l24 = 0;\n    long long l25 = 0;\n    long long\
    \ l26 = 0;\n    long long l27 = 0;\n    long long l28 = 0;\n    long long l29\
    \ = 0;\n    long long l30 = 0;\n    long long l31 = 0;\n    long long l32 = 0;\n\
    \    long long l33 = 0;\n    long long l34 = 0;\n    long long l35 = 0;\n    long\
    \ long l36 = 0;\n    long long l37 = 0;\n    long long l38 = 0;\n    long long\
    \ l39 = 0;\n    long long l40 = 0;\n    long long l41 = 0;\n    long long l42\
    \ = 0;\n    long long l43 = 0;\n    long long l44 = 0;\n    long long l45 = 0;\n\
    \    long long l46 = 0;\n    long long l47 = 0;\n    long long l48 = 0;\n    long\
    \ long l49 = 0;\n    long long l50 = 0;\n    long long l51 = 0;\n    long long\
    \ l52 = 0;\n    long long l53 = 0;\n    long long l54 = 0;\n    long long l55\
    \ = 0;\n    long long l56 = 0;\n    long long l57 = 0;\n    long long l58 = 0;\n\
    \    long long l59 = 0;\n    long long l60 = 0;\n    long long l61 = 0;\n    long\
    \ long l62 = 0;\n    long long l63 = 0;\n    long long l64 = 0;\n    long long\
    \ l65 = 0;\n    long long l66 = 0;\n\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjxlnxk5d: /tmp/tmpjxlnxk5d.cpp:82: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    }\n    else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpz2jnomip: /tmp/tmpz2jnomip.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    float midval = l[mid];\n \
    \   while (left < right) {\n        long long midvalleft = l[left];\n        long\
    \ long midvalright = l[right];\n        if (midvalleft < midvalright) {\n    \
    \        left++;\n        } else if (midvalleft > midvalright) {\n           \
    \ right--;\n        } else {\n            return midval;\n        }\n    }\n \
    \   return midval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp10i5n5br: /tmp/tmp10i5n5br.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  assert(n % 2 == 0);\n  long long mid = n\
    \ / 2;\n  long long l1 = 0, l2 = mid;\n  long long l3 = mid + 1, l4 = n;\n  long\
    \ long l5 = mid + 2;\n  long long l6 = mid + 3;\n  long long l7 = mid + 4;\n \
    \ long long l8 = mid + 5;\n  long long l9 = mid + 6;\n  long long l10 = mid +\
    \ 7;\n  long long l11 = mid + 8;\n  long long l12 = mid + 9;\n  long long l13\
    \ = mid + 10;\n  long long l14 = mid + 11;\n  long long l15 = mid + 12;\n  long\
    \ long l16 = mid + 13;\n  long long l17 = mid + 14;\n  long long l18 = mid + 15;\n\
    \  long long l19 = mid + 16;\n  long long l20 = mid + 17;\n  long long l21 = mid\
    \ + 18;\n  long long l22 = mid + 19;\n  long long l23 = mid + 20;\n  long long\
    \ l24 = mid + 21;\n  long long l25 = mid + 22;\n  long long l26 = mid + 23;\n\
    \  long long l27 = mid + 24;\n  long long l28 = mid + 25;\n  long long l29 = mid\
    \ + 26;\n  long long l30 = mid + 27;\n  long long l31 = mid + 28;\n  long long\
    \ l32 = mid + 29;\n  long long l33 = mid + 30;\n  long long l34 = mid + 31;\n\
    \  long long l35 = mid + 32;\n  long long l36 = mid + 33;\n  long long l37 = mid\
    \ + 34;\n  long long l38 = mid + 35;\n  long long l39 = mid + 36;\n  long long\
    \ l40 = mid + 37;\n  long long l41 = mid + 38;\n  long long l42 = mid + 39;\n\
    \  long long l43 = mid + 40;\n  long long l44 = mid + 41;\n  long long l45 = mid\
    \ + 42;\n  long long l46 = mid + 43;\n  long long l47 = mid + 44;\n  long long\
    \ l48 = mid + 45;\n  long long l49 = mid + 46;\n  long long l50 = mid + 47;\n\
    \  long long l51 = mid + 48;\n  long long l52 = mid + \n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_nl3prz.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpg_nl3prz.cpp:62:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   62 | }\n      | ^\n/tmp/tmpg_nl3prz.cpp:62:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   62 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmppl_fa3u7: /tmp/tmppl_fa3u7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    long long\
    \ l3 = mid;\n    long long l4 = n - mid;\n    long long l5 = mid;\n    long long\
    \ l6 = n - mid;\n    long long l7 = mid;\n    long long l8 = n - mid;\n    long\
    \ long l9 = mid;\n    long long l10 = n - mid;\n    long long l11 = mid;\n   \
    \ long long l12 = n - mid;\n    long long l13 = mid;\n    long long l14 = n -\
    \ mid;\n    long long l15 = mid;\n    long long l16 = n - mid;\n    long long\
    \ l17 = mid;\n    long long l18 = n - mid;\n    long long l19 = mid;\n    long\
    \ long l20 = n - mid;\n    long long l21 = 0;\n    long long l22 = 0;\n    long\
    \ long l23 = 0;\n    long long l24 = 0;\n    long long l25 = 0;\n    long long\
    \ l26 = 0;\n    long long l27 = 0;\n    long long l28 = 0;\n    long long l29\
    \ = 0;\n    long long l30 = 0;\n    long long l31 = 0;\n    long long l32 = 0;\n\
    \    long long l33 = 0;\n    long long l34 = 0;\n    long long l35 = 0;\n    long\
    \ long l36 = 0;\n    long long l37 = 0;\n    long long l38 = 0;\n    long long\
    \ l39 = 0;\n    long long l40 = 0;\n    long long l41 = 0;\n    long long l42\
    \ = 0;\n    long long l43 = 0;\n    long long l44 = 0;\n    long long l45 = 0;\n\
    \    long long l46 = 0;\n    long long l47 = 0;\n    long long l48 = 0;\n    long\
    \ long l49 = 0;\n    long long l50 = 0;\n    long long l51 = 0;\n    long long\
    \ l52 = 0;\n    long long l53 = 0;\n    long long l54 = 0;\n    long long l55\
    \ = 0;\n    long long l56 = 0;\n    long long l57 = 0;\n    long long l58 = 0;\n\
    \    long long l59 = 0;\n    long long l60 = 0;\n    long long l61 = 0;\n    long\
    \ long l62 = 0;\n    long long l63 = 0;\n    long long l64 = 0;\n    long long\
    \ l\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptscnvio9.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmptscnvio9.cpp:77:1: error: expected initializer before \u2018}\u2019\
    \ token\n   77 | }\n      | ^\n/tmp/tmptscnvio9.cpp:77:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   77 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long mid = l.size() / 2;\n    if (l.size()\
    \ % 2 == 0) {\n        return l[mid];\n    } else {\n        return (l[mid] +\
    \ l[mid]) / 2.0;\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbs1lwzgy: /tmp/tmpbs1lwzgy.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0;\n    long mid = n / 2;\n\
    \    long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = mid;\n    long l5 = n - 1;\n    long l6 = mid;\n    long l7 = n - 1;\n   \
    \ long l8 = n - 1;\n    long l9 = mid;\n    long l10 = n - 1;\n    long l11 =\
    \ mid;\n    long l12 = n - 1;\n    long l13 = n - 1;\n    long l14 = mid;\n  \
    \  long l15 = n - 1;\n    long l16 = n - 1;\n    long l17 = mid;\n    long l18\
    \ = n - 1;\n    long l19 = n - 1;\n    long l20 = mid;\n    long l21 = n - 1;\n\
    \    long l22 = n - 1;\n    long l23 = n - 1;\n    long l24 = mid;\n    long l25\
    \ = n - 1;\n    long l26 = n - 1;\n    long l27 = n - 1;\n    long l28 = mid;\n\
    \    long l29 = n - 1;\n    long l30 = n - 1;\n    long l31 = n - 1;\n    long\
    \ l32 = n - 1;\n    long l33 = mid;\n    long l34 = n - 1;\n    long l35 = n -\
    \ 1;\n    long l36 = n - 1;\n    long l37 = n - 1;\n    long l38 = mid;\n    long\
    \ l39 = n - 1;\n    long l40 = n - 1;\n    long l41 = n - 1;\n    long l42 = n\
    \ - 1;\n    long l43 = n - 1;\n    long l44 = mid;\n    long l45 = n - 1;\n  \
    \  long l46 = n - 1;\n    long l47 = n - 1;\n    long l48 = n - 1;\n    long l49\
    \ = mid;\n    long l50 = n - 1;\n    long l51 = n - 1;\n    long l52 = n - 1;\n\
    \    long l53 = n - 1;\n    long l54 = n - 1;\n    long l55 = n - 1;\n    long\
    \ l56 = n - 1;\n    long l57 = n - 1;\n    long l58 = n - 1;\n    long l59 = n\
    \ - 1;\n    long l60 = n - 1;\n    long l61 = n - 1;\n    long l62 = n - 1;\n\
    \    long l63 = n - 1;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpuem_iso8: /tmp/tmpuem_iso8.cpp:78: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2.0);\n    } else {\n        return l[ll / 2];\n   \
    \ }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptk0mn4xy: /tmp/tmptk0mn4xy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    if (l.size() % 2 == 1) {\n    \
    \    return l[mid];\n    }\n    float a = l[mid];\n    float b = l[mid-1];\n \
    \   return a + (b - a) * ((float)l.size() / 2.0);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpl907b_8n: /tmp/tmpl907b_8n.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long n = l.size();\n  long mid = n / 2;\n  long l1 = 0, l2 = mid;\n\
    \  float midVal = l[mid];\n  float lMedian;\n  while (n-- > 0) {\n    if (l[mid]\
    \ < l[n - 1]) {\n      l1 = mid;\n      l2 = n - 1;\n      midVal = l[mid];\n\
    \    } else {\n      l1 = n - 1;\n      l2 = mid;\n      midVal = l[mid];\n  \
    \  }\n  }\n  lMedian = (l1 + l2) / 2;\n  return midVal;\n}\nint main() {\n   \
    \ auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpugyixgzu: /tmp/tmpugyixgzu.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n\
    \ / 2];\n    }\n    float mid = l[n / 2];\n    float leftMedian = median(l.slice(0,\
    \ n / 2));\n    float rightMedian = median(l.slice((n / 2) + 1, n));\n    return\
    \ mid;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbirtd9hi.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpbirtd9hi.cpp:14:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018slice\u2019\n   14 |     float leftMedian = median(l.slice(0,\
    \ n / 2));\n      |                                 ^~~~~\n/tmp/tmpbirtd9hi.cpp:15:34:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018slice\u2019\
    \n   15 |     float rightMedian = median(l.slice((n / 2) + 1, n));\n      |  \
    \                                ^~~~~\n"
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    float midval = l[mid];\n    float leftval = l[n - 1];\n    float\
    \ rightval = l[mid];\n    if (leftval < midval) std::swap(leftval, midval);\n\
    \    if (rightval < midval) std::swap(rightval, midval);\n    if (leftval > rightval)\
    \ return leftval;\n    return rightval;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmprrjvqj9t: /tmp/tmprrjvqj9t.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long mid = l.size() / 2;\n  long long left = mid;\n  long long\
    \ right = mid;\n  long long median = 0;\n  while (left < l.size()) {\n    right\
    \ = left;\n    while (right < l.size() && l[right] < l[left]) {\n      right++;\n\
    \    }\n    if (right > left) {\n      median = (l[left] + l[right]) / 2;\n  \
    \    left++;\n      right--;\n    }\n  }\n  return median;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\n\
    \    return right;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp947o0y8w: /tmp/tmp947o0y8w.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\
    \ else {\n        return right;\n    }\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsgjpvmwc: /tmp/tmpsgjpvmwc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 2);\n    long long int\
    \ mid = n / 2;\n    long long int left = l[mid];\n    long long int right = l[n\
    \ - 1];\n    if (left > right) {\n        long long int temp = left;\n       \
    \ left = right;\n        right = temp;\n    }\n    return (left + right) / 2;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp89_rlvvc: /tmp/tmp89_rlvvc.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2.0);\n    } else {\n        return l[ll / 2];\n   \
    \ }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptk0mn4xy: /tmp/tmptk0mn4xy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long n = l.size();\n  if (n < 2) return 0;\n  long mid = n / 2;\n  long\
    \ l1 = l[mid];\n  long l2 = l[n - 1];\n  float l3 = l1;\n  float l4 = l2;\n  if\
    \ (l1 < l2) l3 = l2;\n  if (l2 < l3) l4 = l3;\n  return l1 + (l2 - l1) * (l3 -\
    \ l4) / (l1 + l2 - l1);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp5gnab8m6: /tmp/tmp5gnab8m6.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\
    \ else {\n        return right;\n    }\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsgjpvmwc: /tmp/tmpsgjpvmwc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 ==\
    \ 0) return l[0];\n    if (l2 == 1) return l[0];\n    if (l1 < l2) return l1;\n\
    \    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpn0c4chtm: /tmp/tmpn0c4chtm.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[n - 1];\n  \
    \  float rightval = l[mid];\n    if (leftval > rightval) return median(l, mid\
    \ - 1, midval);\n    if (leftval < rightval) return median(l, mid + 1, midval);\n\
    \    return midval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu7248xcx.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpu7248xcx.cpp:15:61: error: too many arguments to function \u2018float\
    \ median(std::vector<long int>)\u2019\n   15 |     if (leftval > rightval) return\
    \ median(l, mid - 1, midval);\n      |                                       \
    \                      ^\n/tmp/tmpu7248xcx.cpp:8:7: note: declared here\n    8\
    \ | float median(std::vector<long> l) {\n      |       ^~~~~~\n/tmp/tmpu7248xcx.cpp:16:61:\
    \ error: too many arguments to function \u2018float median(std::vector<long int>)\u2019\
    \n   16 |     if (leftval < rightval) return median(l, mid + 1, midval);\n   \
    \   |                                                             ^\n/tmp/tmpu7248xcx.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n"
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    float l3\
    \ = l[mid];\n    float l4 = l[n - 1];\n    if (l1 < l2) return l3;\n    if (l2\
    \ < l1) return l4;\n    if (l1 == l2) return (l1 + l2) / 2;\n    if (l1 > l2)\
    \ return (l3 + l4) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdk1q5yc3: /tmp/tmpdk1q5yc3.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l1 < l2)\
    \ std::swap(l1, l2);\n    if (l1 == 0) return l2[l2 % 2 == 0];\n    if (l2 ==\
    \ 0) return l1[l1 % 2 == 0];\n    float mid1 = l1[l1 % 2 == 0];\n    float mid2\
    \ = l2[l2 % 2 == 0];\n    float mid = (mid1 + mid2) / 2;\n    if (mid == mid1)\
    \ return mid2;\n    if (mid == mid2) return mid1;\n    return mid;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vunsr_q.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp7vunsr_q.cpp:15:39: error: invalid types \u2018long long int[bool]\u2019\
    \ for array subscript\n   15 |     if (l1 == 0) return l2[l2 % 2 == 0];\n    \
    \  |                                       ^\n/tmp/tmp7vunsr_q.cpp:16:39: error:\
    \ invalid types \u2018long long int[bool]\u2019 for array subscript\n   16 | \
    \    if (l2 == 0) return l1[l1 % 2 == 0];\n      |                           \
    \            ^\n/tmp/tmp7vunsr_q.cpp:17:32: error: invalid types \u2018long long\
    \ int[bool]\u2019 for array subscript\n   17 |     float mid1 = l1[l1 % 2 == 0];\n\
    \      |                                ^\n/tmp/tmp7vunsr_q.cpp:18:32: error:\
    \ invalid types \u2018long long int[bool]\u2019 for array subscript\n   18 | \
    \    float mid2 = l2[l2 % 2 == 0];\n      |                                ^\n\
    /tmp/tmp7vunsr_q.cpp:19:11: error: conflicting declaration \u2018float mid\u2019\
    \n   19 |     float mid = (mid1 + mid2) / 2;\n      |           ^~~\n/tmp/tmp7vunsr_q.cpp:11:15:\
    \ note: previous declaration as \u2018long long int mid\u2019\n   11 |     long\
    \ long mid = n / 2;\n      |               ^~~\n"
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpm04zuv_x: /tmp/tmpm04zuv_x.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        return\
    \ l[n/2];\n    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpkkookr9h: /tmp/tmpkkookr9h.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    float\
    \ midval = l[mid];\n    float leftval = l[mid-1];\n    float rightval = l[mid+1];\n\
    \    if (leftval > rightval)\n        return midval;\n    else\n        return\
    \ leftval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmphdbct25w: /tmp/tmphdbct25w.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        return\
    \ l[size / 2];\n    }\n    float mid = l[size / 2 - 1];\n    float left = l[size\
    \ / 2];\n    float right = l[size / 2 + 1];\n    return mid + ((right - left)\
    \ / 2.0);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpzk8uiyvb: /tmp/tmpzk8uiyvb.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    return l[ll / 2];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp42yrm52w: /tmp/tmp42yrm52w.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long l1 = 0, l2 = 0, m1, m2;\n    for (long long i = 0; i <\
    \ n; i++) {\n        if (l1 < l[i]) {\n            l1 = l[i];\n        }\n   \
    \     if (l2 < l[i]) {\n            l2 = l[i];\n        }\n    }\n    m1 = l1;\n\
    \    m2 = l2;\n    if (m1 < m2) {\n        std::swap(m1, m2);\n    }\n    if (m1\
    \ == m2)\n        return l1;\n    if (m1 < 0)\n        return l2;\n    return\
    \ l1;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8i6a1y88: /tmp/tmp8i6a1y88.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    return l[ll / 2];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp42yrm52w: /tmp/tmp42yrm52w.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3ob8an_q: /tmp/tmp3ob8an_q.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0;\n    long mid = n / 2;\n\
    \    long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = n - 2;\n    long l5 = n - 3;\n    long l6 = n - 4;\n    long l7 = n - 5;\n\
    \    long l8 = n - 6;\n    long l9 = n - 7;\n    long l10 = n - 8;\n    long l11\
    \ = n - 9;\n    long l12 = n - 10;\n    long l13 = n - 11;\n    long l14 = n -\
    \ 12;\n    long l15 = n - 13;\n    long l16 = n - 14;\n    long l17 = n - 15;\n\
    \    long l18 = n - 16;\n    long l19 = n - 17;\n    long l20 = n - 18;\n    long\
    \ l21 = n - 19;\n    long l22 = n - 20;\n    long l23 = n - 21;\n    long l24\
    \ = n - 22;\n    long l25 = n - 23;\n    long l26 = n - 24;\n    long l27 = n\
    \ - 25;\n    long l28 = n - 26;\n    long l29 = n - 27;\n    long l30 = n - 28;\n\
    \    long l31 = n - 29;\n    long l32 = n - 30;\n    long l33 = n - 31;\n    long\
    \ l34 = n - 32;\n    long l35 = n - 33;\n    long l36 = n - 34;\n    long l37\
    \ = n - 35;\n    long l38 = n - 36;\n    long l39 = n - 37;\n    long l40 = n\
    \ - 38;\n    long l41 = n - 39;\n    long l42 = n - 40;\n    long l43 = n - 41;\n\
    \    long l44 = n - 42;\n    long l45 = n - 43;\n    long l46 = n - 44;\n    long\
    \ l47 = n - 45;\n    long l48 = n - 46;\n    long l49 = n - 47;\n    long l50\
    \ = n - 48;\n    long l51 = n - 49;\n    long l52 = n - 50;\n    long l53 = n\
    \ - 51;\n    long l54 = n - 52;\n    long l55 = n - 53;\n    long l56 = n - 54;\n\
    \    long l57 = n - 55;\n    long l58 = n - 56;\n    long \n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8crcxlnx.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp8crcxlnx.cpp:71:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmp8crcxlnx.cpp:71:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   71 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n - 1];\n\
    \    return left + (right - left) / 2;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp9vug94pg: /tmp/tmp9vug94pg.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return l[0];\n    long\
    \ long int mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    if\
    \ (a < b) std::swap(a, b);\n    if (n < 3) return a;\n    if (n < 5) return b;\n\
    \    float c = l[mid];\n    float d = l[n - 1];\n    if (c < d) return c;\n  \
    \  return d;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp567ub3oh: /tmp/tmp567ub3oh.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\
    \ else {\n        return right;\n    }\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsgjpvmwc: /tmp/tmpsgjpvmwc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n  \
    \  float rightval = l[mid+1];\n    if (leftval > rightval) return midval;\n  \
    \  return rightval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmppi4fte6_: /tmp/tmppi4fte6_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpvrc9rcb2: /tmp/tmpvrc9rcb2.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    long long left = l[mid];\n    long long right = l[n - mid];\n\
    \    if (left > right) return left;\n    return right;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6ejs863z: /tmp/tmp6ejs863z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    if (l.size() % 2 == 0) {\n    \
    \    return l[mid];\n    } else {\n        return (l[mid] + l[mid]) / 2.0;\n \
    \   }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4kj7f3np: /tmp/tmp4kj7f3np.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float midval = l[mid];\n    float leftval = l[n - 1];\n    float\
    \ rightval = l[0];\n    if (leftval > midval) {\n        return midval;\n    }\
    \ else if (rightval > midval) {\n        return rightval;\n    } else {\n    \
    \    return leftval;\n    }\n}\nint main() {\n    auto candidate = median;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjhlqsgkb: /tmp/tmpjhlqsgkb.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwjp6ihae: /tmp/tmpwjp6ihae.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    float midval = l[mid];\n \
    \   while (left < right) {\n        long long midmid = left + (right - left) /\
    \ 2;\n        if (midval < l[midmid]) right = midmid;\n        else left = midmid;\n\
    \    }\n    return midval;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n % 2 == 0);\n    float mid = static_cast<float>(l[n/2]);\n\
    \    float left = 0;\n    float right = n;\n    while (left < right) {\n     \
    \   float mid2 = static_cast<float>(l[left]);\n        if (mid2 > mid) {\n   \
    \         right = left;\n        } else {\n            left = left + 1;\n    \
    \    }\n    }\n    return mid;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnq510_s8: /tmp/tmpnq510_s8.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long a = l[mid];\n    long long b = l[n - 1];\n    return ((a\
    \ + b) / 2.0);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp5l15iasp: /tmp/tmp5l15iasp.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n  \
    \  float rightval = l[mid];\n    if (leftval > rightval) return midval;\n    else\
    \ return rightval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpd5nsdtww: /tmp/tmpd5nsdtww.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    float l3 =\
    \ l[mid];\n    float l4 = l[n - mid];\n    if (l1 < l2) {\n        return l3;\n\
    \    }\n    return l4;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpq5xbsb0b: /tmp/tmpq5xbsb0b.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        float x\
    \ = (l[ll / 2 - 1] + l[ll / 2]) / 2;\n        return x;\n    } else {\n      \
    \  float x = (l[ll / 2] + l[ll / 2 + 1]) / 2;\n        return x;\n    }\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptx4nt2h3: /tmp/tmptx4nt2h3.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    float\
    \ midval = l[mid];\n    float leftval = l[mid-1];\n    float rightval = l[mid+1];\n\
    \    if (leftval > rightval) {\n        return midval;\n    }\n    return rightval;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpzbg5ooap: /tmp/tmpzbg5ooap.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        long long\
    \ mid = n / 2;\n        float a = l[mid];\n        float b = l[mid-1];\n     \
    \   return ((a + b) / 2.0);\n    } else {\n        long long mid = n / 2;\n  \
    \      float a = l[mid];\n        float b = l[mid+1];\n        return ((a + b)\
    \ / 2.0);\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp83qj0cjb: /tmp/tmp83qj0cjb.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long l1 = 0, l2 = mid;\n    long long m1 = 0, m2 = mid;\n\
    \    long long lSum = 0, rSum = 0;\n    long long midSum = 0;\n    for (long long\
    \ i = 0; i < n; i++) {\n        lSum += l[i];\n        m1++;\n        if (m1 ==\
    \ mid) {\n            midSum += lSum;\n            lSum = 0;\n            m1--;\n\
    \        }\n        if (m1 == mid) {\n            m1--;\n            m2 = mid;\n\
    \            l2 = mid;\n        }\n        if (m2 == mid) {\n            midSum\
    \ += lSum;\n            rSum = midSum;\n            midSum = 0;\n            m2++;\n\
    \        }\n        if (m1 == m2 && m2 > mid) {\n            midSum += lSum;\n\
    \            lSum = 0;\n            m1--;\n            m2++;\n        }\n    }\n\
    \    if (m1 < mid) return lSum / m1;\n    if (m2 < mid) return rSum / m2;\n  \
    \  return midSum / m1;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmphf0b8r83: /tmp/tmphf0b8r83.cpp:48: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2.0);\n    }\n    else {\n        return l[ll / 2];\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpc2r596xp: /tmp/tmpc2r596xp.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    if (l.size() % 2 == 0) {\n    \
    \    return l[mid];\n    } else {\n        return (l[mid] + l[mid]) / 2.0;\n \
    \   }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4kj7f3np: /tmp/tmp4kj7f3np.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  assert(n % 2 == 0);\n  long long mid = n\
    \ / 2;\n  long long l1 = mid;\n  long long l2 = mid + 1;\n  float l3 = l[mid];\n\
    \  float l4 = l[mid];\n  float l5 = l[mid];\n  float l6 = l[mid];\n  float l7\
    \ = l[mid];\n  float l8 = l[mid];\n  float l9 = l[mid];\n  float l10 = l[mid];\n\
    \  float l11 = l[mid];\n  float l12 = l[mid];\n  float l13 = l[mid];\n  float\
    \ l14 = l[mid];\n  float l15 = l[mid];\n  float l16 = l[mid];\n  float l17 = l[mid];\n\
    \  float l18 = l[mid];\n  float l19 = l[mid];\n  float l20 = l[mid];\n  float\
    \ l21 = l[mid];\n  float l22 = l[mid];\n  float l23 = l[mid];\n  float l24 = l[mid];\n\
    \  float l25 = l[mid];\n  float l26 = l[mid];\n  float l27 = l[mid];\n  float\
    \ l28 = l[mid];\n  float l29 = l[mid];\n  float l30 = l[mid];\n  float l31 = l[mid];\n\
    \  float l32 = l[mid];\n  float l33 = l[mid];\n  float l34 = l[mid];\n  float\
    \ l35 = l[mid];\n  float l36 = l[mid];\n  float l37 = l[mid];\n  float l38 = l[mid];\n\
    \  float l39 = l[mid];\n  float l40 = l[mid];\n  float l41 = l[mid];\n  float\
    \ l42 = l[mid];\n  float l43 = l[mid];\n  float l44 = l[mid];\n  float l45 = l[mid];\n\
    \  float l46 = l[mid];\n  float l47 = l[mid];\n  float l48 = l[mid];\n  float\
    \ l49 = l[mid];\n  float l50 = l[mid];\n  float l\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjgg4zoms.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpjgg4zoms.cpp:63:1: error: expected initializer before \u2018}\u2019\
    \ token\n   63 | }\n      | ^\n/tmp/tmpjgg4zoms.cpp:63:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   63 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2-1]\
    \ + (l[n/2-1] + l[n/2])/2.0;\n    }\n    return l[n/2];\n}\nint main() {\n   \
    \ auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8mvlxleq: /tmp/tmp8mvlxleq.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long l1 = 0, l2 = 0, l3 = 0, l4 = 0;\n    for (long i = 0;\
    \ i < n; i++) {\n        if (l[i] < l1) l1 = l[i];\n        if (l[i] > l2) l2\
    \ = l[i];\n        if (l[i] < l3) l3 = l[i];\n        if (l[i] > l4) l4 = l[i];\n\
    \    }\n    float m1 = l1 + l2 + l3 + l4;\n    float m2 = l1 + l3;\n    float\
    \ m3 = l2 + l4;\n    float m4 = l1 + l3;\n    float m5 = l2 + l4;\n    float m6\
    \ = l1 + l3;\n    float m7 = l2 + l4;\n    float m8 = l1 + l3;\n    float m9 =\
    \ l2 + l4;\n    float m10 = (l1 + l2 + l3 + l4) / n;\n    float m11 = (l1 + l2\
    \ + l3 + l4) / n;\n    float m12 = (l1 + l2 + l3 + l4) / n;\n    float m13 = (l1\
    \ + l2 + l3 + l4) / n;\n    float m14 = (l1 + l2 + l3 + l4) / n;\n    float m15\
    \ = (l1 + l2 + l3 + l4) / n;\n    float m16 = (l1 + l2 + l3 + l4) / n;\n    float\
    \ m17 = (l1 + l2 + l3 + l4) / n;\n    float m18 = (l1 + l2 + l3 + l4) / n;\n \
    \   float m19 = (l1 + l2 + l3 + l4) / n;\n    float m20 = (l1 + l2 + l3 + l4)\
    \ / n;\n    float m21 = (l1 + l2 + l3 + l4) / n;\n    float m22 = (l1 + l2 + l3\
    \ + l4) / n;\n    float m23 = (l1 + l2 + l3 + l4) / n;\n    float m24 = (l1 +\
    \ l2 + l3 + l4) / n;\n    float m25 = (l1 + l2 + l3 + l4) / n;\n    float m26\
    \ = (l1 + l2 + l3 + l4) / n;\n    float m27 = (l1 + l2 + l3 + l4) / n;\n    float\
    \ m28 = (l1 + l2 + l3 + l4) / n;\n    float m29 = (l1 + l2 + l3 + l4) / n;\n \
    \   float m30 = (l1 + l2 + l3 + l4) / n;\n    float \n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6stmixnb.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp6stmixnb.cpp:50:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   50 | }\n      | ^\n/tmp/tmp6stmixnb.cpp:50:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   50 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid];\n    float\
    \ rightval = l[n - 1];\n    for (long long i = mid + 1; i < n; i++) {\n      \
    \  if (l[i] < leftval) leftval = l[i];\n        if (l[i] > rightval) rightval\
    \ = l[i];\n    }\n    return midval + 0.5 * (leftval + rightval);\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp9nc4fght: /tmp/tmp9nc4fght.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 1);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    if (l2 > 0)\n        return median(l1,\
    \ l2);\n    long l3 = n - 1;\n    return median(l1, l2, l3);\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy6sdvjmn.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpy6sdvjmn.cpp:15:23: error: could not convert \u2018l1\u2019 from \u2018\
    long int\u2019 to \u2018std::vector<long int>\u2019\n   15 |         return median(l1,\
    \ l2);\n      |                       ^~\n      |                       |\n  \
    \    |                       long int\n/tmp/tmpy6sdvjmn.cpp:17:19: error: could\
    \ not convert \u2018l1\u2019 from \u2018long int\u2019 to \u2018std::vector<long\
    \ int>\u2019\n   17 |     return median(l1, l2, l3);\n      |                \
    \   ^~\n      |                   |\n      |                   long int\n"
  stdout: ''
  timestamp: 1659792386
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    if (l1 < l2) std::swap(l1, l2);\n\
    \    float m1 = l1[l1 > l2 ? l1 - l2 : 0];\n    float m2 = l2[l2 > l1 ? l2 - l1\
    \ : 0];\n    return m1 + (m2 - m1) * (0.5f);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcxqgpngj.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpcxqgpngj.cpp:15:40: error: invalid types \u2018long int[long int]\u2019\
    \ for array subscript\n   15 |     float m1 = l1[l1 > l2 ? l1 - l2 : 0];\n   \
    \   |                                        ^\n/tmp/tmpcxqgpngj.cpp:16:40: error:\
    \ invalid types \u2018long int[long int]\u2019 for array subscript\n   16 |  \
    \   float m2 = l2[l2 > l1 ? l2 - l1 : 0];\n      |                           \
    \             ^\n"
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (auto i : l)\
    \ {\n        sum += i;\n        ++count;\n    }\n    if (count == 0) {\n     \
    \   return 0;\n    }\n    float median = (float)sum / count;\n    return median;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0xd1mzlk: /tmp/tmp0xd1mzlk.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l1 > l2)\
    \ std::swap(l1, l2);\n    float m1 = l1[l1 - 1];\n    float m2 = l2[l2 - 1];\n\
    \    float m = (m1 + m2) / 2;\n    if (m == 0) return l1[l1 - 1];\n    if (m ==\
    \ 1) return l2[l2 - 1];\n    return m;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8cyudu95.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp8cyudu95.cpp:15:25: error: invalid types \u2018long long int[long long\
    \ int]\u2019 for array subscript\n   15 |     float m1 = l1[l1 - 1];\n      |\
    \                         ^\n/tmp/tmp8cyudu95.cpp:16:25: error: invalid types\
    \ \u2018long long int[long long int]\u2019 for array subscript\n   16 |     float\
    \ m2 = l2[l2 - 1];\n      |                         ^\n/tmp/tmp8cyudu95.cpp:18:33:\
    \ error: invalid types \u2018long long int[long long int]\u2019 for array subscript\n\
    \   18 |     if (m == 0) return l1[l1 - 1];\n      |                         \
    \        ^\n/tmp/tmp8cyudu95.cpp:19:33: error: invalid types \u2018long long int[long\
    \ long int]\u2019 for array subscript\n   19 |     if (m == 1) return l2[l2 -\
    \ 1];\n      |                                 ^\n"
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        float mid\
    \ = l[ll / 2 - 1];\n        float left = (l[ll / 2] + l[ll / 2 - 1]) / 2;\n  \
    \      float right = (l[ll / 2] + l[ll / 2 + 1]) / 2;\n        if (left > right)\
    \ {\n            return mid;\n        } else {\n            return right;\n  \
    \      }\n    } else {\n        float mid = l[ll / 2];\n        float left = (l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2;\n        float right = (l[ll / 2 + 1] + l[ll / 2])\
    \ / 2;\n        if (left > right) {\n            return mid;\n        } else {\n\
    \            return right;\n        }\n    }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp9374v5y9: /tmp/tmp9374v5y9.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        float x\
    \ = (l[ll / 2 - 1] + l[ll / 2]) / 2;\n        return x;\n    }\n    return l[ll\
    \ / 2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpd79094tk: /tmp/tmpd79094tk.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = static_cast<float>(sum) / l.size();\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdj3cqgyt: /tmp/tmpdj3cqgyt.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l[0] + (l.size() / 2);\n\
    \    float midval = mid;\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < mid) {\n            midval = l[i];\n        }\n    }\n    return midval;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpu64vnme4: /tmp/tmpu64vnme4.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid];\n    float\
    \ rightval = l[n - 1];\n    for (long long i = mid; i > 0; --i) {\n        if\
    \ (l[i] < leftval) leftval = l[i];\n        if (l[i] > rightval) rightval = l[i];\n\
    \    }\n    return midval;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpml3dzt0l: /tmp/tmpml3dzt0l.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\
    \ else {\n        return right;\n    }\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsgjpvmwc: /tmp/tmpsgjpvmwc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll/2]\
    \ + l[ll/2-1])/2.0);\n    } else {\n        return l[ll/2];\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpu461c9ap: /tmp/tmpu461c9ap.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n\
    \ / 2];\n    }\n    float mid = l[n / 2 - 1];\n    float low = l[n / 2];\n   \
    \ float high = l[n / 2 + 1];\n    return low + (high - low) / 2.0;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp40l111k5: /tmp/tmp40l111k5.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    long\
    \ long left = mid;\n    long long right = mid;\n    while (left < l.size()) {\n\
    \        mid = (left + right) / 2;\n        if (l[mid] < l[left]) {\n        \
    \    left = mid + 1;\n        } else {\n            right = mid;\n        }\n\
    \    }\n    if (left == l.size()) {\n        return l[mid];\n    }\n    if (l[mid]\
    \ < l[left]) {\n        return l[mid];\n    } else {\n        return l[left];\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792392
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmppl_fa3u7: /tmp/tmppl_fa3u7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = mid;\n    long\
    \ long right = mid;\n    long long largest = mid;\n    for (long long i = 0; i\
    \ < l.size(); i++) {\n        if (l[i] < left) {\n            left = l[i];\n \
    \       } else if (l[i] > right) {\n            right = l[i];\n        }\n   \
    \ }\n    if (left == right) {\n        return left;\n    }\n    if (left > right)\
    \ {\n        largest = left;\n    } else {\n        largest = right;\n    }\n\
    \    float mid = (left + right) / 2;\n    if (mid % 2 == 0) {\n        return\
    \ mid;\n    } else {\n        return mid - 1;\n    }\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vp84p60.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp2vp84p60.cpp:28:11: error: conflicting declaration \u2018float mid\u2019\
    \n   28 |     float mid = (left + right) / 2;\n      |           ^~~\n/tmp/tmp2vp84p60.cpp:9:15:\
    \ note: previous declaration as \u2018long long int mid\u2019\n    9 |     long\
    \ long mid = l.size() / 2;\n      |               ^~~\n"
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbcrzc0cq: /tmp/tmpbcrzc0cq.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmppl_fa3u7: /tmp/tmppl_fa3u7.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    float l3 =\
    \ l[mid];\n    float l4 = l[n - 1];\n    if (l2 < l1) {\n        std::swap(l1,\
    \ l2);\n    }\n    if (l2 < l3) {\n        std::swap(l3, l4);\n    }\n    if (l1\
    \ < l3) {\n        std::swap(l1, l3);\n    }\n    if (l1 < l4) {\n        std::swap(l4,\
    \ l1);\n    }\n    return l4;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7t4qx5wr.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp7t4qx5wr.cpp:23:25: error: no matching function for call to \u2018\
    swap(long long int&, float&)\u2019\n   23 |         std::swap(l1, l3);\n     \
    \ |                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:144,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7t4qx5wr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/move.h:182:5:\
    \ note: candidate: \u2018template<class _Tp> typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ std::swap(_Tp&, _Tp&)\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      | \
    \    ^~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/move.h:182:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7t4qx5wr.cpp:23:25:\
    \ note:   deduced conflicting types for parameter \u2018_Tp\u2019 (\u2018long\
    \ long int\u2019 and \u2018float\u2019)\n   23 |         std::swap(l1, l3);\n\
    \      |                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:144,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from "
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    } else {\n        return rightval;\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpi9ut45li: /tmp/tmpi9ut45li.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n  \
    \  float rightval = l[mid+1];\n    if (leftval > rightval) return midval;\n  \
    \  return rightval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8k2y3g67: /tmp/tmp8k2y3g67.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n % 2 == 0);\n    long long mid\
    \ = n / 2;\n    long long l1 = mid;\n    long long l2 = mid - 1;\n    long long\
    \ l3 = mid + 1;\n    long long l4 = n - 1;\n    long long l5 = n;\n    long long\
    \ l6 = n - 1;\n    long long l7 = n;\n    long long l8 = n;\n    long long l9\
    \ = n;\n    long long l10 = n;\n    long long l11 = n;\n    long long l12 = n;\n\
    \    long long l13 = n;\n    long long l14 = n;\n    long long l15 = n;\n    long\
    \ long l16 = n;\n    long long l17 = n;\n    long long l18 = n;\n    long long\
    \ l19 = n;\n    long long l20 = n;\n    long long l21 = n;\n    long long l22\
    \ = n;\n    long long l23 = n;\n    long long l24 = n;\n    long long l25 = n;\n\
    \    long long l26 = n;\n    long long l27 = n;\n    long long l28 = n;\n    long\
    \ long l29 = n;\n    long long l30 = n;\n    long long l31 = n;\n    long long\
    \ l32 = n;\n    long long l33 = n;\n    long long l34 = n;\n    long long l35\
    \ = n;\n    long long l36 = n;\n    long long l37 = n;\n    long long l38 = n;\n\
    \    long long l39 = n;\n    long long l40 = n;\n    long long l41 = n;\n    long\
    \ long l42 = n;\n    long long l43 = n;\n    long long l44 = n;\n    long long\
    \ l45 = n;\n    long long l46 = n;\n    long long l47 = n;\n    long long l48\
    \ = n;\n    long long l49 = n;\n    long long l50 = n;\n    long long l51 = n;\n\
    \    long long l52 = n;\n    long long l53 = n;\n    long long l54 = n;\n    long\
    \ long l55 = n;\n    long long l56 = n;\n    long long l57 = n;\n    long long\
    \ l58 = n;\n    long long l59 = n;\n    long long l60 = n;\n    long long l61\
    \ = n;\n    long long l62 = \n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr8u9cuii.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpr8u9cuii.cpp:74:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   74 | }\n      | ^\n/tmp/tmpr8u9cuii.cpp:74:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   74 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792387
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        long long\
    \ m = n / 2;\n        long long m1 = m * 2;\n        long long m2 = m * 2;\n \
    \       long long m3 = m * 2;\n        long long m4 = m * 2;\n        long long\
    \ m5 = m * 2;\n        long long m6 = m * 2;\n        long long m7 = m * 2;\n\
    \        long long m8 = m * 2;\n        long long m9 = m * 2;\n        long long\
    \ m10 = m * 2;\n        long long m11 = m * 2;\n        long long m12 = m * 2;\n\
    \        long long m13 = m * 2;\n        long long m14 = m * 2;\n        long\
    \ long m15 = m * 2;\n        long long m16 = m * 2;\n        long long m17 = m\
    \ * 2;\n        long long m18 = m * 2;\n        long long m19 = m * 2;\n     \
    \   long long m20 = m * 2;\n        long long m21 = m * 2;\n        long long\
    \ m22 = m * 2;\n        long long m23 = m * 2;\n        long long m24 = m * 2;\n\
    \        long long m25 = m * 2;\n        long long m26 = m * 2;\n        long\
    \ long m27 = m * 2;\n        long long m28 = m * 2;\n        long long m29 = m\
    \ * 2;\n        long long m30 = m * 2;\n        long long m31 = m * 2;\n     \
    \   long long m32 = m * 2;\n        long long m33 = m * 2;\n        long long\
    \ m34 = m * 2;\n        long long m35 = m * 2;\n        long long m36 = m * 2;\n\
    \        long long m37 = m * 2;\n        long long m38 = m * 2;\n        long\
    \ long m39 = m * 2;\n        long long m40 = m * 2;\n        long long m41 = m\
    \ * 2;\n        long long m42 = m * 2;\n        long long m43 = m * 2;\n     \
    \   long long m44 = m * 2;\n        long long m45 = m * 2;\n        long long\
    \ m46 = m * 2;\n        long long m47 = m * 2;\n        long long m48 = m * 2;\n\
    \        long long m49 = m * 2;\n        long long m50 = m * 2;\n        long\
    \ long m51 = m * 2;\n        long long m52 = m * 2;\n        long long m53 = m\
    \ * 2;\n        long long m54 = m * \n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp99nxf7ru.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp99nxf7ru.cpp:66:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   66 | }\n      | ^\n/tmp/tmp99nxf7ru.cpp:67:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   67 | int main() {\n     \
    \ |            ^\n/tmp/tmp99nxf7ru.cpp:74:1: error: expected \u2018}\u2019 at\
    \ end of input\n   74 | }\n      | ^\n/tmp/tmp99nxf7ru.cpp:8:35: note: to match\
    \ this \u2018{\u2019\n    8 | float median(std::vector<long> l) {\n      |   \
    \                                ^\n/tmp/tmp99nxf7ru.cpp:74:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   74 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659792387
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = n - 2;\n    long l5 = n - 3;\n    long l6 = n - 4;\n    long l7 = n - 5;\n\
    \    long l8 = n - 6;\n    long l9 = n - 7;\n    long l10 = n - 8;\n    long l11\
    \ = n - 9;\n    long l12 = n - 10;\n    long l13 = n - 11;\n    long l14 = n -\
    \ 12;\n    long l15 = n - 13;\n    long l16 = n - 14;\n    long l17 = n - 15;\n\
    \    long l18 = n - 16;\n    long l19 = n - 17;\n    long l20 = n - 18;\n    long\
    \ l21 = n - 19;\n    long l22 = n - 20;\n    long l23 = n - 21;\n    long l24\
    \ = n - 22;\n    long l25 = n - 23;\n    long l26 = n - 24;\n    long l27 = n\
    \ - 25;\n    long l28 = n - 26;\n    long l29 = n - 27;\n    long l30 = n - 28;\n\
    \    long l31 = n - 29;\n    long l32 = n - 30;\n    long l33 = n - 31;\n    long\
    \ l34 = n - 32;\n    long l35 = n - 33;\n    long l36 = n - 34;\n    long l37\
    \ = n - 35;\n    long l38 = n - 36;\n    long l39 = n - 37;\n    long l40 = n\
    \ - 38;\n    long l41 = n - 39;\n    long l42 = n - 40;\n    long l43 = n - 41;\n\
    \    long l44 = n - 42;\n    long l45 = n - 43;\n    long l46 = n - 44;\n    long\
    \ l47 = n - 45;\n    long l48 = n - 46;\n    long l49 = n - 47;\n    long l50\
    \ = n - 48;\n    long l51 = n - 49;\n    long l52 = n - 50;\n    long l53 = n\
    \ - 51;\n    long l54 = n - 52;\n    long l55 = n - 53;\n    long l56 = n - 54;\n\
    \    long l57 = n - 55;\n    long l58 = n - 56;\n    long l\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppu1wt1hz.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmppu1wt1hz.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmppu1wt1hz.cpp:71:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   71 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float average = static_cast<float>(sum) / l.size();\n    return average;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4r7eq1r5: /tmp/tmp4r7eq1r5.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n - 1];\n\
    \    if (left > right) return left;\n    return right;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpo0176ifd: /tmp/tmpo0176ifd.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 1) {\n        return l[n/2];\n\
    \    }\n    float mid = l[n/2-1] + l[n/2];\n    return mid / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6ld9vxe8: /tmp/tmp6ld9vxe8.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long n = l.size();\n  if (n <= 1) return l[0];\n  long mid = n / 2;\n\
    \  long l1 = l[mid];\n  long l2 = l[n - 1];\n  return l1 + l2 / (n - 1);\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpq5cbxn3u: /tmp/tmpq5cbxn3u.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    float midval = l[mid];\n \
    \   while (left < right) {\n        long long midval2 = l[mid];\n        if (midval2\
    \ < midval) {\n            midval = midval2;\n            mid = (mid + right)\
    \ / 2;\n            right = mid;\n        } else {\n            midval = midval2;\n\
    \            mid = (left + left) / 2;\n            left = mid;\n        }\n  \
    \  }\n    return midval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792392
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    assert(size > 0);\n    long long mid\
    \ = size / 2;\n    if (size % 2 == 0) {\n        return l[mid];\n    } else {\n\
    \        return (l[mid] + l[mid]) / 2.0;\n    }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpb3o0x_2g: /tmp/tmpb3o0x_2g.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    return l[ll / 2];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp42yrm52w: /tmp/tmp42yrm52w.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    }\n    return ((l[n/2] + l[n/2-1])/2.0);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpt7t5hq72: /tmp/tmpt7t5hq72.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n  \
    \  float rightval = l[mid+1];\n    if (leftval > rightval) return midval;\n  \
    \  else return rightval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdbr3gmbg: /tmp/tmpdbr3gmbg.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = mid;\n    long\
    \ long right = mid;\n    while (left < l.size()) {\n        mid = (left + right)\
    \ / 2;\n        if (l[mid] <= l[mid+1]) {\n            left = mid + 1;\n     \
    \   } else {\n            right = mid;\n        }\n    }\n    return l[mid];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792392
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    long long l1 = l[mid];\n    long long l2 = l[n - 1];\n   \
    \ if (l2 < l1) return l2;\n    return l1;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnyxil9pp: /tmp/tmpnyxil9pp.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792387
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    if (l.size() % 2 == 1) {\n    \
    \    return l[mid];\n    } else {\n        return (l[mid] + l[mid-1]) / 2;\n \
    \   }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpx0xj_6_9: /tmp/tmpx0xj_6_9.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792388
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0;\n    long mid = n / 2;\n\
    \    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l1 < l2) return l1;\n\
    \    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxsli1aob: /tmp/tmpxsli1aob.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792388
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long mid = l.size() / 2;\n    long left\
    \ = l[mid];\n    long right = l[mid+1];\n    if (left > right) {\n        return\
    \ left;\n    }\n    return right;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptpu0jwxu: /tmp/tmptpu0jwxu.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792388
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long ll = l.size();\n  if (ll % 2 == 0) {\n    return ((ll * l.front())\
    \ + ((ll / 2) - 1)) / 2.0;\n  } else {\n    return ((ll * l.front()) + ((ll /\
    \ 2) - 1)) / 2.0;\n  }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp9gnknp8x: /tmp/tmp9gnknp8x.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792388
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2.0);\n    }\n    return l[ll / 2];\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpb43taj3b: /tmp/tmpb43taj3b.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792388
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    float l3 = l[mid];\n\
    \    float l4 = l[n - 1];\n    if (l2 < l1) return l2;\n    if (l4 < l3) return\
    \ l4;\n    return l3;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpkolw8rap: /tmp/tmpkolw8rap.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792388
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        float mid\
    \ = (l[ll / 2 - 1] + l[ll / 2]) / 2;\n        return mid;\n    }\n    float mid\
    \ = l[ll / 2];\n    return mid;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3exiff7w: /tmp/tmp3exiff7w.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l2 < l1) return\
    \ l2;\n    return l1;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp__fz6aag: /tmp/tmp__fz6aag.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsmr07jft: /tmp/tmpsmr07jft.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n\
    \ / 2];\n    }\n    float mid = l[n / 2];\n    float left = (n - 1) / 2;\n   \
    \ float right = n - 1;\n    float median;\n    while (left < right) {\n      \
    \  median = l[left] + l[right];\n        if (median < mid) {\n            left++;\n\
    \        } else if (median > mid) {\n            right--;\n        } else {\n\
    \            return median;\n        }\n    }\n    return l[left];\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3s7l7s7b: /tmp/tmp3s7l7s7b.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3temvw3r: /tmp/tmp3temvw3r.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsmr07jft: /tmp/tmpsmr07jft.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1)\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    return l[ll / 2];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpu6t8seih: /tmp/tmpu6t8seih.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    if (l.size() % 2 == 0) {\n    \
    \    return l[mid];\n    } else {\n        return std::max(l[mid], l[mid-1]);\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpt1qt1mkh: /tmp/tmpt1qt1mkh.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n % 2 == 0);\n    long long mid\
    \ = n / 2;\n    long long a = l[mid];\n    long long b = l[n - 1];\n    if (a\
    \ > b) {\n        return a;\n    } else {\n        return b;\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgzo0cm8g: /tmp/tmpgzo0cm8g.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l1 < l2)\
    \ std::swap(l1, l2);\n    float m1 = l1[l1 > l2 ? l1 - l2 : 0];\n    float m2\
    \ = l2[l2 > l1 ? l2 - l1 : 0];\n    return m1 + (m2 - m1) * ((float)n / 2);\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp23c6333r.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp23c6333r.cpp:15:40: error: invalid types \u2018long long int[long long\
    \ int]\u2019 for array subscript\n   15 |     float m1 = l1[l1 > l2 ? l1 - l2\
    \ : 0];\n      |                                        ^\n/tmp/tmp23c6333r.cpp:16:40:\
    \ error: invalid types \u2018long long int[long long int]\u2019 for array subscript\n\
    \   16 |     float m2 = l2[l2 > l1 ? l2 - l1 : 0];\n      |                  \
    \                      ^\n"
  stdout: ''
  timestamp: 1659792388
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3ob8an_q: /tmp/tmp3ob8an_q.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwjp6ihae: /tmp/tmpwjp6ihae.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    long long mid = n / 2;\n    long long\
    \ left = 0, right = mid;\n    float midVal;\n    while (left < right) {\n    \
    \    midVal = l[mid];\n        if (midVal < 0)\n            left++;\n        else\
    \ if (midVal > 0)\n            right--;\n        else\n            return midVal;\n\
    \    }\n    if (left > right)\n        return l[mid];\n    midVal = l[mid];\n\
    \    if (midVal < 0)\n        left++;\n    else if (midVal > 0)\n        right--;\n\
    \    else\n        return midVal;\n    while (left < right) {\n        midVal\
    \ = l[mid];\n        if (midVal < 0)\n            left++;\n        else if (midVal\
    \ > 0)\n            right--;\n        else\n            return midVal;\n    }\n\
    \    return l[mid];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpoyp7rsd1: /tmp/tmpoyp7rsd1.cpp:44: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    long long left = l[mid];\n    long long right = l[n - 1];\n\
    \    if (left > right) return median(l);\n    long long mid2 = mid / 2;\n    long\
    \ long left2 = l[mid2];\n    long long right2 = l[n - 1];\n    if (left2 > right2)\
    \ return median(l);\n    if (left2 < right2) return median(l);\n    return left;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792394
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpm04zuv_x: /tmp/tmpm04zuv_x.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792385
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll/2]\
    \ + l[ll/2-1])/2.0);\n    } else {\n        return (l[ll/2-1]);\n    }\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp67yy3f9x: /tmp/tmp67yy3f9x.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    long\
    \ long left = mid;\n    long long right = mid;\n    long long midVal = l[mid];\n\
    \    while (left < right) {\n        mid = (left + right) / 2;\n        midVal\
    \ = l[mid];\n        if (midVal < mid)\n            left = mid + 1;\n        else\n\
    \            right = mid - 1;\n    }\n    return midVal;\n}\nint main() {\n  \
    \  auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1nh8pe87: /tmp/tmp1nh8pe87.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long m1 = mid;\n    long long m2 = mid + 1;\n    long long\
    \ m3 = mid + 2;\n    long long m4 = mid + 3;\n    long long m5 = mid + 4;\n  \
    \  long long m6 = mid + 5;\n    long long m7 = mid + 6;\n    long long m8 = mid\
    \ + 7;\n    long long m9 = mid + 8;\n    long long m10 = mid + 9;\n    long long\
    \ m11 = mid + 10;\n    long long m12 = mid + 11;\n    long long m13 = mid + 12;\n\
    \    long long m14 = mid + 13;\n    long long m15 = mid + 14;\n    long long m16\
    \ = mid + 15;\n    long long m17 = mid + 16;\n    long long m18 = mid + 17;\n\
    \    long long m19 = mid + 18;\n    long long m20 = mid + 19;\n    long long m21\
    \ = mid + 20;\n    long long m22 = mid + 21;\n    long long m23 = mid + 22;\n\
    \    long long m24 = mid + 23;\n    long long m25 = mid + 24;\n    long long m26\
    \ = mid + 25;\n    long long m27 = mid + 26;\n    long long m28 = mid + 27;\n\
    \    long long m29 = mid + 28;\n    long long m30 = mid + 29;\n    long long m31\
    \ = mid + 30;\n    long long m32 = mid + 31;\n    long long m33 = mid + 32;\n\
    \    long long m34 = mid + 33;\n    long long m35 = mid + 34;\n    long long m36\
    \ = mid + 35;\n    long long m37 = mid + 36;\n    long long m38 = mid + 37;\n\
    \    long long m39 = mid + 38;\n    long long m40 = mid + 39;\n    long long m41\
    \ = mid + 40;\n    long long m42 = mid + 41;\n    long long m43 = mid + 42;\n\
    \    long long m44 = mid + 43;\n    long long m45 = mid + 44;\n    long long m46\
    \ = mid + 45;\n    long long m47 = mid + 46;\n    long long m48 = mid + 47;\n\
    \    long long m49 = mid + 48;\n    long long m50 = mid + 49;\n    long long m51\
    \ = m\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vwyty2c.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp7vwyty2c.cpp:62:21: error: \u2018m\u2019 was not declared in this scope;\
    \ did you mean \u2018m9\u2019?\n   62 |     long long m51 = m\n      |       \
    \              ^\n      |                     m9\n/tmp/tmp7vwyty2c.cpp:63:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   63 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659792381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l2 < l1) return\
    \ l1;\n    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsz2mpmmy: /tmp/tmpsz2mpmmy.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) return l[n/2];\n    else return\
    \ (float(l[n/2]) + float(l[n/2+1]))/2;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp395hfr1y: /tmp/tmp395hfr1y.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return l[0];\n    long\
    \ long int mid = n / 2;\n    float left = (float) l[mid];\n    float right = (float)\
    \ l[n - 1];\n    if (left == right) return left;\n    if (left > right) return\
    \ median(l, mid + 1, n - 1);\n    else return median(l, mid - 1, n - 1);\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpns7d1e_5.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpns7d1e_5.cpp:15:54: error: too many arguments to function \u2018float\
    \ median(std::vector<long int>)\u2019\n   15 |     if (left > right) return median(l,\
    \ mid + 1, n - 1);\n      |                                                  \
    \    ^\n/tmp/tmpns7d1e_5.cpp:8:7: note: declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n/tmp/tmpns7d1e_5.cpp:16:41: error: too many arguments\
    \ to function \u2018float median(std::vector<long int>)\u2019\n   16 |     else\
    \ return median(l, mid - 1, n - 1);\n      |                                 \
    \        ^\n/tmp/tmpns7d1e_5.cpp:8:7: note: declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n"
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (auto i : l)\
    \ {\n        sum += i;\n        ++count;\n    }\n    assert(count != 0);\n   \
    \ float average = static_cast<float>(sum) / count;\n    long long mid = count\
    \ / 2;\n    if (count % 2 == 0) {\n        return average + static_cast<float>(l[mid]);\n\
    \    } else {\n        return average - static_cast<float>(l[mid]);\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplf7ak6ii: /tmp/tmplf7ak6ii.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwjp6ihae: /tmp/tmpwjp6ihae.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\n\
    \        return midval;\n    else\n        return rightval;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpin04_jwo: /tmp/tmpin04_jwo.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    float midval = l[mid];\n \
    \   while (left < right) {\n        long long midval2 = l[mid];\n        if (midval2\
    \ < midval) midval = midval2;\n        if (midval > midval2) midval = midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= midval2;\n\
    \        midval += midval2;\n        midval -= midval2;\n        midval += midval2;\n\
    \        midval -= midval2;\n        midval += midval2;\n        midval -= mid\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk6v13syu.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpk6v13syu.cpp:71:22: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n   71 |         midval -= mid\n      |                      ^\n     \
    \ |                      ;\n   72 | }\n      | ~                     \n/tmp/tmpk6v13syu.cpp:73:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   73 | int main() {\n      |            ^\n/tmp/tmpk6v13syu.cpp:80:1: error:\
    \ expected \u2018}\u2019 at end of input\n   80 | }\n      | ^\n/tmp/tmpk6v13syu.cpp:8:35:\
    \ note: to match this \u2018{\u2019\n    8 | float median(std::vector<long> l)\
    \ {\n      |                                   ^\n/tmp/tmpk6v13syu.cpp:80:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   80 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1659792390
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    if (l1 < l2) std::swap(l1, l2);\n\
    \    float midval = l1[l1 - 1] + l2[l2 - 1];\n    if (midval < 0) midval += n;\n\
    \    return midval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5hwlykp.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpn5hwlykp.cpp:15:29: error: invalid types \u2018long int[long int]\u2019\
    \ for array subscript\n   15 |     float midval = l1[l1 - 1] + l2[l2 - 1];\n \
    \     |                             ^\n/tmp/tmpn5hwlykp.cpp:15:42: error: invalid\
    \ types \u2018long int[long int]\u2019 for array subscript\n   15 |     float\
    \ midval = l1[l1 - 1] + l2[l2 - 1];\n      |                                 \
    \         ^\n"
  stdout: ''
  timestamp: 1659792389
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 ==\
    \ 0) return l[0];\n    if (l1 < l2) return l[l1];\n    return l[l2];\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp66ly_qtr: /tmp/tmp66ly_qtr.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 1);\n    long mid = n / 2;\n \
    \   long l1 = 0, l2 = 0, l3 = 0, l4 = 0;\n    for (long i = 0; i < n; i++) {\n\
    \        if (l1 < l[i]) {\n            l1 = l[i];\n        }\n        if (l2 <\
    \ l[i]) {\n            l2 = l[i];\n        }\n        if (l3 < l[i]) {\n     \
    \       l3 = l[i];\n        }\n        if (l4 < l[i]) {\n            l4 = l[i];\n\
    \        }\n    }\n    float l = (l1 + l2 + l3 + l4) / 4;\n    return l;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphf3_zagq.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmphf3_zagq.cpp:27:11: error: declaration of \u2018float l\u2019 shadows\
    \ a parameter\n   27 |     float l = (l1 + l2 + l3 + l4) / 4;\n      |       \
    \    ^\n"
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsvwqa8ra: /tmp/tmpsvwqa8ra.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    assert(ll > 0);\n    long long mid =\
    \ ll / 2;\n    long long left = ll;\n    long long right = mid;\n    long long\
    \ midVal = l[mid];\n    long long medianVal = midVal;\n    while (left > 0 &&\
    \ right > 0) {\n        if (l[left - 1] < midVal) {\n            left--;\n   \
    \     } else if (l[right - 1] > midVal) {\n            right--;\n        } else\
    \ {\n            medianVal = l[left - 1];\n            left--;\n            right--;\n\
    \        }\n    }\n    if (left > 0 && right > 0) {\n        medianVal = l[left\
    \ - 1];\n    } else if (left > 0) {\n        medianVal = l[left - 1];\n    } else\
    \ if (right > 0) {\n        medianVal = l[right - 1];\n    }\n    return float(medianVal);\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpfnu8ncfv: /tmp/tmpfnu8ncfv.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        return\
    \ ((l[size / 2 - 1] + l[size / 2]) / 2.0);\n    } else {\n        return l[size\
    \ / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_qikcwbv: /tmp/tmp_qikcwbv.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    if (l.size() % 2 == 0) {\n    \
    \    return std::max(l[mid], l[mid-1]);\n    } else {\n        return std::max(l[mid],\
    \ l[mid-1]);\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxn_lxwm4: /tmp/tmpxn_lxwm4.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 ==\
    \ 0) return l[0];\n    if (l1 < l2) return l1;\n    long long lm = l1 + l2;\n\
    \    float mid1 = lm / 2;\n    float mid2 = lm / 2;\n    float mid3 = lm / 2;\n\
    \    float mid4 = lm / 2;\n    float mid5 = lm / 2;\n    float mid6 = lm / 2;\n\
    \    float mid7 = lm / 2;\n    float mid8 = lm / 2;\n    float mid9 = lm / 2;\n\
    \    float mid10 = lm / 2;\n    float mid11 = lm / 2;\n    float mid12 = lm /\
    \ 2;\n    float mid13 = lm / 2;\n    float mid14 = lm / 2;\n    float mid15 =\
    \ lm / 2;\n    float mid16 = lm / 2;\n    float mid17 = lm / 2;\n    float mid18\
    \ = lm / 2;\n    float mid19 = lm / 2;\n    float mid20 = lm / 2;\n    float mid21\
    \ = lm / 2;\n    float mid22 = lm / 2;\n    float mid23 = lm / 2;\n    float mid24\
    \ = lm / 2;\n    float mid25 = lm / 2;\n    float mid26 = lm / 2;\n    float mid27\
    \ = lm / 2;\n    float mid28 = lm / 2;\n    float mid29 = lm / 2;\n    float mid30\
    \ = lm / 2;\n    float mid31 = lm / 2;\n    float mid32 = lm / 2;\n    float mid33\
    \ = lm / 2;\n    float mid34 = lm / 2;\n    float mid35 = lm / 2;\n    float mid36\
    \ = lm / 2;\n    float mid37 = lm / 2;\n    float mid38 = lm / 2;\n    float mid39\
    \ = lm / 2;\n    float mid40 = lm / 2;\n    float mid41 = lm / 2;\n    float mid42\
    \ = lm / 2;\n    float mid43 = lm / 2;\n    float mid44 = lm / 2;\n    float mid45\
    \ = lm / 2;\n    float mid46 = lm / \n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcx1dqudg.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpcx1dqudg.cpp:63:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   63 | }\n      | ^\n/tmp/tmpcx1dqudg.cpp:63:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   63 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792390
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    long\
    \ long left = mid;\n    long long right = mid;\n    while (left < l.size()) {\n\
    \        mid = (left + right) / 2;\n        if (l[mid] <= l[left]) {\n       \
    \     left = mid + 1;\n        } else {\n            right = mid;\n        }\n\
    \    }\n    if (left == l.size()) {\n        return l[left];\n    }\n    if (l[left]\
    \ <= l[right]) {\n        return l[left];\n    }\n    return l[right];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792395
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        float x\
    \ = (l[ll / 2 - 1] + l[ll / 2]) / 2;\n        return x;\n    } else {\n      \
    \  float x = (l[ll / 2] + l[ll / 2 + 1]) / 2;\n        return x;\n    }\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptx4nt2h3: /tmp/tmptx4nt2h3.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792386
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2 - 1])/2.0;\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpfoyvboid: /tmp/tmpfoyvboid.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = (float)sum / l.size();\n    return\
    \ median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0w1l2lbw: /tmp/tmp0w1l2lbw.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l1 < l2) return l1;\n\
    \    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpt9j9_0y4: /tmp/tmpt9j9_0y4.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long mid = l.size() / 2;\n    if (l.size()\
    \ % 2 == 1) {\n        return l[mid];\n    } else {\n        return (l[mid] +\
    \ l[mid]) / 2.0;\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwzidyfgk: /tmp/tmpwzidyfgk.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    long long left = l[mid];\n    long long right = l[n - 1];\n\
    \    if (left > right) return left;\n    return right;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjjvfvs9t: /tmp/tmpjjvfvs9t.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792383
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgfrnlo38: /tmp/tmpgfrnlo38.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792382
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 ==\
    \ 0) return l[mid];\n    if (l1 > l2) std::swap(l1, l2);\n    float mid1 = l[mid];\n\
    \    float mid2 = l[n - mid];\n    if (mid1 > mid2) std::swap(mid1, mid2);\n \
    \   float m1 = mid1;\n    float m2 = mid2;\n    float m = (m1 + m2) / 2;\n   \
    \ if (m == l[mid]) m = m1;\n    if (m == l[n - mid]) m = m2;\n    return m;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjir5hhqt: /tmp/tmpjir5hhqt.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1659792390
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\
    \ else {\n        return right;\n    }\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsgjpvmwc: /tmp/tmpsgjpvmwc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1659792384

language: cpp
name: HumanEval_47_median
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long l1 = 0, l2 = mid;\n    long long m1 = 0, m2 = mid;\n\
    \    float midVal = l[mid];\n    while (true) {\n        if (l1 < mid) m1 = l1;\n\
    \        if (l2 < mid) m2 = l2;\n        if (m1 < m2 && m1 < midVal) l1 = m1 +\
    \ 1;\n        if (m2 < mid) l2 = m2;\n        if (l1 > l2) break;\n        midVal\
    \ = l[mid];\n    }\n    return midVal;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4j4y3ipb.cpp: In function 'int main()':\n/tmp/tmp4j4y3ipb.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4j4y3ipb.cpp:2:\n/tmp/tmp4j4y3ipb.cpp:27:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmp4j4y3ipb.cpp:27:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmp4j4y3ipb.cpp:27:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4j4y3ipb.cpp:27:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp4j4y3ipb.cpp:27:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp4j4y3ipb.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4j4y3ipb.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  assert(n != 0);\n  long long mid = n / 2;\n\
    \  if (n % 2 == 0) {\n    return l[mid];\n  } else {\n    return (l[mid] + l[mid])\
    \ / 2.0;\n  }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz88g0huh.cpp: In function 'int main()':\n/tmp/tmpz88g0huh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz88g0huh.cpp:2:\n/tmp/tmpz88g0huh.cpp:20:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpz88g0huh.cpp:20:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpz88g0huh.cpp:20:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpz88g0huh.cpp:20:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpz88g0huh.cpp:20:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpz88g0huh.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz88g0huh.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2-1]\
    \ + (l[n/2] - l[n/2-1])/2.0;\n    } else {\n        return l[n/2];\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfnlnnb2v.cpp: In function 'int main()':\n/tmp/tmpfnlnnb2v.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfnlnnb2v.cpp:2:\n/tmp/tmpfnlnnb2v.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpfnlnnb2v.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpfnlnnb2v.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpfnlnnb2v.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpfnlnnb2v.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpfnlnnb2v.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfnlnnb2v.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdtm33xze.cpp: In function 'int main()':\n/tmp/tmpdtm33xze.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdtm33xze.cpp:2:\n/tmp/tmpdtm33xze.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpdtm33xze.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpdtm33xze.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdtm33xze.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpdtm33xze.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpdtm33xze.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdtm33xze.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplegqv94c.cpp: In function 'int main()':\n/tmp/tmplegqv94c.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplegqv94c.cpp:2:\n/tmp/tmplegqv94c.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmplegqv94c.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmplegqv94c.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmplegqv94c.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmplegqv94c.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmplegqv94c.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplegqv94c.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw5nm5p3r.cpp: In function 'float median(std::vector<long int>)':\n\
    /tmp/tmpw5nm5p3r.cpp:10:15: error: 'i' does not name a type\n     for (auto i\
    \ : l) {\n               ^\n/tmp/tmpw5nm5p3r.cpp:13:5: error: expected ';' before\
    \ 'float'\n     float median = (float)sum / l.size();\n     ^\n/tmp/tmpw5nm5p3r.cpp:14:5:\
    \ error: expected primary-expression before 'return'\n     return median;\n  \
    \   ^\n/tmp/tmpw5nm5p3r.cpp:14:5: error: expected ')' before 'return'\n/tmp/tmpw5nm5p3r.cpp:\
    \ In function 'int main()':\n/tmp/tmpw5nm5p3r.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = median;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw5nm5p3r.cpp:2:\n/tmp/tmpw5nm5p3r.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpw5nm5p3r.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpw5nm5p3r.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpw5nm5p3r.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpw5nm5p3r.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpw5nm5p3r.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long m1 = mid;\n    long long m2 = mid + 1;\n    long long\
    \ m3 = mid + 2;\n    long long m4 = mid + 3;\n    long long m5 = mid + 4;\n  \
    \  long long m6 = mid + 5;\n    long long m7 = mid + 6;\n    long long m8 = mid\
    \ + 7;\n    long long m9 = mid + 8;\n    long long m10 = mid + 9;\n    long long\
    \ m11 = mid + 10;\n    long long m12 = mid + 11;\n    long long m13 = mid + 12;\n\
    \    long long m14 = mid + 13;\n    long long m15 = mid + 14;\n    long long m16\
    \ = mid + 15;\n    long long m17 = mid + 16;\n    long long m18 = mid + 17;\n\
    \    long long m19 = mid + 18;\n    long long m20 = mid + 19;\n    long long m21\
    \ = mid + 20;\n    long long m22 = mid + 21;\n    long long m23 = mid + 22;\n\
    \    long long m24 = mid + 23;\n    long long m25 = mid + 24;\n    long long m26\
    \ = mid + 25;\n    long long m27 = mid + 26;\n    long long m28 = mid + 27;\n\
    \    long long m29 = mid + 28;\n    long long m30 = mid + 29;\n    long long m31\
    \ = mid + 30;\n    long long m32 = mid + 31;\n    long long m33 = mid + 32;\n\
    \    long long m34 = mid + 33;\n    long long m35 = mid + 34;\n    long long m36\
    \ = mid + 35;\n    long long m37 = mid + 36;\n    long long m38 = mid + 37;\n\
    \    long long m39 = mid + 38;\n    long long m40 = mid + 39;\n    long long m41\
    \ = mid + 40;\n    long long m42 = mid + 41;\n    long long m43 = mid + 42;\n\
    \    long long m44 = mid + 43;\n    long long m45 = mid + 44;\n    long long m46\
    \ = mid + 45;\n    long long m47 = mid + 46;\n    long long m48 = mid + 47;\n\
    \    long long m49 = mid + 48;\n    long long m50 = mid + 49;\n    long long m51\
    \ = m\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw66dc9qh.cpp: In function 'float median(std::vector<long int>)':\n\
    /tmp/tmpw66dc9qh.cpp:62:21: error: 'm' was not declared in this scope\n     long\
    \ long m51 = m\n                     ^\n/tmp/tmpw66dc9qh.cpp:63:1: error: expected\
    \ ',' or ';' before '}' token\n }\n ^\n/tmp/tmpw66dc9qh.cpp: In function 'int\
    \ main()':\n/tmp/tmpw66dc9qh.cpp:65:10: error: 'candidate' does not name a type\n\
    \     auto candidate = median;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw66dc9qh.cpp:2:\n/tmp/tmpw66dc9qh.cpp:66:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpw66dc9qh.cpp:66:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpw66dc9qh.cpp:66:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpw66dc9qh.cpp:66:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpw66dc9qh.cpp:66:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpw66dc9qh.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l[0] + (l.size() / 2);\n\
    \    float midval = mid;\n    float leftval = l[0];\n    float rightval = l[l.size()\
    \ - 1];\n    float leftmedian = midval;\n    float rightmedian = midval;\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] < midval) {\n      \
    \      leftval = l[i];\n            leftmedian = midval;\n        } else if (l[i]\
    \ > midval) {\n            rightval = l[i];\n            rightmedian = midval;\n\
    \        } else {\n            midval = l[i];\n        }\n    }\n    return (leftmedian\
    \ + rightmedian) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi4n6qolf.cpp: In function 'int main()':\n/tmp/tmpi4n6qolf.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi4n6qolf.cpp:2:\n/tmp/tmpi4n6qolf.cpp:31:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpi4n6qolf.cpp:31:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpi4n6qolf.cpp:31:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpi4n6qolf.cpp:31:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpi4n6qolf.cpp:31:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpi4n6qolf.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi4n6qolf.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    long long midVal = l[mid];\n\
    \    while (left < right) {\n        long long midValLeft = l[left];\n       \
    \ long long midValRight = l[right];\n        if (midValLeft < midValRight) {\n\
    \            left++;\n        } else if (midValLeft > midValRight) {\n       \
    \     right--;\n        } else {\n            return midVal;\n        }\n    }\n\
    \    return l[left];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnqn_1wu8.cpp: In function 'int main()':\n/tmp/tmpnqn_1wu8.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnqn_1wu8.cpp:2:\n/tmp/tmpnqn_1wu8.cpp:29:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpnqn_1wu8.cpp:29:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpnqn_1wu8.cpp:29:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpnqn_1wu8.cpp:29:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpnqn_1wu8.cpp:29:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpnqn_1wu8.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnqn_1wu8.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvyy96v2p.cpp: In function 'int main()':\n/tmp/tmpvyy96v2p.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvyy96v2p.cpp:2:\n/tmp/tmpvyy96v2p.cpp:17:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpvyy96v2p.cpp:17:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpvyy96v2p.cpp:17:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpvyy96v2p.cpp:17:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpvyy96v2p.cpp:17:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpvyy96v2p.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvyy96v2p.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return (b\
    \ - a) / 2.0;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe_dra3ak.cpp: In function 'int main()':\n/tmp/tmpe_dra3ak.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpe_dra3ak.cpp:2:\n/tmp/tmpe_dra3ak.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpe_dra3ak.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpe_dra3ak.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpe_dra3ak.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpe_dra3ak.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpe_dra3ak.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpe_dra3ak.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    float c =\
    \ l[mid];\n    float d = l[n - 1];\n    if (a > b) std::swap(a, b);\n    if (b\
    \ > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b,\
    \ c);\n    if (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if\
    \ (a > b) std::swap(a, b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a,\
    \ b);\n    if (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if\
    \ (b > c) std::swap(b, c);\n    if (a > b) std::swap(a, b);\n    if (b > c) \n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvu8f4r0y.cpp: In function 'float median(std::vector<long int>)':\n\
    /tmp/tmpvu8f4r0y.cpp:60:1: error: expected primary-expression before '}' token\n\
    \ }\n ^\n/tmp/tmpvu8f4r0y.cpp:60:1: error: expected ';' before '}' token\n/tmp/tmpvu8f4r0y.cpp:\
    \ In function 'int main()':\n/tmp/tmpvu8f4r0y.cpp:62:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = median;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvu8f4r0y.cpp:2:\n/tmp/tmpvu8f4r0y.cpp:63:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpvu8f4r0y.cpp:63:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpvu8f4r0y.cpp:63:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpvu8f4r0y.cpp:63:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpvu8f4r0y.cpp:63:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpvu8f4r0y.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template arg"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    }\n    return rightval;\n}\nint main() {\n  \
    \  auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkvjdj58a.cpp: In function 'int main()':\n/tmp/tmpkvjdj58a.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkvjdj58a.cpp:2:\n/tmp/tmpkvjdj58a.cpp:20:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpkvjdj58a.cpp:20:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpkvjdj58a.cpp:20:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpkvjdj58a.cpp:20:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpkvjdj58a.cpp:20:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpkvjdj58a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkvjdj58a.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 1) {\n        return\
    \ l[size / 2];\n    }\n    float mid = size / 2;\n    float a = l[mid];\n    float\
    \ b = l[size / 2 - 1];\n    return a + (b - a) * ((size / 2) - 1);\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpce21c_zb.cpp: In function 'int main()':\n/tmp/tmpce21c_zb.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpce21c_zb.cpp:2:\n/tmp/tmpce21c_zb.cpp:20:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpce21c_zb.cpp:20:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpce21c_zb.cpp:20:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpce21c_zb.cpp:20:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpce21c_zb.cpp:20:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpce21c_zb.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpce21c_zb.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdtm33xze.cpp: In function 'int main()':\n/tmp/tmpdtm33xze.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdtm33xze.cpp:2:\n/tmp/tmpdtm33xze.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpdtm33xze.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpdtm33xze.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdtm33xze.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpdtm33xze.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpdtm33xze.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdtm33xze.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw5nm5p3r.cpp: In function 'float median(std::vector<long int>)':\n\
    /tmp/tmpw5nm5p3r.cpp:10:15: error: 'i' does not name a type\n     for (auto i\
    \ : l) {\n               ^\n/tmp/tmpw5nm5p3r.cpp:13:5: error: expected ';' before\
    \ 'float'\n     float median = (float)sum / l.size();\n     ^\n/tmp/tmpw5nm5p3r.cpp:14:5:\
    \ error: expected primary-expression before 'return'\n     return median;\n  \
    \   ^\n/tmp/tmpw5nm5p3r.cpp:14:5: error: expected ')' before 'return'\n/tmp/tmpw5nm5p3r.cpp:\
    \ In function 'int main()':\n/tmp/tmpw5nm5p3r.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = median;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw5nm5p3r.cpp:2:\n/tmp/tmpw5nm5p3r.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpw5nm5p3r.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpw5nm5p3r.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpw5nm5p3r.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpw5nm5p3r.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpw5nm5p3r.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    }\n    return rightval;\n}\nint main() {\n  \
    \  auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkvjdj58a.cpp: In function 'int main()':\n/tmp/tmpkvjdj58a.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkvjdj58a.cpp:2:\n/tmp/tmpkvjdj58a.cpp:20:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpkvjdj58a.cpp:20:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpkvjdj58a.cpp:20:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpkvjdj58a.cpp:20:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpkvjdj58a.cpp:20:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpkvjdj58a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkvjdj58a.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 % 2\
    \ == 0) {\n        return ((l1[l1 / 2 - 1] + l1[l1 / 2]) / 2.0f);\n    } else\
    \ {\n        return ((l2[l2 / 2 - 1] + l2[l2 / 2]) / 2.0f);\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoq1vwvdk.cpp: In function 'float median(std::vector<long int>)':\n\
    /tmp/tmpoq1vwvdk.cpp:15:31: error: invalid types 'long long int[long long int]'\
    \ for array subscript\n         return ((l1[l1 / 2 - 1] + l1[l1 / 2]) / 2.0f);\n\
    \                               ^\n/tmp/tmpoq1vwvdk.cpp:15:44: error: invalid\
    \ types 'long long int[long long int]' for array subscript\n         return ((l1[l1\
    \ / 2 - 1] + l1[l1 / 2]) / 2.0f);\n                                          \
    \  ^\n/tmp/tmpoq1vwvdk.cpp:17:31: error: invalid types 'long long int[long long\
    \ int]' for array subscript\n         return ((l2[l2 / 2 - 1] + l2[l2 / 2]) /\
    \ 2.0f);\n                               ^\n/tmp/tmpoq1vwvdk.cpp:17:44: error:\
    \ invalid types 'long long int[long long int]' for array subscript\n         return\
    \ ((l2[l2 / 2 - 1] + l2[l2 / 2]) / 2.0f);\n                                  \
    \          ^\n/tmp/tmpoq1vwvdk.cpp: In function 'int main()':\n/tmp/tmpoq1vwvdk.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpoq1vwvdk.cpp:2:\n/tmp/tmpoq1vwvdk.cpp:22:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmpoq1vwvdk.cpp:22:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmpoq1vwvdk.cpp:22:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpoq1vwvdk.cpp:22:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enc"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        float\
    \ mid = l[size / 2];\n        float left = l[size / 2 - 1];\n        float right\
    \ = l[size / 2];\n        return ((mid < left) ? left : ((mid > right) ? right\
    \ : mid));\n    } else {\n        float mid = l[size / 2 - 1];\n        float\
    \ left = l[size / 2];\n        float right = l[size / 2 + 1];\n        return\
    \ ((mid < left) ? left : ((mid > right) ? right : mid));\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptydfw3zx.cpp: In function 'int main()':\n/tmp/tmptydfw3zx.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptydfw3zx.cpp:2:\n/tmp/tmptydfw3zx.cpp:24:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmptydfw3zx.cpp:24:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmptydfw3zx.cpp:24:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmptydfw3zx.cpp:24:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmptydfw3zx.cpp:24:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmptydfw3zx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptydfw3zx.cpp:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9iimoxy1.cpp: In function 'int main()':\n/tmp/tmp9iimoxy1.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = median;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9iimoxy1.cpp:2:\n/tmp/tmp9iimoxy1.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n                                     \
    \   ^\n/tmp/tmp9iimoxy1.cpp:18:86: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n                   \
    \                                                                   ^\n/tmp/tmp9iimoxy1.cpp:18:86:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9iimoxy1.cpp:18:86: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9iimoxy1.cpp:18:86: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp9iimoxy1.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9iimoxy1.cpp:"
  stdout: ''

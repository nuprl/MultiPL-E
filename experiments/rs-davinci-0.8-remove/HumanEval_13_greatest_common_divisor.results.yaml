language: rs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (a, b) = (a.abs(), b.abs());\n    if a\
    \ == 0 {\n        b\n    } else if b == 0 {\n        a\n    } else {\n       \
    \ greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let remainder = a % b;\n        a = b;\n        b = remainder;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let remainder = a % b;\n    if remainder ==\
    \ 0 {\n        b\n    } else {\n        greatest_common_divisor(b, remainder)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut x = a;\n    let mut y = b;\n    while\
    \ y != 0 {\n        let temp = y;\n        y = x % y;\n        x = temp;\n   \
    \ }\n    x\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (mut a, mut b) = (a, b);\n    while b !=\
    \ 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut u = a;\n    let mut v = b;\n    while\
    \ v != 0 {\n        let r = u % v;\n        u = v;\n        v = r;\n    }\n  \
    \  u\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    let\
    \ mut c = 0;\n    while b != 0 {\n        c = a % b;\n        a = b;\n       \
    \ b = c;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (a, b) = if a < b { (b, a) } else { (a,\
    \ b) };\n    let mut r = a % b;\n    while r != 0 {\n        a = b;\n        b\
    \ = r;\n        r = a % b;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign twice to immutable variable `a`\n --> /tmp/tmpz9x9euk0.rs:6:9\n\
    \  |\n3 |     let (a, b) = if a < b { (b, a) } else { (a, b) };\n  |         \
    \ -\n  |          |\n  |          first assignment to `a`\n  |          help:\
    \ consider making this binding mutable: `mut a`\n...\n6 |         a = b;\n  |\
    \         ^^^^^ cannot assign twice to immutable variable\n\nerror[E0384]: cannot\
    \ assign twice to immutable variable `b`\n --> /tmp/tmpz9x9euk0.rs:7:9\n  |\n\
    3 |     let (a, b) = if a < b { (b, a) } else { (a, b) };\n  |             -\n\
    \  |             |\n  |             first assignment to `b`\n  |             help:\
    \ consider making this binding mutable: `mut b`\n...\n7 |         b = r;\n  |\
    \         ^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659822428
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    match (a, b) {\n        (a, 0) => a,\n    \
    \    (a, b) => greatest_common_divisor(b, a % b),\n    }\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    // For any two integers a and b (not both 0),\
    \ their greatest common divisor is\n    // one of the following:\n    // 1. The\
    \ smaller of a and b, if this number divides the larger of a and b;\n    // 2.\
    \ The greatest common divisor of the smaller of a and b and the remainder\n  \
    \  //    of the larger of a and b divided by the smaller of a and b.\n    if a\
    \ == 0 {\n        b.abs()\n    } else if b == 0 {\n        a.abs()\n    } else\
    \ if a.abs() < b.abs() {\n        greatest_common_divisor(b, a)\n    } else {\n\
    \        greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut x = a;\n    let mut y = b;\n    while\
    \ y != 0 {\n        let t = y;\n        y = x % y;\n        x = t;\n    }\n  \
    \  x\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut r = a % b;\n    while r != 0 {\n  \
    \      a = b;\n        b = r;\n        r = a % b;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdytfv_j6.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdytfv_j6.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = r;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659822428
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    match (a, b) {\n        (x, 0) => x,\n    \
    \    (x, y) => greatest_common_divisor(y, x % y),\n    }\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut x = a;\n    let mut y = b;\n    while\
    \ y != 0 {\n        let tmp = y;\n        y = x % y;\n        x = tmp;\n    }\n\
    \    x\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut m = a;\n    let mut n = b;\n    while\
    \ m != 0 {\n        let old_m = m;\n        m = n % m;\n        n = old_m;\n \
    \   }\n    n.abs()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let rem = a % b;\n    if rem == 0 {\n     \
    \   b\n    } else {\n        greatest_common_divisor(b, rem)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n   \
    \ }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (a, b) = if a < b { (b, a) } else { (a,\
    \ b) };\n    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let modulo = a % b;\n    if modulo == 0 {\n\
    \        b\n    } else {\n        greatest_common_divisor(b, modulo)\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    assert!(a >= 0 && b >= 0);\n    if b == 0 {\n\
    \        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut d = a;\n    let mut m = b;\n    while\
    \ m != 0 {\n        let r = d % m;\n        d = m;\n        m = r;\n    }\n  \
    \  d\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (mut a, mut b) = (a, b);\n    while b !=\
    \ 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a.abs()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    // Check for invalid inputs.\n    if a < 1\
    \ || b < 1 {\n        return -1;\n    }\n\n    // C++ version had a check here\
    \ to get the abs of both a and b.\n    // This should not be necessary because\
    \ we only need to check\n    // for negative values, and if both a and b are negative\
    \ then\n    // their GCD will also be negative.\n\n    // Determine which number\
    \ is smaller, then swap the smaller\n    // number with a and the larger number\
    \ with b.\n    if a > b {\n        return greatest_common_divisor(b, a);\n   \
    \ }\n\n    // Iterate using a while loop until the remainder is 0.\n    let mut\
    \ r = b % a;\n    while r != 0 {\n        b = a;\n        a = r;\n        r =\
    \ b % a;\n    }\n\n    return a;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpfxzip1nn.rs:22:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n22 |         b = a;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpfxzip1nn.rs:23:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n23 |         a = r;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let c = a % b;\n        a = b;\n        b = c;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    match b {\n        0 => a,\n        _ => greatest_common_divisor(b,\
    \ a % b),\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut r = a % b;\n    while r != 0 {\n  \
    \      a = b;\n        b = r;\n        r = a % b;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdytfv_j6.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdytfv_j6.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = r;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659822428
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (mut a, mut b) = (a, b);\n    while b !=\
    \ 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a.abs()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let c = a % b;\n        a = b;\n        b = c;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    match (a, b) {\n        (a, 0) => a,\n    \
    \    (a, b) => greatest_common_divisor(b, a % b),\n    }\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (mut a, mut b) = (a, b);\n    while b !=\
    \ 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (mut a, mut b) = (a, b);\n    while b !=\
    \ 0 {\n        let remainder = a % b;\n        a = b;\n        b = remainder;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut dividend = a;\n    let mut divisor\
    \ = b;\n    while divisor != 0 {\n        let remainder = dividend % divisor;\n\
    \        dividend = divisor;\n        divisor = remainder;\n    }\n    dividend\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    // Return the GCD by using Euclid's algorithm\n\
    \    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n   \
    \ }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n   \
    \ }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    match (a, b) {\n        (0, x) => x,\n    \
    \    (x, 0) => x,\n        (x, y) => greatest_common_divisor(y, x % y),\n    }\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut r = a % b;\n    while r != 0 {\n  \
    \      a = b;\n        b = r;\n        r = a % b;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdytfv_j6.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdytfv_j6.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = r;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659822428
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (mut a, mut b) = (a, b);\n    while b !=\
    \ 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    // Definition (https://en.wikipedia.org/wiki/Greatest_common_divisor)\n\
    \    // let a = bq + r\n    // gcd(a, b) = gcd(b, r)\n    if b == 0 {\n      \
    \  a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    // Return the greatest common divisor of two\
    \ positive integers\n    let mut a = a;\n    let mut b = b;\n    while b != 0\
    \ {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a.abs()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let a = if a < 0 { -a } else { a };\n    let\
    \ b = if b < 0 { -b } else { b };\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    if a == b {\n        return a;\n    }\n    if a > b {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n  \
    \  assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n  \
    \  assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a_temp = a;\n    let mut b_temp = b;\n\
    \    while b_temp != 0 {\n        let temp = b_temp;\n        b_temp = a_temp\
    \ % b_temp;\n        a_temp = temp;\n    }\n    a_temp\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (a, b) = if a < b { (b, a) } else { (a,\
    \ b) };\n    let mut r = a % b;\n    while r != 0 {\n        a = b;\n        b\
    \ = r;\n        r = a % b;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign twice to immutable variable `a`\n --> /tmp/tmpz9x9euk0.rs:6:9\n\
    \  |\n3 |     let (a, b) = if a < b { (b, a) } else { (a, b) };\n  |         \
    \ -\n  |          |\n  |          first assignment to `a`\n  |          help:\
    \ consider making this binding mutable: `mut a`\n...\n6 |         a = b;\n  |\
    \         ^^^^^ cannot assign twice to immutable variable\n\nerror[E0384]: cannot\
    \ assign twice to immutable variable `b`\n --> /tmp/tmpz9x9euk0.rs:7:9\n  |\n\
    3 |     let (a, b) = if a < b { (b, a) } else { (a, b) };\n  |             -\n\
    \  |             |\n  |             first assignment to `b`\n  |             help:\
    \ consider making this binding mutable: `mut b`\n...\n7 |         b = r;\n  |\
    \         ^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659822428
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let c = a % b;\n        a = b;\n        b = c;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    match (a, b) {\n        (a, 0) => a,\n    \
    \    (a, b) => greatest_common_divisor(b, a % b),\n    }\n}\n\nfn main() {\n \
    \   let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut x = if a > b { a } else { b };\n  \
    \  let mut y = if a > b { b } else { a };\n    while y != 0 {\n        let z =\
    \ x % y;\n        x = y;\n        y = z;\n    }\n    x\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut d = 0;\n    let (mut a, mut b) = (a,\
    \ b);\n    if a == 0 || b == 0 {\n        return a + b;\n    }\n    loop {\n \
    \       if (a & 1) == 0 {\n            if (b & 1) == 0 {\n                // both\
    \ even\n                d += 1;\n                a >>= 1;\n                b >>=\
    \ 1;\n            } else {\n                // a even, b odd\n               \
    \ a >>= 1;\n            }\n        } else if (b & 1) == 0 {\n            // a\
    \ odd, b even\n            b >>= 1;\n        } else if a >= b {\n            //\
    \ both odd, a >= b\n            a = (a - b) >> 1;\n        } else {\n        \
    \    // both odd, a < b\n            b = (b - a) >> 1;\n        }\n        if\
    \ a == 0 {\n            return b << d;\n        }\n        if b == 0 {\n     \
    \       return a << d;\n        }\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    // return the gcd of a and b\n    let mut a\
    \ = a;\n    let mut b = b;\n    while b != 0 {\n        let tmp = b;\n       \
    \ b = a % b;\n        a = tmp;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n   \
    \ }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n   \
    \ }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let c = if a < b { b % a } else { a % b };\n\
    \    if c == 0 {\n        if a < b { a } else { b }\n    } else {\n        greatest_common_divisor(c,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `12`', /tmp/tmp_c2zkt2q.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut max = isize::max(a, b);\n    let mut\
    \ min = isize::min(a, b);\n    let mut r = max % min;\n    while r != 0 {\n  \
    \      max = min;\n        min = r;\n        r = max % min;\n    }\n    min\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut m = a;\n    let mut n = b;\n    while\
    \ m != 0 {\n        let temp = m;\n        m = n % m;\n        n = temp;\n   \
    \ }\n    n.abs()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let a = a.abs();\n    let b = b.abs();\n  \
    \  let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let c = a %\
    \ b;\n        a = b;\n        b = c;\n    }\n    a\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let r = a % b;\n    if r == 0 {\n        b\n\
    \    } else {\n        greatest_common_divisor(b, r)\n    }\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let (mut a, mut b) = (a, b);\n    while b !=\
    \ 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a.abs()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut r = a % b;\n    while r != 0 {\n  \
    \      a = b;\n        b = r;\n        r = a % b;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdytfv_j6.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdytfv_j6.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = r;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659822428
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let a = a.abs();\n    let b = b.abs();\n  \
    \  let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n\
    \        b = a % b;\n        a = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let remainder = a % b;\n        a = b;\n        b = remainder;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let r = a % b;\n        a = b;\n        b = r;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    // If b is zero then the gcd is a.\n    if\
    \ b == 0 {\n        return a;\n    }\n    // If b is not zero then the gcd is\
    \ the same as the gcd of b and a mod b.\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n\
    \    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut x = if a < 0 {\n        -a\n    } else\
    \ {\n        a\n    };\n    let mut y = if b < 0 {\n        -b\n    } else {\n\
    \        b\n    };\n    while y != 0 {\n        let t = y;\n        y = x % y;\n\
    \        x = t;\n    }\n    x\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    match a {\n        0 => b,\n        a => greatest_common_divisor(b\
    \ % a, a),\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822429

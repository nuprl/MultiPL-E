name: HumanEval_13_greatest_common_divisor
language: rs
prompt: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
  \ isize, b: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
  \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
  \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
completions: ["    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let (a, b) = (a.abs(), b.abs());\n    if a == 0 {\n   \
    \     b\n    } else if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n       \
    \ let remainder = a % b;\n        a = b;\n        b = remainder;\n    }\n    a",
  "    let remainder = a % b;\n    if remainder == 0 {\n        b\n    } else {\n\
    \        greatest_common_divisor(b, remainder)\n    }", "    let mut x = a;\n\
    \    let mut y = b;\n    while y != 0 {\n        let temp = y;\n        y = x\
    \ % y;\n        x = temp;\n    }\n    x", "    if b == 0 {\n        a\n    } else\
    \ {\n        greatest_common_divisor(b, a % b)\n    }", "    if b == 0 {\n   \
    \     a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", "  \
    \  if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let (mut a, mut b) = (a, b);\n    while b != 0 {\n    \
    \    let r = a % b;\n        a = b;\n        b = r;\n    }\n    a", "    let mut\
    \ u = a;\n    let mut v = b;\n    while v != 0 {\n        let r = u % v;\n   \
    \     u = v;\n        v = r;\n    }\n    u", "    if b == 0 {\n        a\n   \
    \ } else {\n        greatest_common_divisor(b, a % b)\n    }", "    let mut a\
    \ = a;\n    let mut b = b;\n    let mut c = 0;\n    while b != 0 {\n        c\
    \ = a % b;\n        a = b;\n        b = c;\n    }\n    a", "    if b == 0 {\n\
    \        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let (a, b) = if a < b { (b, a) } else { (a, b) };\n   \
    \ let mut r = a % b;\n    while r != 0 {\n        a = b;\n        b = r;\n   \
    \     r = a % b;\n    }\n    b", "    match (a, b) {\n        (a, 0) => a,\n \
    \       (a, b) => greatest_common_divisor(b, a % b),\n    }", "    let mut a =\
    \ a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    a", "    if b == 0 {\n        a\n    } else\
    \ {\n        greatest_common_divisor(b, a % b)\n    }", "    if b == 0 {\n   \
    \     a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", "  \
    \  if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    // For any two integers a and b (not both 0), their greatest\
    \ common divisor is\n    // one of the following:\n    // 1. The smaller of a\
    \ and b, if this number divides the larger of a and b;\n    // 2. The greatest\
    \ common divisor of the smaller of a and b and the remainder\n    //    of the\
    \ larger of a and b divided by the smaller of a and b.\n    if a == 0 {\n    \
    \    b.abs()\n    } else if b == 0 {\n        a.abs()\n    } else if a.abs() <\
    \ b.abs() {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut x = a;\n    let mut y = b;\n    while y != 0 {\n\
    \        let t = y;\n        y = x % y;\n        x = t;\n    }\n    x", "    let\
    \ mut r = a % b;\n    while r != 0 {\n        a = b;\n        b = r;\n       \
    \ r = a % b;\n    }\n    b", "    if b == 0 {\n        a\n    } else {\n     \
    \   greatest_common_divisor(b, a % b)\n    }", "    if b == 0 {\n        a\n \
    \   } else {\n        greatest_common_divisor(b, a % b)\n    }", "    match (a,\
    \ b) {\n        (x, 0) => x,\n        (x, y) => greatest_common_divisor(y, x %\
    \ y),\n    }", "    let mut x = a;\n    let mut y = b;\n    while y != 0 {\n \
    \       let tmp = y;\n        y = x % y;\n        x = tmp;\n    }\n    x", " \
    \   if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut m = a;\n    let mut n = b;\n    while m != 0 {\n\
    \        let old_m = m;\n        m = n % m;\n        n = old_m;\n    }\n    n.abs()",
  "    let rem = a % b;\n    if rem == 0 {\n        b\n    } else {\n        greatest_common_divisor(b,\
    \ rem)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    a",
  "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    let (a, b) = if a < b { (b, a) } else { (a, b) };\n    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n       \
    \ let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n    a", "    let\
    \ mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let tmp = b;\n \
    \       b = a % b;\n        a = tmp;\n    }\n    a", "    let modulo = a % b;\n\
    \    if modulo == 0 {\n        b\n    } else {\n        greatest_common_divisor(b,\
    \ modulo)\n    }", "    assert!(a >= 0 && b >= 0);\n    if b == 0 {\n        a\n\
    \    } else {\n        greatest_common_divisor(b, a % b)\n    }", "    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }", "    let mut d = a;\n    let mut m = b;\n    while m != 0 {\n        let\
    \ r = d % m;\n        d = m;\n        m = r;\n    }\n    d", "    if b == 0 {\n\
    \        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n\
    \        b = a % b;\n        a = t;\n    }\n    a", "    let mut a = a;\n    let\
    \ mut b = b;\n    while b != 0 {\n        let r = a % b;\n        a = b;\n   \
    \     b = r;\n    }\n    a", "    if b == 0 {\n        a\n    } else {\n     \
    \   greatest_common_divisor(b, a % b)\n    }", "    let (mut a, mut b) = (a, b);\n\
    \    while b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n\
    \    }\n    a.abs()", "    // Check for invalid inputs.\n    if a < 1 || b < 1\
    \ {\n        return -1;\n    }\n\n    // C++ version had a check here to get the\
    \ abs of both a and b.\n    // This should not be necessary because we only need\
    \ to check\n    // for negative values, and if both a and b are negative then\n\
    \    // their GCD will also be negative.\n\n    // Determine which number is smaller,\
    \ then swap the smaller\n    // number with a and the larger number with b.\n\
    \    if a > b {\n        return greatest_common_divisor(b, a);\n    }\n\n    //\
    \ Iterate using a while loop until the remainder is 0.\n    let mut r = b % a;\n\
    \    while r != 0 {\n        b = a;\n        a = r;\n        r = b % a;\n    }\n\
    \n    return a;", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let c = a % b;\n        a = b;\n        b = c;\n    }\n    a", "    match\
    \ b {\n        0 => a,\n        _ => greatest_common_divisor(b, a % b),\n    }",
  "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let r = a % b;\n        a = b;\n        b = r;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let mut r = a % b;\n    while r != 0 {\n        a = b;\n       \
    \ b = r;\n        r = a % b;\n    }\n    b", "    if b == 0 {\n        a\n   \
    \ } else {\n        greatest_common_divisor(b, a % b)\n    }", "    if b == 0\
    \ {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }",
  "    let (mut a, mut b) = (a, b);\n    while b != 0 {\n        let t = b;\n    \
    \    b = a % b;\n        a = t;\n    }\n    a.abs()", "    if b == 0 {\n     \
    \   a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", "    let\
    \ mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let c = a % b;\n\
    \        a = b;\n        b = c;\n    }\n    a", "    if b == 0 {\n        a\n\
    \    } else {\n        greatest_common_divisor(b, a % b)\n    }", "    match (a,\
    \ b) {\n        (a, 0) => a,\n        (a, b) => greatest_common_divisor(b, a %\
    \ b),\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n    a", " \
    \   let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let tmp =\
    \ b;\n        b = a % b;\n        a = tmp;\n    }\n    a", "    if b == 0 {\n\
    \        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let r = a % b;\n        a = b;\n        b = r;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let (mut a, mut b) = (a, b);\n    while b != 0 {\n        let r\
    \ = a % b;\n        a = b;\n        b = r;\n    }\n    a", "    if b == 0 {\n\
    \        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   let (mut a, mut b) = (a, b);\n    while b != 0 {\n        let remainder =\
    \ a % b;\n        a = b;\n        b = remainder;\n    }\n    a", "    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut dividend = a;\n    let mut divisor = b;\n    while\
    \ divisor != 0 {\n        let remainder = dividend % divisor;\n        dividend\
    \ = divisor;\n        divisor = remainder;\n    }\n    dividend", "    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    // Return the GCD by using Euclid's algorithm\n    if b == 0 {\n\
    \        a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    a",
  "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    a",
  "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n\
    \        b = a % b;\n        a = t;\n    }\n    a", "    if b == 0 {\n       \
    \ a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", "    match\
    \ (a, b) {\n        (0, x) => x,\n        (x, 0) => x,\n        (x, y) => greatest_common_divisor(y,\
    \ x % y),\n    }", "    let mut r = a % b;\n    while r != 0 {\n        a = b;\n\
    \        b = r;\n        r = a % b;\n    }\n    b", "    if b == 0 {\n       \
    \ a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n       \
    \ let t = b;\n        b = a % b;\n        a = t;\n    }\n    a", "    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let (mut a, mut b) = (a, b);\n    while b != 0 {\n    \
    \    let r = a % b;\n        a = b;\n        b = r;\n    }\n    a", "    if b\
    \ == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    // Definition (https://en.wikipedia.org/wiki/Greatest_common_divisor)\n\
    \    // let a = bq + r\n    // gcd(a, b) = gcd(b, r)\n    if b == 0 {\n      \
    \  a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    // Return the greatest common divisor of two positive integers\n\
    \    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let t = b;\n\
    \        b = a % b;\n        a = t;\n    }\n    a.abs()", "    if b == 0 {\n \
    \       a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   let mut a = a;\n    let mut b = b;\n    while b != 0 {\n        let tmp =\
    \ b;\n        b = a % b;\n        a = tmp;\n    }\n    a", "    let mut a = a;\n\
    \    let mut b = b;\n    while b != 0 {\n        let t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    a", "    if b == 0 {\n        a\n    } else {\n  \
    \      greatest_common_divisor(b, a % b)\n    }", "    if b == 0 {\n        a\n\
    \    } else {\n        greatest_common_divisor(b, a % b)\n    }", "    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let a = if a < 0 { -a } else { a };\n    let b = if b <\
    \ 0 { -b } else { b };\n    if a == 0 || b == 0 {\n        return 0;\n    }\n\
    \    if a == b {\n        return a;\n    }\n    if a > b {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);", "    let mut\
    \ a_temp = a;\n    let mut b_temp = b;\n    while b_temp != 0 {\n        let temp\
    \ = b_temp;\n        b_temp = a_temp % b_temp;\n        a_temp = temp;\n    }\n\
    \    a_temp", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let (a, b) = if a < b { (b, a) } else { (a, b) };\n    let mut r\
    \ = a % b;\n    while r != 0 {\n        a = b;\n        b = r;\n        r = a\
    \ % b;\n    }\n    b", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let c = a % b;\n        a = b;\n        b = c;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    match (a, b) {\n        (a, 0) => a,\n        (a, b) =>\
    \ greatest_common_divisor(b, a % b),\n    }", "    if b == 0 {\n        a\n  \
    \  } else {\n        greatest_common_divisor(b, a % b)\n    }", "    let mut x\
    \ = if a > b { a } else { b };\n    let mut y = if a > b { b } else { a };\n \
    \   while y != 0 {\n        let z = x % y;\n        x = y;\n        y = z;\n \
    \   }\n    x", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut d = 0;\n    let (mut a, mut b) = (a, b);\n    if\
    \ a == 0 || b == 0 {\n        return a + b;\n    }\n    loop {\n        if (a\
    \ & 1) == 0 {\n            if (b & 1) == 0 {\n                // both even\n \
    \               d += 1;\n                a >>= 1;\n                b >>= 1;\n\
    \            } else {\n                // a even, b odd\n                a >>=\
    \ 1;\n            }\n        } else if (b & 1) == 0 {\n            // a odd, b\
    \ even\n            b >>= 1;\n        } else if a >= b {\n            // both\
    \ odd, a >= b\n            a = (a - b) >> 1;\n        } else {\n            //\
    \ both odd, a < b\n            b = (b - a) >> 1;\n        }\n        if a == 0\
    \ {\n            return b << d;\n        }\n        if b == 0 {\n            return\
    \ a << d;\n        }\n    }", "    // return the gcd of a and b\n    let mut a\
    \ = a;\n    let mut b = b;\n    while b != 0 {\n        let tmp = b;\n       \
    \ b = a % b;\n        a = tmp;\n    }\n    a", "    let mut a = a;\n    let mut\
    \ b = b;\n    while b != 0 {\n        let t = b;\n        b = a % b;\n       \
    \ a = t;\n    }\n    a", "    let mut a = a;\n    let mut b = b;\n    while b\
    \ != 0 {\n        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n\
    \    a", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n       \
    \ let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    a", "    let\
    \ c = if a < b { b % a } else { a % b };\n    if c == 0 {\n        if a < b {\
    \ a } else { b }\n    } else {\n        greatest_common_divisor(c, a)\n    }",
  "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut max = isize::max(a, b);\n    let mut min = isize::min(a,\
    \ b);\n    let mut r = max % min;\n    while r != 0 {\n        max = min;\n  \
    \      min = r;\n        r = max % min;\n    }\n    min", "    if b == 0 {\n \
    \       a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut m = a;\n    let mut n = b;\n    while m != 0 {\n\
    \        let temp = m;\n        m = n % m;\n        n = temp;\n    }\n    n.abs()",
  "    let a = a.abs();\n    let b = b.abs();\n    let mut a = a;\n    let mut b =\
    \ b;\n    while b != 0 {\n        let c = a % b;\n        a = b;\n        b =\
    \ c;\n    }\n    a", "    let mut a = a;\n    let mut b = b;\n    while b != 0\
    \ {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a", " \
    \   if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let r = a % b;\n        a = b;\n        b = r;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    let r = a % b;\n    if r == 0 {\n        b\n    } else {\n     \
    \   greatest_common_divisor(b, r)\n    }", "    let (mut a, mut b) = (a, b);\n\
    \    while b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n\
    \    }\n    a.abs()", "    let mut r = a % b;\n    while r != 0 {\n        a =\
    \ b;\n        b = r;\n        r = a % b;\n    }\n    b", "    if b == 0 {\n  \
    \      a\n    } else {\n        greatest_common_divisor(b, a % b)\n    }", " \
    \   let a = a.abs();\n    let b = b.abs();\n    let mut a = a;\n    let mut b\
    \ = b;\n    while b != 0 {\n        let t = b;\n        b = a % b;\n        a\
    \ = t;\n    }\n    a", "    let mut a = a;\n    let mut b = b;\n    while b !=\
    \ 0 {\n        let remainder = a % b;\n        a = b;\n        b = remainder;\n\
    \    }\n    a", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let t = b;\n        b = a % b;\n        a = t;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let r = a % b;\n        a = b;\n        b = r;\n    }\n    a", "    if\
    \ b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n\
    \    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    // If b is zero then the gcd is a.\n    if b == 0 {\n \
    \       return a;\n    }\n    // If b is not zero then the gcd is the same as\
    \ the gcd of b and a mod b.\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut a = a;\n    let mut b = b;\n    while b != 0 {\n\
    \        let tmp = b;\n        b = a % b;\n        a = tmp;\n    }\n    a", " \
    \   if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a\
    \ % b)\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }", "    let mut x = if a < 0 {\n        -a\n    } else {\n    \
    \    a\n    };\n    let mut y = if b < 0 {\n        -b\n    } else {\n       \
    \ b\n    };\n    while y != 0 {\n        let t = y;\n        y = x % y;\n    \
    \    x = t;\n    }\n    x", "    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a", "    match a {\n        0 => b,\n        a => greatest_common_divisor(b\
    \ % a, a),\n    }", "    if b == 0 {\n        a\n    } else {\n        greatest_common_divisor(b,\
    \ a % b)\n    }"]
stop_tokens:
- "\n}"

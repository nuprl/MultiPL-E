name: HumanEval_81_numerical_letter_grade
language: rs
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!(candidate(vec![4.0,\
  \ 3.0, 1.7, 2.0, 3.5]), vec![String::from(\"A+\"), String::from(\"B\"), String::from(\"\
  C-\"), String::from(\"C\"), String::from(\"A-\")]);\n    assert_eq!(candidate(vec![1.2]),\
  \ vec![String::from(\"D+\")]);\n    assert_eq!(candidate(vec![0.5]), vec![String::from(\"\
  D-\")]);\n    assert_eq!(candidate(vec![0.0]), vec![String::from(\"E\")]);\n   \
  \ assert_eq!(candidate(vec![1.0, 0.3, 1.5, 2.8, 3.3]), vec![String::from(\"D\"),\
  \ String::from(\"D-\"), String::from(\"C-\"), String::from(\"B\"), String::from(\"\
  B+\")]);\n    assert_eq!(candidate(vec![0.0, 0.7]), vec![String::from(\"E\"), String::from(\"\
  D-\")]);\n}\n"
completions: ["    let mut letter_grades = Vec::new();\n    for grade in grades {\n\
    \        let mut letter_grade = \"E\".to_string();\n        if grade == 4.0 {\n\
    \            letter_grade = \"A+\".to_string();\n        } else if grade > 3.7\
    \ {\n            letter_grade = \"A\".to_string();\n        } else if grade >\
    \ 3.3 {\n            letter_grade = \"A-\".to_string();\n        } else if grade\
    \ > 3.0 {\n            letter_grade = \"B+\".to_string();\n        } else if grade\
    \ > 2.7 {\n            letter_grade = \"B\".to_string();\n        } else if grade\
    \ > 2.3 {\n            letter_grade = \"B-\".to_string();\n        } else if grade\
    \ > 2.0 {\n            letter_grade = \"C+\".to_string();\n        } else if grade\
    \ > 1.7 {\n            letter_grade = \"C\".to_string();\n        } else if grade\
    \ > 1.3 {\n            letter_grade = \"C-\".to_string();\n        } else if grade\
    \ > 1.0 {\n            letter_grade = \"D+\".to_string();\n        } else if grade\
    \ > 0.7 {\n            letter_grade = \"D\".to_string();\n        } else if grade\
    \ > 0.0 {\n            letter_grade = \"D-\".to_string();\n        }\n       \
    \ letter_grades.push(letter_grade);\n    }\n    letter_grades", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        let letter = match grade {\n\
    \            a if a == 4.0 => \"A+\",\n            a if a > 3.7 => \"A\",\n  \
    \          a if a > 3.3 => \"A-\",\n            a if a > 3.0 => \"B+\",\n    \
    \        a if a > 2.7 => \"B\",\n            a if a > 2.3 => \"B-\",\n       \
    \     a if a > 2.0 => \"C+\",\n            a if a > 1.7 => \"C\",\n          \
    \  a if a > 1.3 => \"C-\",\n            a if a > 1.0 => \"D+\",\n            a\
    \ if a > 0.7 => \"D\",\n            a if a > 0.0 => \"D-\",\n            _ =>\
    \ \"E\",\n        };\n        letter_grades.push(letter.to_string());\n    }\n\
    \    letter_grades", "    grades.iter().map(|x| {\n        match *x {\n      \
    \      _ if *x >= 4.0 => String::from(\"A+\"),\n            _ if *x >= 3.7 =>\
    \ String::from(\"A\"),\n            _ if *x >= 3.3 => String::from(\"A-\"),\n\
    \            _ if *x >= 3.0 => String::from(\"B+\"),\n            _ if *x >= 2.7\
    \ => String::from(\"B\"),\n            _ if *x >= 2.3 => String::from(\"B-\"),\n\
    \            _ if *x >= 2.0 => String::from(\"C+\"),\n            _ if *x >= 1.7\
    \ => String::from(\"C\"),\n            _ if *x >= 1.3 => String::from(\"C-\"),\n\
    \            _ if *x >= 1.0 => String::from(\"D+\"),\n            _ if *x >= 0.7\
    \ => String::from(\"D\"),\n            _ if *x >= 0.0 => String::from(\"D-\"),\n\
    \            _ => String::from(\"E\"),\n        }\n    }).collect()", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        match grade\
    \ {\n            4.0 => letter_grades.push(\"A+\".to_string()),\n            _\
    \ if grade > 3.7 => letter_grades.push(\"A\".to_string()),\n            _ if grade\
    \ > 3.3 => letter_grades.push(\"A-\".to_string()),\n            _ if grade > 3.0\
    \ => letter_grades.push(\"B+\".to_string()),\n            _ if grade > 2.7 =>\
    \ letter_grades.push(\"B\".to_string()),\n            _ if grade > 2.3 => letter_grades.push(\"\
    B-\".to_string()),\n            _ if grade > 2.0 => letter_grades.push(\"C+\"\
    .to_string()),\n            _ if grade > 1.7 => letter_grades.push(\"C\".to_string()),\n\
    \            _ if grade > 1.3 => letter_grades.push(\"C-\".to_string()),\n   \
    \         _ if grade > 1.0 => letter_grades.push(\"D+\".to_string()),\n      \
    \      _ if grade > 0.7 => letter_grades.push(\"D\".to_string()),\n          \
    \  _ if grade > 0.0 => letter_grades.push(\"D-\".to_string()),\n            _\
    \ => letter_grades.push(\"E\".to_string()),\n        }\n    }\n    letter_grades",
  "    let mut output = Vec::new();\n    for i in grades {\n        if i == 4.0 {\n\
    \            output.push(\"A+\".to_string());\n        } else if i >= 3.7 {\n\
    \            output.push(\"A\".to_string());\n        } else if i >= 3.3 {\n \
    \           output.push(\"A-\".to_string());\n        } else if i >= 3.0 {\n \
    \           output.push(\"B+\".to_string());\n        } else if i >= 2.7 {\n \
    \           output.push(\"B\".to_string());\n        } else if i >= 2.3 {\n  \
    \          output.push(\"B-\".to_string());\n        } else if i >= 2.0 {\n  \
    \          output.push(\"C+\".to_string());\n        } else if i >= 1.7 {\n  \
    \          output.push(\"C\".to_string());\n        } else if i >= 1.3 {\n   \
    \         output.push(\"C-\".to_string());\n        } else if i >= 1.0 {\n   \
    \         output.push(\"D+\".to_string());\n        } else if i >= 0.7 {\n   \
    \         output.push(\"D\".to_string());\n        } else if i >= 0.0 {\n    \
    \        output.push(\"D-\".to_string());\n        } else {\n            output.push(\"\
    E\".to_string());\n        }\n    }\n    output", "    let grade_map = [\n   \
    \     (4.0, \"A+\"),\n        (3.7, \"A\"),\n        (3.3, \"A-\"),\n        (3.0,\
    \ \"B+\"),\n        (2.7, \"B\"),\n        (2.3, \"B-\"),\n        (2.0, \"C+\"\
    ),\n        (1.7, \"C\"),\n        (1.3, \"C-\"),\n        (1.0, \"D+\"),\n  \
    \      (0.7, \"D\"),\n        (0.0, \"D-\"),\n    ];\n    let mut vec = Vec::new();\n\
    \    for grade in grades {\n        for &(gpa, letter) in grade_map.iter() {\n\
    \            if grade >= gpa {\n                vec.push(letter.to_string());\n\
    \                break;\n            }\n        }\n    }\n    vec", "    let mut\
    \ grades = grades;\n    let mut grades_str = Vec::new();\n    grades.sort_by(|a,\
    \ b| b.partial_cmp(a).unwrap());\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            grades_str.push(\"A+\".to_string());\n        } else if\
    \ grade >= 3.7 {\n            grades_str.push(\"A\".to_string());\n        } else\
    \ if grade >= 3.3 {\n            grades_str.push(\"A-\".to_string());\n      \
    \  } else if grade >= 3.0 {\n            grades_str.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            grades_str.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            grades_str.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            grades_str.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            grades_str.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            grades_str.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            grades_str.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            grades_str.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            grades_str.push(\"D-\".to_string());\n\
    \        } else {\n            grades_str.push(\"E\".to_string());\n        }\n\
    \    }\n    grades_str", "    grades.iter().map(|i| match *i {\n        4.0 =>\
    \ \"A+\".to_string(),\n        x if x > 3.7 => \"A\".to_string(),\n        x if\
    \ x > 3.3 => \"A-\".to_string(),\n        x if x > 3.0 => \"B+\".to_string(),\n\
    \        x if x > 2.7 => \"B\".to_string(),\n        x if x > 2.3 => \"B-\".to_string(),\n\
    \        x if x > 2.0 => \"C+\".to_string(),\n        x if x > 1.7 => \"C\".to_string(),\n\
    \        x if x > 1.3 => \"C-\".to_string(),\n        x if x > 1.0 => \"D+\".to_string(),\n\
    \        x if x > 0.7 => \"D\".to_string(),\n        x if x > 0.0 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    let mut _results = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            _results.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            _results.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            _results.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            _results.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            _results.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            _results.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            _results.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            _results.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            _results.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            _results.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            _results.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            _results.push(\"\
    D-\".to_string());\n        } else {\n            _results.push(\"E\".to_string());\n\
    \        }\n    }\n    _results", "    let mut v = Vec::new();\n    for g in grades\
    \ {\n        let mut grade = String::new();\n        match g {\n            x\
    \ if x > 4.0 => grade = \"A+\".to_string(),\n            x if x > 3.7 => grade\
    \ = \"A\".to_string(),\n            x if x > 3.3 => grade = \"A-\".to_string(),\n\
    \            x if x > 3.0 => grade = \"B+\".to_string(),\n            x if x >\
    \ 2.7 => grade = \"B\".to_string(),\n            x if x > 2.3 => grade = \"B-\"\
    .to_string(),\n            x if x > 2.0 => grade = \"C+\".to_string(),\n     \
    \       x if x > 1.7 => grade = \"C\".to_string(),\n            x if x > 1.3 =>\
    \ grade = \"C-\".to_string(),\n            x if x > 1.0 => grade = \"D+\".to_string(),\n\
    \            x if x > 0.7 => grade = \"D\".to_string(),\n            x if x >\
    \ 0.0 => grade = \"D-\".to_string(),\n            _ => grade = \"E\".to_string(),\n\
    \        }\n        v.push(grade);\n    }\n    v", "    grades.iter().map(|x|\
    \ match *x {\n            4.0 => \"A+\".to_string(),\n            _ if *x > 3.7\
    \ => \"A\".to_string(),\n            _ if *x > 3.3 => \"A-\".to_string(),\n  \
    \          _ if *x > 3.0 => \"B+\".to_string(),\n            _ if *x > 2.7 =>\
    \ \"B\".to_string(),\n            _ if *x > 2.3 => \"B-\".to_string(),\n     \
    \       _ if *x > 2.0 => \"C+\".to_string(),\n            _ if *x > 1.7 => \"\
    C\".to_string(),\n            _ if *x > 1.3 => \"C-\".to_string(),\n         \
    \   _ if *x > 1.0 => \"D+\".to_string(),\n            _ if *x > 0.7 => \"D\".to_string(),\n\
    \            _ if *x > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \    }).collect()", "    // your code here\n    let mut vec_strings = Vec::new();\n\
    \    for grade in grades.iter() {\n        let mut output = String::new();\n \
    \       if *grade >= 4.0 {\n            output = \"A+\".to_string();\n       \
    \ } else if *grade > 3.7 {\n            output = \"A\".to_string();\n        }\
    \ else if *grade > 3.3 {\n            output = \"A-\".to_string();\n        }\
    \ else if *grade > 3.0 {\n            output = \"B+\".to_string();\n        }\
    \ else if *grade > 2.7 {\n            output = \"B\".to_string();\n        } else\
    \ if *grade > 2.3 {\n            output = \"B-\".to_string();\n        } else\
    \ if *grade > 2.0 {\n            output = \"C+\".to_string();\n        } else\
    \ if *grade > 1.7 {\n            output = \"C\".to_string();\n        } else if\
    \ *grade > 1.3 {\n            output = \"C-\".to_string();\n        } else if\
    \ *grade > 1.0 {\n            output = \"D+\".to_string();\n        } else if\
    \ *grade > 0.7 {\n            output = \"D\".to_string();\n        } else if *grade\
    \ > 0.0 {\n            output = \"D-\".to_string();\n        } else {\n      \
    \      output = \"E\".to_string();\n        }\n        vec_strings.push(output);\n\
    \    }\n    vec_strings", "  grades.iter().map(|g| match *g {\n      4.0 => \"\
    A+\".to_string(),\n      g if g > 3.7 => \"A\".to_string(),\n      g if g > 3.3\
    \ => \"A-\".to_string(),\n      g if g > 3.0 => \"B+\".to_string(),\n      g if\
    \ g > 2.7 => \"B\".to_string(),\n      g if g > 2.3 => \"B-\".to_string(),\n \
    \     g if g > 2.0 => \"C+\".to_string(),\n      g if g > 1.7 => \"C\".to_string(),\n\
    \      g if g > 1.3 => \"C-\".to_string(),\n      g if g > 1.0 => \"D+\".to_string(),\n\
    \      g if g > 0.7 => \"D\".to_string(),\n      g if g > 0.0 => \"D-\".to_string(),\n\
    \      _ => \"E\".to_string(),\n    }).collect()", "    let mut new_grades = Vec::new();\n\
    \    for grade in grades {\n        let letter = if grade > 4.0 {\n          \
    \  \"A+\".to_string()\n        } else if grade > 3.7 {\n            \"A\".to_string()\n\
    \        } else if grade > 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if grade > 3.0 {\n            \"B+\".to_string()\n        } else if grade >\
    \ 2.7 {\n            \"B\".to_string()\n        } else if grade > 2.3 {\n    \
    \        \"B-\".to_string()\n        } else if grade > 2.0 {\n            \"C+\"\
    .to_string()\n        } else if grade > 1.7 {\n            \"C\".to_string()\n\
    \        } else if grade > 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if grade > 1.0 {\n            \"D+\".to_string()\n        } else if grade >\
    \ 0.7 {\n            \"D\".to_string()\n        } else if grade > 0.0 {\n    \
    \        \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        };\n        new_grades.push(letter);\n    }\n    new_grades", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ == 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|&grade| match grade {\n\
    \        4.0 => \"A+\".to_string(),\n        grade if grade > 3.7 => \"A\".to_string(),\n\
    \        grade if grade > 3.3 => \"A-\".to_string(),\n        grade if grade >\
    \ 3.0 => \"B+\".to_string(),\n        grade if grade > 2.7 => \"B\".to_string(),\n\
    \        grade if grade > 2.3 => \"B-\".to_string(),\n        grade if grade >\
    \ 2.0 => \"C+\".to_string(),\n        grade if grade > 1.7 => \"C\".to_string(),\n\
    \        grade if grade > 1.3 => \"C-\".to_string(),\n        grade if grade >\
    \ 1.0 => \"D+\".to_string(),\n        grade if grade > 0.7 => \"D\".to_string(),\n\
    \        grade if grade > 0.0 => \"D-\".to_string(),\n        _ => \"E\".to_string(),\n\
    \    }).collect()", "    grades.iter().map(|grade| match *grade {\n        4.0\
    \ => \"A+\".to_string(),\n        grade if grade > 3.7 => \"A\".to_string(),\n\
    \        grade if grade > 3.3 => \"A-\".to_string(),\n        grade if grade >\
    \ 3.0 => \"B+\".to_string(),\n        grade if grade > 2.7 => \"B\".to_string(),\n\
    \        grade if grade > 2.3 => \"B-\".to_string(),\n        grade if grade >\
    \ 2.0 => \"C+\".to_string(),\n        grade if grade > 1.7 => \"C\".to_string(),\n\
    \        grade if grade > 1.3 => \"C-\".to_string(),\n        grade if grade >\
    \ 1.0 => \"D+\".to_string(),\n        grade if grade > 0.7 => \"D\".to_string(),\n\
    \        grade if grade > 0.0 => \"D-\".to_string(),\n        _ => \"E\".to_string(),\n\
    \    }).collect()", "    grades.iter().map(|grade| {\n        match *grade {\n\
    \            4.0 => \"A+\".to_string(),\n            x if x > 3.7 => \"A\".to_string(),\n\
    \            x if x > 3.3 => \"A-\".to_string(),\n            x if x > 3.0 =>\
    \ \"B+\".to_string(),\n            x if x > 2.7 => \"B\".to_string(),\n      \
    \      x if x > 2.3 => \"B-\".to_string(),\n            x if x > 2.0 => \"C+\"\
    .to_string(),\n            x if x > 1.7 => \"C\".to_string(),\n            x if\
    \ x > 1.3 => \"C-\".to_string(),\n            x if x > 1.0 => \"D+\".to_string(),\n\
    \            x if x > 0.7 => \"D\".to_string(),\n            x if x > 0.0 => \"\
    D-\".to_string(),\n            _ => \"E\".to_string(),\n        }\n    }).collect()",
  "    let mut letter_grades = Vec::new();\n    for gpa in grades {\n        let grade\
    \ = match gpa {\n            4.0 => String::from(\"A+\"),\n            gpa if\
    \ gpa > 3.7 => String::from(\"A\"),\n            gpa if gpa > 3.3 => String::from(\"\
    A-\"),\n            gpa if gpa > 3.0 => String::from(\"B+\"),\n            gpa\
    \ if gpa > 2.7 => String::from(\"B\"),\n            gpa if gpa > 2.3 => String::from(\"\
    B-\"),\n            gpa if gpa > 2.0 => String::from(\"C+\"),\n            gpa\
    \ if gpa > 1.7 => String::from(\"C\"),\n            gpa if gpa > 1.3 => String::from(\"\
    C-\"),\n            gpa if gpa > 1.0 => String::from(\"D+\"),\n            gpa\
    \ if gpa > 0.7 => String::from(\"D\"),\n            gpa if gpa > 0.0 => String::from(\"\
    D-\"),\n            _ => String::from(\"E\"),\n        };\n        letter_grades.push(grade);\n\
    \    }\n    letter_grades", "    grades.iter().map(|grade| {\n        if *grade\
    \ >= 4.0 {\n            \"A+\".to_string()\n        } else if *grade >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *grade >= 3.3 {\n          \
    \  \"A-\".to_string()\n        } else if *grade >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *grade >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *grade >= 2.3 {\n            \"B-\".to_string()\n        } else if *grade\
    \ >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade >= 1.7 {\n\
    \            \"C\".to_string()\n        } else if *grade >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *grade >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *grade >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *grade >= 0.0 {\n            \"D-\".to_string()\n        } else {\n     \
    \       \"E\".to_string()\n        }\n    }).collect()", "    let alpha = ['A',\
    \ 'B', 'C', 'D', 'E'];\n    let suffix = ['+', ' ', '-'];\n    let mut res = Vec::new();\n\
    \    for x in grades {\n        if x == 4.0 {\n            res.push(String::from(\"\
    A+\"));\n        } else if x > 3.7 {\n            res.push(String::from(\"A\"\
    ));\n        } else if x > 3.3 {\n            res.push(String::from(\"A-\"));\n\
    \        } else if x > 3.0 {\n            res.push(String::from(\"B+\"));\n  \
    \      } else if x > 2.7 {\n            res.push(String::from(\"B\"));\n     \
    \   } else if x > 2.3 {\n            res.push(String::from(\"B-\"));\n       \
    \ } else if x > 2.0 {\n            res.push(String::from(\"C+\"));\n        }\
    \ else if x > 1.7 {\n            res.push(String::from(\"C\"));\n        } else\
    \ if x > 1.3 {\n            res.push(String::from(\"C-\"));\n        } else if\
    \ x > 1.0 {\n            res.push(String::from(\"D+\"));\n        } else if x\
    \ > 0.7 {\n            res.push(String::from(\"D\"));\n        } else if x > 0.0\
    \ {\n            res.push(String::from(\"D-\"));\n        } else {\n         \
    \   res.push(String::from(\"E\"));\n        }\n    }\n    res", "    let mut grades\
    \ = grades;\n    let mut grades_letter = Vec::new();\n    grades.sort_by(|a, b|\
    \ b.partial_cmp(a).unwrap());\n    for grade in grades {\n        if grade > 4.0\
    \ {\n            grades_letter.push(\"A+\".to_string());\n        } else if grade\
    \ > 3.7 {\n            grades_letter.push(\"A\".to_string());\n        } else\
    \ if grade > 3.3 {\n            grades_letter.push(\"A-\".to_string());\n    \
    \    } else if grade > 3.0 {\n            grades_letter.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            grades_letter.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            grades_letter.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            grades_letter.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            grades_letter.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            grades_letter.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            grades_letter.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            grades_letter.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            grades_letter.push(\"D-\".to_string());\n\
    \        } else {\n            grades_letter.push(\"E\".to_string());\n      \
    \  }\n    }\n    grades_letter", "    grades.iter().map(|x| {\n        match *x\
    \ {\n            4.0 => \"A+\".to_string(),\n            gpa if gpa > 3.7 => \"\
    A\".to_string(),\n            gpa if gpa > 3.3 => \"A-\".to_string(),\n      \
    \      gpa if gpa > 3.0 => \"B+\".to_string(),\n            gpa if gpa > 2.7 =>\
    \ \"B\".to_string(),\n            gpa if gpa > 2.3 => \"B-\".to_string(),\n  \
    \          gpa if gpa > 2.0 => \"C+\".to_string(),\n            gpa if gpa > 1.7\
    \ => \"C\".to_string(),\n            gpa if gpa > 1.3 => \"C-\".to_string(),\n\
    \            gpa if gpa > 1.0 => \"D+\".to_string(),\n            gpa if gpa >\
    \ 0.7 => \"D\".to_string(),\n            gpa if gpa > 0.0 => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        }\n    }).collect()", "    grades.iter().map(|&x|\
    \ {\n        if x == 4.0 {\n            \"A+\".to_string()\n        } else if\
    \ x >= 3.7 {\n            \"A\".to_string()\n        } else if x >= 3.3 {\n  \
    \          \"A-\".to_string()\n        } else if x >= 3.0 {\n            \"B+\"\
    .to_string()\n        } else if x >= 2.7 {\n            \"B\".to_string()\n  \
    \      } else if x >= 2.3 {\n            \"B-\".to_string()\n        } else if\
    \ x >= 2.0 {\n            \"C+\".to_string()\n        } else if x >= 1.7 {\n \
    \           \"C\".to_string()\n        } else if x >= 1.3 {\n            \"C-\"\
    .to_string()\n        } else if x >= 1.0 {\n            \"D+\".to_string()\n \
    \       } else if x >= 0.7 {\n            \"D\".to_string()\n        } else if\
    \ x > 0.0 {\n            \"D-\".to_string()\n        } else {\n            \"\
    E\".to_string()\n        }\n    }).collect()", "    let mut result = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    grades.iter().map(|g|\n        match *g {\n\
    \            4.0 => \"A+\".to_string(),\n            g if g > 3.7 => \"A\".to_string(),\n\
    \            g if g > 3.3 => \"A-\".to_string(),\n            g if g > 3.0 =>\
    \ \"B+\".to_string(),\n            g if g > 2.7 => \"B\".to_string(),\n      \
    \      g if g > 2.3 => \"B-\".to_string(),\n            g if g > 2.0 => \"C+\"\
    .to_string(),\n            g if g > 1.7 => \"C\".to_string(),\n            g if\
    \ g > 1.3 => \"C-\".to_string(),\n            g if g > 1.0 => \"D+\".to_string(),\n\
    \            g if g > 0.7 => \"D\".to_string(),\n            g if g > 0.0 => \"\
    D-\".to_string(),\n            _ => \"E\".to_string(),\n        }\n    ).collect()",
  "    // Your code here\n    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        let mut grade_string = String::new();\n        if grade >=\
    \ 4.0 {\n            grade_string.push_str(\"A+\");\n        } else if grade >=\
    \ 3.7 {\n            grade_string.push_str(\"A\");\n        } else if grade >=\
    \ 3.3 {\n            grade_string.push_str(\"A-\");\n        } else if grade >=\
    \ 3.0 {\n            grade_string.push_str(\"B+\");\n        } else if grade >=\
    \ 2.7 {\n            grade_string.push_str(\"B\");\n        } else if grade >=\
    \ 2.3 {\n            grade_string.push_str(\"B-\");\n        } else if grade >=\
    \ 2.0 {\n            grade_string.push_str(\"C+\");\n        } else if grade >=\
    \ 1.7 {\n            grade_string.push_str(\"C\");\n        } else if grade >=\
    \ 1.3 {\n            grade_string.push_str(\"C-\");\n        } else if grade >=\
    \ 1.0 {\n            grade_string.push_str(\"D+\");\n        } else if grade >=\
    \ 0.7 {\n            grade_string.push_str(\"D\");\n        } else if grade >=\
    \ 0.0 {\n            grade_string.push_str(\"D-\");\n        } else {\n      \
    \      grade_string.push_str(\"E\");\n        }\n        letter_grades.push(grade_string);\n\
    \    }\n    letter_grades", "    let mut result = Vec::new();\n    for i in grades\
    \ {\n        let mut temp_grade = String::new();\n        if i >= 4.0 {\n    \
    \        temp_grade.push_str(\"A+\");\n        } else if i >= 3.7 {\n        \
    \    temp_grade.push_str(\"A\");\n        } else if i >= 3.3 {\n            temp_grade.push_str(\"\
    A-\");\n        } else if i >= 3.0 {\n            temp_grade.push_str(\"B+\");\n\
    \        } else if i >= 2.7 {\n            temp_grade.push_str(\"B\");\n     \
    \   } else if i >= 2.3 {\n            temp_grade.push_str(\"B-\");\n        }\
    \ else if i >= 2.0 {\n            temp_grade.push_str(\"C+\");\n        } else\
    \ if i >= 1.7 {\n            temp_grade.push_str(\"C\");\n        } else if i\
    \ >= 1.3 {\n            temp_grade.push_str(\"C-\");\n        } else if i >= 1.0\
    \ {\n            temp_grade.push_str(\"D+\");\n        } else if i >= 0.7 {\n\
    \            temp_grade.push_str(\"D\");\n        } else if i >= 0.0 {\n     \
    \       temp_grade.push_str(\"D-\");\n        } else {\n            temp_grade.push_str(\"\
    E\");\n        }\n        result.push(temp_grade);\n    }\n    result", "    let\
    \ mut grades = grades;\n    grades.sort_by(|a, b| b.partial_cmp(a).unwrap());\n\
    \    let mut grades: Vec<String> = grades.iter().map(|x| String::from(\"\")).collect();\n\
    \    for i in 0..grades.len() {\n        if grades[i] == 4.0 {\n            grades[i]\
    \ = String::from(\"A+\");\n        } else if grades[i] > 3.7 {\n            grades[i]\
    \ = String::from(\"A\");\n        } else if grades[i] > 3.3 {\n            grades[i]\
    \ = String::from(\"A-\");\n        } else if grades[i] > 3.0 {\n            grades[i]\
    \ = String::from(\"B+\");\n        } else if grades[i] > 2.7 {\n            grades[i]\
    \ = String::from(\"B\");\n        } else if grades[i] > 2.3 {\n            grades[i]\
    \ = String::from(\"B-\");\n        } else if grades[i] > 2.0 {\n            grades[i]\
    \ = String::from(\"C+\");\n        } else if grades[i] > 1.7 {\n            grades[i]\
    \ = String::from(\"C\");\n        } else if grades[i] > 1.3 {\n            grades[i]\
    \ = String::from(\"C-\");\n        } else if grades[i] > 1.0 {\n            grades[i]\
    \ = String::from(\"D+\");\n        } else if grades[i] > 0.7 {\n            grades[i]\
    \ = String::from(\"D\");\n        } else if grades[i] > 0.0 {\n            grades[i]\
    \ = String::from(\"D-\");\n        } else {\n            grades[i] = String::from(\"\
    E\");\n        }\n    }\n    grades", "    let mut result = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            result.push(\"A\"\
    .to_string());\n        } else if grade >= 3.3 {\n            result.push(\"A-\"\
    .to_string());\n        } else if grade >= 3.0 {\n            result.push(\"B+\"\
    .to_string());\n        } else if grade >= 2.7 {\n            result.push(\"B\"\
    .to_string());\n        } else if grade >= 2.3 {\n            result.push(\"B-\"\
    .to_string());\n        } else if grade >= 2.0 {\n            result.push(\"C+\"\
    .to_string());\n        } else if grade >= 1.7 {\n            result.push(\"C\"\
    .to_string());\n        } else if grade >= 1.3 {\n            result.push(\"C-\"\
    .to_string());\n        } else if grade >= 1.0 {\n            result.push(\"D+\"\
    .to_string());\n        } else if grade >= 0.7 {\n            result.push(\"D\"\
    .to_string());\n        } else if grade >= 0.0 {\n            result.push(\"D-\"\
    .to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|grade| match *grade {\n        x if\
    \ x == 4.0 => \"A+\".to_string(),\n        x if x > 3.7  => \"A\".to_string(),\n\
    \        x if x > 3.3  => \"A-\".to_string(),\n        x if x > 3.0  => \"B+\"\
    .to_string(),\n        x if x > 2.7  => \"B\".to_string(),\n        x if x > 2.3\
    \  => \"B-\".to_string(),\n        x if x > 2.0  => \"C+\".to_string(),\n    \
    \    x if x > 1.7  => \"C\".to_string(),\n        x if x > 1.3  => \"C-\".to_string(),\n\
    \        x if x > 1.0  => \"D+\".to_string(),\n        x if x > 0.7  => \"D\"\
    .to_string(),\n        x if x > 0.0  => \"D-\".to_string(),\n        _       \
    \      => \"E\".to_string(),\n    }).collect()", "    let mut new_grades = Vec::new();\n\
    \    for grade in grades {\n        let grade_string = match grade {\n       \
    \     0.0...1.0 => \"E\",\n            1.0...1.3 => \"D-\",\n            1.3...1.7\
    \ => \"D\",\n            1.7...2.0 => \"D+\",\n            2.0...2.3 => \"C-\"\
    ,\n            2.3...2.7 => \"C\",\n            2.7...3.0 => \"C+\",\n       \
    \     3.0...3.3 => \"B-\",\n            3.3...3.7 => \"B\",\n            3.7...4.0\
    \ => \"B+\",\n            _ => \"A+\",\n        };\n        new_grades.push(grade_string.to_string());\n\
    \    }\n    new_grades", "    grades.iter().map(|x| {\n        if *x >= 4.0 {\n\
    \            \"A+\".to_string()\n        } else if *x >= 3.7 {\n            \"\
    A\".to_string()\n        } else if *x >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *x >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *x >= 2.7 {\n            \"B\".to_string()\n        } else if *x >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *x >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *x >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *x >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *x >= 1.0 {\n            \"D+\".to_string()\n        } else if *x >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *x >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    // grades is the list of GPAs\n    // return a\
    \ list of letter grades\n    let mut new_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            new_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            new_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            new_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            new_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            new_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            new_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            new_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            new_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            new_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            new_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            new_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            new_grades.push(\"D-\".to_string());\n\
    \        } else {\n            new_grades.push(\"E\".to_string());\n        }\n\
    \    }\n    new_grades", "  // TODO\n  let mut g: Vec<String> = Vec::new();\n\
    \  for i in grades {\n    if i >= 4.0 { g.push(\"A+\".to_string()); }\n    else\
    \ if i >= 3.7 { g.push(\"A\".to_string()); }\n    else if i >= 3.3 { g.push(\"\
    A-\".to_string()); }\n    else if i >= 3.0 { g.push(\"B+\".to_string()); }\n \
    \   else if i >= 2.7 { g.push(\"B\".to_string()); }\n    else if i >= 2.3 { g.push(\"\
    B-\".to_string()); }\n    else if i >= 2.0 { g.push(\"C+\".to_string()); }\n \
    \   else if i >= 1.7 { g.push(\"C\".to_string()); }\n    else if i >= 1.3 { g.push(\"\
    C-\".to_string()); }\n    else if i >= 1.0 { g.push(\"D+\".to_string()); }\n \
    \   else if i >= 0.7 { g.push(\"D\".to_string()); }\n    else if i >= 0.0 { g.push(\"\
    D-\".to_string()); }\n    else { g.push(\"E\".to_string()); }\n  }\n  g", "  \
    \  let mut letter_grades = Vec::new();\n    for i in grades {\n        match i\
    \ {\n            4.0 => letter_grades.push(\"A+\".to_string()),\n            i\
    \ if i >= 3.7 => letter_grades.push(\"A\".to_string()),\n            i if i >=\
    \ 3.3 => letter_grades.push(\"A-\".to_string()),\n            i if i >= 3.0 =>\
    \ letter_grades.push(\"B+\".to_string()),\n            i if i >= 2.7 => letter_grades.push(\"\
    B\".to_string()),\n            i if i >= 2.3 => letter_grades.push(\"B-\".to_string()),\n\
    \            i if i >= 2.0 => letter_grades.push(\"C+\".to_string()),\n      \
    \      i if i >= 1.7 => letter_grades.push(\"C\".to_string()),\n            i\
    \ if i >= 1.3 => letter_grades.push(\"C-\".to_string()),\n            i if i >=\
    \ 1.0 => letter_grades.push(\"D+\".to_string()),\n            i if i >= 0.7 =>\
    \ letter_grades.push(\"D\".to_string()),\n            i if i >= 0.0 => letter_grades.push(\"\
    D-\".to_string()),\n            _ => letter_grades.push(\"E\".to_string()),\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec = Vec::new();\n\
    \    for g in grades {\n        if g > 4.0 {\n            grades_vec.push(\"A+\"\
    .to_string());\n        } else if g > 3.7 {\n            grades_vec.push(\"A\"\
    .to_string());\n        } else if g > 3.3 {\n            grades_vec.push(\"A-\"\
    .to_string());\n        } else if g > 3.0 {\n            grades_vec.push(\"B+\"\
    .to_string());\n        } else if g > 2.7 {\n            grades_vec.push(\"B\"\
    .to_string());\n        } else if g > 2.3 {\n            grades_vec.push(\"B-\"\
    .to_string());\n        } else if g > 2.0 {\n            grades_vec.push(\"C+\"\
    .to_string());\n        } else if g > 1.7 {\n            grades_vec.push(\"C\"\
    .to_string());\n        } else if g > 1.3 {\n            grades_vec.push(\"C-\"\
    .to_string());\n        } else if g > 1.0 {\n            grades_vec.push(\"D+\"\
    .to_string());\n        } else if g > 0.7 {\n            grades_vec.push(\"D\"\
    .to_string());\n        } else if g > 0.0 {\n            grades_vec.push(\"D-\"\
    .to_string());\n        } else {\n            grades_vec.push(\"E\".to_string());\n\
    \        }\n    }\n    grades_vec", "    let mut v = Vec::new();\n    for i in\
    \ grades {\n        if i == 4.0 {\n            v.push(\"A+\".to_string());\n \
    \       } else if i > 3.7 {\n            v.push(\"A\".to_string());\n        }\
    \ else if i > 3.3 {\n            v.push(\"A-\".to_string());\n        } else if\
    \ i > 3.0 {\n            v.push(\"B+\".to_string());\n        } else if i > 2.7\
    \ {\n            v.push(\"B\".to_string());\n        } else if i > 2.3 {\n   \
    \         v.push(\"B-\".to_string());\n        } else if i > 2.0 {\n         \
    \   v.push(\"C+\".to_string());\n        } else if i > 1.7 {\n            v.push(\"\
    C\".to_string());\n        } else if i > 1.3 {\n            v.push(\"C-\".to_string());\n\
    \        } else if i > 1.0 {\n            v.push(\"D+\".to_string());\n      \
    \  } else if i > 0.7 {\n            v.push(\"D\".to_string());\n        } else\
    \ if i > 0.0 {\n            v.push(\"D-\".to_string());\n        } else {\n  \
    \          v.push(\"E\".to_string());\n        }\n    }\n    v", "    grades.iter().map(|x|\
    \ {\n        match *x {\n            4.0 => \"A+\".to_string(),\n            x\
    \ if x > 3.7 => \"A\".to_string(),\n            x if x > 3.3 => \"A-\".to_string(),\n\
    \            x if x > 3.0 => \"B+\".to_string(),\n            x if x > 2.7 =>\
    \ \"B\".to_string(),\n            x if x > 2.3 => \"B-\".to_string(),\n      \
    \      x if x > 2.0 => \"C+\".to_string(),\n            x if x > 1.7 => \"C\"\
    .to_string(),\n            x if x > 1.3 => \"C-\".to_string(),\n            x\
    \ if x > 1.0 => \"D+\".to_string(),\n            x if x > 0.7 => \"D\".to_string(),\n\
    \            x if x > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    let letter_grade = |n| {\n        match n\
    \ {\n            4.0 => String::from(\"A+\"),\n            n if n > 3.7 => String::from(\"\
    A\"),\n            n if n > 3.3 => String::from(\"A-\"),\n            n if n >\
    \ 3.0 => String::from(\"B+\"),\n            n if n > 2.7 => String::from(\"B\"\
    ),\n            n if n > 2.3 => String::from(\"B-\"),\n            n if n > 2.0\
    \ => String::from(\"C+\"),\n            n if n > 1.7 => String::from(\"C\"),\n\
    \            n if n > 1.3 => String::from(\"C-\"),\n            n if n > 1.0 =>\
    \ String::from(\"D+\"),\n            n if n > 0.7 => String::from(\"D\"),\n  \
    \          n if n > 0.0 => String::from(\"D-\"),\n            _ => String::from(\"\
    E\"),\n        }\n    };\n    grades.iter().map(|grade| letter_grade(*grade)).collect()",
  "    grades.iter().map(|&i| \n        match i {\n            x if x == 4.0 => \"\
    A+\".to_string(),\n            x if x > 3.7 => \"A\".to_string(),\n          \
    \  x if x > 3.3 => \"A-\".to_string(),\n            x if x > 3.0 => \"B+\".to_string(),\n\
    \            x if x > 2.7 => \"B\".to_string(),\n            x if x > 2.3 => \"\
    B-\".to_string(),\n            x if x > 2.0 => \"C+\".to_string(),\n         \
    \   x if x > 1.7 => \"C\".to_string(),\n            x if x > 1.3 => \"C-\".to_string(),\n\
    \            x if x > 1.0 => \"D+\".to_string(),\n            x if x > 0.7 =>\
    \ \"D\".to_string(),\n            x if x > 0.0 => \"D-\".to_string(),\n      \
    \      _ => \"E\".to_string()\n        }\n    ).collect()", "    let mut result\
    \ = Vec::new();\n    for g in grades {\n        if g >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if g >= 3.7 {\n            result.push(\"A\"\
    .to_string());\n        } else if g >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if g >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if g >= 2.7 {\n            result.push(\"B\".to_string());\n \
    \       } else if g >= 2.3 {\n            result.push(\"B-\".to_string());\n \
    \       } else if g >= 2.0 {\n            result.push(\"C+\".to_string());\n \
    \       } else if g >= 1.7 {\n            result.push(\"C\".to_string());\n  \
    \      } else if g >= 1.3 {\n            result.push(\"C-\".to_string());\n  \
    \      } else if g >= 1.0 {\n            result.push(\"D+\".to_string());\n  \
    \      } else if g >= 0.7 {\n            result.push(\"D\".to_string());\n   \
    \     } else if g >= 0.0 {\n            result.push(\"D-\".to_string());\n   \
    \     } else {\n            result.push(\"E\".to_string());\n        }\n    }\n\
    \    result", '    grades.iter().map(|x| letter_grade(*x)).collect()', "    grades.iter().map(|&g|\
    \ match g {\n        4.0 => \"A+\".to_string(),\n        _ if g > 3.7 => \"A\"\
    .to_string(),\n        _ if g > 3.3 => \"A-\".to_string(),\n        _ if g > 3.0\
    \ => \"B+\".to_string(),\n        _ if g > 2.7 => \"B\".to_string(),\n       \
    \ _ if g > 2.3 => \"B-\".to_string(),\n        _ if g > 2.0 => \"C+\".to_string(),\n\
    \        _ if g > 1.7 => \"C\".to_string(),\n        _ if g > 1.3 => \"C-\".to_string(),\n\
    \        _ if g > 1.0 => \"D+\".to_string(),\n        _ if g > 0.7 => \"D\".to_string(),\n\
    \        _ if g > 0.0 => \"D-\".to_string(),\n        _ if g == 0.0 => \"E\".to_string(),\n\
    \        _ => panic!(\"not a valid gpa\"),\n    }).collect()", "    let mut grades_vec:\
    \ Vec<String> = Vec::new();\n    for grade in grades {\n        if grade == 4.0\
    \ {\n            grades_vec.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            grades_vec.push(\"A\".to_string());\n        } else if\
    \ grade >= 3.3 {\n            grades_vec.push(\"A-\".to_string());\n        }\
    \ else if grade >= 3.0 {\n            grades_vec.push(\"B+\".to_string());\n \
    \       } else if grade >= 2.7 {\n            grades_vec.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            grades_vec.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            grades_vec.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            grades_vec.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            grades_vec.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            grades_vec.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            grades_vec.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            grades_vec.push(\"D-\".to_string());\n\
    \        } else {\n            grades_vec.push(\"E\".to_string());\n        }\n\
    \    }\n    grades_vec", "    let mut vec = Vec::new();\n    for grade in grades\
    \ {\n        let mut letter_grade = String::new();\n        if grade >= 4.0 {\n\
    \            letter_grade = \"A+\".to_string();\n        } else if grade >= 3.7\
    \ {\n            letter_grade = \"A\".to_string();\n        } else if grade >=\
    \ 3.3 {\n            letter_grade = \"A-\".to_string();\n        } else if grade\
    \ >= 3.0 {\n            letter_grade = \"B+\".to_string();\n        } else if\
    \ grade >= 2.7 {\n            letter_grade = \"B\".to_string();\n        } else\
    \ if grade >= 2.3 {\n            letter_grade = \"B-\".to_string();\n        }\
    \ else if grade >= 2.0 {\n            letter_grade = \"C+\".to_string();\n   \
    \     } else if grade >= 1.7 {\n            letter_grade = \"C\".to_string();\n\
    \        } else if grade >= 1.3 {\n            letter_grade = \"C-\".to_string();\n\
    \        } else if grade >= 1.0 {\n            letter_grade = \"D+\".to_string();\n\
    \        } else if grade >= 0.7 {\n            letter_grade = \"D\".to_string();\n\
    \        } else if grade >= 0.0 {\n            letter_grade = \"D-\".to_string();\n\
    \        } else {\n            letter_grade = \"E\".to_string();\n        }\n\
    \        vec.push(letter_grade);\n    }\n    vec", "    return grades.iter().map(|x|\
    \ {\n        let mut grade = String::new();\n        if *x == 4.0 {\n        \
    \    grade.push_str(\"A+\");\n        } else if *x >= 3.7 {\n            grade.push_str(\"\
    A\");\n        } else if *x >= 3.3 {\n            grade.push_str(\"A-\");\n  \
    \      } else if *x >= 3.0 {\n            grade.push_str(\"B+\");\n        } else\
    \ if *x >= 2.7 {\n            grade.push_str(\"B\");\n        } else if *x >=\
    \ 2.3 {\n            grade.push_str(\"B-\");\n        } else if *x >= 2.0 {\n\
    \            grade.push_str(\"C+\");\n        } else if *x >= 1.7 {\n        \
    \    grade.push_str(\"C\");\n        } else if *x >= 1.3 {\n            grade.push_str(\"\
    C-\");\n        } else if *x >= 1.0 {\n            grade.push_str(\"D+\");\n \
    \       } else if *x >= 0.7 {\n            grade.push_str(\"D\");\n        } else\
    \ if *x >= 0.0 {\n            grade.push_str(\"D-\");\n        } else {\n    \
    \        grade.push_str(\"E\");\n        }\n        grade\n    }).collect();",
  "    let vec: Vec<String> = grades.iter().map(|x| {\n        if *x >= 4.0 {\n  \
    \          \"A+\".to_string()\n        } else if *x >= 3.7 {\n            \"A\"\
    .to_string()\n        } else if *x >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *x >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *x >= 2.7 {\n            \"B\".to_string()\n        } else if *x >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *x >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *x >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *x >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *x >= 1.0 {\n            \"D+\".to_string()\n        } else if *x >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *x >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect();\n    vec", "    let mut result: Vec<String> = Vec::new();\n\
    \    for g in grades {\n        if g >= 4.0 {\n            result.push(\"A+\"\
    .to_string());\n        } else if g >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if g >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if g >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if g >= 2.7 {\n            result.push(\"B\".to_string());\n \
    \       } else if g >= 2.3 {\n            result.push(\"B-\".to_string());\n \
    \       } else if g >= 2.0 {\n            result.push(\"C+\".to_string());\n \
    \       } else if g >= 1.7 {\n            result.push(\"C\".to_string());\n  \
    \      } else if g >= 1.3 {\n            result.push(\"C-\".to_string());\n  \
    \      } else if g >= 1.0 {\n            result.push(\"D+\".to_string());\n  \
    \      } else if g >= 0.7 {\n            result.push(\"D\".to_string());\n   \
    \     } else if g >= 0.0 {\n            result.push(\"D-\".to_string());\n   \
    \     } else {\n            result.push(\"E\".to_string());\n        }\n    }\n\
    \    result", "    let mut letter_grades = Vec::new();\n    for grade in grades\
    \ {\n        if grade > 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    // your code here\n    let mut output =\
    \ Vec::new();\n    for i in grades {\n        if i == 4.0 {\n            output.push(\"\
    A+\".to_string());\n        }\n        else if i < 4.0 && i >= 3.7 {\n       \
    \     output.push(\"A\".to_string());\n        }\n        else if i < 3.7 && i\
    \ >= 3.3 {\n            output.push(\"A-\".to_string());\n        }\n        else\
    \ if i < 3.3 && i >= 3.0 {\n            output.push(\"B+\".to_string());\n   \
    \     }\n        else if i < 3.0 && i >= 2.7 {\n            output.push(\"B\"\
    .to_string());\n        }\n        else if i < 2.7 && i >= 2.3 {\n           \
    \ output.push(\"B-\".to_string());\n        }\n        else if i < 2.3 && i >=\
    \ 2.0 {\n            output.push(\"C+\".to_string());\n        }\n        else\
    \ if i < 2.0 && i >= 1.7 {\n            output.push(\"C\".to_string());\n    \
    \    }\n        else if i < 1.7 && i >= 1.3 {\n            output.push(\"C-\"\
    .to_string());\n        }\n        else if i < 1.3 && i >= 1.0 {\n           \
    \ output.push(\"D+\".to_string());\n        }\n        else if i < 1.0 && i >=\
    \ 0.7 {\n            output.push(\"D\".to_string());\n        }\n        else\
    \ if i < 0.7 && i >= 0.0 {\n            output.push(\"D-\".to_string());\n   \
    \     }\n        else if i == 0.0 {\n            output.push(\"E\".to_string());\n\
    \        }\n    }\n    output", "    grades.iter().map(|g| match *g {\n      \
    \  4.0f64 => \"A+\".to_string(),\n        _ if *g > 3.7 => \"A\".to_string(),\n\
    \        _ if *g > 3.3 => \"A-\".to_string(),\n        _ if *g > 3.0 => \"B+\"\
    .to_string(),\n        _ if *g > 2.7 => \"B\".to_string(),\n        _ if *g >\
    \ 2.3 => \"B-\".to_string(),\n        _ if *g > 2.0 => \"C+\".to_string(),\n \
    \       _ if *g > 1.7 => \"C\".to_string(),\n        _ if *g > 1.3 => \"C-\".to_string(),\n\
    \        _ if *g > 1.0 => \"D+\".to_string(),\n        _ if *g > 0.7 => \"D\"\
    .to_string(),\n        _ if *g > 0.0 => \"D-\".to_string(),\n        _ => \"E\"\
    .to_string(),\n    }).collect()", "    grades.iter().map(|x| match *x {\n    \
    \    4.0 => \"A+\".to_string(),\n        x if x > 3.7 => \"A\".to_string(),\n\
    \        x if x > 3.3 => \"A-\".to_string(),\n        x if x > 3.0 => \"B+\".to_string(),\n\
    \        x if x > 2.7 => \"B\".to_string(),\n        x if x > 2.3 => \"B-\".to_string(),\n\
    \        x if x > 2.0 => \"C+\".to_string(),\n        x if x > 1.7 => \"C\".to_string(),\n\
    \        x if x > 1.3 => \"C-\".to_string(),\n        x if x > 1.0 => \"D+\".to_string(),\n\
    \        x if x > 0.7 => \"D\".to_string(),\n        x if x > 0.0 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    grades.iter().map(|&g|\
    \ {\n        if g == 4.0 { \"A+\".to_string() }\n        else if g > 3.7 { \"\
    A\".to_string() }\n        else if g > 3.3 { \"A-\".to_string() }\n        else\
    \ if g > 3.0 { \"B+\".to_string() }\n        else if g > 2.7 { \"B\".to_string()\
    \ }\n        else if g > 2.3 { \"B-\".to_string() }\n        else if g > 2.0 {\
    \ \"C+\".to_string() }\n        else if g > 1.7 { \"C\".to_string() }\n      \
    \  else if g > 1.3 { \"C-\".to_string() }\n        else if g > 1.0 { \"D+\".to_string()\
    \ }\n        else if g > 0.7 { \"D\".to_string() }\n        else if g > 0.0 {\
    \ \"D-\".to_string() }\n        else { \"E\".to_string() }\n    }).collect()",
  "    let mut res = Vec::new();\n    for mut grade in grades {\n        if grade\
    \ >= 4.0 {\n            res.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            res.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            res.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            res.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            res.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            res.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            res.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            res.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            res.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            res.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            res.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            res.push(\"D-\".to_string());\n        } else {\n    \
    \        res.push(\"E\".to_string());\n        }\n    }\n    res", "    let mut\
    \ letter_grades = Vec::new();\n    for grade in grades {\n        if grade >=\
    \ 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else if\
    \ grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n       \
    \ } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let letter_grade = [\"A+\", \"A\", \"A-\"\
    , \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"];\n\
    \    let numerical_grade = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0,\
    \ 0.7, 0.0, 0.0];\n    let mut ret = Vec::new();\n    for grade in grades {\n\
    \        for i in 0..numerical_grade.len() {\n            if grade >= numerical_grade[i]\
    \ {\n                ret.push(letter_grade[i].to_string());\n                break;\n\
    \            }\n        }\n    }\n    ret", "  let grades = vec![0.9, 0.1, 0.8,\
    \ 0.7, 0.0, 1.3, 1.9, 2.3, 3.1, 3.7, 4.0];\n  let mut letter_grades = Vec::new();\n\
    \  for grade in grades {\n    if grade >= 4.0 {\n      letter_grades.push(\"A+\"\
    .to_string());\n    } else if grade >= 3.7 {\n      letter_grades.push(\"A\".to_string());\n\
    \    } else if grade >= 3.3 {\n      letter_grades.push(\"A-\".to_string());\n\
    \    } else if grade >= 3.0 {\n      letter_grades.push(\"B+\".to_string());\n\
    \    } else if grade >= 2.7 {\n      letter_grades.push(\"B\".to_string());\n\
    \    } else if grade >= 2.3 {\n      letter_grades.push(\"B-\".to_string());\n\
    \    } else if grade >= 2.0 {\n      letter_grades.push(\"C+\".to_string());\n\
    \    } else if grade >= 1.7 {\n      letter_grades.push(\"C\".to_string());\n\
    \    } else if grade >= 1.3 {\n      letter_grades.push(\"C-\".to_string());\n\
    \    } else if grade >= 1.0 {\n      letter_grades.push(\"D+\".to_string());\n\
    \    } else if grade >= 0.7 {\n      letter_grades.push(\"D\".to_string());\n\
    \    } else if grade >= 0.0 {\n      letter_grades.push(\"D-\".to_string());\n\
    \    } else {\n      letter_grades.push(\"E\".to_string());\n    }\n  }\n  letter_grades",
  "    grades.iter().map(|grade| {\n        let grade = grade.trunc();\n        let\
    \ letter = match grade {\n            4.0 => \"A+\",\n            3.7 => \"A\"\
    ,\n            3.3 => \"A-\",\n            3.0 => \"B+\",\n            2.7 =>\
    \ \"B\",\n            2.3 => \"B-\",\n            2.0 => \"C+\",\n           \
    \ 1.7 => \"C\",\n            1.3 => \"C-\",\n            1.0 => \"D+\",\n    \
    \        0.7 => \"D\",\n            0.0 => \"D-\",\n            _ => \"E\",\n\
    \        };\n        letter.to_string()\n    }).collect()", "  grades.iter().map(|g|\
    \ {\n    match *g {\n      g if g > 4.0 => \"A+\".to_string(),\n      g if g >\
    \ 3.7 => \"A\".to_string(),\n      g if g > 3.3 => \"A-\".to_string(),\n     \
    \ g if g > 3.0 => \"B+\".to_string(),\n      g if g > 2.7 => \"B\".to_string(),\n\
    \      g if g > 2.3 => \"B-\".to_string(),\n      g if g > 2.0 => \"C+\".to_string(),\n\
    \      g if g > 1.7 => \"C\".to_string(),\n      g if g > 1.3 => \"C-\".to_string(),\n\
    \      g if g > 1.0 => \"D+\".to_string(),\n      g if g > 0.7 => \"D\".to_string(),\n\
    \      g if g > 0.0 => \"D-\".to_string(),\n      _ => \"E\".to_string(),\n  \
    \  }\n  }).collect()", "    // your code goes here\n    grades.iter().map(|g|\n\
    \        match *g {\n            4.0 => \"A+\".to_string(),\n            3.7...4.0\
    \ => \"A\".to_string(),\n            3.3...3.7 => \"A-\".to_string(),\n      \
    \      3.0...3.3 => \"B+\".to_string(),\n            2.7...3.0 => \"B\".to_string(),\n\
    \            2.3...2.7 => \"B-\".to_string(),\n            2.0...2.3 => \"C+\"\
    .to_string(),\n            1.7...2.0 => \"C\".to_string(),\n            1.3...1.7\
    \ => \"C-\".to_string(),\n            1.0...1.3 => \"D+\".to_string(),\n     \
    \       0.7...1.0 => \"D\".to_string(),\n            0.0...0.7 => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        }\n    ).collect()", "    let mut\
    \ letter_grades = Vec::new();\n    for grade in grades {\n        if grade >=\
    \ 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else if\
    \ grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n       \
    \ } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|&x|\n        if x >=\
    \ 4.0 {\n            \"A+\".to_string()\n        } else if x >= 3.7 {\n      \
    \      \"A\".to_string()\n        } else if x >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if x >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if x >= 2.7 {\n            \"B\".to_string()\n        } else if x >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if x >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if x >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if x >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if x >= 1.0 {\n            \"D+\".to_string()\n        } else if x >= 0.7 {\n\
    \            \"D\".to_string()\n        } else if x >= 0.0 {\n            \"D-\"\
    .to_string()\n        } else {\n            \"E\".to_string()\n        }\n   \
    \ ).collect()", "    let letters = vec![\"A+\", \"A\", \"A-\", \"B+\", \"B\",\
    \ \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"];\n    let tresholds\
    \ = vec![4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0];\n    grades.iter().map(|x|\
    \ letters[tresholds.iter().position(|&y| x >= y).unwrap_or(12)]).collect()", '    unimplemented!()',
  "    return grades.iter().map(|&grade| {\n        match grade {\n            x if\
    \ x >= 4.0 => \"A+\".to_string(),\n            x if x >= 3.7 => \"A\".to_string(),\n\
    \            x if x >= 3.3 => \"A-\".to_string(),\n            x if x >= 3.0 =>\
    \ \"B+\".to_string(),\n            x if x >= 2.7 => \"B\".to_string(),\n     \
    \       x if x >= 2.3 => \"B-\".to_string(),\n            x if x >= 2.0 => \"\
    C+\".to_string(),\n            x if x >= 1.7 => \"C\".to_string(),\n         \
    \   x if x >= 1.3 => \"C-\".to_string(),\n            x if x >= 1.0 => \"D+\"\
    .to_string(),\n            x if x >= 0.7 => \"D\".to_string(),\n            x\
    \ if x >= 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n  \
    \      }\n    }).collect();", "    let vec = vec![4.0, 3.7, 3.3, 3.0, 2.7, 2.3,\
    \ 2.0, 1.7, 1.3, 1.0, 0.7, 0.0];\n    let str = vec![\"A+\", \"A\", \"A-\", \"\
    B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\"];\n    grades.iter().map(|i|\
    \ {\n        if *i == 0.0 {\n            String::from(\"E\")\n        } else {\n\
    \            match vec.iter().position(|&j| j < *i) {\n                Some(index)\
    \ => String::from(str[index]),\n                None => String::from(\"E\"),\n\
    \            }\n        }\n    }).collect()", "    grades.iter().map(|g| {\n \
    \       if *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >=\
    \ 3.7 {\n            \"A\".to_string()\n        } else if *g >= 3.3 {\n      \
    \      \"A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut result = Vec::with_capacity(grades.len());\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let letter_grade = vec![(\"A+\", 4.0), (\"\
    A\", 3.7), (\"A-\", 3.3), (\"B+\", 3.0), (\"B\", 2.7),\n                     \
    \       (\"B-\", 2.3), (\"C+\", 2.0), (\"C\", 1.7), (\"C-\", 1.3), (\"D+\", 1.0),\n\
    \                            (\"D\", 0.7), (\"D-\", 0.0), (\"E\", 0.0)];\n   \
    \ let mut result: Vec<String> = Vec::new();\n    for x in grades {\n        for\
    \ y in letter_grade.iter() {\n            if x >= y.1 {\n                result.push(y.0.to_string());\n\
    \                break;\n            }\n        }\n    }\n    result", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        match grade\
    \ {\n            g if g > 4.0 => {letter_grades.push(\"A+\".to_string())},\n \
    \           g if g > 3.7 => {letter_grades.push(\"A\".to_string())},\n       \
    \     g if g > 3.3 => {letter_grades.push(\"A-\".to_string())},\n            g\
    \ if g > 3.0 => {letter_grades.push(\"B+\".to_string())},\n            g if g\
    \ > 2.7 => {letter_grades.push(\"B\".to_string())},\n            g if g > 2.3\
    \ => {letter_grades.push(\"B-\".to_string())},\n            g if g > 2.0 => {letter_grades.push(\"\
    C+\".to_string())},\n            g if g > 1.7 => {letter_grades.push(\"C\".to_string())},\n\
    \            g if g > 1.3 => {letter_grades.push(\"C-\".to_string())},\n     \
    \       g if g > 1.0 => {letter_grades.push(\"D+\".to_string())},\n          \
    \  g if g > 0.7 => {letter_grades.push(\"D\".to_string())},\n            g if\
    \ g > 0.0 => {letter_grades.push(\"D-\".to_string())},\n            _ => {letter_grades.push(\"\
    E\".to_string())},\n        }\n    }\n    letter_grades", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        if grade == 4.0 {\n      \
    \      letter_grades.push(\"A+\".to_string());\n        } else if grade > 3.7\
    \ {\n            letter_grades.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            letter_grades.push(\"A-\".to_string());\n        } else\
    \ if grade > 3.0 {\n            letter_grades.push(\"B+\".to_string());\n    \
    \    } else if grade > 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|grade| \n        match\
    \ *grade {\n            0.0 => \"E\".to_string(),\n            0.7...4.0 => (10f64\
    \ * grade).round() as i32 - 24 + 65 as i32 as u8 as char,\n            _ => \"\
    F\".to_string()\n        }.to_string()\n    ).collect()", "    let grades_length\
    \ = grades.len();\n    let mut letter_grades: Vec<String> = Vec::with_capacity(grades_length);\n\
    \    let mut i = 0;\n    while i < grades_length {\n        if grades[i] >= 4.0\
    \ {\n            letter_grades.push(\"A+\".to_string());\n        } else if grades[i]\
    \ >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n        } else\
    \ if grades[i] >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grades[i] >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grades[i] >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grades[i] >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grades[i] >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grades[i] >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grades[i] >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grades[i] >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grades[i] >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grades[i] >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n        i += 1;\n    }\n    letter_grades", "    grades.iter().map(|g| match\
    \ *g {\n        4.0 => \"A+\".to_string(),\n        g if g > 3.7 => \"A\".to_string(),\n\
    \        g if g > 3.3 => \"A-\".to_string(),\n        g if g > 3.0 => \"B+\".to_string(),\n\
    \        g if g > 2.7 => \"B\".to_string(),\n        g if g > 2.3 => \"B-\".to_string(),\n\
    \        g if g > 2.0 => \"C+\".to_string(),\n        g if g > 1.7 => \"C\".to_string(),\n\
    \        g if g > 1.3 => \"C-\".to_string(),\n        g if g > 1.0 => \"D+\".to_string(),\n\
    \        g if g > 0.7 => \"D\".to_string(),\n        g if g > 0.0 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    grades.iter().map(|n|\
    \ \n        match *n {\n            4.0 => \"A+\".to_string(),\n            n\
    \ if n > 3.7 => \"A\".to_string(),\n            n if n > 3.3 => \"A-\".to_string(),\n\
    \            n if n > 3.0 => \"B+\".to_string(),\n            n if n > 2.7 =>\
    \ \"B\".to_string(),\n            n if n > 2.3 => \"B-\".to_string(),\n      \
    \      n if n > 2.0 => \"C+\".to_string(),\n            n if n > 1.7 => \"C\"\
    .to_string(),\n            n if n > 1.3 => \"C-\".to_string(),\n            n\
    \ if n > 1.0 => \"D+\".to_string(),\n            n if n > 0.7 => \"D\".to_string(),\n\
    \            n if n > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    ).collect()", "    let mut grades_copy = grades.clone();\n   \
    \ let mut letter_grades = Vec::<String>::new();\n    for grade in grades_copy.iter_mut()\
    \ {\n        if *grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if *grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if *grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if *grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if *grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if *grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if *grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if *grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if *grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if *grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if *grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if *grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if *g >\
    \ 4.0 {\n            return \"A+\".to_string();\n        }\n        if *g > 3.7\
    \ {\n            return \"A\".to_string();\n        }\n        if *g > 3.3 {\n\
    \            return \"A-\".to_string();\n        }\n        if *g > 3.0 {\n  \
    \          return \"B+\".to_string();\n        }\n        if *g > 2.7 {\n    \
    \        return \"B\".to_string();\n        }\n        if *g > 2.3 {\n       \
    \     return \"B-\".to_string();\n        }\n        if *g > 2.0 {\n         \
    \   return \"C+\".to_string();\n        }\n        if *g > 1.7 {\n           \
    \ return \"C\".to_string();\n        }\n        if *g > 1.3 {\n            return\
    \ \"C-\".to_string();\n        }\n        if *g > 1.0 {\n            return \"\
    D+\".to_string();\n        }\n        if *g > 0.7 {\n            return \"D\"\
    .to_string();\n        }\n        if *g > 0.0 {\n            return \"D-\".to_string();\n\
    \        }\n        \"E\".to_string()\n    }).collect()", "    grades.iter().map(|g|\
    \ {\n        let letter = match *g {\n            4.0 => \"A+\",\n           \
    \ g if g > 3.7 => \"A\",\n            g if g > 3.3 => \"A-\",\n            g if\
    \ g > 3.0 => \"B+\",\n            g if g > 2.7 => \"B\",\n            g if g >\
    \ 2.3 => \"B-\",\n            g if g > 2.0 => \"C+\",\n            g if g > 1.7\
    \ => \"C\",\n            g if g > 1.3 => \"C-\",\n            g if g > 1.0 =>\
    \ \"D+\",\n            g if g > 0.7 => \"D\",\n            g if g > 0.0 => \"\
    D-\",\n            _ => \"E\",\n        };\n        letter.to_string()\n    }).collect()",
  '    grades.iter().map(|g| letter_grade(*g)).collect()', "    grades.iter().map(|grade|\
    \ {\n        match *grade {\n            x if x == 4.0 => String::from(\"A+\"\
    ),\n            x if x > 3.7 => String::from(\"A\"),\n            x if x > 3.3\
    \ => String::from(\"A-\"),\n            x if x > 3.0 => String::from(\"B+\"),\n\
    \            x if x > 2.7 => String::from(\"B\"),\n            x if x > 2.3 =>\
    \ String::from(\"B-\"),\n            x if x > 2.0 => String::from(\"C+\"),\n \
    \           x if x > 1.7 => String::from(\"C\"),\n            x if x > 1.3 =>\
    \ String::from(\"C-\"),\n            x if x > 1.0 => String::from(\"D+\"),\n \
    \           x if x > 0.7 => String::from(\"D\"),\n            x if x > 0.0 =>\
    \ String::from(\"D-\"),\n            _ => String::from(\"E\"),\n        }\n  \
    \  }).collect()", "    let mut letter_grades = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", '    grades.iter().map(|g| letter_grade(g)).collect()',
  "    let mut final_grades = Vec::new();\n    for grade in grades.iter() {\n    \
    \    if *grade >= 4.0 {\n            final_grades.push(\"A+\".to_string());\n\
    \        } else if *grade >= 3.7 {\n            final_grades.push(\"A\".to_string());\n\
    \        } else if *grade >= 3.3 {\n            final_grades.push(\"A-\".to_string());\n\
    \        } else if *grade >= 3.0 {\n            final_grades.push(\"B+\".to_string());\n\
    \        } else if *grade >= 2.7 {\n            final_grades.push(\"B\".to_string());\n\
    \        } else if *grade >= 2.3 {\n            final_grades.push(\"B-\".to_string());\n\
    \        } else if *grade >= 2.0 {\n            final_grades.push(\"C+\".to_string());\n\
    \        } else if *grade >= 1.7 {\n            final_grades.push(\"C\".to_string());\n\
    \        } else if *grade >= 1.3 {\n            final_grades.push(\"C-\".to_string());\n\
    \        } else if *grade >= 1.0 {\n            final_grades.push(\"D+\".to_string());\n\
    \        } else if *grade >= 0.7 {\n            final_grades.push(\"D\".to_string());\n\
    \        } else if *grade >= 0.0 {\n            final_grades.push(\"D-\".to_string());\n\
    \        } else {\n            final_grades.push(\"E\".to_string());\n       \
    \ }\n    }\n    final_grades", "    grades.iter().map(|grade| match *grade {\n\
    \        4.0 => \"A+\".to_string(),\n        g if g > 3.7 => \"A\".to_string(),\n\
    \        g if g > 3.3 => \"A-\".to_string(),\n        g if g > 3.0 => \"B+\".to_string(),\n\
    \        g if g > 2.7 => \"B\".to_string(),\n        g if g > 2.3 => \"B-\".to_string(),\n\
    \        g if g > 2.0 => \"C+\".to_string(),\n        g if g > 1.7 => \"C\".to_string(),\n\
    \        g if g > 1.3 => \"C-\".to_string(),\n        g if g > 1.0 => \"D+\".to_string(),\n\
    \        g if g > 0.7 => \"D\".to_string(),\n        g if g > 0.0 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    // Type your function\
    \ here\n    let mut results = Vec::new();\n    for g in grades {\n        if g\
    \ >= 4.0 {\n            results.push(\"A+\".to_string());\n        } else if g\
    \ >= 3.7 {\n            results.push(\"A\".to_string());\n        } else if g\
    \ >= 3.3 {\n            results.push(\"A-\".to_string());\n        } else if g\
    \ >= 3.0 {\n            results.push(\"B+\".to_string());\n        } else if g\
    \ >= 2.7 {\n            results.push(\"B\".to_string());\n        } else if g\
    \ >= 2.3 {\n            results.push(\"B-\".to_string());\n        } else if g\
    \ >= 2.0 {\n            results.push(\"C+\".to_string());\n        } else if g\
    \ >= 1.7 {\n            results.push(\"C\".to_string());\n        } else if g\
    \ >= 1.3 {\n            results.push(\"C-\".to_string());\n        } else if g\
    \ >= 1.0 {\n            results.push(\"D+\".to_string());\n        } else if g\
    \ >= 0.7 {\n            results.push(\"D\".to_string());\n        } else if g\
    \ >= 0.0 {\n            results.push(\"D-\".to_string());\n        } else {\n\
    \            results.push(\"E\".to_string());\n        }\n    }\n    results",
  '    grades.iter().map(|g| letter_grade(*g)).collect()', "    let mut result = Vec::with_capacity(grades.len());\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    // Using a match or if-else block\n    let\
    \ mut results = Vec::new();\n    for grade in grades {\n        if grade >= 4.0\
    \ {\n            results.push(\"A+\".to_string());\n        } else if grade >=\
    \ 3.7 {\n            results.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            results.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            results.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            results.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            results.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            results.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            results.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            results.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            results.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            results.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            results.push(\"D-\".to_string());\n        } else {\n\
    \            results.push(\"E\".to_string());\n        }\n    }\n    return results;",
  "    let mut letter_grades = Vec::new();\n    for grade in grades {\n        if\
    \ grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n      \
    \  } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut grades_letter = Vec::new();\n  \
    \  let mut counter = 0;\n    for i in grades {\n        if i == 4.0 {\n      \
    \      grades_letter.push(\"A+\".to_string());\n        } else if i > 3.7 {\n\
    \            grades_letter.push(\"A\".to_string());\n        } else if i > 3.3\
    \ {\n            grades_letter.push(\"A-\".to_string());\n        } else if i\
    \ > 3.0 {\n            grades_letter.push(\"B+\".to_string());\n        } else\
    \ if i > 2.7 {\n            grades_letter.push(\"B\".to_string());\n        }\
    \ else if i > 2.3 {\n            grades_letter.push(\"B-\".to_string());\n   \
    \     } else if i > 2.0 {\n            grades_letter.push(\"C+\".to_string());\n\
    \        } else if i > 1.7 {\n            grades_letter.push(\"C\".to_string());\n\
    \        } else if i > 1.3 {\n            grades_letter.push(\"C-\".to_string());\n\
    \        } else if i > 1.0 {\n            grades_letter.push(\"D+\".to_string());\n\
    \        } else if i > 0.7 {\n            grades_letter.push(\"D\".to_string());\n\
    \        } else if i > 0.0 {\n            grades_letter.push(\"D-\".to_string());\n\
    \        } else {\n            grades_letter.push(\"E\".to_string());\n      \
    \  }\n        counter += 1;\n    }\n    return grades_letter;", "    let mut letter_grades\
    \ = Vec::new();\n    for gpa in grades {\n        let grade: String;\n       \
    \ match gpa {\n            4.0  => grade = \"A+\".to_string(),\n            gpa\
    \ if gpa > 3.7 => grade = \"A\".to_string(),\n            gpa if gpa > 3.3 =>\
    \ grade = \"A-\".to_string(),\n            gpa if gpa > 3.0 => grade = \"B+\"\
    .to_string(),\n            gpa if gpa > 2.7 => grade = \"B\".to_string(),\n  \
    \          gpa if gpa > 2.3 => grade = \"B-\".to_string(),\n            gpa if\
    \ gpa > 2.0 => grade = \"C+\".to_string(),\n            gpa if gpa > 1.7 => grade\
    \ = \"C\".to_string(),\n            gpa if gpa > 1.3 => grade = \"C-\".to_string(),\n\
    \            gpa if gpa > 1.0 => grade = \"D+\".to_string(),\n            gpa\
    \ if gpa > 0.7 => grade = \"D\".to_string(),\n            gpa if gpa > 0.0 =>\
    \ grade = \"D-\".to_string(),\n            _                => grade = \"E\".to_string(),\n\
    \        }\n        letter_grades.push(grade);\n    }\n    letter_grades", " \
    \   grades.iter().map(|grade| {\n        if *grade >= 4.0 {\n            \"A+\"\
    .to_string()\n        } else if *grade >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if *grade >= 3.3 {\n            \"A-\".to_string()\n        }\
    \ else if *grade >= 3.0 {\n            \"B+\".to_string()\n        } else if *grade\
    \ >= 2.7 {\n            \"B\".to_string()\n        } else if *grade >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *grade >= 2.0 {\n         \
    \   \"C+\".to_string()\n        } else if *grade >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *grade >= 1.3 {\n            \"C-\".to_string()\n        }\
    \ else if *grade >= 1.0 {\n            \"D+\".to_string()\n        } else if *grade\
    \ >= 0.7 {\n            \"D\".to_string()\n        } else if *grade >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    // add code here\n    grades.iter().map(|&x|\
    \ {\n        match x {\n            4.0 => String::from(\"A+\"),\n           \
    \ _ if x > 3.7 => String::from(\"A\"),\n            _ if x > 3.3 => String::from(\"\
    A-\"),\n            _ if x > 3.0 => String::from(\"B+\"),\n            _ if x\
    \ > 2.7 => String::from(\"B\"),\n            _ if x > 2.3 => String::from(\"B-\"\
    ),\n            _ if x > 2.0 => String::from(\"C+\"),\n            _ if x > 1.7\
    \ => String::from(\"C\"),\n            _ if x > 1.3 => String::from(\"C-\"),\n\
    \            _ if x > 1.0 => String::from(\"D+\"),\n            _ if x > 0.7 =>\
    \ String::from(\"D\"),\n            _ if x > 0.0 => String::from(\"D-\"),\n  \
    \          _ => String::from(\"E\"),\n        }\n    }).collect()", "    grades.iter().map(|x|\
    \ {\n        match *x {\n            x if x >= 4.0 => \"A+\".to_string(),\n  \
    \          x if x >= 3.7 => \"A\".to_string(),\n            x if x >= 3.3 => \"\
    A-\".to_string(),\n            x if x >= 3.0 => \"B+\".to_string(),\n        \
    \    x if x >= 2.7 => \"B\".to_string(),\n            x if x >= 2.3 => \"B-\"\
    .to_string(),\n            x if x >= 2.0 => \"C+\".to_string(),\n            x\
    \ if x >= 1.7 => \"C\".to_string(),\n            x if x >= 1.3 => \"C-\".to_string(),\n\
    \            x if x >= 1.0 => \"D+\".to_string(),\n            x if x >= 0.7 =>\
    \ \"D\".to_string(),\n            x if x >= 0.0 => \"D-\".to_string(),\n     \
    \       _ => \"E\".to_string(),\n        }\n    }).collect()", "    let mut vec\
    \ = Vec::new();\n    for grade in grades.iter() {\n        if *grade == 4.0 {\n\
    \            vec.push(\"A+\".to_string());\n        } else if *grade >= 3.7 {\n\
    \            vec.push(\"A\".to_string());\n        } else if *grade >= 3.3 {\n\
    \            vec.push(\"A-\".to_string());\n        } else if *grade >= 3.0 {\n\
    \            vec.push(\"B+\".to_string());\n        } else if *grade >= 2.7 {\n\
    \            vec.push(\"B\".to_string());\n        } else if *grade >= 2.3 {\n\
    \            vec.push(\"B-\".to_string());\n        } else if *grade >= 2.0 {\n\
    \            vec.push(\"C+\".to_string());\n        } else if *grade >= 1.7 {\n\
    \            vec.push(\"C\".to_string());\n        } else if *grade >= 1.3 {\n\
    \            vec.push(\"C-\".to_string());\n        } else if *grade >= 1.0 {\n\
    \            vec.push(\"D+\".to_string());\n        } else if *grade >= 0.7 {\n\
    \            vec.push(\"D\".to_string());\n        } else if *grade > 0.0 {\n\
    \            vec.push(\"D-\".to_string());\n        } else {\n            vec.push(\"\
    E\".to_string());\n        }\n    }\n    vec", "    let mut result = Vec::new();\n\
    \    for grade in grades {\n        let mut letter = String::new();\n        if\
    \ grade >= 4.0 {\n            letter = \"A+\".to_string();\n        } else if\
    \ grade >= 3.7 {\n            letter = \"A\".to_string();\n        } else if grade\
    \ >= 3.3 {\n            letter = \"A-\".to_string();\n        } else if grade\
    \ >= 3.0 {\n            letter = \"B+\".to_string();\n        } else if grade\
    \ >= 2.7 {\n            letter = \"B\".to_string();\n        } else if grade >=\
    \ 2.3 {\n            letter = \"B-\".to_string();\n        } else if grade >=\
    \ 2.0 {\n            letter = \"C+\".to_string();\n        } else if grade >=\
    \ 1.7 {\n            letter = \"C\".to_string();\n        } else if grade >= 1.3\
    \ {\n            letter = \"C-\".to_string();\n        } else if grade >= 1.0\
    \ {\n            letter = \"D+\".to_string();\n        } else if grade >= 0.7\
    \ {\n            letter = \"D\".to_string();\n        } else if grade >= 0.0 {\n\
    \            letter = \"D-\".to_string();\n        } else {\n            letter\
    \ = \"E\".to_string();\n        }\n        result.push(letter);\n    }\n    result",
  "    let grades_str = grades.iter().map(|x| format!(\"{:.1}\", x)).collect::<Vec<String>>();\n\
    \    let grades_num = grades.iter().map(|x| x.round() as i64).collect::<Vec<i64>>();\n\
    \    let mut grades_letter = Vec::new();\n    for num in grades_num {\n      \
    \  if num > 37 {\n            grades_letter.push(String::from(\"A+\"));\n    \
    \    } else if num > 33 {\n            grades_letter.push(String::from(\"A\"));\n\
    \        } else if num > 30 {\n            grades_letter.push(String::from(\"\
    A-\"));\n        } else if num > 27 {\n            grades_letter.push(String::from(\"\
    B+\"));\n        } else if num > 23 {\n            grades_letter.push(String::from(\"\
    B\"));\n        } else if num > 20 {\n            grades_letter.push(String::from(\"\
    B-\"));\n        } else if num > 17 {\n            grades_letter.push(String::from(\"\
    C+\"));\n        } else if num > 13 {\n            grades_letter.push(String::from(\"\
    C\"));\n        } else if num > 10 {\n            grades_letter.push(String::from(\"\
    C-\"));\n        } else if num > 7 {\n            grades_letter.push(String::from(\"\
    D+\"));\n        } else if num > 0 {\n            grades_letter.push(String::from(\"\
    D\"));\n        } else {\n            grades_letter.push(String::from(\"E\"));\n\
    \        }\n    }\n    for x in grades_str {\n        println!(\"{}\", x);\n \
    \   }\n    for x in grades_letter {\n        println!(\"{}\", x);\n    }\n   \
    \ return grades_letter;", "    let mut result: Vec<String> = Vec::new();\n   \
    \ for mut grade in grades {\n        grade = (10.0 * grade).round() / 10.0;\n\
    \        let mut letter = \"E\";\n        if grade >= 4.0 {\n            letter\
    \ = \"A+\";\n        } else if grade >= 3.7 {\n            letter = \"A\";\n \
    \       } else if grade >= 3.3 {\n            letter = \"A-\";\n        } else\
    \ if grade >= 3.0 {\n            letter = \"B+\";\n        } else if grade >=\
    \ 2.7 {\n            letter = \"B\";\n        } else if grade >= 2.3 {\n     \
    \       letter = \"B-\";\n        } else if grade >= 2.0 {\n            letter\
    \ = \"C+\";\n        } else if grade >= 1.7 {\n            letter = \"C\";\n \
    \       } else if grade >= 1.3 {\n            letter = \"C-\";\n        } else\
    \ if grade >= 1.0 {\n            letter = \"D+\";\n        } else if grade >=\
    \ 0.7 {\n            letter = \"D\";\n        } else if grade >= 0.0 {\n     \
    \       letter = \"D-\";\n        }\n        result.push(letter.to_string());\n\
    \    }\n    result", "    grades.iter().map(|&grade| match grade {\n        g\
    \ if g >= 4.0 => \"A+\".to_string(),\n        g if g >= 3.7 => \"A\".to_string(),\n\
    \        g if g >= 3.3 => \"A-\".to_string(),\n        g if g >= 3.0 => \"B+\"\
    .to_string(),\n        g if g >= 2.7 => \"B\".to_string(),\n        g if g >=\
    \ 2.3 => \"B-\".to_string(),\n        g if g >= 2.0 => \"C+\".to_string(),\n \
    \       g if g >= 1.7 => \"C\".to_string(),\n        g if g >= 1.3 => \"C-\".to_string(),\n\
    \        g if g >= 1.0 => \"D+\".to_string(),\n        g if g >= 0.7 => \"D\"\
    .to_string(),\n        g if g >= 0.0 => \"D-\".to_string(),\n        _ => \"E\"\
    .to_string(),\n    }).collect()", "    grades.iter().map(|&x| match x {\n    \
    \    4.0 => \"A+\".to_string(),\n        3.7...4.0 => \"A\".to_string(),\n   \
    \     3.3...3.7 => \"A-\".to_string(),\n        3.0...3.3 => \"B+\".to_string(),\n\
    \        2.7...3.0 => \"B\".to_string(),\n        2.3...2.7 => \"B-\".to_string(),\n\
    \        2.0...2.3 => \"C+\".to_string(),\n        1.7...2.0 => \"C\".to_string(),\n\
    \        1.3...1.7 => \"C-\".to_string(),\n        1.0...1.3 => \"D+\".to_string(),\n\
    \        0.7...1.0 => \"D\".to_string(),\n        0.0...0.7 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    let mut result = Vec::new();\n\
    \    for &grade in grades.iter() {\n        let mut letter = String::new();\n\
    \        if grade == 4.0 {\n            letter = String::from(\"A+\");\n     \
    \   } else if grade >= 3.7 {\n            letter = String::from(\"A\");\n    \
    \    } else if grade >= 3.3 {\n            letter = String::from(\"A-\");\n  \
    \      } else if grade >= 3.0 {\n            letter = String::from(\"B+\");\n\
    \        } else if grade >= 2.7 {\n            letter = String::from(\"B\");\n\
    \        } else if grade >= 2.3 {\n            letter = String::from(\"B-\");\n\
    \        } else if grade >= 2.0 {\n            letter = String::from(\"C+\");\n\
    \        } else if grade >= 1.7 {\n            letter = String::from(\"C\");\n\
    \        } else if grade >= 1.3 {\n            letter = String::from(\"C-\");\n\
    \        } else if grade >= 1.0 {\n            letter = String::from(\"D+\");\n\
    \        } else if grade >= 0.7 {\n            letter = String::from(\"D\");\n\
    \        } else if grade >= 0.0 {\n            letter = String::from(\"D-\");\n\
    \        } else {\n            letter = String::from(\"E\");\n        }\n    \
    \    result.push(letter);\n    }\n    result", "    grades.iter().map(|x| match\
    \ *x {\n        4.0 => \"A+\".to_string(),\n        x if x > 3.7 => \"A\".to_string(),\n\
    \        x if x > 3.3 => \"A-\".to_string(),\n        x if x > 3.0 => \"B+\".to_string(),\n\
    \        x if x > 2.7 => \"B\".to_string(),\n        x if x > 2.3 => \"B-\".to_string(),\n\
    \        x if x > 2.0 => \"C+\".to_string(),\n        x if x > 1.7 => \"C\".to_string(),\n\
    \        x if x > 1.3 => \"C-\".to_string(),\n        x if x > 1.0 => \"D+\".to_string(),\n\
    \        x if x > 0.7 => \"D\".to_string(),\n        x if x > 0.0 => \"D-\".to_string(),\n\
    \        x if x == 0.0 => \"E\".to_string(),\n        _ => \"Invalid\".to_string(),\n\
    \    }).collect()", '    unimplemented!()', "    // your code here\n    grades.iter().map(|g|\
    \ match *g {\n        4.0 => \"A+\".to_string(),\n        g if g > 3.7 => \"A\"\
    .to_string(),\n        g if g > 3.3 => \"A-\".to_string(),\n        g if g > 3.0\
    \ => \"B+\".to_string(),\n        g if g > 2.7 => \"B\".to_string(),\n       \
    \ g if g > 2.3 => \"B-\".to_string(),\n        g if g > 2.0 => \"C+\".to_string(),\n\
    \        g if g > 1.7 => \"C\".to_string(),\n        g if g > 1.3 => \"C-\".to_string(),\n\
    \        g if g > 1.0 => \"D+\".to_string(),\n        g if g > 0.7 => \"D\".to_string(),\n\
    \        g if g > 0.0 => \"D-\".to_string(),\n        _ => \"E\".to_string(),\n\
    \    }).collect()", "    // write code here\n    let mut result = Vec::new();\n\
    \    for g in grades {\n        if g >= 4.0 {\n            result.push(\"A+\"\
    .to_string());\n        } else if g >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if g >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if g >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if g >= 2.7 {\n            result.push(\"B\".to_string());\n \
    \       } else if g >= 2.3 {\n            result.push(\"B-\".to_string());\n \
    \       } else if g >= 2.0 {\n            result.push(\"C+\".to_string());\n \
    \       } else if g >= 1.7 {\n            result.push(\"C\".to_string());\n  \
    \      } else if g >= 1.3 {\n            result.push(\"C-\".to_string());\n  \
    \      } else if g >= 1.0 {\n            result.push(\"D+\".to_string());\n  \
    \      } else if g >= 0.7 {\n            result.push(\"D\".to_string());\n   \
    \     } else if g >= 0.0 {\n            result.push(\"D-\".to_string());\n   \
    \     } else {\n            result.push(\"E\".to_string());\n        }\n    }\n\
    \    result", "  let mut result: Vec<String> = Vec::new();\n  for g in grades\
    \ {\n    match g {\n      4.0 => result.push(\"A+\".to_string()),\n      x if\
    \ x >= 3.7 => result.push(\"A\".to_string()),\n      x if x >= 3.3 => result.push(\"\
    A-\".to_string()),\n      x if x >= 3.0 => result.push(\"B+\".to_string()),\n\
    \      x if x >= 2.7 => result.push(\"B\".to_string()),\n      x if x >= 2.3 =>\
    \ result.push(\"B-\".to_string()),\n      x if x >= 2.0 => result.push(\"C+\"\
    .to_string()),\n      x if x >= 1.7 => result.push(\"C\".to_string()),\n     \
    \ x if x >= 1.3 => result.push(\"C-\".to_string()),\n      x if x >= 1.0 => result.push(\"\
    D+\".to_string()),\n      x if x >= 0.7 => result.push(\"D\".to_string()),\n \
    \     x if x >= 0.0 => result.push(\"D-\".to_string()),\n      0.0 => result.push(\"\
    E\".to_string()),\n      _ => (),\n    }\n  }\n  result", '    unimplemented!()',
  "    grades.iter().map(|g| match *g {\n        4.0 => \"A+\".to_string(),\n    \
    \    3.7...4.0 => \"A\".to_string(),\n        3.3...3.7 => \"A-\".to_string(),\n\
    \        3.0...3.3 => \"B+\".to_string(),\n        2.7...3.0 => \"B\".to_string(),\n\
    \        2.3...2.7 => \"B-\".to_string(),\n        2.0...2.3 => \"C+\".to_string(),\n\
    \        1.7...2.0 => \"C\".to_string(),\n        1.3...1.7 => \"C-\".to_string(),\n\
    \        1.0...1.3 => \"D+\".to_string(),\n        0.7...1.0 => \"D\".to_string(),\n\
    \        0.0...0.7 => \"D-\".to_string(),\n        _ => \"E\".to_string(),\n \
    \   }).collect()", "    let mut results = Vec::new();\n    for g in grades {\n\
    \        if g > 4.0 {\n            results.push(\"A+\".to_string());\n       \
    \ } else if g > 3.7 {\n            results.push(\"A\".to_string());\n        }\
    \ else if g > 3.3 {\n            results.push(\"A-\".to_string());\n        }\
    \ else if g > 3.0 {\n            results.push(\"B+\".to_string());\n        }\
    \ else if g > 2.7 {\n            results.push(\"B\".to_string());\n        } else\
    \ if g > 2.3 {\n            results.push(\"B-\".to_string());\n        } else\
    \ if g > 2.0 {\n            results.push(\"C+\".to_string());\n        } else\
    \ if g > 1.7 {\n            results.push(\"C\".to_string());\n        } else if\
    \ g > 1.3 {\n            results.push(\"C-\".to_string());\n        } else if\
    \ g > 1.0 {\n            results.push(\"D+\".to_string());\n        } else if\
    \ g > 0.7 {\n            results.push(\"D\".to_string());\n        } else if g\
    \ > 0.0 {\n            results.push(\"D-\".to_string());\n        } else {\n \
    \           results.push(\"E\".to_string());\n        }\n    }\n    results",
  "    let grades = grades.into_iter().map(|g| match g {\n        x if x >= 4.0 =>\
    \ \"A+\",\n        x if x >= 3.7 => \"A\",\n        x if x >= 3.3 => \"A-\",\n\
    \        x if x >= 3.0 => \"B+\",\n        x if x >= 2.7 => \"B\",\n        x\
    \ if x >= 2.3 => \"B-\",\n        x if x >= 2.0 => \"C+\",\n        x if x >=\
    \ 1.7 => \"C\",\n        x if x >= 1.3 => \"C-\",\n        x if x >= 1.0 => \"\
    D+\",\n        x if x >= 0.7 => \"D\",\n        x if x >= 0.0 => \"D-\",\n   \
    \     _ => \"E\",\n    }).collect();\n    grades", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        if grade == 4.0 {\n      \
    \      letter_grades.push(\"A+\".to_string());\n        } else if grade > 3.7\
    \ {\n            letter_grades.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            letter_grades.push(\"A-\".to_string());\n        } else\
    \ if grade > 3.0 {\n            letter_grades.push(\"B+\".to_string());\n    \
    \    } else if grade > 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut grades_vec = Vec::new();\n    for\
    \ i in grades {\n        if i == 4.0 {\n            grades_vec.push(\"A+\".to_string());\n\
    \        } else if i > 3.7 {\n            grades_vec.push(\"A\".to_string());\n\
    \        } else if i > 3.3 {\n            grades_vec.push(\"A-\".to_string());\n\
    \        } else if i > 3.0 {\n            grades_vec.push(\"B+\".to_string());\n\
    \        } else if i > 2.7 {\n            grades_vec.push(\"B\".to_string());\n\
    \        } else if i > 2.3 {\n            grades_vec.push(\"B-\".to_string());\n\
    \        } else if i > 2.0 {\n            grades_vec.push(\"C+\".to_string());\n\
    \        } else if i > 1.7 {\n            grades_vec.push(\"C\".to_string());\n\
    \        } else if i > 1.3 {\n            grades_vec.push(\"C-\".to_string());\n\
    \        } else if i > 1.0 {\n            grades_vec.push(\"D+\".to_string());\n\
    \        } else if i > 0.7 {\n            grades_vec.push(\"D\".to_string());\n\
    \        } else if i > 0.0 {\n            grades_vec.push(\"D-\".to_string());\n\
    \        } else {\n            grades_vec.push(\"E\".to_string());\n        }\n\
    \    }\n    grades_vec", "    let mut grades_cpy = grades.clone();\n    grades_cpy.sort_by(|a,\
    \ b| b.partial_cmp(a).unwrap());\n    grades_cpy.iter().map(|grade| letter_grade(*grade)).collect()",
  "    grades.iter().map(|g| match *g {\n        4.0 => \"A+\".to_string(),\n    \
    \    v if v > 3.7 => \"A\".to_string(),\n        v if v > 3.3 => \"A-\".to_string(),\n\
    \        v if v > 3.0 => \"B+\".to_string(),\n        v if v > 2.7 => \"B\".to_string(),\n\
    \        v if v > 2.3 => \"B-\".to_string(),\n        v if v > 2.0 => \"C+\".to_string(),\n\
    \        v if v > 1.7 => \"C\".to_string(),\n        v if v > 1.3 => \"C-\".to_string(),\n\
    \        v if v > 1.0 => \"D+\".to_string(),\n        v if v > 0.7 => \"D\".to_string(),\n\
    \        v if v > 0.0 => \"D-\".to_string(),\n        _ => \"E\".to_string(),\n\
    \    }).collect()", "    grades.iter().map(|grade| {\n        if *grade >= 4.0\
    \ { \"A+\".to_string() }\n        else if *grade >= 3.7 { \"A\".to_string() }\n\
    \        else if *grade >= 3.3 { \"A-\".to_string() }\n        else if *grade\
    \ >= 3.0 { \"B+\".to_string() }\n        else if *grade >= 2.7 { \"B\".to_string()\
    \ }\n        else if *grade >= 2.3 { \"B-\".to_string() }\n        else if *grade\
    \ >= 2.0 { \"C+\".to_string() }\n        else if *grade >= 1.7 { \"C\".to_string()\
    \ }\n        else if *grade >= 1.3 { \"C-\".to_string() }\n        else if *grade\
    \ >= 1.0 { \"D+\".to_string() }\n        else if *grade >= 0.7 { \"D\".to_string()\
    \ }\n        else if *grade >= 0.0 { \"D-\".to_string() }\n        else { \"E\"\
    .to_string() }\n    }).collect()", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade > 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade == 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", '    unimplemented!()', "    grades.iter().map(|x|\
    \ {\n        if *x >= 4.0 {\n            \"A+\".to_string()\n        } else if\
    \ *x >= 3.7 {\n            \"A\".to_string()\n        } else if *x >= 3.3 {\n\
    \            \"A-\".to_string()\n        } else if *x >= 3.0 {\n            \"\
    B+\".to_string()\n        } else if *x >= 2.7 {\n            \"B\".to_string()\n\
    \        } else if *x >= 2.3 {\n            \"B-\".to_string()\n        } else\
    \ if *x >= 2.0 {\n            \"C+\".to_string()\n        } else if *x >= 1.7\
    \ {\n            \"C\".to_string()\n        } else if *x >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *x >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *x >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *x >= 0.0 {\n            \"D-\".to_string()\n        } else {\n         \
    \   \"E\".to_string()\n        }\n    }).collect()", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        if grade == 4.0 {\n      \
    \      letter_grades.push(\"A+\".to_string());\n        } else if grade >= 3.7\
    \ {\n            letter_grades.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n        } else\
    \ if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n   \
    \     } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut grades_letter = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            grades_letter.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            grades_letter.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            grades_letter.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            grades_letter.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            grades_letter.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            grades_letter.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            grades_letter.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            grades_letter.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            grades_letter.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            grades_letter.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            grades_letter.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            grades_letter.push(\"\
    D-\".to_string());\n        } else {\n            grades_letter.push(\"E\".to_string());\n\
    \        }\n    }\n    grades_letter", "    let mut vec = Vec::new();\n    let\
    \ mut i = 0;\n    while i < grades.len() {\n        let temp = grades[i];\n  \
    \      if temp >= 4.0 {\n            vec.push(\"A+\".to_string());\n        }\
    \ else if temp >= 3.7 {\n            vec.push(\"A\".to_string());\n        } else\
    \ if temp >= 3.3 {\n            vec.push(\"A-\".to_string());\n        } else\
    \ if temp >= 3.0 {\n            vec.push(\"B+\".to_string());\n        } else\
    \ if temp >= 2.7 {\n            vec.push(\"B\".to_string());\n        } else if\
    \ temp >= 2.3 {\n            vec.push(\"B-\".to_string());\n        } else if\
    \ temp >= 2.0 {\n            vec.push(\"C+\".to_string());\n        } else if\
    \ temp >= 1.7 {\n            vec.push(\"C\".to_string());\n        } else if temp\
    \ >= 1.3 {\n            vec.push(\"C-\".to_string());\n        } else if temp\
    \ >= 1.0 {\n            vec.push(\"D+\".to_string());\n        } else if temp\
    \ >= 0.7 {\n            vec.push(\"D\".to_string());\n        } else if temp >=\
    \ 0.0 {\n            vec.push(\"D-\".to_string());\n        } else {\n       \
    \     vec.push(\"E\".to_string());\n        }\n        i += 1;\n    }\n    vec",
  "    let mut letter_grades = Vec::new();\n    for grade in grades {\n        let\
    \ mut letter_grade = \"E\".to_string();\n        if grade > 4.0 {\n          \
    \  letter_grade = \"A+\".to_string();\n        } else if grade > 3.7 {\n     \
    \       letter_grade = \"A\".to_string();\n        } else if grade > 3.3 {\n \
    \           letter_grade = \"A-\".to_string();\n        } else if grade > 3.0\
    \ {\n            letter_grade = \"B+\".to_string();\n        } else if grade >\
    \ 2.7 {\n            letter_grade = \"B\".to_string();\n        } else if grade\
    \ > 2.3 {\n            letter_grade = \"B-\".to_string();\n        } else if grade\
    \ > 2.0 {\n            letter_grade = \"C+\".to_string();\n        } else if grade\
    \ > 1.7 {\n            letter_grade = \"C\".to_string();\n        } else if grade\
    \ > 1.3 {\n            letter_grade = \"C-\".to_string();\n        } else if grade\
    \ > 1.0 {\n            letter_grade = \"D+\".to_string();\n        } else if grade\
    \ > 0.7 {\n            letter_grade = \"D\".to_string();\n        } else if grade\
    \ > 0.0 {\n            letter_grade = \"D-\".to_string();\n        }\n       \
    \ letter_grades.push(letter_grade);\n    }\n    letter_grades", "    grades.iter().map(|&g|\
    \ {\n        let grade = if g >= 4.0 { \"A+\" }\n                    else if g\
    \ >= 3.7 { \"A\" }\n                    else if g >= 3.3 { \"A-\" }\n        \
    \            else if g >= 3.0 { \"B+\" }\n                    else if g >= 2.7\
    \ { \"B\" }\n                    else if g >= 2.3 { \"B-\" }\n               \
    \     else if g >= 2.0 { \"C+\" }\n                    else if g >= 1.7 { \"C\"\
    \ }\n                    else if g >= 1.3 { \"C-\" }\n                    else\
    \ if g >= 1.0 { \"D+\" }\n                    else if g >= 0.7 { \"D\" }\n   \
    \                 else if g >= 0.0 { \"D-\" }\n                    else { \"E\"\
    \ };\n        grade.to_string()\n    }).collect()", "    grades.iter().map(|g|\
    \ {\n        match *g {\n            4.0 => \"A+\".to_string(),\n            x\
    \ if x > 3.7 => \"A\".to_string(),\n            x if x > 3.3 => \"A-\".to_string(),\n\
    \            x if x > 3.0 => \"B+\".to_string(),\n            x if x > 2.7 =>\
    \ \"B\".to_string(),\n            x if x > 2.3 => \"B-\".to_string(),\n      \
    \      x if x > 2.0 => \"C+\".to_string(),\n            x if x > 1.7 => \"C\"\
    .to_string(),\n            x if x > 1.3 => \"C-\".to_string(),\n            x\
    \ if x > 1.0 => \"D+\".to_string(),\n            x if x > 0.7 => \"D\".to_string(),\n\
    \            x if x > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    grades.iter().map(|x| {\n        let letter\
    \ = match *x {\n            g if g > 4.0 => \"A+\",\n            g if g > 3.7\
    \ => \"A\",\n            g if g > 3.3 => \"A-\",\n            g if g > 3.0 =>\
    \ \"B+\",\n            g if g > 2.7 => \"B\",\n            g if g > 2.3 => \"\
    B-\",\n            g if g > 2.0 => \"C+\",\n            g if g > 1.7 => \"C\"\
    ,\n            g if g > 1.3 => \"C-\",\n            g if g > 1.0 => \"D+\",\n\
    \            g if g > 0.7 => \"D\",\n            g if g > 0.0 => \"D-\",\n   \
    \         _ => \"E\",\n        };\n        letter.to_string()\n    }).collect()",
  "    let mut result = Vec::new();\n    for grade in grades {\n        match grade\
    \ {\n            a if a == 4.0 => result.push(\"A+\".to_string()),\n         \
    \   a if a > 3.7 => result.push(\"A\".to_string()),\n            a if a > 3.3\
    \ => result.push(\"A-\".to_string()),\n            a if a > 3.0 => result.push(\"\
    B+\".to_string()),\n            a if a > 2.7 => result.push(\"B\".to_string()),\n\
    \            a if a > 2.3 => result.push(\"B-\".to_string()),\n            a if\
    \ a > 2.0 => result.push(\"C+\".to_string()),\n            a if a > 1.7 => result.push(\"\
    C\".to_string()),\n            a if a > 1.3 => result.push(\"C-\".to_string()),\n\
    \            a if a > 1.0 => result.push(\"D+\".to_string()),\n            a if\
    \ a > 0.7 => result.push(\"D\".to_string()),\n            a if a > 0.0 => result.push(\"\
    D-\".to_string()),\n            _ => result.push(\"E\".to_string()),\n       \
    \ }\n    }\n    result", "  let mut letter_grades = Vec::new();\n  for i in grades\
    \ {\n    if i >= 4.0 {\n      letter_grades.push(\"A+\".to_string());\n    } else\
    \ if i >= 3.7 {\n      letter_grades.push(\"A\".to_string());\n    } else if i\
    \ >= 3.3 {\n      letter_grades.push(\"A-\".to_string());\n    } else if i >=\
    \ 3.0 {\n      letter_grades.push(\"B+\".to_string());\n    } else if i >= 2.7\
    \ {\n      letter_grades.push(\"B\".to_string());\n    } else if i >= 2.3 {\n\
    \      letter_grades.push(\"B-\".to_string());\n    } else if i >= 2.0 {\n   \
    \   letter_grades.push(\"C+\".to_string());\n    } else if i >= 1.7 {\n      letter_grades.push(\"\
    C\".to_string());\n    } else if i >= 1.3 {\n      letter_grades.push(\"C-\".to_string());\n\
    \    } else if i >= 1.0 {\n      letter_grades.push(\"D+\".to_string());\n   \
    \ } else if i >= 0.7 {\n      letter_grades.push(\"D\".to_string());\n    } else\
    \ if i >= 0.0 {\n      letter_grades.push(\"D-\".to_string());\n    } else {\n\
    \      letter_grades.push(\"E\".to_string());\n    }\n  }\n  letter_grades", " \
    \   grades.iter().map(|x|\n        match *x {\n            4.0 => \"A+\".to_string(),\n\
    \            3.7..=4.0 => \"A\".to_string(),\n            3.3..=3.7 => \"A-\"\
    .to_string(),\n            3.0..=3.3 => \"B+\".to_string(),\n            2.7..=3.0\
    \ => \"B\".to_string(),\n            2.3..=2.7 => \"B-\".to_string(),\n      \
    \      2.0..=2.3 => \"C+\".to_string(),\n            1.7..=2.0 => \"C\".to_string(),\n\
    \            1.3..=1.7 => \"C-\".to_string(),\n            1.0..=1.3 => \"D+\"\
    .to_string(),\n            0.7..=1.0 => \"D\".to_string(),\n            0.0..=0.7\
    \ => \"D-\".to_string(),\n            0.0 => \"E\".to_string(),\n            _\
    \ => \"\".to_string()\n        }\n    ).collect()", "    let mut result = Vec::new();\n\
    \    for g in grades {\n        match g {\n            4.0 => result.push(\"A+\"\
    .to_string()),\n            g if g > 3.7 => result.push(\"A\".to_string()),\n\
    \            g if g > 3.3 => result.push(\"A-\".to_string()),\n            g if\
    \ g > 3.0 => result.push(\"B+\".to_string()),\n            g if g > 2.7 => result.push(\"\
    B\".to_string()),\n            g if g > 2.3 => result.push(\"B-\".to_string()),\n\
    \            g if g > 2.0 => result.push(\"C+\".to_string()),\n            g if\
    \ g > 1.7 => result.push(\"C\".to_string()),\n            g if g > 1.3 => result.push(\"\
    C-\".to_string()),\n            g if g > 1.0 => result.push(\"D+\".to_string()),\n\
    \            g if g > 0.7 => result.push(\"D\".to_string()),\n            g if\
    \ g > 0.0 => result.push(\"D-\".to_string()),\n            _ => result.push(\"\
    E\".to_string()),\n        }\n    }\n    result", "    let mut letter_grades =\
    \ Vec::new();\n    for grade in grades {\n        match grade {\n            x\
    \ if x >= 4.0 => letter_grades.push(\"A+\".to_string()),\n            x if x >=\
    \ 3.7 => letter_grades.push(\"A\".to_string()),\n            x if x >= 3.3 =>\
    \ letter_grades.push(\"A-\".to_string()),\n            x if x >= 3.0 => letter_grades.push(\"\
    B+\".to_string()),\n            x if x >= 2.7 => letter_grades.push(\"B\".to_string()),\n\
    \            x if x >= 2.3 => letter_grades.push(\"B-\".to_string()),\n      \
    \      x if x >= 2.0 => letter_grades.push(\"C+\".to_string()),\n            x\
    \ if x >= 1.7 => letter_grades.push(\"C\".to_string()),\n            x if x >=\
    \ 1.3 => letter_grades.push(\"C-\".to_string()),\n            x if x >= 1.0 =>\
    \ letter_grades.push(\"D+\".to_string()),\n            x if x >= 0.7 => letter_grades.push(\"\
    D\".to_string()),\n            x if x >= 0.0 => letter_grades.push(\"D-\".to_string()),\n\
    \            x if x == 0.0 => letter_grades.push(\"E\".to_string()),\n       \
    \     _ => panic!(\"Invalid Grade\"),\n        }\n    }\n    letter_grades", " \
    \   let mut grades = grades;\n    grades.sort_by(|a, b| b.partial_cmp(a).unwrap());\n\
    \    let upper = vec![\n        (4.0, String::from(\"A+\")),\n        (3.7, String::from(\"\
    A\")),\n        (3.3, String::from(\"A-\")),\n        (3.0, String::from(\"B+\"\
    )),\n        (2.7, String::from(\"B\")),\n        (2.3, String::from(\"B-\")),\n\
    \        (2.0, String::from(\"C+\")),\n        (1.7, String::from(\"C\")),\n \
    \       (1.3, String::from(\"C-\")),\n        (1.0, String::from(\"D+\")),\n \
    \       (0.7, String::from(\"D\")),\n        (0.0, String::from(\"D-\")),\n  \
    \  ];\n    let mut vec = Vec::new();\n    for x in grades {\n        for i in\
    \ upper.iter() {\n            if x >= i.0 {\n                vec.push(i.1.clone());\n\
    \                break;\n            }\n        }\n    }\n    vec", "    let mut\
    \ grades_out = Vec::new();\n    for item in grades.iter() {\n        let letter_grade:\
    \ String;\n        if *item >= 4.0 {\n            letter_grade = \"A+\".to_string();\n\
    \        } else if *item >= 3.7 {\n            letter_grade = \"A\".to_string();\n\
    \        } else if *item >= 3.3 {\n            letter_grade = \"A-\".to_string();\n\
    \        } else if *item >= 3.0 {\n            letter_grade = \"B+\".to_string();\n\
    \        } else if *item >= 2.7 {\n            letter_grade = \"B\".to_string();\n\
    \        } else if *item >= 2.3 {\n            letter_grade = \"B-\".to_string();\n\
    \        } else if *item >= 2.0 {\n            letter_grade = \"C+\".to_string();\n\
    \        } else if *item >= 1.7 {\n            letter_grade = \"C\".to_string();\n\
    \        } else if *item >= 1.3 {\n            letter_grade = \"C-\".to_string();\n\
    \        } else if *item >= 1.0 {\n            letter_grade = \"D+\".to_string();\n\
    \        } else if *item >= 0.7 {\n            letter_grade = \"D\".to_string();\n\
    \        } else if *item >= 0.0 {\n            letter_grade = \"D-\".to_string();\n\
    \        } else {\n            letter_grade = \"E\".to_string();\n        }\n\
    \        grades_out.push(letter_grade);\n    }\n    grades_out", "    let mut\
    \ grades_results = Vec::new();\n    for grade in grades {\n        if grade ==\
    \ 4.0 {\n            grades_results.push(\"A+\".to_string());\n        } else\
    \ if grade > 3.7 {\n            grades_results.push(\"A\".to_string());\n    \
    \    } else if grade > 3.3 {\n            grades_results.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            grades_results.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            grades_results.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            grades_results.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            grades_results.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            grades_results.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            grades_results.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            grades_results.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            grades_results.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            grades_results.push(\"D-\".to_string());\n\
    \        } else {\n            grades_results.push(\"E\".to_string());\n     \
    \   }\n    }\n    grades_results", "    let grade_set = ['E', 'D', 'C', 'B', 'A'];\n\
    \    let mut result = Vec::new();\n    for grade in grades {\n        let grade_index\
    \ = grade_set.iter().position(|&r| grade >= r as f64).unwrap();\n        if grade_index\
    \ == 4 {\n            result.push(format!(\"A+\"));\n        } else {\n      \
    \      result.push(format!(\"{}\", grade_set[grade_index]));\n        }\n    }\n\
    \    result", "    let mut letter_grades = Vec::new();\n    for gpa in grades\
    \ {\n        if gpa == 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if gpa > 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if gpa > 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if gpa > 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if gpa > 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if gpa > 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if gpa > 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if gpa > 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if gpa > 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if gpa > 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if gpa > 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if gpa > 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|grade| {\n        let\
    \ grades = [\"E\", \"D-\", \"D\", \"D+\", \"C-\", \"C\", \"C+\", \"B-\", \"B\"\
    , \"B+\", \"A-\", \"A\", \"A+\"];\n        let mut grade = grade * 10.0;\n   \
    \     if grade < 0.0 {\n            grade = 0.0;\n        }\n        grades[grade\
    \ as usize].to_string()\n    }).collect()", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut grade_letter = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            grade_letter.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            grade_letter.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            grade_letter.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            grade_letter.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            grade_letter.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            grade_letter.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            grade_letter.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            grade_letter.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            grade_letter.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            grade_letter.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            grade_letter.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            grade_letter.push(\"\
    D-\".to_string());\n        } else {\n            grade_letter.push(\"E\".to_string());\n\
    \        }\n    }\n    grade_letter", "    let mut list = Vec::new();\n    for\
    \ grade in grades.iter() {\n        if *grade > 4.0 {\n            list.push(\"\
    A+\".to_string());\n        } else if *grade > 3.7 {\n            list.push(\"\
    A\".to_string());\n        } else if *grade > 3.3 {\n            list.push(\"\
    A-\".to_string());\n        } else if *grade > 3.0 {\n            list.push(\"\
    B+\".to_string());\n        } else if *grade > 2.7 {\n            list.push(\"\
    B\".to_string());\n        } else if *grade > 2.3 {\n            list.push(\"\
    B-\".to_string());\n        } else if *grade > 2.0 {\n            list.push(\"\
    C+\".to_string());\n        } else if *grade > 1.7 {\n            list.push(\"\
    C\".to_string());\n        } else if *grade > 1.3 {\n            list.push(\"\
    C-\".to_string());\n        } else if *grade > 1.0 {\n            list.push(\"\
    D+\".to_string());\n        } else if *grade > 0.7 {\n            list.push(\"\
    D\".to_string());\n        } else if *grade > 0.0 {\n            list.push(\"\
    D-\".to_string());\n        } else {\n            list.push(\"E\".to_string());\n\
    \        }\n    }\n    list", "    grades.iter().map(|&grade| {\n        if grade\
    \ == 4.0 {\n            String::from(\"A+\")\n        } else if grade > 3.7 {\n\
    \            String::from(\"A\")\n        } else if grade > 3.3 {\n          \
    \  String::from(\"A-\")\n        } else if grade > 3.0 {\n            String::from(\"\
    B+\")\n        } else if grade > 2.7 {\n            String::from(\"B\")\n    \
    \    } else if grade > 2.3 {\n            String::from(\"B-\")\n        } else\
    \ if grade > 2.0 {\n            String::from(\"C+\")\n        } else if grade\
    \ > 1.7 {\n            String::from(\"C\")\n        } else if grade > 1.3 {\n\
    \            String::from(\"C-\")\n        } else if grade > 1.0 {\n         \
    \   String::from(\"D+\")\n        } else if grade > 0.7 {\n            String::from(\"\
    D\")\n        } else if grade > 0.0 {\n            String::from(\"D-\")\n    \
    \    } else {\n            String::from(\"E\")\n        }\n    }).collect()",
  "    let mut result: Vec<String> = Vec::new();\n    for grade in grades {\n    \
    \    if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n       \
    \ } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let grade_distr = [\n        (0.0, \"E\"),\n        (0.7,\
    \ \"D-\"),\n        (1.0, \"D\"),\n        (1.3, \"D+\"),\n        (1.7, \"C-\"\
    ),\n        (2.0, \"C\"),\n        (2.3, \"C+\"),\n        (2.7, \"B-\"),\n  \
    \      (3.0, \"B\"),\n        (3.3, \"B+\"),\n        (3.7, \"A-\"),\n       \
    \ (4.0, \"A\"),\n    ];\n    grades\n        .iter()\n        .map(|grade| {\n\
    \            for (low, letter) in grade_distr.iter() {\n                if *grade\
    \ > *low {\n                    return letter.to_string();\n                }\n\
    \            }\n            \"Invalid GPA\".to_string()\n        })\n        .collect()",
  '    grades.iter().map(|x| grade(*x)).collect()', "    let mut grades_to_return\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      grades_to_return.push(\"A+\".to_string());\n        } else if grade >=\
    \ 3.7 {\n            grades_to_return.push(\"A\".to_string());\n        } else\
    \ if grade >= 3.3 {\n            grades_to_return.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            grades_to_return.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            grades_to_return.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            grades_to_return.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            grades_to_return.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            grades_to_return.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            grades_to_return.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            grades_to_return.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            grades_to_return.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            grades_to_return.push(\"D-\".to_string());\n\
    \        } else {\n            grades_to_return.push(\"E\".to_string());\n   \
    \     }\n    }\n    grades_to_return", "    let mut results = Vec::new();\n  \
    \  for i in grades {\n        if i == 4.0 {\n            results.push(\"A+\".to_string());\n\
    \        } else if i > 3.7 {\n            results.push(\"A\".to_string());\n \
    \       } else if i > 3.3 {\n            results.push(\"A-\".to_string());\n \
    \       } else if i > 3.0 {\n            results.push(\"B+\".to_string());\n \
    \       } else if i > 2.7 {\n            results.push(\"B\".to_string());\n  \
    \      } else if i > 2.3 {\n            results.push(\"B-\".to_string());\n  \
    \      } else if i > 2.0 {\n            results.push(\"C+\".to_string());\n  \
    \      } else if i > 1.7 {\n            results.push(\"C\".to_string());\n   \
    \     } else if i > 1.3 {\n            results.push(\"C-\".to_string());\n   \
    \     } else if i > 1.0 {\n            results.push(\"D+\".to_string());\n   \
    \     } else if i > 0.7 {\n            results.push(\"D\".to_string());\n    \
    \    } else if i > 0.0 {\n            results.push(\"D-\".to_string());\n    \
    \    } else {\n            results.push(\"E\".to_string());\n        }\n    }\n\
    \    results", "    grades.iter().map(|&g| {\n        match g {\n            4.0\
    \ => \"A+\".to_string(),\n            g if g > 3.7 => \"A\".to_string(),\n   \
    \         g if g > 3.3 => \"A-\".to_string(),\n            g if g > 3.0 => \"\
    B+\".to_string(),\n            g if g > 2.7 => \"B\".to_string(),\n          \
    \  g if g > 2.3 => \"B-\".to_string(),\n            g if g > 2.0 => \"C+\".to_string(),\n\
    \            g if g > 1.7 => \"C\".to_string(),\n            g if g > 1.3 => \"\
    C-\".to_string(),\n            g if g > 1.0 => \"D+\".to_string(),\n         \
    \   g if g > 0.7 => \"D\".to_string(),\n            g if g > 0.0 => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        }\n    }).collect()", "    grades.iter().map(|x|\
    \ {\n        match *x {\n            4.0 => \"A+\".to_string(),\n            _\
    \ if *x > 3.7 => \"A\".to_string(),\n            _ if *x > 3.3 => \"A-\".to_string(),\n\
    \            _ if *x > 3.0 => \"B+\".to_string(),\n            _ if *x > 2.7 =>\
    \ \"B\".to_string(),\n            _ if *x > 2.3 => \"B-\".to_string(),\n     \
    \       _ if *x > 2.0 => \"C+\".to_string(),\n            _ if *x > 1.7 => \"\
    C\".to_string(),\n            _ if *x > 1.3 => \"C-\".to_string(),\n         \
    \   _ if *x > 1.0 => \"D+\".to_string(),\n            _ if *x > 0.7 => \"D\".to_string(),\n\
    \            _ if *x > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    let mut grade_list: Vec<String> = Vec::new();\n\
    \    for x in grades.into_iter() {\n        if x > 4.0 {\n            grade_list.push(\"\
    A+\".to_string());\n        } else if x > 3.7 {\n            grade_list.push(\"\
    A\".to_string());\n        } else if x > 3.3 {\n            grade_list.push(\"\
    A-\".to_string());\n        } else if x > 3.0 {\n            grade_list.push(\"\
    B+\".to_string());\n        } else if x > 2.7 {\n            grade_list.push(\"\
    B\".to_string());\n        } else if x > 2.3 {\n            grade_list.push(\"\
    B-\".to_string());\n        } else if x > 2.0 {\n            grade_list.push(\"\
    C+\".to_string());\n        } else if x > 1.7 {\n            grade_list.push(\"\
    C\".to_string());\n        } else if x > 1.3 {\n            grade_list.push(\"\
    C-\".to_string());\n        } else if x > 1.0 {\n            grade_list.push(\"\
    D+\".to_string());\n        } else if x > 0.7 {\n            grade_list.push(\"\
    D\".to_string());\n        } else if x > 0.0 {\n            grade_list.push(\"\
    D-\".to_string());\n        } else {\n            grade_list.push(\"E\".to_string());\n\
    \        }\n    }\n    grade_list", "    grades.iter().map(|grade| {\n       \
    \ match *grade {\n            4.0 => \"A+\".to_string(),\n            g if g >\
    \ 3.7 => \"A\".to_string(),\n            g if g > 3.3 => \"A-\".to_string(),\n\
    \            g if g > 3.0 => \"B+\".to_string(),\n            g if g > 2.7 =>\
    \ \"B\".to_string(),\n            g if g > 2.3 => \"B-\".to_string(),\n      \
    \      g if g > 2.0 => \"C+\".to_string(),\n            g if g > 1.7 => \"C\"\
    .to_string(),\n            g if g > 1.3 => \"C-\".to_string(),\n            g\
    \ if g > 1.0 => \"D+\".to_string(),\n            g if g > 0.7 => \"D\".to_string(),\n\
    \            g if g > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    let mut result = Vec::new();\n    for (index,\
    \ value) in grades.iter().enumerate() {\n        if value >= &4.0 {\n        \
    \    result.push(String::from(\"A+\"));\n        } else if value >= &3.7 {\n \
    \           result.push(String::from(\"A\"));\n        } else if value >= &3.3\
    \ {\n            result.push(String::from(\"A-\"));\n        } else if value >=\
    \ &3.0 {\n            result.push(String::from(\"B+\"));\n        } else if value\
    \ >= &2.7 {\n            result.push(String::from(\"B\"));\n        } else if\
    \ value >= &2.3 {\n            result.push(String::from(\"B-\"));\n        } else\
    \ if value >= &2.0 {\n            result.push(String::from(\"C+\"));\n       \
    \ } else if value >= &1.7 {\n            result.push(String::from(\"C\"));\n \
    \       } else if value >= &1.3 {\n            result.push(String::from(\"C-\"\
    ));\n        } else if value >= &1.0 {\n            result.push(String::from(\"\
    D+\"));\n        } else if value >= &0.7 {\n            result.push(String::from(\"\
    D\"));\n        } else if value >= &0.0 {\n            result.push(String::from(\"\
    D-\"));\n        } else {\n            result.push(String::from(\"E\"));\n   \
    \     }\n    }\n    result", "    grades.iter().map(|val| match *val {\n     \
    \   4.0 => \"A+\".to_string(),\n        a if a > 3.7 => \"A\".to_string(),\n \
    \       a if a > 3.3 => \"A-\".to_string(),\n        a if a > 3.0 => \"B+\".to_string(),\n\
    \        a if a > 2.7 => \"B\".to_string(),\n        a if a > 2.3 => \"B-\".to_string(),\n\
    \        a if a > 2.0 => \"C+\".to_string(),\n        a if a > 1.7 => \"C\".to_string(),\n\
    \        a if a > 1.3 => \"C-\".to_string(),\n        a if a > 1.0 => \"D+\".to_string(),\n\
    \        a if a > 0.7 => \"D\".to_string(),\n        a if a > 0.0 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    let mut grades_letter\
    \ = Vec::new();\n    for grade in grades {\n        if grade == 4.0 {\n      \
    \      grades_letter.push(\"A+\".to_string());\n        } else if grade > 3.7\
    \ {\n            grades_letter.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            grades_letter.push(\"A-\".to_string());\n        } else\
    \ if grade > 3.0 {\n            grades_letter.push(\"B+\".to_string());\n    \
    \    } else if grade > 2.7 {\n            grades_letter.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            grades_letter.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            grades_letter.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            grades_letter.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            grades_letter.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            grades_letter.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            grades_letter.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            grades_letter.push(\"D-\".to_string());\n\
    \        } else {\n            grades_letter.push(\"E\".to_string());\n      \
    \  }\n    }\n    grades_letter", "    let mut output = Vec::new();\n    for i\
    \ in grades {\n        if i > 4.0 {\n            output.push(\"A+\".to_string());\n\
    \        } else if i > 3.7 {\n            output.push(\"A\".to_string());\n  \
    \      } else if i > 3.3 {\n            output.push(\"A-\".to_string());\n   \
    \     } else if i > 3.0 {\n            output.push(\"B+\".to_string());\n    \
    \    } else if i > 2.7 {\n            output.push(\"B\".to_string());\n      \
    \  } else if i > 2.3 {\n            output.push(\"B-\".to_string());\n       \
    \ } else if i > 2.0 {\n            output.push(\"C+\".to_string());\n        }\
    \ else if i > 1.7 {\n            output.push(\"C\".to_string());\n        } else\
    \ if i > 1.3 {\n            output.push(\"C-\".to_string());\n        } else if\
    \ i > 1.0 {\n            output.push(\"D+\".to_string());\n        } else if i\
    \ > 0.7 {\n            output.push(\"D\".to_string());\n        } else if i >\
    \ 0.0 {\n            output.push(\"D-\".to_string());\n        } else {\n    \
    \        output.push(\"E\".to_string());\n        }\n    }\n    output", "   \
    \ grades.iter().map(|g| match *g {\n        x if x == 4.0 => \"A+\".to_string(),\n\
    \        x if x > 3.7 => \"A\".to_string(),\n        x if x > 3.3 => \"A-\".to_string(),\n\
    \        x if x > 3.0 => \"B+\".to_string(),\n        x if x > 2.7 => \"B\".to_string(),\n\
    \        x if x > 2.3 => \"B-\".to_string(),\n        x if x > 2.0 => \"C+\".to_string(),\n\
    \        x if x > 1.7 => \"C\".to_string(),\n        x if x > 1.3 => \"C-\".to_string(),\n\
    \        x if x > 1.0 => \"D+\".to_string(),\n        x if x > 0.7 => \"D\".to_string(),\n\
    \        x if x > 0.0 => \"D-\".to_string(),\n        _ => \"E\".to_string(),\n\
    \    }).collect()", "    let mut result: Vec<String> = Vec::new();\n    for i\
    \ in grades {\n        if i == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if i >= 3.7 {\n            result.push(\"A\".to_string());\n \
    \       } else if i >= 3.3 {\n            result.push(\"A-\".to_string());\n \
    \       } else if i >= 3.0 {\n            result.push(\"B+\".to_string());\n \
    \       } else if i >= 2.7 {\n            result.push(\"B\".to_string());\n  \
    \      } else if i >= 2.3 {\n            result.push(\"B-\".to_string());\n  \
    \      } else if i >= 2.0 {\n            result.push(\"C+\".to_string());\n  \
    \      } else if i >= 1.7 {\n            result.push(\"C\".to_string());\n   \
    \     } else if i >= 1.3 {\n            result.push(\"C-\".to_string());\n   \
    \     } else if i >= 1.0 {\n            result.push(\"D+\".to_string());\n   \
    \     } else if i >= 0.7 {\n            result.push(\"D\".to_string());\n    \
    \    } else if i > 0.0 {\n            result.push(\"D-\".to_string());\n     \
    \   } else {\n            result.push(\"E\".to_string());\n        }\n    }\n\
    \    result", "    let mut result = Vec::new();\n    for i in grades {\n     \
    \   let score = if i > 4.0 {\n            \"A+\"\n        } else if i > 3.7 {\n\
    \            \"A\"\n        } else if i > 3.3 {\n            \"A-\"\n        }\
    \ else if i > 3.0 {\n            \"B+\"\n        } else if i > 2.7 {\n       \
    \     \"B\"\n        } else if i > 2.3 {\n            \"B-\"\n        } else if\
    \ i > 2.0 {\n            \"C+\"\n        } else if i > 1.7 {\n            \"C\"\
    \n        } else if i > 1.3 {\n            \"C-\"\n        } else if i > 1.0 {\n\
    \            \"D+\"\n        } else if i > 0.7 {\n            \"D\"\n        }\
    \ else if i > 0.0 {\n            \"D-\"\n        } else {\n            \"E\"\n\
    \        };\n        result.push(score.to_string());\n    }\n    result", "  \
    \  // Add your code here\n    vec![]", "    grades.iter().map(|g| {\n        match\
    \ *g {\n            g if g == 4.0 => \"A+\".to_string(),\n            g if g >\
    \ 3.7 => \"A\".to_string(),\n            g if g > 3.3 => \"A-\".to_string(),\n\
    \            g if g > 3.0 => \"B+\".to_string(),\n            g if g > 2.7 =>\
    \ \"B\".to_string(),\n            g if g > 2.3 => \"B-\".to_string(),\n      \
    \      g if g > 2.0 => \"C+\".to_string(),\n            g if g > 1.7 => \"C\"\
    .to_string(),\n            g if g > 1.3 => \"C-\".to_string(),\n            g\
    \ if g > 1.0 => \"D+\".to_string(),\n            g if g > 0.7 => \"D\".to_string(),\n\
    \            g if g > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    let mut result: Vec<String> = Vec::new();\n\
    \    for i in 0..grades.len() {\n        let mut grade: String = String::new();\n\
    \        if grades[i] >= 4.0 {\n            grade = String::from(\"A+\");\n  \
    \      } else if grades[i] >= 3.7 {\n            grade = String::from(\"A\");\n\
    \        } else if grades[i] >= 3.3 {\n            grade = String::from(\"A-\"\
    );\n        } else if grades[i] >= 3.0 {\n            grade = String::from(\"\
    B+\");\n        } else if grades[i] >= 2.7 {\n            grade = String::from(\"\
    B\");\n        } else if grades[i] >= 2.3 {\n            grade = String::from(\"\
    B-\");\n        } else if grades[i] >= 2.0 {\n            grade = String::from(\"\
    C+\");\n        } else if grades[i] >= 1.7 {\n            grade = String::from(\"\
    C\");\n        } else if grades[i] >= 1.3 {\n            grade = String::from(\"\
    C-\");\n        } else if grades[i] >= 1.0 {\n            grade = String::from(\"\
    D+\");\n        } else if grades[i] >= 0.7 {\n            grade = String::from(\"\
    D\");\n        } else if grades[i] >= 0.0 {\n            grade = String::from(\"\
    D-\");\n        } else {\n            grade = String::from(\"E\");\n        }\n\
    \        result.push(grade);\n    }\n    result", "    let mut vec: Vec<String>\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      vec.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n     \
    \       vec.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n     \
    \       vec.push(\"A-\".to_string());\n        } else if grade >= 3.0 {\n    \
    \        vec.push(\"B+\".to_string());\n        } else if grade >= 2.7 {\n   \
    \         vec.push(\"B\".to_string());\n        } else if grade >= 2.3 {\n   \
    \         vec.push(\"B-\".to_string());\n        } else if grade >= 2.0 {\n  \
    \          vec.push(\"C+\".to_string());\n        } else if grade >= 1.7 {\n \
    \           vec.push(\"C\".to_string());\n        } else if grade >= 1.3 {\n \
    \           vec.push(\"C-\".to_string());\n        } else if grade >= 1.0 {\n\
    \            vec.push(\"D+\".to_string());\n        } else if grade >= 0.7 {\n\
    \            vec.push(\"D\".to_string());\n        } else if grade >= 0.0 {\n\
    \            vec.push(\"D-\".to_string());\n        } else {\n            vec.push(\"\
    E\".to_string());\n        }\n    }\n    vec", "    grades.iter().map(|grade|\
    \ {\n        if *grade >= 4.0 {\n            String::from(\"A+\")\n        } else\
    \ if *grade >= 3.7 {\n            String::from(\"A\")\n        } else if *grade\
    \ >= 3.3 {\n            String::from(\"A-\")\n        } else if *grade >= 3.0\
    \ {\n            String::from(\"B+\")\n        } else if *grade >= 2.7 {\n   \
    \         String::from(\"B\")\n        } else if *grade >= 2.3 {\n           \
    \ String::from(\"B-\")\n        } else if *grade >= 2.0 {\n            String::from(\"\
    C+\")\n        } else if *grade >= 1.7 {\n            String::from(\"C\")\n  \
    \      } else if *grade >= 1.3 {\n            String::from(\"C-\")\n        }\
    \ else if *grade >= 1.0 {\n            String::from(\"D+\")\n        } else if\
    \ *grade >= 0.7 {\n            String::from(\"D\")\n        } else if *grade >=\
    \ 0.0 {\n            String::from(\"D-\")\n        } else {\n            String::from(\"\
    E\")\n        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|x| {\n        if\
    \ *x >= 4.0 { return \"A+\".to_string(); }\n        if *x >= 3.7 { return \"A\"\
    .to_string(); }\n        if *x >= 3.3 { return \"A-\".to_string(); }\n       \
    \ if *x >= 3.0 { return \"B+\".to_string(); }\n        if *x >= 2.7 { return \"\
    B\".to_string(); }\n        if *x >= 2.3 { return \"B-\".to_string(); }\n    \
    \    if *x >= 2.0 { return \"C+\".to_string(); }\n        if *x >= 1.7 { return\
    \ \"C\".to_string(); }\n        if *x >= 1.3 { return \"C-\".to_string(); }\n\
    \        if *x >= 1.0 { return \"D+\".to_string(); }\n        if *x >= 0.7 { return\
    \ \"D\".to_string(); }\n        if *x >= 0.0 { return \"D-\".to_string(); }\n\
    \        \"E\".to_string()\n    }).collect()", "    let mut result = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut v_string = Vec::new();\n    for i\
    \ in grades.iter() {\n        if i >= &4.0 {\n            v_string.push(\"A+\"\
    .to_string());\n        } else if i >= &3.7 {\n            v_string.push(\"A\"\
    .to_string());\n        } else if i >= &3.3 {\n            v_string.push(\"A-\"\
    .to_string());\n        } else if i >= &3.0 {\n            v_string.push(\"B+\"\
    .to_string());\n        } else if i >= &2.7 {\n            v_string.push(\"B\"\
    .to_string());\n        } else if i >= &2.3 {\n            v_string.push(\"B-\"\
    .to_string());\n        } else if i >= &2.0 {\n            v_string.push(\"C+\"\
    .to_string());\n        } else if i >= &1.7 {\n            v_string.push(\"C\"\
    .to_string());\n        } else if i >= &1.3 {\n            v_string.push(\"C-\"\
    .to_string());\n        } else if i >= &1.0 {\n            v_string.push(\"D+\"\
    .to_string());\n        } else if i >= &0.7 {\n            v_string.push(\"D\"\
    .to_string());\n        } else if i >= &0.0 {\n            v_string.push(\"D-\"\
    .to_string());\n        } else {\n            v_string.push(\"E\".to_string());\n\
    \        }\n    }\n    v_string", "    grades.iter().map(|x| {\n        let grade\
    \ = *x;\n        match grade {\n            grade if grade >= 4.0 => \"A+\".to_string(),\n\
    \            grade if grade >= 3.7 => \"A\".to_string(),\n            grade if\
    \ grade >= 3.3 => \"A-\".to_string(),\n            grade if grade >= 3.0 => \"\
    B+\".to_string(),\n            grade if grade >= 2.7 => \"B\".to_string(),\n \
    \           grade if grade >= 2.3 => \"B-\".to_string(),\n            grade if\
    \ grade >= 2.0 => \"C+\".to_string(),\n            grade if grade >= 1.7 => \"\
    C\".to_string(),\n            grade if grade >= 1.3 => \"C-\".to_string(),\n \
    \           grade if grade >= 1.0 => \"D+\".to_string(),\n            grade if\
    \ grade >= 0.7 => \"D\".to_string(),\n            grade if grade >= 0.0 => \"\
    D-\".to_string(),\n            _ => \"E\".to_string(),\n        }\n    }).collect()",
  "    let mut v: Vec<String> = Vec::new();\n    for grade in grades {\n        let\
    \ grade = grade.round();\n        match grade {\n            4.0 => v.push(\"\
    A+\".to_string()),\n            3.7..=3.99 => v.push(\"A\".to_string()),\n   \
    \         3.3..=3.69 => v.push(\"A-\".to_string()),\n            3.0..=3.29 =>\
    \ v.push(\"B+\".to_string()),\n            2.7..=2.99 => v.push(\"B\".to_string()),\n\
    \            2.3..=2.69 => v.push(\"B-\".to_string()),\n            2.0..=2.29\
    \ => v.push(\"C+\".to_string()),\n            1.7..=1.99 => v.push(\"C\".to_string()),\n\
    \            1.3..=1.69 => v.push(\"C-\".to_string()),\n            1.0..=1.29\
    \ => v.push(\"D+\".to_string()),\n            0.7..=0.99 => v.push(\"D\".to_string()),\n\
    \            0.0..=0.69 => v.push(\"D-\".to_string()),\n            _ => v.push(\"\
    E\".to_string()),\n        }\n    }\n    v", "    let mut results = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            results.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            results.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            results.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            results.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            results.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            results.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            results.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            results.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            results.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            results.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            results.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            results.push(\"\
    D-\".to_string());\n        } else {\n            results.push(\"E\".to_string());\n\
    \        }\n    }\n    results", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        match grade {\n            x if x > 4.0 => letter_grades.push(\"\
    A+\".to_string()),\n            x if x > 3.7 => letter_grades.push(\"A\".to_string()),\n\
    \            x if x > 3.3 => letter_grades.push(\"A-\".to_string()),\n       \
    \     x if x > 3.0 => letter_grades.push(\"B+\".to_string()),\n            x if\
    \ x > 2.7 => letter_grades.push(\"B\".to_string()),\n            x if x > 2.3\
    \ => letter_grades.push(\"B-\".to_string()),\n            x if x > 2.0 => letter_grades.push(\"\
    C+\".to_string()),\n            x if x > 1.7 => letter_grades.push(\"C\".to_string()),\n\
    \            x if x > 1.3 => letter_grades.push(\"C-\".to_string()),\n       \
    \     x if x > 1.0 => letter_grades.push(\"D+\".to_string()),\n            x if\
    \ x > 0.7 => letter_grades.push(\"D\".to_string()),\n            x if x > 0.0\
    \ => letter_grades.push(\"D-\".to_string()),\n            _            => letter_grades.push(\"\
    E\".to_string()),\n        }\n    }\n    letter_grades", "    let mut results\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      results.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n \
    \           results.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n\
    \            results.push(\"A-\".to_string());\n        } else if grade >= 3.0\
    \ {\n            results.push(\"B+\".to_string());\n        } else if grade >=\
    \ 2.7 {\n            results.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            results.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            results.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            results.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            results.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            results.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            results.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            results.push(\"D-\".to_string());\n        } else {\n\
    \            results.push(\"E\".to_string());\n        }\n    }\n    results",
  "    let mut out = Vec::new();\n    for item in grades {\n        if item >= 4.0\
    \ {\n            out.push(\"A+\".to_string());\n        } else if item > 3.7 {\n\
    \            out.push(\"A\".to_string());\n        } else if item > 3.3 {\n  \
    \          out.push(\"A-\".to_string());\n        } else if item > 3.0 {\n   \
    \         out.push(\"B+\".to_string());\n        } else if item > 2.7 {\n    \
    \        out.push(\"B\".to_string());\n        } else if item > 2.3 {\n      \
    \      out.push(\"B-\".to_string());\n        } else if item > 2.0 {\n       \
    \     out.push(\"C+\".to_string());\n        } else if item > 1.7 {\n        \
    \    out.push(\"C\".to_string());\n        } else if item > 1.3 {\n          \
    \  out.push(\"C-\".to_string());\n        } else if item > 1.0 {\n           \
    \ out.push(\"D+\".to_string());\n        } else if item > 0.7 {\n            out.push(\"\
    D\".to_string());\n        } else if item > 0.0 {\n            out.push(\"D-\"\
    .to_string());\n        } else {\n            out.push(\"E\".to_string());\n \
    \       }\n    }\n    out", "    let mut letter_grades = Vec::new();\n    for\
    \ gpa in grades {\n        let mut grade = String::new();\n        if gpa >= 4.0\
    \ {\n            grade = String::from(\"A+\");\n        } else if gpa >= 3.7 {\n\
    \            grade = String::from(\"A\");\n        } else if gpa >= 3.3 {\n  \
    \          grade = String::from(\"A-\");\n        } else if gpa >= 3.0 {\n   \
    \         grade = String::from(\"B+\");\n        } else if gpa >= 2.7 {\n    \
    \        grade = String::from(\"B\");\n        } else if gpa >= 2.3 {\n      \
    \      grade = String::from(\"B-\");\n        } else if gpa >= 2.0 {\n       \
    \     grade = String::from(\"C+\");\n        } else if gpa >= 1.7 {\n        \
    \    grade = String::from(\"C\");\n        } else if gpa >= 1.3 {\n          \
    \  grade = String::from(\"C-\");\n        } else if gpa >= 1.0 {\n           \
    \ grade = String::from(\"D+\");\n        } else if gpa >= 0.7 {\n            grade\
    \ = String::from(\"D\");\n        } else if gpa >= 0.0 {\n            grade =\
    \ String::from(\"D-\");\n        } else {\n            grade = String::from(\"\
    E\");\n        }\n        letter_grades.push(grade);\n    }\n    letter_grades",
  "    let mut output: Vec<String> = Vec::new();\n    for i in grades {\n        if\
    \ i >= 4.0 {\n            output.push(\"A+\".to_string());\n        } else if\
    \ i >= 3.7 {\n            output.push(\"A\".to_string());\n        } else if i\
    \ >= 3.3 {\n            output.push(\"A-\".to_string());\n        } else if i\
    \ >= 3.0 {\n            output.push(\"B+\".to_string());\n        } else if i\
    \ >= 2.7 {\n            output.push(\"B\".to_string());\n        } else if i >=\
    \ 2.3 {\n            output.push(\"B-\".to_string());\n        } else if i >=\
    \ 2.0 {\n            output.push(\"C+\".to_string());\n        } else if i >=\
    \ 1.7 {\n            output.push(\"C\".to_string());\n        } else if i >= 1.3\
    \ {\n            output.push(\"C-\".to_string());\n        } else if i >= 1.0\
    \ {\n            output.push(\"D+\".to_string());\n        } else if i >= 0.7\
    \ {\n            output.push(\"D\".to_string());\n        } else if i >= 0.0 {\n\
    \            output.push(\"D-\".to_string());\n        } else {\n            output.push(\"\
    E\".to_string());\n        }\n    }\n    output", "    grades.iter().map(|g| {\n\
    \        match *g {\n            4.0 => \"A+\".to_string(),\n            _ if\
    \ *g > 3.7 => \"A\".to_string(),\n            _ if *g > 3.3 => \"A-\".to_string(),\n\
    \            _ if *g > 3.0 => \"B+\".to_string(),\n            _ if *g > 2.7 =>\
    \ \"B\".to_string(),\n            _ if *g > 2.3 => \"B-\".to_string(),\n     \
    \       _ if *g > 2.0 => \"C+\".to_string(),\n            _ if *g > 1.7 => \"\
    C\".to_string(),\n            _ if *g > 1.3 => \"C-\".to_string(),\n         \
    \   _ if *g > 1.0 => \"D+\".to_string(),\n            _ if *g > 0.7 => \"D\".to_string(),\n\
    \            _ if *g > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    let mut v = Vec::new();\n    for i in &grades\
    \ {\n        let mut n = i.clone();\n        n = n.abs().floor();\n        let\
    \ mut m = n * 10.0;\n        m = m.abs().floor();\n        let mut e = i.clone();\n\
    \        e = e.abs();\n        e = e.fract();\n        if m == 4.0 && e == 0.0\
    \ {\n            v.push(\"A+\".to_string());\n        } else if m == 3.0 && e\
    \ > 0.7 {\n            v.push(\"A\".to_string());\n        } else if m == 3.0\
    \ && e <= 0.7 && e > 0.3 {\n            v.push(\"A-\".to_string());\n        }\
    \ else if m == 2.0 && e > 0.7 {\n            v.push(\"B+\".to_string());\n   \
    \     } else if m == 2.0 && e <= 0.7 && e > 0.3 {\n            v.push(\"B\".to_string());\n\
    \        } else if m == 1.0 && e > 0.7 {\n            v.push(\"C+\".to_string());\n\
    \        } else if m == 1.0 && e <= 0.7 && e > 0.3 {\n            v.push(\"C\"\
    .to_string());\n        } else if m == 0.0 && e > 0.7 {\n            v.push(\"\
    D+\".to_string());\n        } else if m == 0.0 && e <= 0.7 && e > 0.3 {\n    \
    \        v.push(\"D\".to_string());\n        } else if m == 0.0 && e <= 0.3 {\n\
    \            v.push(\"E\".to_string());\n        }\n    }\n    v", "    let mut\
    \ results = Vec::new();\n    for each in grades {\n        if each >= 4.0 {\n\
    \            results.push(\"A+\".to_string());\n        } else if each >= 3.7\
    \ {\n            results.push(\"A\".to_string());\n        } else if each >= 3.3\
    \ {\n            results.push(\"A-\".to_string());\n        } else if each >=\
    \ 3.0 {\n            results.push(\"B+\".to_string());\n        } else if each\
    \ >= 2.7 {\n            results.push(\"B\".to_string());\n        } else if each\
    \ >= 2.3 {\n            results.push(\"B-\".to_string());\n        } else if each\
    \ >= 2.0 {\n            results.push(\"C+\".to_string());\n        } else if each\
    \ >= 1.7 {\n            results.push(\"C\".to_string());\n        } else if each\
    \ >= 1.3 {\n            results.push(\"C-\".to_string());\n        } else if each\
    \ >= 1.0 {\n            results.push(\"D+\".to_string());\n        } else if each\
    \ >= 0.7 {\n            results.push(\"D\".to_string());\n        } else if each\
    \ >= 0.0 {\n            results.push(\"D-\".to_string());\n        } else {\n\
    \            results.push(\"E\".to_string());\n        }\n    }\n    results",
  "    let mut letter_grades = Vec::new();\n    for gpa in grades {\n        if gpa\
    \ == 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if gpa > 3.7 {\n            letter_grades.push(\"A\".to_string());\n       \
    \ } else if gpa > 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if gpa > 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if gpa > 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if gpa > 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if gpa > 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if gpa > 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if gpa > 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if gpa > 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if gpa > 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if gpa > 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", '    grades.iter().map(|grade| grade_calculator(*grade)).collect()',
  "    let mut output = Vec::new();\n    for grade in grades {\n        if grade ==\
    \ 4.0 {\n            output.push(\"A+\".to_string());\n        } else if grade\
    \ > 3.7 {\n            output.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            output.push(\"A-\".to_string());\n        } else if grade\
    \ > 3.0 {\n            output.push(\"B+\".to_string());\n        } else if grade\
    \ > 2.7 {\n            output.push(\"B\".to_string());\n        } else if grade\
    \ > 2.3 {\n            output.push(\"B-\".to_string());\n        } else if grade\
    \ > 2.0 {\n            output.push(\"C+\".to_string());\n        } else if grade\
    \ > 1.7 {\n            output.push(\"C\".to_string());\n        } else if grade\
    \ > 1.3 {\n            output.push(\"C-\".to_string());\n        } else if grade\
    \ > 1.0 {\n            output.push(\"D+\".to_string());\n        } else if grade\
    \ > 0.7 {\n            output.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            output.push(\"D-\".to_string());\n        } else {\n \
    \           output.push(\"E\".to_string());\n        }\n    }\n    output", " \
    \   let mut new_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            new_grades.push(\"A+\".to_string());\n        } else if\
    \ grade >= 3.7 {\n            new_grades.push(\"A\".to_string());\n        } else\
    \ if grade >= 3.3 {\n            new_grades.push(\"A-\".to_string());\n      \
    \  } else if grade >= 3.0 {\n            new_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            new_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            new_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            new_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            new_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            new_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            new_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            new_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            new_grades.push(\"D-\".to_string());\n\
    \        } else {\n            new_grades.push(\"E\".to_string());\n        }\n\
    \    }\n    new_grades", "    let mut student_grades = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            student_grades.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            student_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            student_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            student_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            student_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            student_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            student_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            student_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            student_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            student_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            student_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            student_grades.push(\"\
    D-\".to_string());\n        } else {\n            student_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    student_grades", '    grades.iter().map(grade_map).collect()',
  "    grades.iter().map(|num| {\n        let x = format!(\"{:.2}\", num);\n     \
    \   let y = x.parse::<f64>().unwrap();\n        if y >= 4.0 {\n            \"\
    A+\".to_string()\n        } else if y >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if y >= 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if y >= 3.0 {\n            \"B+\".to_string()\n        } else if y >= 2.7 {\n\
    \            \"B\".to_string()\n        } else if y >= 2.3 {\n            \"B-\"\
    .to_string()\n        } else if y >= 2.0 {\n            \"C+\".to_string()\n \
    \       } else if y >= 1.7 {\n            \"C\".to_string()\n        } else if\
    \ y >= 1.3 {\n            \"C-\".to_string()\n        } else if y >= 1.0 {\n \
    \           \"D+\".to_string()\n        } else if y >= 0.7 {\n            \"D\"\
    .to_string()\n        } else if y >= 0.0 {\n            \"D-\".to_string()\n \
    \       } else {\n            \"E\".to_string()\n        }\n    }).collect()",
  "    let mut results = Vec::new();\n    for g in grades {\n        let mut str =\
    \ String::new();\n        if g == 4.0 {\n            str.push_str(\"A+\");\n \
    \       } else if g > 3.7 {\n            str.push_str(\"A\");\n        } else\
    \ if g > 3.3 {\n            str.push_str(\"A-\");\n        } else if g > 3.0 {\n\
    \            str.push_str(\"B+\");\n        } else if g > 2.7 {\n            str.push_str(\"\
    B\");\n        } else if g > 2.3 {\n            str.push_str(\"B-\");\n      \
    \  } else if g > 2.0 {\n            str.push_str(\"C+\");\n        } else if g\
    \ > 1.7 {\n            str.push_str(\"C\");\n        } else if g > 1.3 {\n   \
    \         str.push_str(\"C-\");\n        } else if g > 1.0 {\n            str.push_str(\"\
    D+\");\n        } else if g > 0.7 {\n            str.push_str(\"D\");\n      \
    \  } else if g >= 0.0 {\n            str.push_str(\"D-\");\n        } else {\n\
    \            str.push_str(\"E\");\n        }\n        results.push(str);\n   \
    \ }\n    results", "    let mut letter_grades = Vec::new();\n    for &grade in\
    \ grades.iter() {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut output: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        let mut string_grade = String::new();\n  \
    \      match grade {\n            4.0 => string_grade = String::from(\"A+\"),\n\
    \            grade if grade >= 3.7 => string_grade = String::from(\"A\"),\n  \
    \          grade if grade >= 3.3 => string_grade = String::from(\"A-\"),\n   \
    \         grade if grade >= 3.0 => string_grade = String::from(\"B+\"),\n    \
    \        grade if grade >= 2.7 => string_grade = String::from(\"B\"),\n      \
    \      grade if grade >= 2.3 => string_grade = String::from(\"B-\"),\n       \
    \     grade if grade >= 2.0 => string_grade = String::from(\"C+\"),\n        \
    \    grade if grade >= 1.7 => string_grade = String::from(\"C\"),\n          \
    \  grade if grade >= 1.3 => string_grade = String::from(\"C-\"),\n           \
    \ grade if grade >= 1.0 => string_grade = String::from(\"D+\"),\n            grade\
    \ if grade >= 0.7 => string_grade = String::from(\"D\"),\n            grade if\
    \ grade >= 0.0 => string_grade = String::from(\"D-\"),\n            _ => string_grade\
    \ = String::from(\"E\"),\n        }\n        output.push(string_grade);\n    }\n\
    \    output", "    grades.iter().map(|grade| {\n        let grade = format!(\"\
    {:.1}\", grade);\n        match grade.as_str() {\n            \"4.0\" => \"A+\"\
    .to_string(),\n            \"3.7\" => \"A\".to_string(),\n            \"3.3\"\
    \ => \"A-\".to_string(),\n            \"3.0\" => \"B+\".to_string(),\n       \
    \     \"2.7\" => \"B\".to_string(),\n            \"2.3\" => \"B-\".to_string(),\n\
    \            \"2.0\" => \"C+\".to_string(),\n            \"1.7\" => \"C\".to_string(),\n\
    \            \"1.3\" => \"C-\".to_string(),\n            \"1.0\" => \"D+\".to_string(),\n\
    \            \"0.7\" => \"D\".to_string(),\n            \"0.0\" => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        }\n    }).collect()", "  // your\
    \ solution here\n  let mut letter_grades = Vec::new();\n  for num in grades {\n\
    \    if num == 4.0 {\n      letter_grades.push(\"A+\".to_string());\n    } else\
    \ if num >= 3.7 {\n      letter_grades.push(\"A\".to_string());\n    } else if\
    \ num >= 3.3 {\n      letter_grades.push(\"A-\".to_string());\n    } else if num\
    \ >= 3.0 {\n      letter_grades.push(\"B+\".to_string());\n    } else if num >=\
    \ 2.7 {\n      letter_grades.push(\"B\".to_string());\n    } else if num >= 2.3\
    \ {\n      letter_grades.push(\"B-\".to_string());\n    } else if num >= 2.0 {\n\
    \      letter_grades.push(\"C+\".to_string());\n    } else if num >= 1.7 {\n \
    \     letter_grades.push(\"C\".to_string());\n    } else if num >= 1.3 {\n   \
    \   letter_grades.push(\"C-\".to_string());\n    } else if num >= 1.0 {\n    \
    \  letter_grades.push(\"D+\".to_string());\n    } else if num >= 0.7 {\n     \
    \ letter_grades.push(\"D\".to_string());\n    } else if num >= 0.0 {\n      letter_grades.push(\"\
    D-\".to_string());\n    } else {\n      letter_grades.push(\"E\".to_string());\n\
    \    }\n  }\n  letter_grades", "    // your code goes here\n    grades.iter().map(|x|\
    \ grade_to_letter(*x)).collect()", "    let mut result = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            result.push(\"A\"\
    .to_string());\n        } else if grade >= 3.3 {\n            result.push(\"A-\"\
    .to_string());\n        } else if grade >= 3.0 {\n            result.push(\"B+\"\
    .to_string());\n        } else if grade >= 2.7 {\n            result.push(\"B\"\
    .to_string());\n        } else if grade >= 2.3 {\n            result.push(\"B-\"\
    .to_string());\n        } else if grade >= 2.0 {\n            result.push(\"C+\"\
    .to_string());\n        } else if grade >= 1.7 {\n            result.push(\"C\"\
    .to_string());\n        } else if grade >= 1.3 {\n            result.push(\"C-\"\
    .to_string());\n        } else if grade >= 1.0 {\n            result.push(\"D+\"\
    .to_string());\n        } else if grade >= 0.7 {\n            result.push(\"D\"\
    .to_string());\n        } else if grade >= 0.0 {\n            result.push(\"D-\"\
    .to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    // Write your code here\n    grades.iter().map(|grade|\
    \ match *grade {\n        4.0 => \"A+\".to_string(),\n        grade if grade >\
    \ 3.7 => \"A\".to_string(),\n        grade if grade > 3.3 => \"A-\".to_string(),\n\
    \        grade if grade > 3.0 => \"B+\".to_string(),\n        grade if grade >\
    \ 2.7 => \"B\".to_string(),\n        grade if grade > 2.3 => \"B-\".to_string(),\n\
    \        grade if grade > 2.0 => \"C+\".to_string(),\n        grade if grade >\
    \ 1.7 => \"C\".to_string(),\n        grade if grade > 1.3 => \"C-\".to_string(),\n\
    \        grade if grade > 1.0 => \"D+\".to_string(),\n        grade if grade >\
    \ 0.7 => \"D\".to_string(),\n        grade if grade > 0.0 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    // grades.iter().map(|&grade|\
    \ grade.to_string()).collect()\n    grades.iter().map(|&grade| if grade == 4.0\
    \ {\n        \"A+\".to_string()\n    } else if grade > 3.7 {\n        \"A\".to_string()\n\
    \    } else if grade > 3.3 {\n        \"A-\".to_string()\n    } else if grade\
    \ > 3.0 {\n        \"B+\".to_string()\n    } else if grade > 2.7 {\n        \"\
    B\".to_string()\n    } else if grade > 2.3 {\n        \"B-\".to_string()\n   \
    \ } else if grade > 2.0 {\n        \"C+\".to_string()\n    } else if grade > 1.7\
    \ {\n        \"C\".to_string()\n    } else if grade > 1.3 {\n        \"C-\".to_string()\n\
    \    } else if grade > 1.0 {\n        \"D+\".to_string()\n    } else if grade\
    \ > 0.7 {\n        \"D\".to_string()\n    } else if grade > 0.0 {\n        \"\
    D-\".to_string()\n    } else {\n        \"E\".to_string()\n    }).collect()",
  "    let mut letter_grades = Vec::new();\n    for mut g in grades {\n        if\
    \ g > 4.0 {\n            g = 4.0;\n        }\n        if g > 3.7 {\n         \
    \   letter_grades.push(\"A+\".to_string());\n        } else if g > 3.3 {\n   \
    \         letter_grades.push(\"A\".to_string());\n        } else if g > 3.0 {\n\
    \            letter_grades.push(\"A-\".to_string());\n        } else if g > 2.7\
    \ {\n            letter_grades.push(\"B+\".to_string());\n        } else if g\
    \ > 2.3 {\n            letter_grades.push(\"B\".to_string());\n        } else\
    \ if g > 2.0 {\n            letter_grades.push(\"B-\".to_string());\n        }\
    \ else if g > 1.7 {\n            letter_grades.push(\"C+\".to_string());\n   \
    \     } else if g > 1.3 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if g > 1.0 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if g > 0.7 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if g > 0.0 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if g > -0.1 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        match *g\
    \ {\n            g if g == 4.0 => \"A+\".to_string(),\n            g if g > 3.7\
    \ => \"A\".to_string(),\n            g if g > 3.3 => \"A-\".to_string(),\n   \
    \         g if g > 3.0 => \"B+\".to_string(),\n            g if g > 2.7 => \"\
    B\".to_string(),\n            g if g > 2.3 => \"B-\".to_string(),\n          \
    \  g if g > 2.0 => \"C+\".to_string(),\n            g if g > 1.7 => \"C\".to_string(),\n\
    \            g if g > 1.3 => \"C-\".to_string(),\n            g if g > 1.0 =>\
    \ \"D+\".to_string(),\n            g if g > 0.7 => \"D\".to_string(),\n      \
    \      g if g > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for\
    \ i in grades {\n        if i >= 4.0 {\n            letter_grades.push(\"A+\"\
    .to_string());\n        } else if i >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if i >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if i >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if i >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if i >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if i >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if i >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if i >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if i >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if i >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if i >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|grade| match *grade\
    \ {\n        g if g == 4.0 => String::from(\"A+\"),\n        g if g > 3.7 => String::from(\"\
    A\"),\n        g if g > 3.3 => String::from(\"A-\"),\n        g if g > 3.0 =>\
    \ String::from(\"B+\"),\n        g if g > 2.7 => String::from(\"B\"),\n      \
    \  g if g > 2.3 => String::from(\"B-\"),\n        g if g > 2.0 => String::from(\"\
    C+\"),\n        g if g > 1.7 => String::from(\"C\"),\n        g if g > 1.3 =>\
    \ String::from(\"C-\"),\n        g if g > 1.0 => String::from(\"D+\"),\n     \
    \   g if g > 0.7 => String::from(\"D\"),\n        g if g > 0.0 => String::from(\"\
    D-\"),\n        _ => String::from(\"E\"),\n    }).collect()"]
stop_tokens:
- "\n}"

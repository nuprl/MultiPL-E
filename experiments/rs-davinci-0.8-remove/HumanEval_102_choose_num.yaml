name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    let mut result = -1;\n    for i in x..y+1 {\n        if (i % 2\
    \ == 0) && i > result {\n            result = i;\n        }\n    }\n    result",
  "\t// write your code here\n\tif x%2==0 {\n\t\treturn x;\n\t} else if y%2==0 {\n\
    \t\treturn y;\n\t}\n\treturn -1;", "    if x > y {\n        return -1;\n    }\n\
    \n    let mut big_even: isize = 0;\n    for i in x..y+1 {\n        if i % 2 ==\
    \ 0 {\n            big_even = i;\n        }\n    }\n\n    if big_even == 0 {\n\
    \        -1\n    } else {\n        big_even\n    }", "    if x % 2 == 0 && y %\
    \ 2 == 0 {\n        if x > y {\n            x\n        } else {\n            y\n\
    \        }\n    } else if x % 2 == 0 && y % 2 != 0 {\n        x\n    } else if\
    \ x % 2 != 0 && y % 2 == 0 {\n        y\n    } else {\n        -1\n    }", " \
    \   let mut i = 0;\n    let mut l = x;\n    while l <= y {\n        if l % 2 ==\
    \ 0 {\n            i = l;\n        }\n        l += 1;\n    }\n    if i != 0 {\n\
    \        i\n    } else {\n        -1\n    }", "    let mut z = x;\n    if x %\
    \ 2 == 1 {\n        z += 1;\n    }\n    if z > y {\n        return -1;\n    }\n\
    \    return z;", "    // TODO: rewrite with a `for` loop\n    if x % 2 == 0 {\n\
    \        for i in x..y+1 {\n            if i % 2 == 0 {\n                return\
    \ i;\n            }\n        }\n    } else {\n        for i in x+1..y+1 {\n  \
    \          if i % 2 == 0 {\n                return i;\n            }\n       \
    \ }\n    }\n    -1", "    if x % 2 == 0 && y % 2 == 0 {\n        return if x >\
    \ y { x } else { y };\n    } else if x % 2 == 0 {\n        return x;\n    } else\
    \ if y % 2 == 0 {\n        return y;\n    } else {\n        return -1;\n    }",
  "    let mut i = x;\n    let mut max = -1;\n    loop {\n        if i > y {\n   \
    \         break;\n        } else if i % 2 == 0 {\n            max = i;\n     \
    \   }\n        i += 1;\n    }\n    max", "    if x > y {\n        return -1;\n\
    \    }\n\n    if x % 2 == 0 {\n        x\n    } else {\n        x + 1\n    }",
  "    if x % 2 == 0 {\n        if x >= y {\n            return x;\n        }\n  \
    \  }\n    if x % 2 != 0 {\n        x = x + 1;\n    }\n    while x < y {\n    \
    \    x = x + 2;\n    }\n    if x == y {\n        return x;\n    }\n    else {\n\
    \        return -1;\n    }", "    // Your code here!\n    unimplemented!();",
  "    if x % 2 == 0 && y % 2 == 0 {\n        if x > y {\n            y\n        }\
    \ else {\n            x\n        }\n    } else if x % 2 == 0 && y % 2 != 0 {\n\
    \        x\n    } else if x % 2 != 0 && y % 2 == 0 {\n        y\n    } else {\n\
    \        -1\n    }", "    if x > y { return -1; }\n    else if x % 2 == 0 { return\
    \ x; }\n    else { return x + 1; }", "    match (x%2, y%2) {\n        (0, 0) =>\
    \ y,\n        (0, _) => if y-1 < x { -1 } else { y-1 },\n        (_, 0) => if\
    \ x+1 > y { -1 } else { x+1 },\n        (_, _) => if x+1 > y { -1 } else { x+1\
    \ },\n    }", "    if x > y {\n        return -1;\n    }\n    let mut max_even\
    \ = x;\n    for i in x..(y + 1) {\n        if i % 2 == 0 && i > max_even {\n \
    \           max_even = i;\n        }\n    }\n    if max_even == x {\n        return\
    \ -1;\n    }\n    max_even", "    let mut i = if x % 2 == 0 {x} else {x + 1};\n\
    \    while i <= y {\n        if i % 2 == 0 {return i}\n        i += 1;\n    }\n\
    \    -1", "    // return x.max(y);\n    // return y.max(x);\n    return x.max(y).min(x.max(y)\
    \ - 1);", "    if x > y {\n        return -1;\n    }\n\n    let mut num = y;\n\
    \    while num >= x {\n        if num % 2 == 0 {\n            return num;\n  \
    \      }\n\n        num -= 1;\n    }\n\n    -1", "    let mut big_even = -1;\n\
    \    for i in x..y+1 {\n        if i % 2 == 0 {\n            big_even = i;\n \
    \       }\n    }\n    big_even", "    let mut max = -1;\n    for i in x..y+1 {\n\
    \        if i % 2 == 0 && i > max {\n            max = i;\n        }\n    }\n\
    \    max", "\tlet mut result = -1;\n\tfor i in x..(y+1) {\n\t\tif i % 2 == 0 {\n\
    \t\t\tresult = i;\n\t\t}\n\t}\n\tresult", "    for i in (x..y+1).rev() {\n   \
    \     if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "   \
    \ let mut res = -1;\n    if x % 2 == 0 {\n        res = x;\n    } else {\n   \
    \     res = x + 1;\n    }\n    if y < res {\n        res = -1;\n    }\n    return\
    \ res;", "\tif x > y {\n\t\treturn -1;\n\t}\n\tfor n in (x..y + 1).rev() {\n\t\
    \tif n % 2 == 0 {\n\t\t\treturn n;\n\t\t}\n\t}\n\treturn -1;", "    // `cond`\
    \ evaluates to the `if` expression.\n    if x % 2 == 0 && y % 2 == 0 {\n     \
    \   if x > y { return x; }\n        else { return y; }\n    } else if x % 2 ==\
    \ 0 {\n        return x;\n    } else if y % 2 == 0 {\n        return y;\n    }\
    \ else {\n        return -1;\n    }", "    let mut current = x;\n    let mut result\
    \ = -1;\n    while current <= y {\n        if current % 2 == 0 {\n           \
    \ result = current;\n        }\n        current += 1;\n    }\n    result", " \
    \   if x > y {\n        return -1;\n    }\n\n    let mut candidate = x;\n    while\
    \ candidate <= y {\n        if candidate % 2 == 0 {\n            return candidate;\n\
    \        }\n        candidate += 1;\n    }\n\n    -1", "    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        for i in x..y + 1 {\n            if i % 2 == 0 {\n     \
    \           return i;\n            }\n        }\n    } else if x % 2 == 1 && y\
    \ % 2 == 1 {\n        for i in x + 1..y + 1 {\n            if i % 2 == 0 {\n \
    \               return i;\n            }\n        }\n    } else {\n        for\
    \ i in x..y + 1 {\n            if i % 2 == 0 {\n                return i;\n  \
    \          }\n        }\n    }\n    -1", "    if x > y {\n        return -1;\n\
    \    }\n\n    let mut greatest_even = -1;\n    for i in x..y+1 {\n        if i\
    \ % 2 == 0 {\n            greatest_even = i;\n        }\n    }\n\n    return greatest_even;",
  "    if x % 2 == 0 {\n        return x;\n    } else if x + 1 == y {\n        return\
    \ -1;\n    }\n    choose_num(x + 1, y)", "    if x > y {\n        return -1;\n\
    \    }\n    for i in (x..y+1).rev() {\n        if i % 2 == 0 {\n            return\
    \ i;\n        }\n    }\n    -1", "    let mut max_num = -1;\n    for n in x..y\
    \ + 1 {\n        if n % 2 == 0 && n > max_num {\n            max_num = n;\n  \
    \      }\n    }\n    max_num", "    let mut result = -1;\n    let mut count =\
    \ 0;\n    while x <= y {\n        if x % 2 == 0 {\n            result = x;\n \
    \           count += 1;\n        }\n        x += 1;\n    }\n    if count == 0\
    \ {\n        result = -1;\n    }\n    result", "    if x % 2 == 0 {\n        x\n\
    \    } else if x + 1 == y {\n        -1\n    } else {\n        x + 2\n    }",
  "    if y <= x {\n        -1\n    } else {\n        (y - (y%2) - x) as isize\n \
    \   }", "    match x {\n        x if x == y && x % 2 == 0 => x,\n        x if\
    \ x < y && x % 2 == 0 => choose_num(x + 2, y),\n        x if x < y && x % 2 !=\
    \ 0 => choose_num(x + 1, y),\n        _ => -1\n    }", "    let mut n = y - x;\n\
    \    n = n % 2;\n    n = n + x;\n    n", '    unimplemented!()', "    // Is x\
    \ even? If not, increment x by 1.\n    let mut z = if x % 2 == 0 { x } else {\
    \ x + 1 };\n    // Now z is always even. Loop until z is no longer in the range,\
    \ or it is.\n    while z <= y {\n        if z % 2 == 0 {\n            // z is\
    \ even. Return it.\n            return z;\n        }\n        // z is odd, decrement\
    \ it by 1.\n        z -= 1;\n    }\n    // No even number in range. Return -1.\n\
    \    -1", "    let mut num = 0;\n    for i in x..y+1 {\n        if i % 2 == 0\
    \ {\n            num = i;\n        }\n    }\n    num", "    if x > y {\n     \
    \   return -1;\n    }\n    let big = if x % 2 == 0 { x } else { x + 1 };\n   \
    \ for num in (big..y+1).step_by(2) {\n        return num;\n    }\n    -1", " \
    \   let mut maximum: isize = -1;\n    for i in x..y+1 {\n        if i % 2 == 0\
    \ && i > maximum {\n            maximum = i;\n        }\n    }\n    maximum",
  "    if x > y {\n        -1\n    } else {\n        let mut result = -1;\n      \
    \  for i in x..(y + 1) {\n            if i % 2 == 0 {\n                result\
    \ = i;\n            }\n        }\n        result\n    }", "    if x <= y {\n \
    \       for num in (x..=y).rev() {\n            if num % 2 == 0 {\n          \
    \      return num;\n            }\n        }\n    }\n    -1", "\tif x%2 == 0 {\n\
    \t\treturn x;\n\t}\n\tif x%2 == 1 {\n\t\treturn x+1;\n\t}\n\treturn -1;", "  \
    \  let mut answer = 0;\n    let mut found_answer = false;\n    let mut even_num\
    \ = x;\n    while even_num <= y {\n        if even_num % 2 == 0 {\n          \
    \  answer = even_num;\n            found_answer = true;\n        }\n        even_num\
    \ += 1;\n    }\n    if found_answer {\n        answer\n    } else {\n        -1\n\
    \    }", "    let mut result = x;\n    let mut odd = 0;\n    let mut even = 0;\n\
    \    while result <= y {\n        if result % 2 == 0 {\n            even = result;\n\
    \        } else {\n            odd = result;\n        }\n        result += 1;\n\
    \    }\n    if even > odd {\n        return even;\n    } else {\n        return\
    \ -1;\n    }", "    if x > y {\n        return -1;\n    }\n\n    let mut num =\
    \ x;\n    while num <= y {\n        if num % 2 == 0 {\n            return num;\n\
    \        }\n        num += 1;\n    }\n\n    -1", "    if x % 2 == 0 {\n      \
    \  x\n    } else if x + 1 <= y {\n        x + 1\n    } else {\n        -1\n  \
    \  }", "    let mut n = 0;\n    if x <= y {\n        n = x;\n        while n <=\
    \ y {\n            if n % 2 == 0 {\n                return n;\n            }\n\
    \            n += 1;\n        }\n    }\n    return -1;", "    let mut max_even\
    \ = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n            max_even\
    \ = i;\n        }\n    }\n    max_even", "    for i in (x..y+1).rev() {\n    \
    \    if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    if\
    \ x > y {\n        return -1;\n    }\n    let mut i = x;\n    while i <= y {\n\
    \        if i % 2 == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    -1", "    if x % 2 == 0 && y % 2 == 0 {\n        if x > y {\n    \
    \        y\n        } else {\n            x\n        }\n    } else if x % 2 ==\
    \ 0 && y % 2 != 0 {\n        if x > y - 1 {\n            y - 1\n        } else\
    \ {\n            x\n        }\n    } else if x % 2 != 0 && y % 2 == 0 {\n    \
    \    if x + 1 > y {\n            y\n        } else {\n            x + 1\n    \
    \    }\n    } else {\n        if x + 1 > y - 1 {\n            y - 1\n        }\
    \ else {\n            x + 1\n        }\n    }", "    if y < x {\n        return\
    \ -1;\n    }\n    let mut big = -1;\n    for num in x..(y + 1) {\n        if num\
    \ % 2 == 0 {\n            big = num;\n        }\n    }\n    big", "    let mut\
    \ num = y;\n    while num >= x {\n        if num % 2 == 0 {\n            return\
    \ num;\n        }\n        num -= 1;\n    }\n    -1", "    if x > y {\n      \
    \  return -1;\n    }\n    let mut num: isize = x;\n    while num <= y {\n    \
    \    if num % 2 == 0 {\n            return num;\n        }\n        num += 1;\n\
    \    }\n    return -1;", "    if x > y {\n        return -1;\n    }\n    let mut\
    \ z = y;\n    while z > x {\n        if z % 2 == 0 {\n            return z;\n\
    \        }\n        z -= 1;\n    }\n    -1", "    if x > y { return -1; }\n  \
    \  for i in (x..(y+1)).rev() {\n        if i % 2 == 0 { return i; }\n    }\n \
    \   -1", "    let a = x;\n    let b = y;\n    let num: isize = -1;\n    if a >\
    \ b {\n        return num;\n    } else {\n        if a % 2 == 0 {\n          \
    \  return a;\n        } else {\n            return a + 1;\n        }\n    }",
  "    let mut max_even = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n  \
    \          max_even = i;\n        }\n    }\n    max_even", "    // return -1;\n\
    \    (x..=y).rev().filter(|&i| i % 2 == 0).next().unwrap_or(-1)", "    if x %\
    \ 2 == 0 {\n        x\n    } else if x + 1 <= y {\n        x + 1\n    } else {\n\
    \        -1\n    }", "    if x > y {\n        return -1;\n    }\n    if x % 2\
    \ == 0 {\n        return x;\n    } else {\n        return x + 1;\n    }", "  \
    \  let mut even_num = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n  \
    \          even_num = i;\n        }\n    }\n    even_num", "    if x > y {\n \
    \       return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n   \
    \ let num = x + 1;\n    if num % 2 == 0 {\n        return num;\n    }\n    let\
    \ num = x + 2;\n    if num % 2 == 0 {\n        return num;\n    }\n    -1", " \
    \   // your code goes here\n    let mut res = -1;\n    for i in x..y+1 {\n   \
    \     if i % 2 == 0 {\n            res = i;\n        }\n    }\n    res", "   \
    \ if x > y { return -1; }\n    if x % 2 == 0 {\n        let res = x as f64;\n\
    \        (res + (y - x) as f64 / 2.0).floor() as isize\n    } else {\n       \
    \ let res = x + 1;\n        if res > y { return -1; }\n        (res as f64 + (y\
    \ - res) as f64 / 2.0).floor() as isize\n    }", "    // TODO\n    return 0;",
  "    // TODO\n    0", "    if x == y {\n        if x % 2 == 0 {\n            return\
    \ x;\n        } else {\n            return -1;\n        }\n    }\n    let mut\
    \ max = 0;\n    let mut result = -1;\n    if x > y {\n        max = x;\n    }\
    \ else {\n        max = y;\n    }\n    for n in 1..max {\n        if n % 2 ==\
    \ 0 {\n            result = n;\n        }\n    }\n    result", "    let mut num:\
    \ isize = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n            num\
    \ = i;\n        }\n    }\n    num", "\tif x < 0 || y < 0 {\n\t\treturn -1;\n\t\
    }\n\n\tlet mut largest_even = -1;\n\tfor num in x..y + 1 {\n\t\tif num % 2 ==\
    \ 0 {\n\t\t\tlargest_even = num;\n\t\t}\n\t}\n\n\tlargest_even", "    let mut\
    \ biggest = -1;\n    for num in x..y+1 {\n        if num % 2 == 0 && num > biggest\
    \ {\n            biggest = num;\n        }\n    }\n    biggest", "    if x > y\
    \ {\n        -1\n    } else {\n        if y % 2 == 0 {\n            y\n      \
    \  } else {\n            y - 1\n        }\n    }", "    if x % 2 == 0 {\n    \
    \    if x > y {\n            return -1;\n        } else {\n            return\
    \ x;\n        }\n    } else {\n        if x + 1 > y {\n            return -1;\n\
    \        } else {\n            return x + 1;\n        }\n    }", "    if x > y\
    \ {\n        return -1;\n    }\n\n    let mut result = y;\n    while result %\
    \ 2 != 0 {\n        result -= 1;\n    }\n\n    if result < x {\n        return\
    \ -1;\n    }\n\n    result", "    let mut greater = isize::max(x, y);\n    loop\
    \ {\n        if greater % 2 == 0 {\n            return greater;\n        } else\
    \ {\n            greater -= 1;\n        }\n        if greater < x {\n        \
    \    return -1;\n        }\n    }", "    if x % 2 == 0 {\n        for n in (x..y+1).rev()\
    \ {\n            if n % 2 == 0 {\n                return n;\n            }\n \
    \       }\n    } else {\n        for n in (x..y+1).rev() {\n            if n %\
    \ 2 == 0 {\n                return n;\n            }\n        }\n    }\n    -1",
  "    let mut result = -1;\n    let mut num = x;\n    while num <= y {\n        if\
    \ num % 2 == 0 {\n            result = num;\n        }\n        num += 1;\n  \
    \  }\n    result", "    if x < y {\n        for i in (x..y + 1).rev() {\n    \
    \        if i % 2 == 0 {\n                return i;\n            }\n        }\n\
    \    }\n    -1", "    let mut max = -1;\n    for num in x..(y + 1) {\n       \
    \ if num % 2 == 0 && num > max {\n            max = num;\n        }\n    }\n \
    \   max", "    let mut res = -1;\n    for num in x..y + 1 {\n        if num %\
    \ 2 == 0 {\n            res = num;\n        }\n    }\n    res", "    // Code here\n\
    \    if x <= y {\n        if x % 2 == 0 {\n            x\n        } else {\n \
    \           if x + 1 == y {\n                -1\n            } else {\n      \
    \          choose_num(x + 1, y)\n            }\n        }\n    } else {\n    \
    \    -1\n    }", "    // your code here!\n    unimplemented!();", "    let mut\
    \ z = (x + y) / 2;\n    loop {\n        if z % 2 == 0 && x <= z && z <= y {\n\
    \            return z;\n        } else if z < y {\n            z += 1;\n     \
    \   } else {\n            return -1;\n        }\n    }", "    let mut i = x;\n\
    \    while i <= y {\n        if i % 2 == 0 {\n            return i;\n        }\n\
    \        i += 1;\n    }\n    -1", "    if x > y {\n        return -1;\n    }\n\
    \n    if x % 2 == 0 {\n        return if x > y - 1 { x } else { y - 1 };\n   \
    \ } else {\n        return if x + 1 > y - 1 { x + 1 } else { y - 1 };\n    }",
  "    let mut largest = x;\n    for i in x..(y+1) {\n        if i % 2 == 0 && i >\
    \ largest {\n            largest = i;\n        }\n    }\n    if largest == x {\n\
    \        return -1;\n    }\n    return largest;", "    let mut max_even: isize\
    \ = -1;\n    for n in x..y+1 {\n        if n % 2 == 0 {\n            max_even\
    \ = n;\n        }\n    }\n    max_even", "    if x > y {\n        return -1;\n\
    \    }\n\n    let mut max = x;\n    let mut n = x;\n    while n <= y {\n     \
    \   if n % 2 == 0 && n > max {\n            max = n;\n        }\n        n +=\
    \ 1;\n    }\n\n    if max == x {\n        return -1;\n    }\n\n    max", "   \
    \ if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    } else {\n        return x + 1;\n    }", "    let mut ans = -1;\n    for\
    \ i in x..(y+1) {\n        if i % 2 == 0 {\n            ans = i;\n        }\n\
    \    }\n    ans", "    if x % 2 == 0 && y % 2 == 0 {\n        return y;\n    }\n\
    \    else if x % 2 == 0 && y % 2 != 0 {\n        return y - 1;\n    }\n    else\
    \ if x % 2 != 0 && y % 2 == 0 {\n        return x;\n    }\n    else {\n      \
    \  return x - 1;\n    }", "    if x > y {\n        return -1;\n    }\n    if y\
    \ % 2 == 0 {\n        return y;\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    }\n    if x % 2 != 0 && y % 2 != 0 {\n        return -1;\n    }\n    unreachable!();",
  "    let mut max = -1;\n    for num in x..y+1 {\n        if num % 2 == 0 && num\
    \ > max {\n            max = num;\n        }\n    }\n    max", "    if x > y {\n\
    \        -1\n    } else {\n        let mut num = y;\n        while num >= x {\n\
    \            if num % 2 == 0 {\n                return num;\n            }\n \
    \           num -= 1;\n        }\n        -1\n    }", "    if y % 2 == 0 {\n \
    \       y\n    } else if x % 2 == 0 {\n        x\n    } else {\n        -1\n \
    \   }", "    if x < 0 || y < 0 {\n        return -1;\n    }\n\n    for n in (x..=y).rev()\
    \ {\n        if n % 2 == 0 {\n            return n;\n        }\n    }\n\n    -1",
  "    if y < x {\n        return -1;\n    }\n\n    let mut x = x;\n    if x % 2 !=\
    \ 0 {\n        x += 1;\n    }\n\n    for num in (x..y+1).rev() {\n        if num\
    \ % 2 == 0 {\n            return num;\n        }\n    }\n\n    -1", "    let mut\
    \ max = 0;\n    if x > y {\n        return -1;\n    }\n    for num in x..(y+1)\
    \ {\n        if num % 2 == 0 {\n            if num > max {\n                max\
    \ = num;\n            }\n        }\n    }\n    if max == 0 {\n        return -1;\n\
    \    }\n    return max;", "    for num in (x..y+1).rev() {\n        if num % 2\
    \ == 0 {\n            return num;\n        }\n    }\n    -1", "\tfor i in x..y+1\
    \ {\n\t\tif i % 2 == 0 {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;", "    let\
    \ mut result = -1;\n    for n in x..(y + 1) {\n        if n % 2 == 0 {\n     \
    \       result = n;\n        }\n    }\n    result", "    if x > y {\n        -1\n\
    \    } else {\n        if x % 2 == 0 {\n            x\n        } else {\n    \
    \        x + 1\n        }\n    }", "    // TODO: fill this function\n    return\
    \ -1;", "    if x == y {\n        if x % 2 == 0 {\n            return x;\n   \
    \     } else {\n            return -1;\n        }\n    }\n    if x > y {\n   \
    \     return choose_num(y, x);\n    }\n    if x % 2 == 0 {\n        return x;\n\
    \    } else {\n        return choose_num(x + 1, y);\n    }", "    let mut largest_even\
    \ = -1;\n    for num in x..(y + 1) {\n        if num % 2 == 0 {\n            largest_even\
    \ = num;\n        }\n    }\n    largest_even", "    for i in (x..y+1).rev() {\n\
    \        if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", " \
    \   let mut ret = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n      \
    \      ret = i;\n        }\n    }\n    ret", "    for i in x..y+1 {\n        if\
    \ i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    if x >\
    \ y {\n        -1\n    } else {\n        for z in (x..y + 1).rev() {\n       \
    \     if z % 2 == 0 {\n                return z;\n            }\n        }\n \
    \       -1\n    }", "\tlet mut z = if x%2==0 {x} else {x+1};\n\tlet mut c = 0;\n\
    \twhile z <= y {\n\t\tif z%2==0 {\n\t\t\tc = z;\n\t\t}\n\t\tz += 1;\n\t}\n\tif\
    \ c != 0 {c} else {-1}", "    let mut n: isize = x;\n    if n % 2 == 1 {\n   \
    \     n += 1;\n    }\n    for _ in n..y + 1 {\n        if n % 2 == 0 {\n     \
    \       return n;\n        }\n        n += 1;\n    }\n    -1", "    // TODO: complete\
    \ this function\n    return -1;", "\tif x <= y {\n\t\tif x % 2 == 0 {\n\t\t\t\
    x\n\t\t} else {\n\t\t\tx + 1\n\t\t}\n\t} else {\n\t\t-1\n\t}", "    let mut result\
    \ = -1;\n    for i in x..(y + 1) {\n        if i % 2 == 0 {\n            result\
    \ = i;\n        }\n    }\n    result", "    let mut biggest_even = -1;\n    for\
    \ i in x..(y + 1) {\n        if i % 2 == 0 {\n            biggest_even = i;\n\
    \        }\n    }\n    biggest_even", "    for i in (x..y + 1).rev() {\n     \
    \   if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    let\
    \ mut result = -1;\n    let x_range = if x % 2 == 0 { (x..) } else { (x + 1..)\
    \ };\n    for i in x_range {\n        if i <= y {\n            result = i;\n \
    \       } else {\n            break;\n        }\n    }\n    result", "    if x\
    \ <= y {\n        let mut ans = 0;\n        for i in x..y+1 {\n            if\
    \ i % 2 == 0 {\n                ans = i;\n            }\n        }\n        ans\n\
    \    } else {\n        -1\n    }", "    for i in (x..=y).rev() {\n        if i\
    \ % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    if y < x\
    \ {\n        return -1;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\
    \ else {\n        return y - 1;\n    }", "    let mut a: isize = if x % 2 == 0\
    \ { x } else { x + 1 };\n    let mut b: isize = if y % 2 == 0 { y } else { y -\
    \ 1 };\n    if a > b {\n        -1\n    } else {\n        while a <= b {\n   \
    \         if a % 2 == 0 {\n                return a;\n            }\n        \
    \    a += 1;\n        }\n        -1\n    }", "    if x % 2 == 0 {\n        x\n\
    \    } else if x + 1 > y {\n        -1\n    } else {\n        x + 1\n    }", " \
    \   let mut number = if x % 2 == 0 { x } else { x + 1 };\n    let mut ans = -1;\n\
    \    while number <= y {\n        ans = number;\n        number += 2;\n    }\n\
    \    ans", "\tif x >= y {\n\t\tprintln!(\"x must be less than y.\");\n\t\treturn\
    \ -1;\n\t}\n\tfor i in (x..y+1).rev() {\n\t\tif i % 2 == 0 {\n\t\t\treturn i;\n\
    \t\t}\n\t}\n\t-1", "    let mut num = x;\n    while num <= y {\n        if num\
    \ % 2 == 0 {\n            return num;\n        }\n        num += 1;\n    }\n \
    \   -1", "    if x > y {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n \
    \       return x;\n    }\n\n    if y % 2 == 0 {\n        return y;\n    }\n\n\
    \    choose_num(x + 1, y - 1)", "    for n in (x..y+1).rev() {\n        if n %\
    \ 2 == 0 {\n            return n;\n        }\n    }\n    -1", "    let mut result\
    \ = -1;\n    let mut num = (x + y) / 2;\n    while num >= x {\n        if num\
    \ % 2 == 0 {\n            result = num;\n            break;\n        }\n     \
    \   num -= 1;\n    }\n    result", "    if x % 2 == 0 {\n        x\n    } else\
    \ if x + 1 < y {\n        x + 1\n    } else {\n        -1\n    }", '    unimplemented!();',
  "    if x % 2 == 0 {\n        if x > y {\n            -1\n        } else {\n   \
    \         x\n        }\n    } else {\n        choose_num(x + 1, y)\n    }", " \
    \   let mut start: isize = y;\n    if x > y {\n        start = x;\n    }\n   \
    \ if x == y {\n        if x%2 == 0 {\n            return x;\n        } else {\n\
    \            return -1;\n        }\n    }\n    while start%2 != 0 {\n        start\
    \ -= 1;\n    }\n    if start < x {\n        return -1;\n    }\n    return start;",
  "    for i in (x..y+1).rev() {\n        if i % 2 == 0 {\n            return i;\n\
    \        }\n    }\n    -1", "    if x % 2 == 0 {\n        x\n    } else if x +\
    \ 1 <= y {\n        x + 1\n    } else {\n        -1\n    }", '    (x..y+1).filter(|x|
    x % 2 == 0).max().unwrap_or(-1)', "    if x % 2 == 0 {\n        x\n    } else\
    \ if y % 2 == 0 {\n        y\n    } else {\n        -1\n    }", "    let mut result\
    \ = -1;\n    for num in x..y + 1 {\n        if num % 2 == 0 {\n            result\
    \ = num;\n        }\n    }\n    result", "\tlet mut min = x;\n\tlet mut max =\
    \ y;\n\tif x > y {\n\t\tmin = y;\n\t\tmax = x;\n\t}\n\t\n\tif min % 2 == 1 {\n\
    \t\tmin += 1;\n\t}\n\t\n\tif min % 2 == 1 || min > max {\n\t\treturn -1;\n\t}\n\
    \t\n\tfor i in (min..max+1).rev() {\n\t\tif i % 2 == 0 {\n\t\t\treturn i;\n\t\t\
    }\n\t}\n\t\n\treturn -1;", "    if x <= y {\n        for num in (x..y + 1).rev()\
    \ {\n            if num % 2 == 0 {\n                return num;\n            }\n\
    \        }\n    }\n    -1", "\tlet mut result = -1;\n\tfor i in x..(y+1) {\n\t\
    \tif i % 2 == 0 {\n\t\t\tresult = i;\n\t\t}\n\t}\n\tresult", "    if x % 2 ==\
    \ 0 {\n        if x >= y {\n            return x;\n        } else {\n        \
    \    return choose_num(x + 2, y);\n        }\n    } else {\n        if x + 1 ==\
    \ y {\n            return -1;\n        } else {\n            return choose_num(x\
    \ + 1, y);\n        }\n    }", "    if x%2 != 0 { x += 1 };\n    for i in (x..y+1).rev()\
    \ {\n        if i%2 == 0 { return i };\n    }\n    -1", "    if x > y {\n    \
    \    -1\n    } else {\n        let mut i = x;\n        let mut rem = i % 2;\n\
    \        while rem != 0 && i < y {\n            i += 1;\n            rem = i %\
    \ 2;\n        }\n        if i > y {\n            -1\n        } else {\n      \
    \      i\n        }\n    }", "    if x > y {\n        return -1;\n    }\n\n  \
    \  if x % 2 == 0 {\n        return x;\n    }\n\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n\n    if x + 1 == y {\n        return -1;\n    }\n\n    return (x\
    \ + y) / 2;", "    if x < 0 || y < 0 {\n        return -1;\n    }\n    let mut\
    \ max = x;\n    for i in x..y + 1 {\n        if (i % 2 == 0) && (i > max) {\n\
    \            max = i;\n        }\n    }\n    if max == x {\n        return -1;\n\
    \    }\n    return max;", "    if x % 2 == 0 {\n        if x <= y {\n        \
    \    x\n        } else {\n            -1\n        }\n    } else {\n        if\
    \ (x + 1) <= y {\n            x + 1\n        } else {\n            -1\n      \
    \  }\n    }", "\tif x > y {\n\t\treturn -1;\n\t}\n\n\tif x % 2 == 0 {\n\t\treturn\
    \ x;\n\t}\n\n\tchoose_num(x + 1, y)", "    if x % 2 == 0 {\n        return x;\n\
    \    }\n    let max = if x < y { y } else { x };\n    for i in x..max {\n    \
    \    if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    if\
    \ x == y {\n        return -1;\n    }\n    let mut result = 0;\n    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            result = i;\n        }\n    }\n    result",
  "    if x < 0 || y < 0 {\n        return -1;\n    }\n    let mut biggest_even =\
    \ x - (x % 2);\n    for n in x..(y + 1) {\n        if n % 2 == 0 && n > biggest_even\
    \ {\n            biggest_even = n;\n        }\n    }\n    if biggest_even > y\
    \ {\n        return -1;\n    }\n    return biggest_even;", "    for num in (x..=y).rev()\
    \ {\n        if num % 2 == 0 {\n            return num;\n        }\n    }\n  \
    \  -1", "    // Write your code here\n    for n in (x..y+1).rev() {\n        if\
    \ n % 2 == 0 {\n            return n;\n        }\n    }\n    -1", "    let mut\
    \ result = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n            result\
    \ = i;\n        }\n    }\n    result", "    let mut n = y;\n    if y%2 == 1 {\n\
    \        n -= 1;\n    }\n    if n < x {\n        return -1;\n    }\n    while\
    \ n >= x {\n        if n%2 == 0 {\n            return n;\n        }\n        n\
    \ -= 1;\n    }\n    -1", '    unimplemented!()', '    -1', "    if x == y {\n\
    \        if x % 2 == 0 {\n            return x;\n        } else {\n          \
    \  return -1;\n        }\n    }\n    let (l, h) = if x < y { (x, y) } else { (y,\
    \ x) };\n    for i in (l..=h).rev() {\n        if i % 2 == 0 {\n            return\
    \ i;\n        }\n    }\n    -1", "    if x % 2 == 0 && y % 2 == 0 {\n        for\
    \ i in (x..y+1).rev() {\n            if i % 2 == 0 {\n                return i;\n\
    \            }\n        }\n    } else if x % 2 == 1 && y % 2 == 1 {\n        for\
    \ i in (x..y+1).rev() {\n            if i % 2 == 0 {\n                return i;\n\
    \            }\n        }\n    } else {\n        for i in (x..y+1).rev() {\n \
    \           if i % 2 == 0 {\n                return i;\n            }\n      \
    \  }\n    }\n    -1", "    // start with max\n    let mut max = x;\n    if y >\
    \ x {\n        max = y;\n    }\n    // if even\n    if max % 2 == 0 {\n      \
    \  max\n    } else {\n        // check for previous even\n        let mut min\
    \ = x;\n        if y < x {\n            min = y;\n        }\n        let mut prev\
    \ = max - 1;\n        // if even return it\n        if prev % 2 == 0 {\n     \
    \       prev\n        } else {\n            // if not go through remainder looking\
    \ for it\n            while prev >= min {\n                if prev % 2 == 0 {\n\
    \                    return prev;\n                }\n                prev -=\
    \ 1;\n            }\n            // if no even return -1\n            -1\n   \
    \     }\n    }", "    // // For example:\n    // assert_eq!(choose_num(1, 2),\
    \ 2);\n    // assert_eq!(choose_num(10, 15), 14);\n    // assert_eq!(choose_num(5,\
    \ 10), 8);\n    // assert_eq!(choose_num(10, 5), -1);\n    let mut number: isize\
    \ = y;\n    while number >= x {\n        if number % 2 == 0 {\n            return\
    \ number;\n        }\n        number -= 1;\n    }\n    -1", "    if x > y {\n\
    \        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n  \
    \  return x + 1;", "    let mut cur = x;\n    let mut res = -1;\n    loop {\n\
    \        if cur > y { break }\n        if cur % 2 == 0 { res = cur }\n       \
    \ cur += 1;\n    }\n    res", "    for num in (x..=y).rev() {\n        if num\
    \ % 2 == 0 {\n            return num;\n        }\n    }\n    -1", "    assert!(x\
    \ > 0 && y > 0);\n    let is_even = |n| n % 2 == 0;\n    let z = std::cmp::max(x,\
    \ y);\n    let mut i = z;\n    while i >= x {\n        if is_even(i) {\n     \
    \       return i;\n        }\n        i -= 1;\n    }\n    -1", "    // Code here\n\
    \    if x % 2 == 0 {\n        if x >= y {\n            return x;\n        }\n\
    \        else {\n            return choose_num(x + 2, y);\n        }\n    }\n\
    \    else {\n        if x + 1 >= y {\n            return -1;\n        }\n    \
    \    else {\n            return choose_num(x + 1, y);\n        }\n    }", "  \
    \  let mut largest_even = -1;\n    let mut i = x;\n    while i <= y {\n      \
    \  if i % 2 == 0 {\n            largest_even = i;\n        }\n        i += 1;\n\
    \    }\n    largest_even", "    let mut res = -1;\n    for num in x..y+1 {\n \
    \       if num % 2 == 0 {\n            res = num;\n        }\n    }\n    res",
  "    let mut max_even: isize = 0;\n    for num in x..y + 1 {\n        if num % 2\
    \ == 0 {\n            max_even = num;\n        }\n    }\n    if max_even == 0\
    \ {\n        return -1;\n    }\n    return max_even;", "    let mut result = -1;\n\
    \    for n in x..(y + 1) {\n        if n % 2 == 0 {\n            result = n;\n\
    \        }\n    }\n    result", "    for i in (x..=y).rev() {\n        if i %\
    \ 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    // YOUR CODE\
    \ HERE\n    if x % 2 == 0 {\n        if x <= y {\n            return x;\n    \
    \    }\n    } else {\n        if x+1 <= y {\n            return x+1;\n       \
    \ }\n    }\n    -1", "    for i in (x..=y).rev() {\n        if i % 2 == 0 {\n\
    \            return i;\n        }\n    }\n    -1", "    let mut max = -1;\n  \
    \  for n in x..(y+1) {\n        if n % 2 == 0 && n > max {\n            max =\
    \ n;\n        }\n    }\n    max", "    let mut a = x;\n    while a <= y {\n  \
    \      if a % 2 == 0 {\n            return a;\n        }\n        a = a + 1;\n\
    \    }\n    return -1;", "    // let mut i = 0;\n    // while i >= x && i <= y\
    \ {\n    //     if i % 2 == 0 {\n    //         return i;\n    //     }\n    //\
    \     i += 1;\n    // }\n    // -1\n    for i in x..y+1 {\n        if i % 2 ==\
    \ 0 {\n            return i;\n        }\n    }\n    -1", "    let mut x = x;\n\
    \    let mut y = y;\n    if x % 2 == 1 {\n        x += 1;\n    }\n    if y % 2\
    \ == 1 {\n        y -= 1;\n    }\n    if x > y {\n        return -1;\n    }\n\
    \    for i in (x..=y).rev() {\n        if i % 2 == 0 {\n            return i;\n\
    \        }\n    }\n    return -1;", '    unimplemented!();', "    if x%2 != 0\
    \ || y%2 != 0 {\n        if x%2 == 0 {\n            x\n        } else if y%2 ==\
    \ 0 {\n            y\n        } else {\n            -1\n        }\n    } else\
    \ {\n        y\n    }", "    if x % 2 == 0 {\n        let mut res = 0;\n     \
    \   for i in x..=y {\n            if i % 2 == 0 {\n                res = i;\n\
    \            }\n        }\n        return res;\n    } else {\n        let mut\
    \ res = 0;\n        for i in (x + 1)..=y {\n            if i % 2 == 0 {\n    \
    \            res = i;\n            }\n        }\n        return res;\n    }",
  "    let mut max_even = 0;\n    for num in x..y + 1 {\n        if num % 2 == 0 {\n\
    \            max_even = num;\n        }\n    }\n    if max_even == 0 {\n     \
    \   -1\n    } else {\n        max_even\n    }", "    //\n    // YOUR CODE HERE\n\
    \    //\n    let mut m: isize = 0;\n    for i in x..(y+1) {\n        if i%2 ==\
    \ 0 {\n            m = i;\n        }\n    }\n    if m == 0 {\n        -1\n   \
    \ } else {\n        m\n    }", "    let mut result = -1;\n    for num in x..y+1\
    \ {\n        if num % 2 == 0 {\n            result = num;\n        }\n    }\n\
    \    result", "    if x > y {\n        -1\n    } else {\n        let mut x = x;\n\
    \        while x <= y {\n            if x % 2 == 0 {\n                return x;\n\
    \            }\n            x += 1;\n        }\n        -1\n    }", "    if x\
    \ % 2 == 0 {\n        if x <= y {\n            return x;\n        }\n    }\n \
    \   if y % 2 == 0 {\n        if y >= x {\n            return y;\n        }\n \
    \   }\n    if x == y {\n        if x % 2 == 0 {\n            return x;\n     \
    \   }\n    }\n    if y < x {\n        if x % 2 == 0 {\n            return x;\n\
    \        }\n    }\n    return -1;", "    if x == y && x % 2 == 0 {\n        return\
    \ x;\n    } else if x > y {\n        return -1;\n    }\n    let mut i = x;\n \
    \   while i <= y {\n        if i % 2 == 0 {\n            return i;\n        }\n\
    \        i += 1;\n    }\n    -1", "    if x > y {\n        return -1;\n    }\n\
    \n    let mut result = 0;\n    for num in x..(y + 1) {\n        if num % 2 ==\
    \ 0 {\n            result = num;\n        }\n    }\n\n    if result != 0 {\n \
    \       return result;\n    }\n\n    return -1;", "    let mut max_even = -1;\n\
    \    for number in x..y+1 {\n        if number % 2 == 0 {\n            max_even\
    \ = number;\n        }\n    }\n    max_even", "    if y < x {\n        return\
    \ -1;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    return choose_num(x,\
    \ y - 1);", "    if x <= y {\n        for i in (x..y+1).rev() {\n            if\
    \ i % 2 == 0 {\n                return i;\n            }\n        }\n    }\n \
    \   -1", "    return match (x, y) {\n        (x, y) if x % 2 == 0 => x,\n    \
    \    (x, y) if x == y && x % 2 != 0 => -1,\n        (x, y) if x % 2 != 0 => choose_num(x\
    \ + 1, y),\n        (_, _) => -1,\n    };", "    if x % 2 == 0 {\n        x\n\
    \    } else if x + 1 > y {\n        -1\n    } else {\n        x + 1\n    }", " \
    \   for i in (x..=y).rev() {\n        if i % 2 == 0 {\n            return i;\n\
    \        }\n    }\n    -1", "    if x > y {\n        return -1;\n    }\n\n   \
    \ if x % 2 == 0 {\n        return x;\n    } else {\n        return x + 1;\n  \
    \  }", "    if x % 2 == 0 {\n        if x < y {\n            choose_num(x + 2,\
    \ y)\n        } else {\n            x\n        }\n    } else {\n        choose_num(x\
    \ + 1, y)\n    }", "    if x > y {\n        return -1;\n    }\n\n    for i in\
    \ (x..=y).rev() {\n        if i % 2 == 0 {\n            return i;\n        }\n\
    \    }\n\n    -1", "    let mut result = x;\n    let mut r: isize = 0;\n    while\
    \ result <= y {\n        if result % 2 == 0 {\n            r = result;\n     \
    \   }\n        result += 1;\n    }\n    if r == 0 {\n        -1\n    } else {\n\
    \        r\n    }"]
stop_tokens:
- "\n}"

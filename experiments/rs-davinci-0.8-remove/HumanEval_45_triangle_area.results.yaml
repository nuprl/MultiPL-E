language: rs
name: HumanEval_45_triangle_area
results:
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return 0.5 * a as f64 * h as f64;\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    f64::from(a) * f64::from(h) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmptm8hnjx7.rs:3:5\n    |\n3   |     f64::from(a) * f64::from(h) / 2.0\n\
    \    |     ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n  \
    \  |\n    = help: the following implementations were found:\n              <f64\
    \ as From<f32>>\n              <f64 as From<i16>>\n              <f64 as From<i32>>\n\
    \              <f64 as From<i8>>\n            and 3 others\nnote: required by\
    \ `from`\n\nerror[E0277]: the trait bound `f64: From<isize>` is not satisfied\n\
    \   --> /tmp/tmptm8hnjx7.rs:3:20\n    |\n3   |     f64::from(a) * f64::from(h)\
    \ / 2.0\n    |                    ^^^^^^^^^ the trait `From<isize>` is not implemented\
    \ for `f64`\n    |\n    = help: the following implementations were found:\n  \
    \            <f64 as From<f32>>\n              <f64 as From<i16>>\n          \
    \    <f64 as From<i32>>\n              <f64 as From<i8>>\n            and 3 others\n\
    note: required by `from`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let f64_a = a as f64;\n    let f64_h = h as f64;\n\
    \    0.5 * f64_a * f64_h\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // Note that we use explicit casting here.\n\
    \    // That is, we are telling the compiler\n    // how to interpret each numeric\
    \ literal.\n    // Also note that f64 is a double-precision float.\n    // See\
    \ https://doc.rust-lang.org/std/primitive.f64.html\n    ((a as f64) * (h as f64))\
    \ / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64 * h as f64) / 2f64).round() as f64\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8.0`,\n right: `7.5`', /tmp/tmp1ldout_t.rs:8:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * a as f64 * h as f64).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let half = a as f64 / 2.0;\n    return half *\
    \ (h as f64);\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let result = (a as f64 * h as f64) / 2.0;\n \
    \   result\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * (a as f64) * (h as f64)\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * (a as f64) * (h as f64)) as f64\n}\n\n\
    fn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).round()\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8.0`,\n right: `7.5`', /tmp/tmpita4qomz.rs:8:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  return 0.5 * a * h;\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (h as f64 * a as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * (a as f64) * (h as f64)\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    if a < 0 || h < 0 {\n        panic!(\"a must\
    \ be positive and h must be positive\");\n    }\n    f64::from(a) * f64::from(h)\
    \ / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmp8v3i5rxm.rs:6:5\n    |\n6   |     f64::from(a) * f64::from(h) / 2.0\n\
    \    |     ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n  \
    \  |\n    = help: the following implementations were found:\n              <f64\
    \ as From<f32>>\n              <f64 as From<i16>>\n              <f64 as From<i32>>\n\
    \              <f64 as From<i8>>\n            and 3 others\nnote: required by\
    \ `from`\n\nerror[E0277]: the trait bound `f64: From<isize>` is not satisfied\n\
    \   --> /tmp/tmp8v3i5rxm.rs:6:20\n    |\n6   |     f64::from(a) * f64::from(h)\
    \ / 2.0\n    |                    ^^^^^^^^^ the trait `From<isize>` is not implemented\
    \ for `f64`\n    |\n    = help: the following implementations were found:\n  \
    \            <f64 as From<f32>>\n              <f64 as From<i16>>\n          \
    \    <f64 as From<i32>>\n              <f64 as From<i8>>\n            and 3 others\n\
    note: required by `from`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // Because types for calculating triangle area\
    \ must be float.\n    let l: f64 = a as f64;\n    let w: f64 = h as f64;\n   \
    \ return ((l * w) / 2.0).abs();\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * a as f64 * h as f64) as f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * (a as f64) * (h as f64)\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let half: f64 = 0.5;\n    (half * a as f64 *\
    \ h as f64) as f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n   \
    \ assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n \
    \   assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = a as f64 * h as f64 * 0.5;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let result = (a * h) as f64 / 2f64;\n    result\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  a * h / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let (a, h) = (a as f64, h as f64);\n    0.5 *\
    \ a * h\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) as f64 / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  a * h / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  if a < 0 || h < 0 {\n    panic!(\"Side or high\
    \ of a triangle is negative.\");\n  }\n  0.5 * a as f64 * h as f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).round()\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8.0`,\n right: `7.5`', /tmp/tmpita4qomz.rs:8:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    f64::from(a) * f64::from(h) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmptm8hnjx7.rs:3:5\n    |\n3   |     f64::from(a) * f64::from(h) / 2.0\n\
    \    |     ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n  \
    \  |\n    = help: the following implementations were found:\n              <f64\
    \ as From<f32>>\n              <f64 as From<i16>>\n              <f64 as From<i32>>\n\
    \              <f64 as From<i8>>\n            and 3 others\nnote: required by\
    \ `from`\n\nerror[E0277]: the trait bound `f64: From<isize>` is not satisfied\n\
    \   --> /tmp/tmptm8hnjx7.rs:3:20\n    |\n3   |     f64::from(a) * f64::from(h)\
    \ / 2.0\n    |                    ^^^^^^^^^ the trait `From<isize>` is not implemented\
    \ for `f64`\n    |\n    = help: the following implementations were found:\n  \
    \            <f64 as From<f32>>\n              <f64 as From<i16>>\n          \
    \    <f64 as From<i32>>\n              <f64 as From<i8>>\n            and 3 others\n\
    note: required by `from`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  (a * h) as f64 / 2.0\n}\n\nfn main() {\n    let\
    \ candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2,\
    \ 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // given a and h, return area of triangle\n \
    \   f64::from(a * h) / 2f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmpil2afl_h.rs:4:5\n    |\n4   |     f64::from(a * h) / 2f64\n    |   \
    \  ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n    |\n   \
    \ = help: the following implementations were found:\n              <f64 as From<f32>>\n\
    \              <f64 as From<i16>>\n              <f64 as From<i32>>\n        \
    \      <f64 as From<i8>>\n            and 3 others\nnote: required by `from`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  (a as f64 * h as f64 / 2.0).sqrt()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2.7386127875258306`,\n right: `7.5`', /tmp/tmpnyw1n543.rs:8:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64) * (h as f64) / 2.0;\n \
    \   area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let triangle_area: f64 = (a as f64) * (h as f64)\
    \ / 2.0;\n    return triangle_area;\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // https://en.wikipedia.org/wiki/Heron%27s_formula\n\
    \    ((a.pow(2) + h.pow(2) + a*h) as f64).sqrt()\n}\n\nfn main() {\n    let candidate\
    \ = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2,\
    \ 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7.0`,\n right: `7.5`', /tmp/tmpbrtdp5e1.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ return area;\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  let float_a = a as f64;\n  let float_h = h as f64;\n\
    \  float_a * float_h / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * a as f64 * h as f64).round()\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8.0`,\n right: `7.5`', /tmp/tmp67t745xz.rs:8:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let x = a as f64;\n    let y = h as f64;\n  \
    \  0.5 * x * y\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a_f64 = a as f64;\n    let h_f64 = h as f64;\n\
    \    0.5 * a_f64 * h_f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2f64).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    a as f64 * h as f64 / 2f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = 0.5 * (a as f64) * (h as f64);\n \
    \   area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5f64 * a as f64 * h as f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * (a as f64) * (h as f64)\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let ia: f64 = a as f64;\n    let ih: f64 = h\
    \ as f64;\n    (0.5 * ia * ih) as f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * a as f64 * h as f64).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return (a as f64 * h as f64) / 2.0;\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = 0.5 * a as f64 * h as f64;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return (0.5 * (a as f64) * (h as f64)) as f64;\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  return a * h / 2.0;\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  (a * h / 2.0).abs()\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let result = (a as f64 * h as f64) / 2.0;\n \
    \   result\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return (a as f64 * h as f64) / 2.0;\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let result = (a * h) as f64;\n    result / 2.0\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2f64).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * (a as f64) * (h as f64)) as f64\n}\n\n\
    fn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64) * (h as f64) / 2.0;\n \
    \   area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let mut x = a as f64;\n    let mut y = h as f64;\n\
    \    x * y / 2f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * a as f64 * h as f64).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let mut area: f64 = 0.0;\n    area = (a * h)\
    \ as f64;\n    area / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    a as f64 * h as f64 / 2f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  ((a * h) / 2.0).abs()\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2f64).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * a as f64 * h as f64).sqrt()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2.7386127875258306`,\n right: `7.5`', /tmp/tmp66t7ctnz.rs:8:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return (a as f64 * h as f64 * 0.5) as f64;\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // Type casting from isize to f64.\n    ((a as\
    \ f64) * (h as f64)) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  // let l = a as f64;\n  // let h = h as f64;\n\
    \  // let area = l * h / 2.0;\n  // area\n  0.5 * (a as f64) * (h as f64)\n}\n\
    \nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // Todo\n    let result = (a as f64 * h as f64)\
    \ / 2.0;\n    result\n}\n\nfn main() {\n    let candidate = triangle_area;\n \
    \   assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    f64::from(a) * f64::from(h) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmptm8hnjx7.rs:3:5\n    |\n3   |     f64::from(a) * f64::from(h) / 2.0\n\
    \    |     ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n  \
    \  |\n    = help: the following implementations were found:\n              <f64\
    \ as From<f32>>\n              <f64 as From<i16>>\n              <f64 as From<i32>>\n\
    \              <f64 as From<i8>>\n            and 3 others\nnote: required by\
    \ `from`\n\nerror[E0277]: the trait bound `f64: From<isize>` is not satisfied\n\
    \   --> /tmp/tmptm8hnjx7.rs:3:20\n    |\n3   |     f64::from(a) * f64::from(h)\
    \ / 2.0\n    |                    ^^^^^^^^^ the trait `From<isize>` is not implemented\
    \ for `f64`\n    |\n    = help: the following implementations were found:\n  \
    \            <f64 as From<f32>>\n              <f64 as From<i16>>\n          \
    \    <f64 as From<i32>>\n              <f64 as From<i8>>\n            and 3 others\n\
    note: required by `from`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64) * (h as f64) / 2.0;\n \
    \   area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64).powi(2) + (h as f64).powi(2)).sqrt()\
    \ / 2.0 * h as f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n   \
    \ assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n \
    \   assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8.746427842267952`,\n right: `7.5`', /tmp/tmpqgn57xag.rs:8:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a * h) as f64 / 2.0;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = a as f64 * h as f64 * 0.5;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let _a = a as f64;\n    let _h = h as f64;\n\
    \    (_a * _h) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n \
    \   assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).sqrt()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2.7386127875258306`,\n right: `7.5`', /tmp/tmp0uj4gdu4.rs:8:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a * h) as f64 / 2f64;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).sqrt()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2.7386127875258306`,\n right: `7.5`', /tmp/tmp0uj4gdu4.rs:8:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2_f64).abs()\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a: f64 = a as f64;\n    let h: f64 = h as\
    \ f64;\n    (a * h) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // Using triangle side a and high h.\n    ((a\
    \ as f64) * (h as f64)) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * (a as f64) * (h as f64)\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  (a as f64) * (h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = a as f64 * h as f64 * 0.5;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return (a as f64 * h as f64) / 2.0;\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return ((a as f64 * h as f64) / 2f64).abs();\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let triangle_area = a as f64 * h as f64 / 2.0;\n\
    \    triangle_area\n}\n\nfn main() {\n    let candidate = triangle_area;\n   \
    \ assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n \
    \   assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  return a as f64 * h as f64 / 2.0;\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = a as f64 * h as f64 / 2f64;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return a as f64 * h as f64 / 2.0;\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = ((a as f64) * (h as f64)) / 2.0;\n\
    \    area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return a as f64 * h as f64 / 2.0;\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).round()\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8.0`,\n right: `7.5`', /tmp/tmpita4qomz.rs:8:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let x = a as f64;\n    let y = h as f64;\n  \
    \  (x * y) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  let area = (a as f64 * h as f64) / 2.0;\n  area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64 * h as f64) / 2.0) as f64\n}\n\nfn\
    \ main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2.0).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let triangle = (a * h) as f64 / 2.0;\n    triangle\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let mut area: f64 = f64::from(a * h) / 2f64;\n\
    \    println!(\"Triangle area is {}\", area);\n    area\n}\n\nfn main() {\n  \
    \  let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n   \
    \ assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmpghf014so.rs:3:25\n    |\n3   |     let mut area: f64 = f64::from(a *\
    \ h) / 2f64;\n    |                         ^^^^^^^^^ the trait `From<isize>`\
    \ is not implemented for `f64`\n    |\n    = help: the following implementations\
    \ were found:\n              <f64 as From<f32>>\n              <f64 as From<i16>>\n\
    \              <f64 as From<i32>>\n              <f64 as From<i8>>\n         \
    \   and 3 others\nnote: required by `from`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let f_a = a as f64;\n    let f_h = h as f64;\n\
    \    0.5 * f_a * f_h\n}\n\nfn main() {\n    let candidate = triangle_area;\n \
    \   assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    return a as f64 * h as f64 / 2.0;\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (h as f64) * (a as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64 / 2f64).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a * h) as f64 / 2.0;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a_f = a as f64;\n    let h_f = h as f64;\n\
    \    (a_f * h_f) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  a * h / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64) * (h as f64) / 2.0;\n \
    \   area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2f64\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64 * h as f64) as f64 * 0.5\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (((a as f64) * (h as f64)) / 2_f64).abs()\n}\n\
    \nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // let a = a as f64;\n    // let h = h as f64;\n\
    \    // 0.5 * a * h\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n    let\
    \ candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2,\
    \ 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  (a as f64 * h as f64 * 0.5).abs()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    // Uncomment the code below, to make the function\
    \ work.\n    // fn triangle_area_helper(a: isize, h: isize) -> f64 {\n    // \
    \    let area: f64 = (0.5 * a as f64 * h as f64).abs();\n    //     area\n   \
    \ // }\n    // triangle_area_helper(a, h) as f64\n    unimplemented!()\n}\n\n\
    fn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3),\
    \ 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8),\
    \ 40.0);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpcd2ihyn_.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822443
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n  (0.5 * a as f64 * h as f64).floor()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7.0`,\n right: `7.5`', /tmp/tmp90g_01wq.rs:8:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    a as f64 * h as f64 / 2_f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let a = a as f64;\n    let h = h as f64;\n  \
    \  a * h / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (a as f64) * (h as f64) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 101
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    (0.5 * a as f64 * h as f64).sqrt()\n}\n\nfn main()\
    \ {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n\
    \    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2.7386127875258306`,\n right: `7.5`', /tmp/tmp66t7ctnz.rs:8:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = (a as f64 * h as f64) / 2.0;\n   \
    \ area\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822442
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = a as f64 * h as f64 / 2.0;\n    area\n\
    }\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\nfn triangle_area(a:\
    \ isize, h: isize) -> f64 {\n    let area = 0.5 * (a as f64) * (h as f64);\n \
    \   return area;\n}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(5,\
    \ 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10,\
    \ 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822443

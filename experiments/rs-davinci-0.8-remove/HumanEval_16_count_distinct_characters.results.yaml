language: rs
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = std::collections::HashSet::new();\n    for character\
    \ in string.chars() {\n        set.insert(character.to_lowercase().to_string());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5glwt9zu.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // TODO: implement\n    unimplemented!();\n}\n\nfn main() {\n \
    \   let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpvv2vvo3a.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set: HashSet<String> = HashSet::new();\n    for c in string.chars()\
    \ {\n        set.insert(c.to_string().to_lowercase());\n    }\n    set.len() as\
    \ isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n  \
    \  assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpi4fvbl5h.rs:3:18\n\
    \  |\n3 |     let mut set: HashSet<String> = HashSet::new();\n  |            \
    \      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpi4fvbl5h.rs:3:36\n  |\n3 |  \
    \   let mut set: HashSet<String> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().fold(HashSet::new(), |mut set, character| {\n  \
    \      set.insert(character.to_lowercase().next().unwrap());\n        set\n  \
    \  }).len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi_nfhtlw.rs:3:25\n  |\n3 |     string.chars().fold(HashSet::new(), |mut\
    \ set, character| {\n  |                         ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for\
    \ c in string.chars() {\n        let character = c.to_lowercase().next().unwrap();\n\
    \        if !set.contains(&character) {\n            count += 1;\n           \
    \ set.insert(character);\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp2ds5yhkf.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: Vec<char> = Vec::new();\n    for ch in string.chars()\
    \ {\n        if !chars.contains(&ch.to_lowercase().next().unwrap()) {\n      \
    \      chars.push(ch.to_lowercase().next().unwrap());\n        }\n    }\n    chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut seen = HashSet::new();\n    let chars = string.chars();\n\
    \    for c in chars {\n        seen.insert(c.to_ascii_lowercase());\n    }\n \
    \   seen.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7e2rsqc4.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n  let mut chars: HashSet<char> = HashSet::new();\n  for character in\
    \ string.chars() {\n    chars.insert(character.to_lowercase().next().unwrap());\n\
    \  }\n  chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp2rswxnjy.rs:3:18\n\
    \  |\n3 |   let mut chars: HashSet<char> = HashSet::new();\n  |              \
    \    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp2rswxnjy.rs:3:34\n  |\n3 |  \
    \ let mut chars: HashSet<char> = HashSet::new();\n  |                        \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut count: isize = 0;\n    let mut lower_string = string.to_lowercase();\n\
    \    lower_string.chars().for_each(|character| {\n        if lower_string.matches(character).count()\
    \ == 1 {\n            count += 1;\n        }\n    });\n    count\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpy8zyn2jl.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters = HashSet::new();\n    for character in string.chars()\
    \ {\n        characters.insert(character.to_ascii_lowercase());\n    }\n    characters.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi1lpng_k.rs:3:26\n  |\n3 |     let mut characters = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_character_count: isize = 0;\n    let mut seen_character_count:\
    \ isize = 0;\n    let mut characters_seen: Vec<char> = Vec::new();\n\n    let\
    \ mut string_chars: Vec<char> = string.chars().collect();\n    string_chars.sort();\n\
    \n    let mut curr_char: char = string_chars[0];\n    let mut curr_char_count:\
    \ isize = 1;\n\n    for i in 1..string_chars.len() {\n        if string_chars[i]\
    \ == curr_char {\n            curr_char_count += 1;\n        } else {\n      \
    \      if !characters_seen.contains(&curr_char) {\n                characters_seen.push(curr_char);\n\
    \                seen_character_count += 1;\n            }\n\n            if curr_char_count\
    \ == 1 {\n                distinct_character_count += 1;\n            } else {\n\
    \                distinct_character_count += (curr_char_count * seen_character_count)\
    \ + 1;\n            }\n\n            curr_char = string_chars[i];\n          \
    \  curr_char_count = 1;\n        }\n    }\n\n    if !characters_seen.contains(&curr_char)\
    \ {\n        characters_seen.push(curr_char);\n        seen_character_count +=\
    \ 1;\n    }\n\n    if curr_char_count == 1 {\n        distinct_character_count\
    \ += 1;\n    } else {\n        distinct_character_count += (curr_char_count *\
    \ seen_character_count) + 1;\n    }\n\n    distinct_character_count\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 0 but the
    index is 0'', /tmp/tmpg6lfdw80.rs:10:31

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    let string = string.to_lowercase();\n\
    \    for c in string.chars() {\n        set.insert(c);\n    }\n    return set.len()\
    \ as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpz22jhudv.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for character in string.chars()\
    \ {\n        set.insert(character.to_lowercase().to_string());\n    }\n    set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpgunr25w7.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut character_count = HashMap::new();\n    let mut current_count:\
    \ isize;\n    let mut distinct_count: isize = 0;\n\n    for c in string.chars()\
    \ {\n        current_count = *character_count.entry(c.to_ascii_lowercase()).or_insert(0);\n\
    \        character_count.insert(c.to_ascii_lowercase(), current_count + 1);\n\
    \    }\n\n    for (_, current_count) in character_count {\n        if current_count\
    \ > 0 {\n            distinct_count += 1;\n        }\n    }\n\n    return distinct_count;\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpfef6ycu2.rs:3:31\n  |\n3 |     let mut character_count = HashMap::new();\n\
    \  |                               ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.to_lowercase().chars().collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp_v3ob5z8.rs:3:45\n\
    \  |\n3 |     string.to_lowercase().chars().collect::<HashSet<char>>().len() as\
    \ isize\n  |                                             ^^^^^^^ not found in\
    \ this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().map(|c| c.to_ascii_lowercase()).collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnug6rj57.rs:3:62\n\
    \  |\n3 |     string.chars().map(|c| c.to_ascii_lowercase()).collect::<HashSet<char>>().len()\
    \ as isize\n  |                                                              ^^^^^^^\
    \ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 |\
    \ use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5glwt9zu.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpe8dsrxjd.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpe8dsrxjd.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = HashSet::new();\n    for c in string.chars() {\n\
    \        chars.insert(c.to_lowercase().next().unwrap());\n    }\n    chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpr37pb3ot.rs:3:21\n  |\n3 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().fold(HashSet::new(), |mut set, character| {\n  \
    \      set.insert(character.to_lowercase().next().unwrap());\n        set\n  \
    \  }).len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi_nfhtlw.rs:3:25\n  |\n3 |     string.chars().fold(HashSet::new(), |mut\
    \ set, character| {\n  |                         ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = string.chars();\n    let mut result = vec![];\n\
    \    while let Some(character) = chars.next() {\n        if !result.contains(&character.to_lowercase().to_string())\
    \ {\n            result.push(character.to_lowercase().to_string());\n        }\n\
    \    }\n    result.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars_seen = HashSet::new();\n    let lower_string = string.to_lowercase();\n\
    \    let mut chars = lower_string.chars();\n    while let Some(character) = chars.next()\
    \ {\n        chars_seen.insert(character);\n    }\n    chars_seen.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpw4qdiem1.rs:3:26\n  |\n3 |     let mut chars_seen = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    0\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmpwwjlzani.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut lowercase_chars: HashSet<char> = HashSet::new();\n    let\
    \ mut uppercase_chars: HashSet<char> = HashSet::new();\n\n    for c in string.chars()\
    \ {\n        if c.is_lowercase() {\n            lowercase_chars.insert(c);\n \
    \       } else if c.is_uppercase() {\n            uppercase_chars.insert(c);\n\
    \        }\n    }\n\n    lowercase_chars.len() as isize + uppercase_chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmplmupyfg1.rs:3:30\n\
    \  |\n3 |     let mut lowercase_chars: HashSet<char> = HashSet::new();\n  |  \
    \                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmplmupyfg1.rs:3:46\n\
    \  |\n3 |     let mut lowercase_chars: HashSet<char> = HashSet::new();\n  |  \
    \                                            ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmplmupyfg1.rs:4:30\n\
    \  |\n4 |     let mut uppercase_chars: HashSet<char> = HashSet::new();\n  |  \
    \                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmplmupyfg1.rs:4:46\n\
    \  |\n4 |     let mut uppercase_chars: HashSet<char> = HashSet::new();\n  |  \
    \                                            ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut count = 0;\n    let mut distinct = HashSet::new();\n  \
    \  for c in string.chars() {\n        if !distinct.contains(&c.to_lowercase().next().unwrap())\
    \ {\n            distinct.insert(c.to_lowercase().next().unwrap());\n        \
    \    count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp518mzk2t.rs:4:24\n  |\n4 |     let mut distinct = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters: Vec<char> = Vec::new();\n    for c in string.chars()\
    \ {\n        if characters.contains(&c.to_lowercase().to_string().chars().next().unwrap())\
    \ {\n            continue;\n        }\n        characters.push(c.to_lowercase().to_string().chars().next().unwrap());\n\
    \    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().fold(HashSet::new(), |mut set, c| {\n        set.insert(c.to_lowercase().collect::<String>());\n\
    \        set\n    }).len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwjyjzc55.rs:3:25\n  |\n3 |     string.chars().fold(HashSet::new(), |mut\
    \ set, c| {\n  |                         ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // let mut characters = vec![];\n    // let mut distinct_characters\
    \ = HashSet::new();\n    // let mut unique_characters = 0;\n\n    // characters\
    \ = string.chars().collect();\n    // for character in characters {\n    //  \
    \   distinct_characters.insert(character);\n    // }\n    // unique_characters\
    \ = distinct_characters.len() as isize;\n\n    // unique_characters\n\n    string.chars().collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n  --> /tmp/tmp3s23yfp9.rs:15:30\n\
    \   |\n15 |     string.chars().collect::<HashSet<char>>().len() as isize\n   |\
    \                              ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashSet;\n   |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut hashmap = HashMap::new();\n    let mut total = 0;\n   \
    \ for c in string.chars() {\n        if !hashmap.contains_key(&c.to_lowercase().next().unwrap())\
    \ {\n            hashmap.insert(c.to_lowercase().next().unwrap(), 1);\n      \
    \      total += 1;\n        }\n    }\n    total\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp28cqkmkd.rs:3:23\n  |\n3 |     let mut hashmap = HashMap::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut char_counter = HashMap::new();\n    for character in string.chars()\
    \ {\n        let counter = char_counter.entry(character.to_ascii_lowercase()).or_insert(0);\n\
    \        *counter += 1;\n    }\n    char_counter.len() as isize\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpqx5hfoow.rs:3:28\n  |\n3 |     let mut char_counter = HashMap::new();\n\
    \  |                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    if string.is_empty() {\n        return 0;\n    }\n\n    let letters\
    \ = string.chars().map(|c| c.to_lowercase().next().unwrap()).collect::<Vec<char>>();\n\
    \    let mut result = 0;\n    let mut chars = vec![false; 26];\n\n    for c in\
    \ letters {\n        let index = get_index(c);\n        if !chars[index] {\n \
    \           chars[index] = true;\n            result += 1;\n        }\n    }\n\
    \n    result\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `get_index` in this scope\n  --> /tmp/tmpjs187ml9.rs:12:21\n\
    \   |\n12 |         let index = get_index(c);\n   |                     ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = HashSet::new();\n    for character in\
    \ string.chars() {\n        distinct_chars.insert(character.to_ascii_lowercase());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi4g5tjzg.rs:3:30\n  |\n3 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = std::collections::HashSet::new();\n    for c in string.chars()\
    \ {\n        set.insert(c.to_lowercase().next().unwrap());\n    }\n    set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters: Vec<char> = Vec::new();\n    for c in string.chars()\
    \ {\n        if !characters.contains(&c.to_ascii_lowercase()) {\n            characters.push(c.to_ascii_lowercase());\n\
    \        }\n    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // count the number of uppercase and lowercase characters in the\
    \ string\n    let lowercase_characters = string.to_lowercase();\n    let uppercase_characters\
    \ = string.to_uppercase();\n\n    // count the number of distinct characters\n\
    \    let mut distinct_characters = 0;\n    for ch in lowercase_characters.chars()\
    \ {\n        if ch.is_alphabetic() {\n            distinct_characters += 1;\n\
    \        }\n    }\n    for ch in uppercase_characters.chars() {\n        if ch.is_alphabetic()\
    \ {\n            distinct_characters += 1;\n        }\n    }\n\n    // return\
    \ the number of distinct characters\n    distinct_characters\n}\n\nfn main() {\n\
    \    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `5`', /tmp/tmpjh9_coad.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: HashSet<char> = HashSet::new();\n    string.chars().for_each(|c|\
    \ chars.insert(c.to_ascii_lowercase()));\n    chars.len() as isize\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpv8k42sh1.rs:3:20\n\
    \  |\n3 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpv8k42sh1.rs:3:36\n  |\n3 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let uppercase_string = string.to_uppercase();\n    let mut distinct_chars:\
    \ HashSet<char> = HashSet::new();\n    for c in uppercase_string.chars() {\n \
    \       distinct_chars.insert(c);\n    }\n    distinct_chars.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp036y2ly8.rs:4:29\n\
    \  |\n4 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp036y2ly8.rs:4:45\n\
    \  |\n4 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                                          ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut counter = 0;\n    let mut string_lowercase = string.to_lowercase();\n\
    \    string_lowercase.sort();\n    for (i, c) in string_lowercase.chars().enumerate()\
    \ {\n        if i == 0 {\n            counter += 1;\n        } else if i > 0 &&\
    \ string_lowercase.chars().nth(i - 1) != Some(c) {\n            counter += 1;\n\
    \        }\n    }\n    counter\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort` found for struct `String` in the current\
    \ scope\n --> /tmp/tmpqdx6vr4k.rs:5:22\n  |\n5 |     string_lowercase.sort();\n\
    \  |                      ^^^^ method not found in `String`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters: BTreeSet<char> = BTreeSet::new();\n    for\
    \ character in string.chars() {\n        characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `BTreeSet` in this scope\n --> /tmp/tmpyirw3tkg.rs:3:25\n\
    \  |\n3 |     let mut characters: BTreeSet<char> = BTreeSet::new();\n  |     \
    \                    ^^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::BTreeSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `BTreeSet`\n --> /tmp/tmpyirw3tkg.rs:3:42\n\
    \  |\n3 |     let mut characters: BTreeSet<char> = BTreeSet::new();\n  |     \
    \                                     ^^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::BTreeSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut seen = HashSet::new();\n    let mut count = 0;\n    for\
    \ character in string.chars() {\n        if seen.contains(&character.to_ascii_lowercase())\
    \ {\n            continue;\n        }\n        seen.insert(character.to_ascii_lowercase());\n\
    \        count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate =\
    \ count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")), 0);\n\
    \    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp15kip_la.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut alphabet: [bool; 26] = [false; 26];\n    for c in string.chars()\
    \ {\n        if c.is_alphabetic() {\n            let c = c.to_ascii_lowercase();\n\
    \            let c_index = c as usize - 'a' as usize;\n            alphabet[c_index]\
    \ = true;\n        }\n    }\n    let mut distinct_characters = 0;\n    for i in\
    \ 0..26 {\n        if alphabet[i] {\n            distinct_characters += 1;\n \
    \       }\n    }\n    distinct_characters\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `5`', /tmp/tmp8gwz18h6.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set: HashSet<char> = HashSet::new();\n    for c in string.chars()\
    \ {\n        set.insert(c.to_lowercase().to_string().chars().nth(0).unwrap());\n\
    \    }\n    return set.len() as isize;\n}\n\nfn main() {\n    let candidate =\
    \ count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")), 0);\n\
    \    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp9p147xga.rs:3:18\n\
    \  |\n3 |     let mut set: HashSet<char> = HashSet::new();\n  |              \
    \    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp9p147xga.rs:3:34\n  |\n3 |  \
    \   let mut set: HashSet<char> = HashSet::new();\n  |                        \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = HashSet::new();\n    let mut distinct_chars_count\
    \ = 0;\n\n    for character in string.chars() {\n        let lowercase_character\
    \ = character.to_lowercase().next().unwrap();\n        if !distinct_chars.contains(&lowercase_character)\
    \ {\n            distinct_chars.insert(lowercase_character);\n            distinct_chars_count\
    \ += 1;\n        }\n    }\n\n    distinct_chars_count\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmphk_0ppqy.rs:3:30\n  |\n3 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars: HashSet<char> = HashSet::new();\n    for\
    \ character in string.chars() {\n        distinct_chars.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmphbnhv2f_.rs:3:29\n\
    \  |\n3 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmphbnhv2f_.rs:3:45\n\
    \  |\n3 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                                          ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // convert the string to lowercase and convert to list of characters\n\
    \    let mut chars: Vec<char> = string.to_lowercase().chars().collect();\n   \
    \ // sort the chars\n    chars.sort();\n    // unique the chars\n    chars.dedup();\n\
    \    // get length of the sorted and unique chars\n    chars.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut char_set = HashSet::new();\n    for c in string.chars()\
    \ {\n        char_set.insert(c.to_ascii_lowercase());\n    }\n    char_set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfwa2t7ki.rs:3:24\n  |\n3 |     let mut char_set = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_count = 0;\n    let mut char_map: HashMap<char,\
    \ bool> = HashMap::new();\n\n    for char in string.chars() {\n        let char_key\
    \ = char.to_lowercase().collect::<Vec<char>>()[0];\n        if !char_map.contains_key(&char_key)\
    \ {\n            char_map.insert(char_key, true);\n            distinct_count\
    \ += 1;\n        }\n    }\n\n    distinct_count\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpf04bg0d4.rs:4:23\n\
    \  |\n4 |     let mut char_map: HashMap<char, bool> = HashMap::new();\n  |   \
    \                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpf04bg0d4.rs:4:45\n\
    \  |\n4 |     let mut char_map: HashMap<char, bool> = HashMap::new();\n  |   \
    \                                          ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = string.chars();\n    let mut characters = HashSet::new();\n\
    \    loop {\n        match chars.next() {\n            Some(c) => {\n        \
    \        characters.insert(c.to_lowercase().collect::<String>());\n          \
    \  }\n            None => {\n                break;\n            }\n        }\n\
    \    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpb226_kcg.rs:4:26\n  |\n4 |     let mut characters = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = HashSet::new();\n    for c in string.chars() {\n\
    \        chars.insert(c.to_ascii_lowercase());\n    }\n    chars.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0gfigonf.rs:3:21\n  |\n3 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5glwt9zu.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    count_distinct_characters_recursive(&string)\n}\n\nfn main() {\n\
    \    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `count_distinct_characters_recursive`\
    \ in this scope\n --> /tmp/tmpplpx8zfw.rs:3:5\n  |\n3 |     count_distinct_characters_recursive(&string)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // We will use a set to make sure that each element is distinct\n\
    \    let mut set = HashSet::new();\n\n    // We iterate over the string's characters\n\
    \    for c in string.chars() {\n        // We use the `to_lowercase` method to\
    \ make every character lowercase\n        // If the character doesn't exist in\
    \ the set yet, it gets added.\n        // Otherwise, it doesn't get added.\n \
    \       set.insert(c.to_lowercase().next().unwrap());\n    }\n\n    // We return\
    \ the length of the set\n    set.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpl_0bezpy.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let chars: Vec<char> = string.chars().map(|c| c.to_lowercase().next().unwrap()).collect();\n\
    \    let mut counts: HashMap<char, isize> = HashMap::new();\n    for c in chars\
    \ {\n        let count = counts.entry(c).or_insert(0);\n        *count += 1;\n\
    \    }\n    let mut uniques: Vec<isize> = counts.values().cloned().collect();\n\
    \    uniques.sort();\n    return uniques.len() as isize;\n}\n\nfn main() {\n \
    \   let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpfappbk75.rs:4:21\n\
    \  |\n4 |     let mut counts: HashMap<char, isize> = HashMap::new();\n  |    \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpfappbk75.rs:4:44\n\
    \  |\n4 |     let mut counts: HashMap<char, isize> = HashMap::new();\n  |    \
    \                                        ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = string.chars();\n    let mut seen = HashSet::new();\n\
    \    while let Some(character) = chars.next() {\n        seen.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    seen.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0omwh856.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.to_lowercase().chars().collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp_v3ob5z8.rs:3:45\n\
    \  |\n3 |     string.to_lowercase().chars().collect::<HashSet<char>>().len() as\
    \ isize\n  |                                             ^^^^^^^ not found in\
    \ this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // TODO: Write code to solve the problem.\n    string.chars().collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpvolb0l26.rs:4:30\n\
    \  |\n4 |     string.chars().collect::<HashSet<char>>().len() as isize\n  |  \
    \                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpypmdivup.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpe8dsrxjd.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpe8dsrxjd.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let s = string.to_lowercase();\n    let mut chars: HashSet<char>\
    \ = HashSet::new();\n    for c in s.chars() {\n        chars.insert(c);\n    }\n\
    \    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpis6g1fso.rs:4:20\n\
    \  |\n4 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpis6g1fso.rs:4:36\n  |\n4 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n  let mut counts: HashMap<char, usize> = HashMap::new();\n  for c in\
    \ string.chars() {\n    let count = counts.entry(c.to_ascii_lowercase()).or_insert(0);\n\
    \    *count += 1;\n  }\n  return counts.len() as isize;\n}\n\nfn main() {\n  \
    \  let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpmnum2f1p.rs:3:19\n\
    \  |\n3 |   let mut counts: HashMap<char, usize> = HashMap::new();\n  |      \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpmnum2f1p.rs:3:42\n\
    \  |\n3 |   let mut counts: HashMap<char, usize> = HashMap::new();\n  |      \
    \                                    ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut output: Vec<char> = Vec::new();\n    let string_vec: Vec<char>\
    \ = string.to_uppercase().chars().collect();\n    for char in string_vec {\n \
    \       if !output.contains(&char) {\n            output.push(char);\n       \
    \ }\n    }\n    output.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut lowercase_string = string.to_lowercase();\n    lowercase_string.split_off(lowercase_string.len()\
    \ / 2);\n\n    let distinct_characters: HashSet<char> = HashSet::from_iter(lowercase_string.chars());\n\
    \    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate =\
    \ count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")), 0);\n\
    \    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpcus2namt.rs:6:30\n\
    \  |\n6 |     let distinct_characters: HashSet<char> = HashSet::from_iter(lowercase_string.chars());\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcus2namt.rs:6:46\n\
    \  |\n6 |     let distinct_characters: HashSet<char> = HashSet::from_iter(lowercase_string.chars());\n\
    \  |                                              ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = HashSet::new();\n    for c in string.chars() {\n\
    \        chars.insert(c.to_ascii_lowercase());\n    }\n    chars.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0gfigonf.rs:3:21\n  |\n3 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().nth(0).unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpgjctq_9i.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgjctq_9i.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for c in string.chars() {\n\
    \        set.insert(c.to_ascii_lowercase());\n    }\n    set.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqxiihw52.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let chars = string.to_ascii_lowercase();\n    let mut hash_set\
    \ = HashSet::new();\n    for c in chars.chars() {\n        hash_set.insert(c);\n\
    \    }\n    hash_set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpjdykg2vc.rs:4:24\n  |\n4 |     let mut hash_set = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut map = HashMap::new();\n    let mut count = 0;\n    for\
    \ c in string.chars() {\n        if map.contains_key(&c.to_lowercase().next().unwrap())\
    \ {\n            continue;\n        } else {\n            map.insert(c.to_lowercase().next().unwrap(),\
    \ 1);\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n\
    \    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpyu5m1c27.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    let string = string.to_lowercase();\n\
    \    for c in string.chars() {\n        set.insert(c);\n    }\n    set.len() as\
    \ isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n  \
    \  assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0is9n42q.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_character_count: isize = 0;\n    let mut character_counts:\
    \ HashMap<char, isize> = HashMap::new();\n\n    for c in string.chars() {\n  \
    \      let mut c_lower = c.to_lowercase().next().unwrap();\n        let entry\
    \ = character_counts.entry(c_lower).or_insert(0);\n        *entry += 1;\n    }\n\
    \n    for (_, v) in character_counts {\n        if v == 1 {\n            distinct_character_count\
    \ += 1;\n        }\n    }\n\n    return distinct_character_count;\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp_w0ku8qx.rs:4:31\n\
    \  |\n4 |     let mut character_counts: HashMap<char, isize> = HashMap::new();\n\
    \  |                               ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_w0ku8qx.rs:4:54\n\
    \  |\n4 |     let mut character_counts: HashMap<char, isize> = HashMap::new();\n\
    \  |                                                      ^^^^^^^ not found in\
    \ this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = HashSet::new();\n    let char_vec: Vec<char>\
    \ = string.chars().collect();\n    for char in char_vec {\n        distinct_chars.insert(char.to_ascii_lowercase());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsij8w0iw.rs:3:30\n  |\n3 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let split = string.to_lowercase().chars().collect::<Vec<char>>();\n\
    \    split.into_iter().collect::<HashSet<char>>().len() as isize\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp078x1q28.rs:4:33\n\
    \  |\n4 |     split.into_iter().collect::<HashSet<char>>().len() as isize\n  |\
    \                                 ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let chars: Vec<char> = string.chars().collect();\n    let mut distinct_chars:\
    \ Vec<char> = Vec::new();\n\n    for c in chars {\n        if !distinct_chars.contains(&c)\
    \ {\n            distinct_chars.push(c);\n        }\n    }\n\n    distinct_chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpcugiop9e.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let string = string.to_lowercase();\n    let mut counter = HashMap::new();\n\
    \    let mut distinct_characters = 0;\n\n    for character in string.chars() {\n\
    \        counter.entry(character).or_insert(0);\n        if counter.get(&character).unwrap()\
    \ == &0 {\n            distinct_characters += 1;\n        }\n        *counter.get_mut(&character).unwrap()\
    \ += 1;\n    }\n\n    distinct_characters\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpvak10ez8.rs:4:23\n  |\n4 |     let mut counter = HashMap::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let letters = string.chars().map(|c| c.to_lowercase().to_string()).collect::<Vec<String>>();\n\
    \    letters.iter().collect::<HashSet<&String>>().len() as isize\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpfqyr9ve3.rs:4:30\n\
    \  |\n4 |     letters.iter().collect::<HashSet<&String>>().len() as isize\n  |\
    \                              ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut seen = BTreeSet::new();\n    string.chars().filter(|c|\
    \ seen.insert(c.to_ascii_lowercase())).count() as isize\n}\n\nfn main() {\n  \
    \  let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `BTreeSet`\n -->\
    \ /tmp/tmp6g805pn8.rs:3:20\n  |\n3 |     let mut seen = BTreeSet::new();\n  |\
    \                    ^^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::BTreeSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut seen = HashSet::new();\n    for c in string.chars() {\n\
    \        seen.insert(c.to_lowercase().to_string());\n    }\n    seen.len() as\
    \ isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n  \
    \  assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_0pw_yqm.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // For each character check whether it has already been seen\n\
    \    // If it has been seen, continue to the next character\n    // Otherwise,\
    \ count it as a distinct character\n    let chars: Vec<char> = string.chars().collect();\n\
    \    let mut distinct_chars: Vec<char> = Vec::new();\n    for char in chars {\n\
    \        if distinct_chars.contains(&char) {\n            continue;\n        }\
    \ else {\n            distinct_chars.push(char);\n        }\n    }\n    // Transform\
    \ the Vec<char> into a Vec<String>\n    let distinct_chars_string: Vec<String>\
    \ = distinct_chars.iter().map(|s| s.to_string()).collect();\n    distinct_chars_string.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpien9qywv.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // TODO implement me\n\n    unimplemented!();\n}\n\nfn main() {\n\
    \    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpdnq46az1.rs:5:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters = HashSet::new();\n    for c in string.chars()\
    \ {\n        let c = c.to_lowercase().next().unwrap();\n        distinct_characters.insert(c);\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpynrhsrz9.rs:3:35\n  |\n3 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set: HashSet<String> = HashSet::new();\n    let string_chars:\
    \ Vec<char> = string.chars().collect();\n    for ch in string_chars {\n      \
    \  set.insert(ch.to_lowercase().to_string());\n    }\n    return set.len() as\
    \ isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n \
    \   assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmps4yewjw8.rs:3:18\n\
    \  |\n3 |     let mut set: HashSet<String> = HashSet::new();\n  |            \
    \      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmps4yewjw8.rs:3:36\n  |\n3 |  \
    \   let mut set: HashSet<String> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let s = string.to_lowercase();\n    let mut v: Vec<bool> = vec![false;\
    \ 26];\n    let a = 'a' as u8;\n    let mut count = 0;\n    for c in s.chars()\
    \ {\n        let i = (c as u8) - a;\n        if !v[i as usize] {\n           \
    \ v[i as usize] = true;\n            count += 1;\n        }\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to subtract with overflow'', /tmp/tmpkwyswh27.rs:8:17

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    let mut count = 0;\n    for\
    \ c in string.chars() {\n        let letter = c.to_ascii_lowercase();\n      \
    \  if !set.contains(&letter) {\n            set.insert(letter);\n            count\
    \ += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp24zzpmq8.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut count: isize = 0;\n    let mut arr: [bool; 256] = [false;\
    \ 256];\n    for char in string.chars() {\n        let u = char as usize;\n  \
    \      if arr[u] == false {\n            arr[u] = true;\n            count +=\
    \ 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmps1dalggo.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut result = HashSet::new();\n    for mut character in string.chars()\
    \ {\n        character = character.to_lowercase().next().unwrap();\n        result.insert(character);\n\
    \    }\n    result.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpc86mit72.rs:3:22\n  |\n3 |     let mut result = HashSet::new();\n  |\
    \                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let char_vec: Vec<char> = string.chars().collect();\n    let mut\
    \ distinct_char_set: HashSet<char> = HashSet::new();\n    for c in char_vec {\n\
    \        distinct_char_set.insert(c.to_ascii_lowercase());\n    }\n    distinct_char_set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpoqeewfve.rs:4:32\n\
    \  |\n4 |     let mut distinct_char_set: HashSet<char> = HashSet::new();\n  |\
    \                                ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpoqeewfve.rs:4:48\n\
    \  |\n4 |     let mut distinct_char_set: HashSet<char> = HashSet::new();\n  |\
    \                                                ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let lowercase_str = string.to_lowercase();\n    let mut character_counts\
    \ = HashMap::new();\n    let mut distinct_count = 0;\n\n    for c in lowercase_str.chars()\
    \ {\n        if c.is_alphabetic() {\n            let mut count = character_counts.entry(c).or_insert(0);\n\
    \            *count += 1;\n            if *count == 1 {\n                distinct_count\
    \ += 1;\n            }\n        }\n    }\n\n    distinct_count\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpgor998wt.rs:4:32\n  |\n4 |     let mut character_counts = HashMap::new();\n\
    \  |                                ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut seen_characters = HashSet::new();\n    for character in\
    \ string.chars() {\n        seen_characters.insert(character.to_ascii_lowercase());\n\
    \    }\n    return seen_characters.len() as isize;\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4wgl97hx.rs:3:31\n  |\n3 |     let mut seen_characters = HashSet::new();\n\
    \  |                               ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let n_chars = string.chars().collect::<HashSet<char>>().len();\n\
    \    n_chars as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp0zofx87c.rs:3:44\n\
    \  |\n3 |     let n_chars = string.chars().collect::<HashSet<char>>().len();\n\
    \  |                                            ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().to_string().chars().next().unwrap());\n\
    \    }\n    return distinct_characters.len() as isize;\n}\n\nfn main() {\n   \
    \ let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpygt8cn4c.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpygt8cn4c.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpuaghhwp4.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpuaghhwp4.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut counter = 0;\n    let mut distinct_characters: HashSet<char>\
    \ = HashSet::new();\n    for character in string.chars() {\n        let c = character.to_lowercase().next().unwrap();\n\
    \        if !distinct_characters.contains(&c) {\n            distinct_characters.insert(c);\n\
    \            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main() {\n\
    \    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpowl8_2ql.rs:4:34\n\
    \  |\n4 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpowl8_2ql.rs:4:50\n\
    \  |\n4 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut m = HashMap::new();\n    for c in string.chars() {\n  \
    \      if m.contains_key(&c.to_lowercase().to_string()) {\n            let mut\
    \ count = m.get(&c.to_lowercase().to_string()).unwrap().clone();\n           \
    \ count += 1;\n            m.insert(c.to_lowercase().to_string(), count);\n  \
    \      } else {\n            m.insert(c.to_lowercase().to_string(), 1);\n    \
    \    }\n    }\n    m.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp7tb1f5rs.rs:3:17\n  |\n3 |     let mut m = HashMap::new();\n  |    \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut char_count: HashMap<char, bool> = HashMap::new();\n   \
    \ for c in string.chars() {\n        let ch = c.to_lowercase().next().unwrap();\n\
    \        if !char_count.contains_key(&ch) {\n            char_count.insert(ch,\
    \ true);\n        }\n    }\n    char_count.len() as isize\n}\n\nfn main() {\n\
    \    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpujrnwjad.rs:3:25\n\
    \  |\n3 |     let mut char_count: HashMap<char, bool> = HashMap::new();\n  | \
    \                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpujrnwjad.rs:3:47\n\
    \  |\n3 |     let mut char_count: HashMap<char, bool> = HashMap::new();\n  | \
    \                                              ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: HashSet<char> = HashSet::new();\n    for c in string.chars()\
    \ {\n        chars.insert(c.to_lowercase().to_string().chars().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpjl990n3f.rs:3:20\n\
    \  |\n3 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpjl990n3f.rs:3:36\n  |\n3 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpypmdivup.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // TODO\n\n    -1\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-1`,\n right: `0`', /tmp/tmplo2sqln0.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.to_lowercase().chars().collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp_v3ob5z8.rs:3:45\n\
    \  |\n3 |     string.to_lowercase().chars().collect::<HashSet<char>>().len() as\
    \ isize\n  |                                             ^^^^^^^ not found in\
    \ this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut count: isize = 0;\n    let mut str_vec: Vec<char> = string.chars().collect();\n\
    \    str_vec.sort();\n    for c in str_vec.iter() {\n        if c.is_alphabetic()\
    \ {\n            if !c.is_lowercase() {\n                count += 1;\n       \
    \     }\n        }\n    }\n    return count;\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmprvrnjqit.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().map(|c| c.to_lowercase().next().unwrap()).collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmppa32acnl.rs:3:72\n\
    \  |\n3 |     string.chars().map(|c| c.to_lowercase().next().unwrap()).collect::<HashSet<char>>().len()\
    \ as isize\n  |                                                              \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    return string.to_lowercase().chars().collect::<HashSet<char>>().len()\
    \ as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpmyqvgurg.rs:3:52\n\
    \  |\n3 |     return string.to_lowercase().chars().collect::<HashSet<char>>().len()\
    \ as isize;\n  |                                                    ^^^^^^^ not\
    \ found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use\
    \ std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // Implement me!\n    0\n}\n\nfn main() {\n    let candidate =\
    \ count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")), 0);\n\
    \    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmpou_ori2h.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for c in string.chars() {\n\
    \        set.insert(c.to_lowercase().to_string());\n    }\n    set.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp54e87o3d.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters: Vec<char> = string.to_lowercase().chars().collect();\n\
    \    characters.sort();\n    characters.dedup();\n    characters.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // Create an empty set of chars\n    let mut distinct_chars: HashSet<char>\
    \ = HashSet::new();\n\n    // Populate the set with chars from the string\n  \
    \  for character in string.chars() {\n        distinct_chars.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n\n    // Return the length of the set\n    distinct_chars.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpuxb047ks.rs:4:29\n\
    \  |\n4 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpuxb047ks.rs:4:45\n\
    \  |\n4 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                                          ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let string_chars: Vec<char> = string.chars().collect();\n    let\
    \ string_lowercase_chars: Vec<char> = string.to_lowercase().chars().collect();\n\
    \    let distinct_count: usize = string_lowercase_chars.iter().unique().count();\n\
    \    distinct_count as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpzww2mw05.rs:5:63\n  |\n5 |     let distinct_count:\
    \ usize = string_lowercase_chars.iter().unique().count();\n  |               \
    \                                                ^^^^^^ method not found in `std::slice::Iter<'_,\
    \ char>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters = HashSet::new();\n    for character\
    \ in string.chars() {\n        distinct_characters.insert(character.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpka6i6kvi.rs:3:35\n  |\n3 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = HashSet::new();\n    for c in string.chars()\
    \ {\n        distinct_chars.insert(c.to_ascii_lowercase());\n    }\n    distinct_chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpacqghc44.rs:3:30\n  |\n3 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters = HashSet::new();\n    for character\
    \ in string.chars() {\n        distinct_characters.insert(character.to_ascii_lowercase());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4mnshryo.rs:3:35\n  |\n3 |     let mut distinct_characters = HashSet::new();\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters = 0;\n    let mut already_seen_characters\
    \ = HashSet::new();\n\n    for character in string.chars() {\n        if !already_seen_characters.contains(&character.to_ascii_lowercase())\
    \ {\n            distinct_characters += 1;\n            already_seen_characters.insert(character.to_ascii_lowercase());\n\
    \        }\n    }\n\n    distinct_characters\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj_vtsh43.rs:4:39\n  |\n4 |     let mut already_seen_characters = HashSet::new();\n\
    \  |                                       ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut map = HashMap::new();\n    for c in string.chars() {\n\
    \        let char_key = c.to_ascii_lowercase();\n        map.insert(char_key,\
    \ 1);\n    }\n    map.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp29w808k_.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    //initialize all the counts for each lower case letter to 0\n \
    \   let mut counts: [isize; 26] = [0; 26];\n    //we are going to count the occurences\
    \ of each letter\n\n    //we are going to iterate over each character in the string\n\
    \    for c in string.chars() {\n        //character is a unicode character\n \
    \       //make it lower case first and then subtract 'a'\n        //this will\
    \ give us a number between 0 and 25\n        let index = c.to_lowercase().next().unwrap()\
    \ as usize - 'a' as usize;\n        //if the index is outside the range, return\
    \ -1\n        if index < 0 || index > 25 {\n            return -1;\n        }\n\
    \        //otherwise, we can increment the count for that letter\n        counts[index]\
    \ += 1;\n    }\n\n    //count the number of letters that appear at least once\n\
    \    let mut count = 0;\n    for i in 0..26 {\n        if counts[i] > 0 {\n  \
    \          count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to subtract with overflow'', /tmp/tmphlv26d1q.rs:12:21

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // Create a hashset to keep track of the distinct chars\n    let\
    \ mut distinct_chars = HashSet::new();\n\n    // Loop through each character in\
    \ the string\n    for c in string.chars() {\n        // Insert the char into the\
    \ hashset\n        distinct_chars.insert(c);\n    }\n\n    // Return the number\
    \ of elements (chars) in the hashset\n    distinct_chars.len() as isize\n}\n\n\
    fn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp58fcqi56.rs:4:30\n  |\n4 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.to_lowercase().chars().collect::<HashSet<char>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp_v3ob5z8.rs:3:45\n\
    \  |\n3 |     string.to_lowercase().chars().collect::<HashSet<char>>().len() as\
    \ isize\n  |                                             ^^^^^^^ not found in\
    \ this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpypmdivup.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut unique_chars = HashSet::new();\n    for character in string.chars()\
    \ {\n        unique_chars.insert(character.to_ascii_lowercase());\n    }\n   \
    \ unique_chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxus7cel5.rs:3:28\n  |\n3 |     let mut unique_chars = HashSet::new();\n\
    \  |                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpypmdivup.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut map = HashMap::new();\n    for c in string.chars() {\n\
    \        *map.entry(c.to_lowercase().next().unwrap()).or_insert(0) += 1;\n   \
    \ }\n    map.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpg2po5a8x.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for c in string.chars() {\n\
    \        set.insert(c.to_lowercase().collect::<String>());\n    }\n    set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpez_gxyln.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for c in string.chars() {\n        distinct_characters.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpe8dsrxjd.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpe8dsrxjd.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut char_set = HashSet::new();\n    for character in string.chars()\
    \ {\n        char_set.insert(character.to_ascii_lowercase());\n    }\n    return\
    \ char_set.len() as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpg7258hih.rs:3:24\n  |\n3 |     let mut char_set = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters = 0;\n    let mut processed_character_ascii_codes\
    \ = Vec::<isize>::new();\n\n    for character in string.chars() {\n        let\
    \ ascii_code = character as isize;\n\n        if !processed_character_ascii_codes.contains(&ascii_code)\
    \ {\n            processed_character_ascii_codes.push(ascii_code);\n         \
    \   distinct_characters += 1;\n        }\n    }\n\n    distinct_characters\n}\n\
    \nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp093g6tsz.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut seen = HashSet::new();\n    for c in string.chars() {\n\
    \        seen.insert(c.to_lowercase().next().unwrap());\n    }\n    seen.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpacmfvjz5.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut unique_characters = HashSet::new();\n    for ch in string.chars()\
    \ {\n        unique_characters.insert(ch.to_ascii_lowercase());\n    }\n    unique_characters.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7sq1gyl0.rs:3:33\n  |\n3 |     let mut unique_characters = HashSet::new();\n\
    \  |                                 ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // This is the number of distinct characters\n    let mut num_chars\
    \ = 0;\n\n    // For each character in the string\n    for (_, char) in string.chars().enumerate()\
    \ {\n        // If the character is lowercase\n        if char.is_lowercase()\
    \ {\n            // Increment the number of lowercase characters\n           \
    \ num_chars += 1;\n        }\n        // If the character is uppercase\n     \
    \   else if char.is_uppercase() {\n            // Increment the number of uppercase\
    \ characters\n            num_chars += 1;\n        }\n    }\n\n    // Return the\
    \ number of characters\n    num_chars\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `5`', /tmp/tmp1atdzqkq.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().fold(BTreeSet::new(), |mut set, c| {\n        set.insert(c.to_lowercase().next().unwrap());\n\
    \        set\n    }).len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `BTreeSet`\n -->\
    \ /tmp/tmp8xup8_av.rs:3:25\n  |\n3 |     string.chars().fold(BTreeSet::new(),\
    \ |mut set, c| {\n  |                         ^^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::BTreeSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n  let mut character_set = HashSet::new();\n  for character in string.chars()\
    \ {\n    character_set.insert(character.to_lowercase().to_string());\n  }\n  character_set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp32ix8ak4.rs:3:27\n  |\n3 |   let mut character_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    count_distinct_character_in_vec(string.chars().collect())\n}\n\n\
    fn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `count_distinct_character_in_vec` in\
    \ this scope\n --> /tmp/tmp0wz6h65t.rs:3:5\n  |\n3 |     count_distinct_character_in_vec(string.chars().collect())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let characters = string.to_ascii_lowercase();\n    // initialize\
    \ the hash table\n    let mut hash_table: HashMap<char, bool> = HashMap::new();\n\
    \    // iterate through all characters\n    for ch in characters.chars() {\n \
    \       // put character in the hash table\n        hash_table.insert(ch, true);\n\
    \    }\n    // count the distinct characters in the hash table\n    hash_table.keys().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpmkpaeq6j.rs:5:25\n\
    \  |\n5 |     let mut hash_table: HashMap<char, bool> = HashMap::new();\n  | \
    \                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpmkpaeq6j.rs:5:47\n\
    \  |\n5 |     let mut hash_table: HashMap<char, bool> = HashMap::new();\n  | \
    \                                              ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut counter = HashMap::new();\n    let characters = string.chars();\n\
    \    for character in characters {\n        let key = character.to_lowercase().to_string();\n\
    \        *counter.entry(key).or_insert(0) += 1;\n    }\n    counter.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp1ho96w97.rs:3:23\n  |\n3 |     let mut counter = HashMap::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut all_chars: Vec<char> = string.chars().collect();\n    all_chars.sort();\n\
    \    all_chars.dedup();\n    let no_of_distinct_chars = all_chars.len() as isize;\n\
    \    no_of_distinct_chars\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp23bu4f9o.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().fold(0, |mut sum, character| {\n        if !character.is_alphabetic()\
    \ {\n            return sum;\n        }\n\n        let character = character.to_lowercase().next().unwrap();\n\
    \        if sum & (1 << (character as usize - 'a' as usize)) == 0 {\n        \
    \    sum |= 1 << (character as usize - 'a' as usize);\n        }\n\n        sum\n\
    \    }) as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `31`,\n right: `5`', /tmp/tmpiy7mge8x.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().fold(HashSet::new(), |mut set, letter| {\n     \
    \   set.insert(letter.to_lowercase().to_string());\n        set\n    }).len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpk9lwfdzc.rs:3:25\n  |\n3 |     string.chars().fold(HashSet::new(), |mut\
    \ set, letter| {\n  |                         ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    if string.is_empty() {\n        return 0;\n    }\n\n    let chars\
    \ = string.chars().map(|c| c.to_ascii_lowercase()).collect::<Vec<char>>();\n \
    \   let uniq = chars.iter().collect::<HashSet<&char>>();\n    uniq.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp__0kej99.rs:8:39\n\
    \  |\n8 |     let uniq = chars.iter().collect::<HashSet<&char>>();\n  |      \
    \                                 ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: HashSet<char> = HashSet::new();\n    for character\
    \ in string.chars() {\n        chars.insert(character.to_lowercase().to_string().chars().next().unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpbmkmxx87.rs:3:20\n\
    \  |\n3 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpbmkmxx87.rs:3:36\n  |\n3 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // Write code here\n    let mut new_string = String::new();\n \
    \   for character in string.chars() {\n        if !new_string.contains(character)\
    \ {\n            new_string.push(character);\n        }\n    }\n    new_string.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpf_83puaz.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = HashSet::new();\n    for c in string.chars() {\n\
    \        chars.insert(c.to_lowercase().next().unwrap());\n    }\n    chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpr37pb3ot.rs:3:21\n  |\n3 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: Vec<char> = string.chars().collect();\n    chars.sort();\n\
    \    let mut unique_chars: Vec<char> = Vec::new();\n    for (i, c) in chars.iter().enumerate()\
    \ {\n        if i == 0 {\n            unique_chars.push(*c);\n        } else if\
    \ c != &chars[i - 1] {\n            unique_chars.push(*c);\n        }\n    }\n\
    \    unique_chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpz9zcqgfg.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // Implement your code here\n    let mut vec_temp: Vec<char> =\
    \ vec![];\n    for character in string.chars() {\n        let lower = character.to_lowercase().to_string();\n\
    \        if !vec_temp.contains(&lower.chars().nth(0).unwrap()) {\n           \
    \ vec_temp.push(lower.chars().nth(0).unwrap());\n        }\n    }\n    return\
    \ vec_temp.len() as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for c in string.chars() {\n\
    \        set.insert(c.to_ascii_lowercase());\n    }\n    set.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqxiihw52.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut dist_chars = HashSet::new();\n    for c in string.chars()\
    \ {\n        dist_chars.insert(c.to_ascii_lowercase());\n    }\n    dist_chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4ev_odqq.rs:3:26\n  |\n3 |     let mut dist_chars = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = string.to_lowercase();\n    distinct_chars.sort();\n\
    \    distinct_chars.dedup();\n    distinct_chars.len() as isize\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `sort` found for struct `String` in the current\
    \ scope\n --> /tmp/tmp4oh8laz1.rs:4:20\n  |\n4 |     distinct_chars.sort();\n\
    \  |                    ^^^^ method not found in `String`\n\nerror[E0599]: no\
    \ method named `dedup` found for struct `String` in the current scope\n --> /tmp/tmp4oh8laz1.rs:5:20\n\
    \  |\n5 |     distinct_chars.dedup();\n  |                    ^^^^^ method not\
    \ found in `String`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // TODO\n    0\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmp9kd54x_d.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut result = 0;\n    let mut counter = [0; 26];\n    for ch\
    \ in string.chars() {\n        let mut i = ch as u8 - 'a' as u8;\n        if i\
    \ >= 'A' as u8 - 'a' as u8 {\n            i = ch as u8 - 'A' as u8;\n        }\n\
    \        if counter[i as usize] == 0 {\n            result += 1;\n           \
    \ counter[i as usize] = 1;\n        }\n    }\n    result\n}\n\nfn main() {\n \
    \   let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this arithmetic operation will overflow\n --> /tmp/tmpp28y8w4c.rs:7:17\n\
    \  |\n7 |         if i >= 'A' as u8 - 'a' as u8 {\n  |                 ^^^^^^^^^^^^^^^^^^^^^\
    \ attempt to compute `65_u8 - 97_u8`, which would overflow\n  |\n  = note: `#[deny(arithmetic_overflow)]`\
    \ on by default\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut total: isize = 0;\n    let mut counts: HashMap<char, isize>\
    \ = HashMap::new();\n    for char in string.chars() {\n        let char_lower\
    \ = char.to_lowercase().next().unwrap();\n        if !counts.contains_key(&char_lower)\
    \ {\n            counts.insert(char_lower, 1);\n            total += 1;\n    \
    \    }\n    }\n    total\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp68xy7gv3.rs:4:21\n\
    \  |\n4 |     let mut counts: HashMap<char, isize> = HashMap::new();\n  |    \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp68xy7gv3.rs:4:44\n\
    \  |\n4 |     let mut counts: HashMap<char, isize> = HashMap::new();\n  |    \
    \                                        ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters = vec![];\n    for character in string.chars()\
    \ {\n        let upper_case_character = character.to_uppercase().next().unwrap();\n\
    \        if !distinct_characters.contains(&upper_case_character) {\n         \
    \   distinct_characters.push(upper_case_character);\n        }\n    }\n    distinct_characters.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for c in string.chars() {\n\
    \        set.insert(c.to_lowercase().next().unwrap());\n    }\n    set.len() as\
    \ isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n  \
    \  assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpjw69tq_k.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars: HashSet<char> = HashSet::new();\n    for\
    \ c in string.chars() {\n        distinct_chars.insert(c.to_lowercase().next().unwrap());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpntixp0f1.rs:3:29\n\
    \  |\n3 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpntixp0f1.rs:3:45\n\
    \  |\n3 |     let mut distinct_chars: HashSet<char> = HashSet::new();\n  |   \
    \                                          ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters = HashSet::new();\n    for character in string.chars()\
    \ {\n        characters.insert(character.to_lowercase().to_string());\n    }\n\
    \    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0lzf0981.rs:3:26\n  |\n3 |     let mut characters = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // TODO\n    unimplemented!()\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp_mdut40h.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: HashSet<char> = HashSet::new();\n    for c in string.chars()\
    \ {\n        chars.insert(c.to_lowercase().next().unwrap());\n    }\n    chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpp16g5n5l.rs:3:20\n\
    \  |\n3 |     let mut chars: HashSet<char> = HashSet::new();\n  |            \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpp16g5n5l.rs:3:36\n  |\n3 |  \
    \   let mut chars: HashSet<char> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    return string.len() as isize;\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `5`', /tmp/tmprkv02fve.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.to_lowercase().chars().unique().count() as isize\n}\n\n\
    fn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `Chars` in the\
    \ current scope\n --> /tmp/tmp2eeaah9k.rs:3:35\n  |\n3 |     string.to_lowercase().chars().unique().count()\
    \ as isize\n  |                                   ^^^^^^ method not found in `Chars<'_>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let uppercase_string = string.to_uppercase();\n    let mut distinct_characters:\
    \ Vec<char> = Vec::new();\n    for current_character in uppercase_string.chars()\
    \ {\n        if !distinct_characters.contains(&current_character) {\n        \
    \    distinct_characters.push(current_character);\n        }\n    }\n    return\
    \ distinct_characters.len() as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = HashSet::new();\n    for c in string.chars() {\n\
    \        chars.insert(c.to_lowercase().collect::<String>());\n    }\n    chars.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpym6dihl8.rs:3:21\n  |\n3 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: Vec<_> = string.chars().collect();\n    chars.sort();\n\
    \    let mut count = 1;\n    let mut prev_char = chars[0];\n    for i in 1..chars.len()\
    \ {\n        if chars[i] != prev_char {\n            count += 1;\n           \
    \ prev_char = chars[i];\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''index out of bounds: the len is 0 but the
    index is 0'', /tmp/tmpivo0g2_4.rs:6:25

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut map = HashMap::new();\n    let mut count = 0;\n    for\
    \ ch in string.chars() {\n        let upper_ch = ch.to_uppercase().collect::<String>();\n\
    \        let lower_ch = ch.to_lowercase().collect::<String>();\n        if map.contains_key(&upper_ch)\
    \ == false && map.contains_key(&lower_ch) == false {\n            map.insert(upper_ch,\
    \ 1);\n            map.insert(lower_ch, 1);\n            count += 1;\n       \
    \ }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpy3_soaf8.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // Return the length of the string, reduced by the number of duplicates\n\
    \    string.len() as isize - count_duplicate_characters(string)\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `count_duplicate_characters` in this\
    \ scope\n --> /tmp/tmpuy5ipd9s.rs:4:29\n  |\n4 |     string.len() as isize - count_duplicate_characters(string)\n\
    \  |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let string_lowercase = string.to_lowercase();\n    let mut distinct_characters\
    \ = Vec::new();\n    for character in string_lowercase.chars() {\n        if !distinct_characters.contains(&character)\
    \ {\n            distinct_characters.push(character);\n        }\n    }\n    return\
    \ distinct_characters.len() as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct = HashSet::new();\n    for character in string.to_lowercase().chars()\
    \ {\n        distinct.insert(character);\n    }\n    distinct.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpm749ciji.rs:3:24\n  |\n3 |     let mut distinct = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut char_set = HashSet::new();\n    for c in string.chars()\
    \ {\n        char_set.insert(c.to_ascii_lowercase());\n    }\n    char_set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfwa2t7ki.rs:3:24\n  |\n3 |     let mut char_set = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars: Vec<char> = Vec::new();\n    let chars\
    \ = string.chars();\n    for c in chars {\n        if !distinct_chars.contains(&c.to_lowercase().collect::<Vec<char>>()[0])\
    \ {\n            distinct_chars.push(c.to_lowercase().collect::<Vec<char>>()[0]);\n\
    \        }\n    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars = HashSet::new();\n    for c in string.chars() {\n\
    \        chars.insert(c.to_ascii_lowercase());\n    }\n    return chars.len()\
    \ as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp09dphpot.rs:3:21\n  |\n3 |     let mut chars = HashSet::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    0\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmpwwjlzani.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = std::collections::HashSet::new();\n    string.chars().for_each(|c|\
    \ {\n        let s = c.to_lowercase().to_string();\n        set.insert(s);\n \
    \   });\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // first use a struct to represent the data and use that to implement\
    \ the trait,\n    // then use a closure\n\n    impl<T> DistinctChars for T where\
    \ T: IntoIterator, T::Item: PartialEq + PartialOrd {\n        fn count_distinct_characters(&self)\
    \ -> isize {\n            let mut count = 0;\n            let mut chars: Vec<_>\
    \ = self.into_iter().collect();\n            chars.sort();\n            let mut\
    \ cur_char = '\\0';\n            for c in chars {\n                if c != cur_char\
    \ {\n                    count += 1;\n                    cur_char = c;\n    \
    \            }\n            }\n            count\n        }\n    }\n\n    // this\
    \ doesn't work, because it can't compare characters\n    // string.count_distinct_characters()\n\
    \n    let mut count = 0;\n    let mut chars: Vec<_> = string.chars().collect();\n\
    \    chars.sort();\n    let mut cur_char = '\\0';\n    for c in chars {\n    \
    \    if c != cur_char {\n            count += 1;\n            cur_char = c;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0405]: cannot find trait `DistinctChars` in this scope\n --> /tmp/tmpoegpofuz.rs:6:13\n\
    \  |\n6 |     impl<T> DistinctChars for T where T: IntoIterator, T::Item: PartialEq\
    \ + PartialOrd {\n  |             ^^^^^^^^^^^^^ not found in this scope\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0405`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut char_map: BTreeMap<char, isize> = BTreeMap::new();\n  \
    \  for c in string.chars() {\n        let mut current_val = char_map.get(&c.to_lowercase().nth(0).unwrap()).unwrap_or(&0);\n\
    \        *current_val += 1;\n        char_map.insert(c.to_lowercase().nth(0).unwrap(),\
    \ *current_val);\n    }\n    char_map.len() as isize\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `BTreeMap` in this scope\n --> /tmp/tmpr3hcax1q.rs:3:23\n\
    \  |\n3 |     let mut char_map: BTreeMap<char, isize> = BTreeMap::new();\n  |\
    \                       ^^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::BTreeMap;\n  |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `BTreeMap`\n --> /tmp/tmpr3hcax1q.rs:3:47\n\
    \  |\n3 |     let mut char_map: BTreeMap<char, isize> = BTreeMap::new();\n  |\
    \                                               ^^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::BTreeMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: isize = 0;\n    let mut characters_tracker:\
    \ HashMap<char, isize> = HashMap::new();\n\n    for c in string.chars() {\n  \
    \      let entry = characters_tracker.entry(c.to_ascii_lowercase()).or_insert(0);\n\
    \        *entry += 1;\n    }\n\n    for v in characters_tracker.values() {\n \
    \       if *v > 0 {\n            distinct_characters += 1;\n        }\n    }\n\
    \n    distinct_characters\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpljs3hntx.rs:4:33\n\
    \  |\n4 |     let mut characters_tracker: HashMap<char, isize> = HashMap::new();\n\
    \  |                                 ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpljs3hntx.rs:4:56\n\
    \  |\n4 |     let mut characters_tracker: HashMap<char, isize> = HashMap::new();\n\
    \  |                                                        ^^^^^^^ not found\
    \ in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut chars: BTreeSet<char> = BTreeSet::new();\n    for c in\
    \ string.chars() {\n        chars.insert(c.to_lowercase().nth(0).unwrap());\n\
    \    }\n    chars.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `BTreeSet` in this scope\n --> /tmp/tmp_sd3xx2w.rs:3:20\n\
    \  |\n3 |     let mut chars: BTreeSet<char> = BTreeSet::new();\n  |          \
    \          ^^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::BTreeSet;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `BTreeSet`\n --> /tmp/tmp_sd3xx2w.rs:3:37\n\
    \  |\n3 |     let mut chars: BTreeSet<char> = BTreeSet::new();\n  |          \
    \                           ^^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::BTreeSet;\n  |\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set: HashSet<char> = HashSet::new();\n    for character\
    \ in string.chars() {\n        set.insert(character.to_lowercase().to_string().chars().nth(0).unwrap());\n\
    \    }\n    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpr3527yxs.rs:3:18\n\
    \  |\n3 |     let mut set: HashSet<char> = HashSet::new();\n  |              \
    \    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpr3527yxs.rs:3:34\n  |\n3 |  \
    \   let mut set: HashSet<char> = HashSet::new();\n  |                        \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().nth(0).unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpgjctq_9i.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgjctq_9i.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // This is a CTFe, so we cannot use sets.\n    let mut chars: Vec<char>\
    \ = string.chars().collect();\n    chars.sort();\n    chars.dedup();\n    return\
    \ chars.len() as isize;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmplcai7vm1.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = 0;\n    let mut lowercase_chars = Vec::<char>::new();\n\
    \    let mut uppercase_chars = Vec::<char>::new();\n\n    for character in string.chars()\
    \ {\n        if character.is_lowercase() {\n            if !lowercase_chars.contains(&character)\
    \ {\n                lowercase_chars.push(character);\n                distinct_chars\
    \ += 1;\n            }\n        }\n        else if character.is_uppercase() {\n\
    \            if !uppercase_chars.contains(&character) {\n                uppercase_chars.push(character);\n\
    \                distinct_chars += 1;\n            }\n        }\n    }\n\n   \
    \ distinct_chars\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmpfzzcrufm.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: Vec<u8> = Vec::new();\n    let mut\
    \ count: isize = 0;\n\n    for ch in string.into_bytes() {\n        if !distinct_characters.contains(&ch)\
    \ {\n            distinct_characters.push(ch);\n            count += 1;\n    \
    \    }\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `5`', /tmp/tmp2epk83z1.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = 0;\n    let mut seen_chars = vec![];\n\
    \n    for c in string.chars() {\n        let mut seen = false;\n        for s\
    \ in seen_chars.iter() {\n            if s.to_lowercase().eq(&c.to_lowercase())\
    \ {\n                seen = true;\n                break;\n            }\n   \
    \     }\n\n        if !seen {\n            distinct_chars += 1;\n            seen_chars.push(c);\n\
    \        }\n    }\n\n    distinct_chars\n}\n\nfn main() {\n    let candidate =\
    \ count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")), 0);\n\
    \    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0282]: type annotations needed for `Vec<T>`\n --> /tmp/tmprml38id8.rs:8:18\n\
    \  |\n4 |     let mut seen_chars = vec![];\n  |         -------------- consider\
    \ giving `seen_chars` the explicit type `Vec<T>`, where the type parameter `T`\
    \ is specified\n...\n8 |         for s in seen_chars.iter() {\n  |           \
    \       ^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n  |\n  = note:\
    \ type must be known at this point\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0282`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    return 0;\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmpvbxcb96m.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set: HashSet<char> = HashSet::new();\n    for c in string.chars()\
    \ {\n        set.insert(c.to_lowercase().nth(0).unwrap());\n    }\n    set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmphowb1tz3.rs:3:18\n\
    \  |\n3 |     let mut set: HashSet<char> = HashSet::new();\n  |              \
    \    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmphowb1tz3.rs:3:34\n  |\n3 |  \
    \   let mut set: HashSet<char> = HashSet::new();\n  |                        \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.chars().fold(HashSet::new(), |mut acc, c| {\n        acc.insert(c.to_lowercase().next().unwrap());\n\
    \        acc\n    }).len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpitjbj_zb.rs:3:25\n  |\n3 |     string.chars().fold(HashSet::new(), |mut\
    \ acc, c| {\n  |                         ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_characters: HashSet<char> = HashSet::new();\n\
    \    for character in string.chars() {\n        distinct_characters.insert(character.to_lowercase().nth(0).unwrap());\n\
    \    }\n    distinct_characters.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpgjctq_9i.rs:3:34\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgjctq_9i.rs:3:50\n\
    \  |\n3 |     let mut distinct_characters: HashSet<char> = HashSet::new();\n \
    \ |                                                  ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut dist_chars: Vec<char> = vec![];\n    for ch in string.to_lowercase().chars()\
    \ {\n        if !dist_chars.contains(&ch) {\n            dist_chars.push(ch);\n\
    \        }\n    }\n    dist_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // TODO\n    0\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `5`', /tmp/tmp9kd54x_d.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut distinct_chars = HashSet::new();\n    for character in\
    \ string.chars() {\n        distinct_chars.insert(character.to_ascii_lowercase());\n\
    \    }\n    distinct_chars.len() as isize\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi4g5tjzg.rs:3:30\n  |\n3 |     let mut distinct_chars = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for character in string.chars()\
    \ {\n        set.insert(character.to_ascii_lowercase());\n    }\n    set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpoaj8iz4s.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    return string.len() as isize;\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `13`,\n right: `5`', /tmp/tmprkv02fve.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // ...\n    unimplemented!()\n}\n\nfn main() {\n    let candidate\
    \ = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\")),\
    \ 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpw0r_rsno.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n  let mut set = HashSet::new();\n  for character in string.chars()\
    \ {\n    set.insert(character.to_ascii_lowercase());\n  }\n  set.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi11_h6yo.rs:3:17\n  |\n3 |   let mut set = HashSet::new();\n  |    \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // The set of distinct characters, each character is stored in\
    \ a box so that we can have unique values instead of borrowing\n    let mut distinct_characters:\
    \ Vec<Box<char>> = Vec::new();\n\n    // Parse through each character in the string\n\
    \    for character in string.chars() {\n        // If it is an alphabet, convert\
    \ it to lowercase\n        let character = match character {\n            'A'..='Z'\
    \ => character.to_lowercase().to_string().chars().next().unwrap(),\n         \
    \   _ => character\n        };\n\n        // Check if the character is in the\
    \ set of distinct characters\n        let is_in_distinct_characters = distinct_characters.iter().any(|distinct_character|\
    \ *distinct_character == character);\n\n        // If the character is not in\
    \ the set of distinct characters, add it to the set\n        if !is_in_distinct_characters\
    \ {\n            distinct_characters.push(Box::new(character));\n        }\n \
    \   }\n\n    // Return the number of distinct characters\n    distinct_characters.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpnaybs6e8.rs:15:116\n   |\n\
    15 |         let is_in_distinct_characters = distinct_characters.iter().any(|distinct_character|\
    \ *distinct_character == character);\n   |                                   \
    \                                                                            \
    \     ^^^^^^^^^ expected struct `Box`, found `char`\n   |\n   = note: expected\
    \ struct `Box<char>`\n                found type `char`\n   = note: for more on\
    \ the distinction between the stack and the heap, read https://doc.rust-lang.org/book/ch15-01-box.html,\
    \ https://doc.rust-lang.org/rust-by-example/std/box.html, and https://doc.rust-lang.org/std/boxed/index.html\n\
    help: store this in the heap by calling `Box::new`\n   |\n15 |         let is_in_distinct_characters\
    \ = distinct_characters.iter().any(|distinct_character| *distinct_character ==\
    \ Box::new(character));\n   |                                                \
    \                                                                    +++++++++\
    \         +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut freq = HashMap::new();\n    for char in string.chars()\
    \ {\n        let c = char.to_ascii_lowercase();\n        let count = freq.entry(c).or_insert(0);\n\
    \        *count += 1;\n    }\n    freq.len() as isize\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpw_z_jxpy.rs:3:20\n  |\n3 |     let mut freq = HashMap::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 0
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters: std::collections::HashSet<char> = std::collections::HashSet::new();\n\
    \    for character in string.chars() {\n        characters.insert(character.to_ascii_lowercase());\n\
    \    }\n    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let string = string.to_lowercase();\n    let mut characters = BTreeSet::new();\n\
    \    for c in string.chars() {\n        characters.insert(c);\n    }\n    characters.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `BTreeSet`\n -->\
    \ /tmp/tmpugjijk_t.rs:4:26\n  |\n4 |     let mut characters = BTreeSet::new();\n\
    \  |                          ^^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::BTreeSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut char_set = HashSet::new();\n    for c in string.chars()\
    \ {\n        char_set.insert(c.to_lowercase().to_string());\n    }\n    char_set.len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpbtlcff8n.rs:3:24\n  |\n3 |     let mut char_set = HashSet::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut count = 0;\n    let mut characters = HashSet::new();\n\
    \    for character in string.chars() {\n        if !characters.contains(&character.to_lowercase().to_string())\
    \ {\n            characters.insert(character.to_lowercase().to_string());\n  \
    \          count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpq105xz6j.rs:4:26\n  |\n4 |     let mut characters = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5glwt9zu.rs:3:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822556
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    // Convert the string to lowercase and insert each character into\
    \ a hash set\n    let mut set = HashSet::new();\n    for c in string.to_lowercase().chars()\
    \ {\n        set.insert(c);\n    }\n\n    // Return the size of the hash set\n\
    \    set.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqdntwpsp.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    string.to_lowercase().chars().map(|char| char.to_string()).collect::<HashSet<String>>().len()\
    \ as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpvhcmd_d3.rs:3:74\n\
    \  |\n3 |     string.to_lowercase().chars().map(|char| char.to_string()).collect::<HashSet<String>>().len()\
    \ as isize\n  |                                                              \
    \            ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut count: isize = 0;\n    let mut char_map: HashMap<char,\
    \ bool> = HashMap::new();\n    for c in string.chars() {\n        if char_map.get(&c)\
    \ == None {\n            count += 1;\n            char_map.insert(c, true);\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpq2g9dvgi.rs:4:23\n\
    \  |\n4 |     let mut char_map: HashMap<char, bool> = HashMap::new();\n  |   \
    \                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpq2g9dvgi.rs:4:45\n\
    \  |\n4 |     let mut char_map: HashMap<char, bool> = HashMap::new();\n  |   \
    \                                          ^^^^^^^ not found in this scope\n \
    \ |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters = HashSet::new();\n    for character in string.chars()\
    \ {\n        characters.insert(character.to_lowercase().to_string());\n    }\n\
    \    characters.len() as isize\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0lzf0981.rs:3:26\n  |\n3 |     let mut characters = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut set = HashSet::new();\n    for c in string.chars() {\n\
    \        set.insert(c.to_ascii_lowercase());\n    }\n    set.len() as isize\n\
    }\n\nfn main() {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqxiihw52.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822557
- exit_code: 1
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut characters: HashSet<char> = HashSet::new();\n    let lower_case_string\
    \ = string.to_lowercase();\n    for c in lower_case_string.chars() {\n       \
    \ characters.insert(c);\n    }\n    characters.len() as isize\n}\n\nfn main()\
    \ {\n    let candidate = count_distinct_characters;\n    assert_eq!(candidate(String::from(\"\
    \")), 0);\n    assert_eq!(candidate(String::from(\"abcde\")), 5);\n    assert_eq!(candidate(String::from(\"\
    abcdecadeCADE\")), 5);\n    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\"\
    )), 1);\n    assert_eq!(candidate(String::from(\"Jerry jERRY JeRRRY\")), 5);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpbf2w3dhq.rs:3:25\n\
    \  |\n3 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpbf2w3dhq.rs:3:41\n\
    \  |\n3 |     let mut characters: HashSet<char> = HashSet::new();\n  |       \
    \                                  ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822558
- exit_code: 101
  program: "/// Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\nfn count_distinct_characters(string: String) ->\
    \ isize {\n    let mut result = 0;\n    let mut seen = vec![false; 26];\n    for\
    \ c in string.chars() {\n        let index = match c {\n            'a'...'z'\
    \ => (c as u8 - 'a' as u8) as usize,\n            'A'...'Z' => (c as u8 - 'A'\
    \ as u8) as usize,\n            _ => continue,\n        };\n        if !seen[index]\
    \ {\n            seen[index] = true;\n            result += 1;\n        }\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = count_distinct_characters;\n\
    \    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"\
    abcde\")), 5);\n    assert_eq!(candidate(String::from(\"abcdecadeCADE\")), 5);\n\
    \    assert_eq!(candidate(String::from(\"aaaaAAAAaaaa\")), 1);\n    assert_eq!(candidate(String::from(\"\
    Jerry jERRY JeRRRY\")), 5);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `5`', /tmp/tmpmg3xvxwj.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822558

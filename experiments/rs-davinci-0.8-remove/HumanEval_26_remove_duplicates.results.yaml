language: rs
name: HumanEval_26_remove_duplicates
results:
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!(\"remove duplicates from {:?}\"\
    , numbers);\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: remove duplicates from []'',
    /tmp/tmpvwuy8lpi.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut count: HashMap<isize, isize> = HashMap::new();\n\
    \    let mut result: Vec<isize> = Vec::new();\n\n    for item in numbers {\n \
    \       let new_count = match count.get(&item) {\n            Some(val) => val\
    \ + 1,\n            None => 1,\n        };\n        count.insert(item, new_count);\n\
    \    }\n\n    for item in numbers {\n        if count.get(&item).unwrap() == &1\
    \ {\n            result.push(item);\n        }\n    }\n\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpfmmhd7up.rs:4:20\n\
    \  |\n4 |     let mut count: HashMap<isize, isize> = HashMap::new();\n  |    \
    \                ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpfmmhd7up.rs:4:44\n\
    \  |\n4 |     let mut count: HashMap<isize, isize> = HashMap::new();\n  |    \
    \                                        ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = Vec::new();\n    let mut m = HashMap::new();\n\
    \    for x in numbers {\n        if !m.contains_key(&x) {\n            m.insert(x,\
    \ 1);\n            v.push(x);\n        }\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpgq_06hug.rs:5:17\n  |\n5 |     let mut m = HashMap::new();\n  |    \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 0
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.iter().filter(|i| numbers.iter().filter(|j|\
    \ **i == **j).count() == 1).map(|i| *i).collect()\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut ret = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            ret.push(number);\n            seen.insert(number);\n       \
    \ }\n    }\n    ret\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpv_4z7ygv.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut number_set = HashSet::new();\n    let\
    \ mut result = Vec::new();\n\n    for number in numbers {\n        if !number_set.contains(&number)\
    \ {\n            number_set.insert(number);\n            result.push(number);\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpdbqc0e1y.rs:4:26\n  |\n4 |     let mut number_set = HashSet::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut results = Vec::new();\n    let mut\
    \ seen = HashSet::new();\n\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            results.push(number);\n            seen.insert(number);\n   \
    \     }\n    }\n\n    results\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqcclsvmg.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ result = Vec::new();\n\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            result.push(n);\n        }\n   \
    \ }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp38donp7w.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // Convert to hash set, then convert back to\
    \ vector\n    let mut numbers_set: HashSet<isize> = HashSet::new();\n    for num\
    \ in numbers {\n        numbers_set.insert(num);\n    }\n    numbers_set.into_iter().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpamhymefi.rs:5:26\n\
    \  |\n5 |     let mut numbers_set: HashSet<isize> = HashSet::new();\n  |     \
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpamhymefi.rs:5:43\n\
    \  |\n5 |     let mut numbers_set: HashSet<isize> = HashSet::new();\n  |     \
    \                                      ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut already_seen = HashSet::new();\n  \
    \  let mut result = Vec::new();\n\n    for number in numbers {\n        if already_seen.contains(&number)\
    \ {\n            continue;\n        }\n\n        already_seen.insert(number);\n\
    \        result.push(number);\n    }\n\n    result\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpvwkurspb.rs:4:28\n  |\n4 |     let mut already_seen = HashSet::new();\n\
    \  |                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = HashSet::new();\n\
    \    let mut unique_numbers_vec = Vec::new();\n\n    for number in numbers {\n\
    \        if unique_numbers.insert(number) {\n            unique_numbers_vec.push(number);\n\
    \        }\n    }\n\n    unique_numbers_vec\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4ffl16hu.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut single_numbers = Vec::new();\n    for\
    \ number in numbers {\n        if single_numbers.contains(&number) {\n       \
    \     continue;\n        }\n        single_numbers.push(number);\n    }\n    single_numbers\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmprsln5zt3.rs:18:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique = vec![];\n    let mut seen\
    \ = HashSet::new();\n    for n in numbers {\n        if !seen.contains(&n) {\n\
    \            unique.push(n);\n            seen.insert(n);\n        }\n    }\n\
    \    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmprgq2hovt.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique = Vec::new();\n    let mut left\
    \ = Vec::new();\n    let mut num_map = HashMap::new();\n\n    for i in numbers\
    \ {\n        let counter = num_map.entry(i).or_insert(0);\n        *counter +=\
    \ 1;\n    }\n\n    for (num, counter) in num_map {\n        if counter == 1 {\n\
    \            unique.push(num);\n        } else {\n            left.push(num);\n\
    \        }\n    }\n\n    let mut result = Vec::new();\n    for i in numbers {\n\
    \        if unique.contains(&i) {\n            result.push(i);\n        }\n  \
    \  }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpnp42mvnq.rs:6:23\n  |\n6 |     let mut num_map = HashMap::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut n = numbers;\n    n.sort();\n    n.dedup();\n\
    \    n\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp6vemjboh.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers_set = numbers.iter().collect::<HashSet<_>>();\n\
    \    let mut result = Vec::new();\n    for n in numbers {\n        if numbers_set.contains(&n)\
    \ {\n            result.push(n);\n            numbers_set.remove(&n);\n      \
    \  }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmptg8k8816.rs:4:52\n\
    \  |\n4 |     let mut numbers_set = numbers.iter().collect::<HashSet<_>>();\n\
    \  |                                                    ^^^^^^^ not found in this\
    \ scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique = HashSet::new();\n    let mut\
    \ new_numbers = Vec::new();\n    for number in numbers {\n        if unique.insert(number)\
    \ {\n            new_numbers.push(number);\n        }\n    }\n    new_numbers\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfzvnax93.rs:4:22\n  |\n4 |     let mut unique = HashSet::new();\n  |\
    \                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers_deduped = Vec::new();\n   \
    \ for number in numbers {\n        if !numbers_deduped.contains(&number) {\n \
    \           numbers_deduped.push(number);\n        }\n    }\n    numbers_deduped\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpsl4yzwoc.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n\
    \    let mut unique: Vec<isize> = Vec::new();\n\n    for n in numbers {\n    \
    \    if !seen.contains(&n) {\n            seen.insert(n);\n            unique.push(n);\n\
    \        }\n    }\n\n    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpimpu_et_.rs:4:19\n\
    \  |\n4 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpimpu_et_.rs:4:36\n  |\n4 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for n in numbers {\n        if !seen.contains(&n) {\n\
    \            result.push(n);\n            seen.insert(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8xu4z3mh.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut cnt: HashMap<isize, isize> = HashMap::new();\n\
    \    let mut res: Vec<isize> = Vec::new();\n    for i in &numbers {\n        let\
    \ mut n = 1;\n        match cnt.get(i) {\n            Some(c) => n = *c + 1,\n\
    \            None => {},\n        }\n        cnt.insert(*i, n);\n    }\n    for\
    \ i in &numbers {\n        if cnt.get(i).unwrap() < &2 {\n            res.push(*i);\n\
    \        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpehd09zt1.rs:4:18\n\
    \  |\n4 |     let mut cnt: HashMap<isize, isize> = HashMap::new();\n  |      \
    \            ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpehd09zt1.rs:4:42\n\
    \  |\n4 |     let mut cnt: HashMap<isize, isize> = HashMap::new();\n  |      \
    \                                    ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.into_iter().unique().collect()\n}\n\
    \nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `std::vec::IntoIter`\
    \ in the current scope\n --> /tmp/tmpux0b67oq.rs:4:25\n  |\n4 |     numbers.into_iter().unique().collect()\n\
    \  |                         ^^^^^^ method not found in `std::vec::IntoIter<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut set = numbers.iter().collect::<HashSet<_>>();\n\
    \    set.drain().collect()\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp3demgpv3.rs:4:44\n\
    \  |\n4 |     let mut set = numbers.iter().collect::<HashSet<_>>();\n  |     \
    \                                       ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 0
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.iter().cloned().filter(|n| numbers.iter().filter(|m|\
    \ *m == n).count() == 1).collect()\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut tmp = Vec::new();\n    for x in numbers\
    \ {\n        if !tmp.contains(&x) {\n            tmp.push(x);\n        }\n   \
    \ }\n    tmp\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpvx6u200p.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut set\
    \ = HashSet::new();\n    for item in numbers {\n        if !set.contains(&item)\
    \ {\n            res.push(item);\n            set.insert(item);\n        }\n \
    \   }\n    res\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n   \
    \ assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpznpstzr_.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ result = Vec::new();\n\n    for &number in &numbers {\n        if !seen.contains(&number)\
    \ {\n            seen.insert(number);\n            result.push(number);\n    \
    \    }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpahk9cte1.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut dups = HashSet::new();\n    let mut\
    \ unique = Vec::new();\n    for n in numbers {\n        if dups.contains(&n) {\n\
    \            continue;\n        }\n        if unique.contains(&n) {\n        \
    \    dups.insert(n);\n            continue;\n        }\n        unique.push(n);\n\
    \    }\n    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpe4mcb7m0.rs:4:20\n  |\n4 |     let mut dups = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers_copy = numbers.clone();\n \
    \   let mut numbers_set = HashSet::new();\n    let mut numbers_new = Vec::new();\n\
    \n    for number in numbers {\n        if !numbers_set.contains(&number) {\n \
    \           numbers_set.insert(number);\n            numbers_new.push(number);\n\
    \        }\n    }\n\n    numbers_new\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp2d8d5a_3.rs:5:27\n  |\n5 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = HashSet::new();\n\
    \    let mut number_counts = HashMap::new();\n\n    // First pass: count the number\
    \ of times each number occurs.\n    for number in numbers {\n        let count\
    \ = number_counts.entry(number).or_insert(0);\n        *count += 1;\n    }\n\n\
    \    // Second pass: remove any numbers that occur more than once.\n    for (number,\
    \ count) in number_counts {\n        if count == 1 {\n            unique_numbers.insert(number);\n\
    \        }\n    }\n\n    // Return all numbers that occur exactly once.\n    unique_numbers.iter().cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpv7mxhbb7.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpv7mxhbb7.rs:5:29\n\
    \  |\n5 |     let mut number_counts = HashMap::new();\n  |                   \
    \          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut count\
    \ = HashMap::new();\n\n    for i in numbers {\n        count.entry(i).and_modify(|c|\
    \ *c += 1).or_insert(1);\n    }\n\n    for i in numbers {\n        if count[&i]\
    \ == 1 {\n            result.push(i);\n        }\n    }\n\n    result\n}\n\nfn\
    \ main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp6jqbzlyj.rs:5:21\n  |\n5 |     let mut count = HashMap::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ result = Vec::new();\n\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            result.push(n);\n        }\n   \
    \ }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp38donp7w.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n  // collect() consumes the iterator to collect\
    \ it into a vector\n  numbers.into_iter().collect::<HashSet<isize>>().into_iter().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp7fs_7tsj.rs:5:33\n\
    \  |\n5 |   numbers.into_iter().collect::<HashSet<isize>>().into_iter().collect()\n\
    \  |                                 ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.into_iter().collect::<LinkedHashSet<_>>().into_iter().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `LinkedHashSet` in this scope\n --> /tmp/tmpwdwmn1u3.rs:4:35\n\
    \  |\n4 |     numbers.into_iter().collect::<LinkedHashSet<_>>().into_iter().collect()\n\
    \  |                                   ^^^^^^^^^^^^^ not found in this scope\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen:\
    \ HashSet<isize> = HashSet::new();\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            result.push(n);\n            seen.insert(n);\n        }\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpfvbc4d9i.rs:5:19\n\
    \  |\n5 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpfvbc4d9i.rs:5:36\n  |\n5 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ output = Vec::new();\n\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            output.push(n);\n        }\n   \
    \ }\n\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_m56d8ky.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output = vec![];\n    let mut numbers_set\
    \ = vec![];\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            output.push(number);\n            numbers_set.push(number);\n\
    \        }\n    }\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp6eu81yp6.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for\
    \ number in numbers {\n        if !unique_numbers.contains(&number) {\n      \
    \      unique_numbers.push(number);\n        }\n    }\n    unique_numbers\n}\n\
    \nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpsw2sakyv.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for\
    \ number in numbers {\n        if !unique_numbers.contains(&number) {\n      \
    \      unique_numbers.push(number);\n        }\n    }\n    unique_numbers\n}\n\
    \nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpsw2sakyv.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut nums: Vec<isize> = Vec::new();\n  \
    \  let mut present: Vec<isize> = Vec::new();\n    for n in numbers {\n       \
    \ if present.contains(&n) {\n            // We have already seen this element\n\
    \            // Do nothing\n        } else {\n            nums.push(n);\n    \
    \        present.push(n);\n        }\n    }\n    nums\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpppcbwe2o.rs:22:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set\
    \ = HashSet::new();\n    for number in numbers {\n        if !set.contains(&number)\
    \ {\n            result.push(number);\n            set.insert(number);\n     \
    \   }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4pycbly8.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ result = Vec::new();\n\n    for x in numbers {\n        if !seen.contains(&x)\
    \ {\n            seen.insert(x);\n            result.push(x);\n        }\n   \
    \ }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpobk4e0ki.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // TODO\n    let mut numbers_map = HashMap::new();\n\
    \    for n in numbers {\n        let v = numbers_map.entry(n).or_insert(0);\n\
    \        *v += 1;\n    }\n    return numbers.into_iter().filter(|x| numbers_map[x]\
    \ == 1).collect();\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpv4kuj_dz.rs:5:27\n  |\n5 |     let mut numbers_map = HashMap::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut new_vec = Vec::new();\n    let mut\
    \ hash = HashSet::new();\n    for item in numbers {\n        if !hash.contains(&item)\
    \ {\n            hash.insert(item);\n            new_vec.push(item);\n       \
    \ }\n    }\n    new_vec\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7aj899ce.rs:5:20\n  |\n5 |     let mut hash = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut numbers\
    \ = numbers;\n    while let Some(number) = numbers.pop() {\n        if result.contains(&number)\
    \ {\n            continue;\n        }\n        let mut count = 0;\n        for\
    \ n in &numbers {\n            if *n == number {\n                count += 1;\n\
    \            }\n        }\n        if count == 0 {\n            result.push(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[4, 3, 2, 1]`,\n right: `[1, 2, 3, 4]`', /tmp/tmpcoyw0ant.rs:26:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output: Vec<isize> = vec![];\n    let\
    \ mut seen = HashSet::new();\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            output.push(n);\n            seen.insert(n);\n        }\n   \
    \ }\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpufo4uj23.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut occurences\
    \ = HashMap::new();\n\n    for number in numbers {\n        match occurences.get(&number)\
    \ {\n            Some(count) => {\n                occurences.insert(number, count\
    \ + 1);\n            }\n            None => {\n                occurences.insert(number,\
    \ 1);\n                result.push(number);\n            }\n        }\n    }\n\
    \n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpc0792tu9.rs:5:26\n  |\n5 |     let mut occurences = HashMap::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            result.push(number);\n            seen.insert(number);\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpd9djlznb.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut n = numbers;\n    n.sort();\n    n.dedup();\n\
    \    n\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp6vemjboh.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique = Vec::new();\n    for num in\
    \ numbers {\n        if !unique.contains(&num) {\n            unique.push(num);\n\
    \        }\n    }\n    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp9a50zjiw.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut map = HashMap::new();\n    for x in\
    \ numbers {\n        if map.contains_key(&x) {\n            map.remove(&x);\n\
    \        } else {\n            map.insert(x, 1);\n        }\n    }\n    map.keys().cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpg6a_i5vy.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut set = HashSet::new();\n    let mut\
    \ res = Vec::new();\n    for num in numbers {\n        if !set.contains(&num)\
    \ {\n            set.insert(num);\n            res.push(num);\n        }\n   \
    \ }\n    res\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmplarxda62.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.iter().unique().cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmp4xgb4zap.rs:4:20\n  |\n4 |     numbers.iter().unique().cloned().collect()\n\
    \  |                    ^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = vec![];\n    for number\
    \ in numbers {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpxqxoekvk.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut uniques = Vec::new();\n    for n in\
    \ numbers {\n        if !uniques.contains(&n) {\n            uniques.push(n);\n\
    \        }\n    }\n    uniques\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpl_ue74si.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for n in numbers {\n        if !seen.contains(&n) {\n\
    \            result.push(n);\n            seen.insert(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8xu4z3mh.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for\
    \ &number in &numbers {\n        if !unique_numbers.contains(&number) {\n    \
    \        unique_numbers.push(number);\n        }\n    }\n    unique_numbers\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpisdrdyp2.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ unique = Vec::new();\n\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            unique.push(n);\n        }\n   \
    \ }\n\n    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_86fngkm.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // let mut answer: Vec<isize> = Vec::new();\n\
    \    // let mut seen: Vec<isize> = Vec::new();\n    // for n in numbers {\n  \
    \  //     if !seen.contains(&n) {\n    //         answer.push(n);\n    //    \
    \     seen.push(n);\n    //     }\n    // }\n    // answer\n    numbers.into_iter().collect::<HashSet<isize>>().into_iter().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n  --> /tmp/tmpkwd0wgvo.rs:13:35\n\
    \   |\n13 |     numbers.into_iter().collect::<HashSet<isize>>().into_iter().collect()\n\
    \   |                                   ^^^^^^^ not found in this scope\n   |\n\
    help: consider importing this struct\n   |\n1  | use std::collections::HashSet;\n\
    \   |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n\
    \    let mut prev: Option<isize> = None;\n    let mut result = Vec::new();\n \
    \   for n in numbers {\n        if prev != Some(n) {\n            result.push(n);\n\
    \        }\n        prev = Some(n);\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp46yyoc85.rs:21:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut counter\
    \ = HashMap::new();\n    for number in numbers {\n        *counter.entry(number).or_insert(0)\
    \ += 1;\n    }\n    for number in numbers {\n        if counter[&number] == 1\
    \ {\n            res.push(number);\n        }\n    }\n    res\n}\n\nfn main()\
    \ {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpftz2xslv.rs:5:23\n  |\n5 |     let mut counter = HashMap::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut set = HashSet::new();\n    let mut\
    \ result = Vec::new();\n    for num in numbers {\n        if !set.contains(&num)\
    \ {\n            set.insert(num);\n            result.push(num);\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpud4q8a9b.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut map\
    \ = HashMap::new();\n    for num in numbers {\n        let count = map.entry(num).or_insert(0);\n\
    \        *count += 1;\n    }\n    for num in numbers {\n        if map[&num] ==\
    \ 1 {\n            res.push(num);\n        }\n    }\n    res\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpjoy6hlmf.rs:5:19\n  |\n5 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.into_iter().collect::<HashSet<_>>().into_iter().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpybizpdn4.rs:4:35\n\
    \  |\n4 |     numbers.into_iter().collect::<HashSet<_>>().into_iter().collect()\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ output = Vec::new();\n\n    for item in numbers {\n        if !seen.contains(&item)\
    \ {\n            seen.insert(item);\n            output.push(item);\n        }\n\
    \    }\n\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp00bdec34.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut new_vec = Vec::new();\n    for val\
    \ in numbers {\n        if new_vec.contains(&val) {\n            continue;\n \
    \       }\n        new_vec.push(val);\n    }\n    new_vec\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp9qn0h5ec.rs:18:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut map = HashMap::new();\n    let mut\
    \ result = Vec::new();\n\n    for i in numbers {\n        let counter = map.entry(i).or_insert(0);\n\
    \        *counter += 1;\n    }\n\n    for num in numbers {\n        let counter\
    \ = map.get(&num).unwrap();\n        if *counter == 1 {\n            result.push(num);\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp9l9kwzt3.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ out = Vec::new();\n    for n in numbers {\n        if !seen.contains(&n) {\n\
    \            seen.insert(n);\n            out.push(n);\n        }\n    }\n   \
    \ out\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxs3im1xw.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut occured\
    \ = HashSet::new();\n    for number in numbers {\n        if !occured.contains(&number)\
    \ {\n            res.push(number);\n            occured.insert(number);\n    \
    \    }\n    }\n    res\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmps5a1u0fq.rs:5:23\n  |\n5 |     let mut occured = HashSet::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v: Vec<isize> = Vec::new();\n    let\
    \ mut m: HashMap<isize, usize> = HashMap::new();\n    for n in numbers {\n   \
    \     if let Some(x) = m.get_mut(&n) {\n            *x += 1;\n        } else {\n\
    \            m.insert(n, 1);\n        }\n    }\n    for n in numbers {\n     \
    \   if m.get(&n).unwrap() == &1 {\n            v.push(n);\n        }\n    }\n\
    \    v\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp5yad2s5c.rs:5:16\n\
    \  |\n5 |     let mut m: HashMap<isize, usize> = HashMap::new();\n  |        \
    \        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n --> /tmp/tmp5yad2s5c.rs:5:40\n  |\n5 |  \
    \   let mut m: HashMap<isize, usize> = HashMap::new();\n  |                  \
    \                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut lst = vec![];\n    for num in numbers\
    \ {\n        if !lst.contains(&num) {\n            lst.push(num);\n        }\n\
    \    }\n    lst\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp7r4ydl8y.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set\
    \ = HashSet::new();\n    for number in numbers {\n        if !set.contains(&number)\
    \ {\n            result.push(number);\n            set.insert(number);\n     \
    \   }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4pycbly8.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n\
    \    let mut res: Vec<isize> = Vec::new();\n\n    for n in numbers {\n       \
    \ if !seen.contains(&n) {\n            seen.insert(n);\n            res.push(n);\n\
    \        }\n    }\n\n    res\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpexkvb35q.rs:4:19\n\
    \  |\n4 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpexkvb35q.rs:4:36\n  |\n4 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique = vec![];\n    let mut set =\
    \ HashSet::new();\n    for num in numbers {\n        if !set.contains(&num) {\n\
    \            unique.push(num);\n            set.insert(num);\n        }\n    }\n\
    \    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp369rk9yp.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut current_set\
    \ = HashSet::new();\n    for n in numbers {\n        if !current_set.contains(&n)\
    \ {\n            result.push(n);\n            current_set.insert(n);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0lqisa9e.rs:5:27\n  |\n5 |     let mut current_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut checked\
    \ = HashSet::new();\n    for n in numbers {\n        if !checked.contains(&n)\
    \ {\n            res.push(n);\n            checked.insert(n);\n        }\n   \
    \ }\n    res\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp6b11fyhy.rs:5:23\n  |\n5 |     let mut checked = HashSet::new();\n \
    \ |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let set: HashSet<isize> = numbers.iter().cloned().collect();\n\
    \    let mut vec: Vec<isize> = Vec::new();\n    for x in numbers {\n        if\
    \ set.contains(&x) {\n            vec.push(x);\n            set.remove(&x);\n\
    \        }\n    }\n    vec\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpfpfpt82r.rs:4:14\n\
    \  |\n4 |     let set: HashSet<isize> = numbers.iter().cloned().collect();\n \
    \ |              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut set =\
    \ HashSet::new();\n    for i in numbers {\n        if !set.contains(&i) {\n  \
    \          result.push(i);\n            set.insert(i);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpygewrpr4.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut numbers_left\
    \ = numbers.clone();\n    while numbers_left.len() > 0 {\n        let first =\
    \ numbers_left.remove(0);\n        result.push(first);\n        numbers_left =\
    \ numbers_left.into_iter().filter(|&x| x != first).collect();\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp1yn4225j.rs:18:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set\
    \ = HashSet::new();\n    for num in numbers {\n        if !set.contains(&num)\
    \ {\n            result.push(num);\n            set.insert(num);\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0x382jd3.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut uniques = Vec::new();\n    let mut\
    \ ids = HashSet::new();\n\n    for number in numbers {\n        if !ids.contains(&number)\
    \ {\n            uniques.push(number);\n            ids.insert(number);\n    \
    \    }\n    }\n\n    uniques\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmppimnetg9.rs:5:19\n  |\n5 |     let mut ids = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n\
    \    let mut left: Vec<isize> = Vec::new();\n\n    for n in numbers {\n      \
    \  if seen.contains(&n) {\n            continue;\n        }\n        seen.insert(n);\n\
    \        left.push(n);\n    }\n\n    left\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpwi36hha5.rs:4:19\n\
    \  |\n4 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpwi36hha5.rs:4:36\n  |\n4 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers_set = HashSet::new();\n   \
    \ let mut unique_numbers = Vec::new();\n\n    for number in numbers {\n      \
    \  if !numbers_set.contains(&number) {\n            unique_numbers.push(number);\n\
    \            numbers_set.insert(number);\n        }\n    }\n\n    unique_numbers\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfxp7zfcy.rs:4:27\n  |\n4 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut uniques = vec![];\n    for num in numbers\
    \ {\n        if !uniques.contains(&num) {\n            uniques.push(num);\n  \
    \      }\n    }\n    uniques\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpqfn7wqx1.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut map = HashMap::new();\n    for n in\
    \ numbers {\n        *map.entry(n).or_insert(0) += 1;\n    }\n    numbers.into_iter().filter(|n|\
    \ map[n] == 1).collect()\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp9z86ttih.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ uniques = Vec::new();\n\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            uniques.push(n);\n        }\n  \
    \  }\n\n    uniques\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpbn3cxx6n.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for num in numbers {\n        if !seen.contains(&num)\
    \ {\n            result.push(num);\n            seen.insert(num);\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpn68k_rrw.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            result.push(number);\n            seen.insert(number);\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpd9djlznb.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut map = HashMap::new();\n    let mut\
    \ result = Vec::new();\n\n    for i in numbers {\n        match map.get(&i) {\n\
    \            Some(value) => {\n                map.insert(i, value + 1);\n   \
    \         }\n            None => {\n                map.insert(i, 1);\n      \
    \      }\n        }\n    }\n\n    for i in numbers {\n        match map.get(&i)\
    \ {\n            Some(value) => {\n                if *value == 1 {\n        \
    \            result.push(i);\n                }\n            }\n            None\
    \ => (),\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp59u38z4l.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n\
    \    numbers.dedup();\n    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp15fu7wa7.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut remove_duplicates = numbers;\n    remove_duplicates.sort();\n\
    \    remove_duplicates.dedup();\n    remove_duplicates\n}\n\nfn main() {\n   \
    \ let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpugtm7bs9.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut non_duplicate_numbers = Vec::new();\n\
    \    for n in numbers {\n        let mut counter = 0;\n        for x in numbers.iter()\
    \ {\n            if n == *x {\n                counter += 1;\n            }\n\
    \        }\n        if counter == 1 {\n            non_duplicate_numbers.push(n);\n\
    \        }\n    }\n    non_duplicate_numbers\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `numbers`\n    --> /tmp/tmp75gmz5ma.rs:7:18\n\
    \     |\n3    | fn remove_duplicates(numbers: Vec<isize>) -> Vec<isize> {\n  \
    \   |                      ------- move occurs because `numbers` has type `Vec<isize>`,\
    \ which does not implement the `Copy` trait\n4    |     let mut non_duplicate_numbers\
    \ = Vec::new();\n5    |     for n in numbers {\n     |              -------\n\
    \     |              |\n     |              `numbers` moved due to this implicit\
    \ call to `.into_iter()`\n     |              help: consider borrowing to avoid\
    \ moving into the for loop: `&numbers`\n6    |         let mut counter = 0;\n\
    7    |         for x in numbers.iter() {\n     |                  ^^^^^^^^^^^^^^\
    \ value borrowed here after move\n     |\nnote: this function takes ownership\
    \ of the receiver `self`, which moves `numbers`\n     = note: borrow occurs due\
    \ to deref coercion to `[isize]`\nnote: deref defined here\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0382`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for &n in &numbers {\n        if !seen.contains(&n) {\n\
    \            output.push(n);\n            seen.insert(n);\n        }\n    }\n\
    \    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7z88moeu.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = vec![];\n    let mut output\
    \ = vec![];\n    for num in numbers {\n        if seen.contains(&num) {\n    \
    \        continue;\n        }\n        output.push(num);\n        seen.push(num);\n\
    \    }\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp3a7c00ot.rs:20:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // TODO\n    let mut out_numbers: Vec<isize>\
    \ = Vec::new();\n    for i in 0..numbers.len() {\n        if !out_numbers.contains(&numbers[i])\
    \ {\n            out_numbers.push(numbers[i]);\n        }\n    }\n    out_numbers\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp9ov7bijh.rs:18:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set\
    \ = HashSet::new();\n    for n in numbers {\n        if !set.contains(&n) {\n\
    \            result.push(n);\n            set.insert(n);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpc80seeve.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.iter().unique().map(|n| *n).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmp9115bxa4.rs:4:20\n  |\n4 |     numbers.iter().unique().map(|n|\
    \ *n).collect()\n  |                    ^^^^^^ method not found in `std::slice::Iter<'_,\
    \ isize>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output: Vec<isize> = Vec::new();\n\
    \    for num in numbers {\n        if output.contains(&num) {\n            continue;\n\
    \        } else {\n            output.push(num);\n        }\n    }\n    output\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp47ltv93v.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    numbers.dedup();\n\
    \    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 2, 4, 3, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp3c2iklib.rs:13:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            result.push(number);\n            seen.insert(number);\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpd9djlznb.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut tmp\
    \ = HashSet::new();\n    for n in numbers {\n        if !tmp.contains(&n) {\n\
    \            tmp.insert(n);\n            result.push(n);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpro1iuc1a.rs:5:19\n  |\n5 |     let mut tmp = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n\
    \    numbers.dedup();\n    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp15fu7wa7.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for\
    \ number in numbers {\n        if !unique_numbers.contains(&number) {\n      \
    \      unique_numbers.push(number);\n        }\n    }\n    unique_numbers\n}\n\
    \nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpsw2sakyv.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut occurrences\
    \ = HashMap::new();\n\n    for number in numbers {\n        if let Some(count)\
    \ = occurrences.get_mut(&number) {\n            *count += 1;\n        } else {\n\
    \            occurrences.insert(number, 1);\n        }\n    }\n\n    for number\
    \ in numbers {\n        if let Some(count) = occurrences.get(&number) {\n    \
    \        if *count == 1 {\n                result.push(number);\n            }\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpb863ry4v.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for i in numbers {\n        if !seen.contains(&i) {\n\
    \            result.push(i);\n            seen.insert(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp63_89u6v.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n  let mut result = vec![];\n  let mut numbers =\
    \ numbers;\n  while !numbers.is_empty() {\n    let last = numbers.pop().unwrap();\n\
    \    result.push(last);\n    numbers.retain(|&x| x != last);\n  }\n  result.reverse();\n\
    \  result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 4, 3, 5]`,\n right: `[1, 4, 5]`', /tmp/tmplnh8vrm0.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n\
    \    let mut v: Vec<isize> = Vec::new();\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            v.push(n);\n        }\n    }\n \
    \   v\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpmthz4btl.rs:4:19\n\
    \  |\n4 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpmthz4btl.rs:4:36\n  |\n4 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.into_iter().collect::<HashSet<_>>().into_iter().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpybizpdn4.rs:4:35\n\
    \  |\n4 |     numbers.into_iter().collect::<HashSet<_>>().into_iter().collect()\n\
    \  |                                   ^^^^^^^ not found in this scope\n  |\n\
    help: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n\
    \  |\n\nerror: aborting due to previous error\n\nFor more information about this\
    \ error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut numbers_set\
    \ = HashSet::new();\n\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwny1bqo9.rs:5:27\n  |\n5 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output: Vec<isize> = Vec::new();\n\
    \    let mut tracker: HashMap<isize, usize> = HashMap::new();\n\n    for n in\
    \ numbers {\n        let count = tracker.entry(n).or_insert(0);\n        *count\
    \ += 1;\n    }\n\n    for n in numbers {\n        if tracker[&n] == 1 {\n    \
    \        output.push(n);\n        }\n    }\n\n    output\n}\n\nfn main() {\n \
    \   let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp40bafidg.rs:5:22\n\
    \  |\n5 |     let mut tracker: HashMap<isize, usize> = HashMap::new();\n  |  \
    \                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp40bafidg.rs:5:46\n\
    \  |\n5 |     let mut tracker: HashMap<isize, usize> = HashMap::new();\n  |  \
    \                                            ^^^^^^^ not found in this scope\n\
    \  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n\
    \  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0412, E0433.\nFor more information about an error, try `rustc\
    \ --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut uniques = Vec::new();\n    for number\
    \ in numbers {\n        if !uniques.contains(&number) {\n            uniques.push(number);\n\
    \        }\n    }\n    uniques\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpy_46q499.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut counts\
    \ = HashMap::new();\n\n    for number in numbers {\n        let count = counts.entry(number).or_insert(0);\n\
    \        *count += 1;\n    }\n\n    for number in numbers {\n        if counts[&number]\
    \ == 1 {\n            result.push(number);\n        }\n    }\n\n    result\n}\n\
    \nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpqumesbpv.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |\
    \                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut n: Vec<isize> = numbers;\n    n.sort();\n\
    \    n.dedup();\n    n\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmppurolk0r.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut uniques = Vec::new();\n    for num\
    \ in numbers {\n        if !uniques.contains(&num) {\n            uniques.push(num);\n\
    \        }\n    }\n    uniques\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp9iblxaj6.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut encountered = Vec::new();\n    let\
    \ mut result = Vec::new();\n\n    for x in numbers {\n        if !encountered.contains(&x)\
    \ {\n            encountered.push(x);\n            result.push(x);\n        }\n\
    \    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmptpjc9ijd.rs:21:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // TODO: Implement function\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp9uu2_tah.rs:5:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut map = HashMap::new();\n    for number\
    \ in numbers {\n        let count = map.entry(number).or_insert(0);\n        *count\
    \ += 1;\n    }\n    numbers.into_iter().filter(|&number| map[&number] == 1).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp9uu4et7h.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut temp = numbers.clone();\n    temp.sort();\n\
    \    temp.dedup();\n    temp\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpu3bn8_63.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    numbers.dedup();\n\
    \    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 2, 4, 3, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp3c2iklib.rs:13:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers_iter = numbers.iter();\n  \
    \  let mut numbers_unique = Vec::new();\n    while let Some(num) = numbers_iter.next()\
    \ {\n        if numbers_iter.find(|&x| x == num).is_none() {\n            numbers_unique.push(*num);\n\
    \        }\n    }\n    numbers_unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1]`,\n right: `[1, 2, 3, 4]`', /tmp/tmpc_99undo.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // HashMap of element to count.\n    let mut\
    \ elements = HashMap::new();\n\n    // Count number of occurrences of each element.\n\
    \    for n in numbers {\n        *elements.entry(n).or_insert(0) += 1;\n    }\n\
    \n    // Remove duplicates.\n    let mut numbers = numbers;\n    numbers.retain(|n|\
    \ *elements.get(n).unwrap() == 1);\n\n    numbers\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmph3xg28lk.rs:5:24\n  |\n5 |     let mut elements = HashMap::new();\n\
    \  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n\
    \    let mut result: Vec<isize> = Vec::new();\n\n    for n in numbers {\n    \
    \    if !seen.contains(&n) {\n            seen.insert(n);\n            result.push(n);\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpc_xszdog.rs:4:19\n\
    \  |\n4 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpc_xszdog.rs:4:36\n  |\n4 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output = Vec::new();\n    let mut frequency\
    \ = HashMap::new();\n\n    for &n in &numbers {\n        let counter = frequency.entry(n).or_insert(0);\n\
    \        *counter += 1;\n    }\n\n    for &n in &numbers {\n        if frequency[&n]\
    \ == 1 {\n            output.push(n);\n        }\n    }\n\n    output\n}\n\nfn\
    \ main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpbgu4ulnx.rs:5:25\n  |\n5 |     let mut frequency = HashMap::new();\n\
    \  |                         ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // your solution here\n    let mut result =\
    \ vec![];\n    for number in numbers {\n        if result.contains(&number) {\n\
    \            continue;\n        }\n        result.push(number);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmplpxu1qeb.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            result.push(number);\n            seen.insert(number);\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpd9djlznb.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!(\"remove duplicates from {:?}\"\
    , numbers);\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: remove duplicates from []'',
    /tmp/tmpvwuy8lpi.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n\
    \    let mut output = Vec::new();\n    while !numbers.is_empty() {\n        let\
    \ last = numbers.pop().unwrap();\n        if !numbers.contains(&last) {\n    \
    \        output.push(last);\n        }\n    }\n    output.reverse();\n    output\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmplpto63zz.rs:21:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut set = HashSet::new();\n    let mut\
    \ result = Vec::new();\n    for number in numbers {\n        if !set.contains(&number)\
    \ {\n            set.insert(number);\n            result.push(number);\n     \
    \   }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpqgk39l8u.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut nums: HashSet<isize> = HashSet::new();\n\
    \    let mut result: Vec<isize> = Vec::new();\n\n    for num in numbers {\n  \
    \      if !nums.contains(&num) {\n            nums.insert(num);\n            result.push(num);\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpc70x59_r.rs:4:19\n\
    \  |\n4 |     let mut nums: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpc70x59_r.rs:4:36\n  |\n4 |  \
    \   let mut nums: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut new_vector = vec![];\n    let mut seen\
    \ = vec![];\n    for number in numbers {\n        if !seen.contains(&number) {\n\
    \            new_vector.push(number);\n            seen.push(number);\n      \
    \  }\n    }\n    new_vector\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp99d0zs0r.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ output = Vec::new();\n\n    for num in numbers {\n        if !seen.contains(&num)\
    \ {\n            seen.insert(num);\n            output.push(num);\n        }\n\
    \    }\n\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptapfmhmt.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut set\
    \ = HashSet::new();\n    for n in numbers {\n        if !set.contains(&n) {\n\
    \            res.push(n);\n            set.insert(n);\n        }\n    }\n    res\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpmmovk1z4.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique = Vec::new();\n    let mut frequency\
    \ = HashMap::new();\n\n    for num in numbers {\n        let freq = frequency.entry(num).or_insert(0);\n\
    \        *freq += 1;\n    }\n\n    for num in numbers {\n        if frequency[&num]\
    \ == 1 {\n            unique.push(num);\n        }\n    }\n\n    unique\n}\n\n\
    fn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmplv5n0fl1.rs:5:25\n  |\n5 |     let mut frequency = HashMap::new();\n\
    \  |                         ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n\
    \    let mut result = Vec::new();\n    for i in 0..numbers.len() {\n        if\
    \ i == 0 || numbers[i] != numbers[i - 1] {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpz64bb9h4.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut occurences\
    \ = HashMap::new();\n\n    for number in numbers {\n        if !occurences.contains_key(&number)\
    \ {\n            occurences.insert(number, 1);\n            result.push(number);\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp302024g2.rs:5:26\n  |\n5 |     let mut occurences = HashMap::new();\n\
    \  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut set = HashSet::new();\n    let mut\
    \ result = Vec::new();\n    for num in numbers {\n        if !set.contains(&num)\
    \ {\n            set.insert(num);\n            result.push(num);\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpud4q8a9b.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut vec = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for x in numbers {\n        if !seen.contains(&x) {\n\
    \            vec.push(x);\n            seen.insert(x);\n        }\n    }\n   \
    \ vec\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsb37qs0e.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut set = HashSet::new();\n    let mut\
    \ list = Vec::new();\n    for i in numbers {\n        if !set.contains(&i) {\n\
    \            set.insert(i);\n            list.push(i);\n        }\n    }\n   \
    \ list\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyk0nzxa8.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!(\"From a list of integers, {:?},\
    \ remove all elements that occur more than once. Keep order of elements left the\
    \ same as in the input.\", numbers);\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: From a list of integers,
    [], remove all elements that occur more than once. Keep order of elements left
    the same as in the input.'', /tmp/tmpovpvx2w8.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ result = Vec::new();\n\n    for x in numbers {\n        if !seen.contains(&x)\
    \ {\n            seen.insert(x);\n            result.push(x);\n        }\n   \
    \ }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpobk4e0ki.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmp5pzxgyp0.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for &num in &numbers {\n        if !seen.contains(&num)\
    \ {\n            output.push(num);\n            seen.insert(num);\n        }\n\
    \    }\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpbgnfz6s_.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.into_iter().dedup().collect()\n}\n\n\
    fn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `dedup` found for struct `std::vec::IntoIter`\
    \ in the current scope\n --> /tmp/tmp5_t8bspp.rs:4:25\n  |\n4 |     numbers.into_iter().dedup().collect()\n\
    \  |                         ^^^^^ method not found in `std::vec::IntoIter<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    let\
    \ mut count = HashMap::new();\n\n    for n in numbers {\n        let count = count.entry(n).or_insert(0);\n\
    \        *count += 1;\n    }\n\n    for n in numbers {\n        if *count.get(&n).unwrap()\
    \ == 1 {\n            unique_numbers.push(n);\n        }\n    }\n\n    unique_numbers\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpif3x2b1z.rs:5:21\n  |\n5 |     let mut count = HashMap::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!(\"Remove duplicates from: {:?}\"\
    , numbers);\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: Remove duplicates from:
    []'', /tmp/tmp3j6qhha2.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut count = HashMap::new();\n    for num\
    \ in numbers {\n        let count = count.entry(num).or_insert(0);\n        *count\
    \ += 1;\n    }\n    numbers.into_iter().filter(|n| count[n] == 1).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpafg0ld2u.rs:4:21\n  |\n4 |     let mut count = HashMap::new();\n  |\
    \                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut ret = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for n in numbers {\n        if !seen.contains(&n) {\n\
    \            ret.push(n);\n            seen.insert(n);\n        }\n    }\n   \
    \ ret\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfb92bdni.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut out = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for n in numbers {\n        if !seen.contains(&n) {\n\
    \            out.push(n);\n            seen.insert(n);\n        }\n    }\n   \
    \ out\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp44brl9jl.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = HashSet::new();\n\
    \    let mut unique_numbers_vec = Vec::new();\n\n    for number in numbers {\n\
    \        if unique_numbers.insert(number) {\n            unique_numbers_vec.push(number);\n\
    \        }\n    }\n\n    unique_numbers_vec\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4ffl16hu.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n\
    \  |                              ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    let mut c = 0;\n\
    \    let mut k = numbers.len();\n    while c < k {\n        if res.contains(&numbers[c])\
    \ {\n            k -= 1;\n            res.push(numbers[k].clone());\n        }\
    \ else {\n            res.push(numbers[c].clone());\n        }\n        c += 1;\n\
    \    }\n    res.sort();\n    res.iter().map(|&x| x).collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp9mkoe9sx.rs:24:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut output = Vec::new();\n    let mut already_seen\
    \ = HashSet::new();\n    for number in numbers {\n        if !already_seen.contains(&number)\
    \ {\n            output.push(number);\n            already_seen.insert(number);\n\
    \        }\n    }\n    output\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8e1x0cs9.rs:5:28\n  |\n5 |     let mut already_seen = HashSet::new();\n\
    \  |                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    //TODO!\n    let mut seen = HashSet::new();\n\
    \    let mut seen_once = HashSet::new();\n    let mut result = Vec::new();\n\n\
    \    for x in numbers {\n        match seen.get(&x) {\n            Some(_) =>\
    \ continue,\n            None => {\n                match seen_once.get(&x) {\n\
    \                    Some(_) => {\n                        seen.insert(x);\n \
    \                       seen_once.remove(&x);\n                    }\n       \
    \             None => {\n                        seen_once.insert(x);\n      \
    \                  result.push(x);\n                    }\n                }\n\
    \            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpdcwqrmrf.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpdcwqrmrf.rs:6:25\n\
    \  |\n6 |     let mut seen_once = HashSet::new();\n  |                       \
    \  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ unique = Vec::new();\n\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            unique.push(n);\n        }\n   \
    \ }\n\n    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_86fngkm.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut ret: Vec<isize> = Vec::new();\n   \
    \ let mut set: HashSet<isize> = HashSet::new();\n    for number in numbers {\n\
    \        if !set.contains(&number) {\n            ret.push(number);\n        \
    \    set.insert(number);\n        }\n    }\n    ret\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpth04fvd_.rs:5:18\n\
    \  |\n5 |     let mut set: HashSet<isize> = HashSet::new();\n  |             \
    \     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpth04fvd_.rs:5:35\n  |\n5 |  \
    \   let mut set: HashSet<isize> = HashSet::new();\n  |                       \
    \            ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due\
    \ to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set\
    \ = HashSet::new();\n    for i in numbers {\n        if !set.contains(&i) {\n\
    \            result.push(i);\n            set.insert(i);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpnwwy__s3.rs:5:19\n  |\n5 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut deduped = Vec::new();\n    for n in\
    \ numbers {\n        if !deduped.contains(&n) {\n            deduped.push(n);\n\
    \        }\n    }\n    deduped\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpcyrsk1bn.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!(\"Remove duplicates from {:?}\"\
    , numbers);\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: Remove duplicates from []'',
    /tmp/tmpiisdov6c.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ result = Vec::new();\n\n    for n in numbers {\n        if !seen.contains(&n)\
    \ {\n            seen.insert(n);\n            result.push(n);\n        }\n   \
    \ }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp38donp7w.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut mem = BTreeSet::new();\n    let mut\
    \ result = Vec::new();\n    for n in numbers {\n        if !mem.contains(&n) {\n\
    \            result.push(n);\n            mem.insert(n);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `BTreeSet`\n -->\
    \ /tmp/tmphk3mbnhv.rs:4:19\n  |\n4 |     let mut mem = BTreeSet::new();\n  | \
    \                  ^^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::BTreeSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut numbers = numbers;\n    let mut index\
    \ = 0;\n    while index < numbers.len() {\n        let item = numbers[index];\n\
    \        let mut duplicates = numbers.clone();\n        duplicates.remove(index);\n\
    \        if duplicates.contains(&item) {\n            numbers.remove(index);\n\
    \        } else {\n            index += 1;\n        }\n    }\n    numbers\n}\n\
    \nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 4, 3, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp3va8jf22.rs:23:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen\
    \ = HashSet::new();\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            result.push(number);\n            seen.insert(number);\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpd9djlznb.rs:5:20\n  |\n5 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut occurrence_counts = HashMap::new();\n\
    \    for n in numbers {\n        *occurrence_counts.entry(n).or_insert(0) += 1;\n\
    \    }\n    numbers.into_iter().filter(|n| occurrence_counts[n] == 1).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpzbr_36pe.rs:4:33\n  |\n4 |     let mut occurrence_counts = HashMap::new();\n\
    \  |                                 ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    use std::collections::HashSet;\n    use std::collections::hash_map::Entry;\n\
    \n    let mut counts = HashSet::new();\n    let mut unique = Vec::new();\n\n \
    \   for n in numbers {\n        match counts.entry(n) {\n            Entry::Vacant(v)\
    \ => {\n                v.insert(1);\n                unique.push(n);\n      \
    \      }\n            Entry::Occupied(mut o) => {\n                *o.get_mut()\
    \ += 1;\n            }\n        }\n    }\n\n    unique\n}\n\nfn main() {\n   \
    \ let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `entry` found for struct `HashSet` in the\
    \ current scope\n  --> /tmp/tmp9zrnterr.rs:11:22\n   |\n11 |         match counts.entry(n)\
    \ {\n   |                      ^^^^^ method not found in `HashSet<_>`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.iter().collect::<HashSet<_>>().into_iter().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmps3jucr3v.rs:4:30\n\
    \  |\n4 |     numbers.iter().collect::<HashSet<_>>().into_iter().collect()\n \
    \ |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut set = HashSet::new();\n    let mut\
    \ result = Vec::new();\n    for n in numbers {\n        if !set.contains(&n) {\n\
    \            set.insert(n);\n            result.push(n);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfj6kvvr7.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    unimplemented!()\n}\n\nfn main() {\n    let\
    \ candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpjombc7rl.rs:4:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ ret = Vec::new();\n    for number in numbers {\n        if !seen.contains(&number)\
    \ {\n            seen.insert(number);\n            ret.push(number);\n       \
    \ }\n    }\n    ret\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpypzyrcb2.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    use std::collections::HashSet;\n    let mut\
    \ set = HashSet::new();\n    let mut out = Vec::new();\n    for number in numbers\
    \ {\n        if set.insert(number) {\n            out.push(number);\n        }\n\
    \    }\n    out\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp8pw83stu.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822424
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    let\
    \ mut numbers_count = HashMap::new();\n\n    for number in numbers {\n       \
    \ let count = numbers_count.entry(number).or_insert(0);\n        *count += 1;\n\
    \    }\n\n    for number in numbers {\n        if numbers_count[&number] == 1\
    \ {\n            unique_numbers.push(number);\n        }\n    }\n\n    unique_numbers\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmp_407qmh5.rs:5:29\n  |\n5 |     let mut numbers_count = HashMap::new();\n\
    \  |                             ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    numbers.into_iter().fold(Vec::new(), |mut acc,\
    \ elem| {\n        if !acc.contains(&elem) {\n            acc.push(elem);\n  \
    \      }\n        acc\n    })\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpxiam5_3l.rs:16:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822424
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut\
    \ result = Vec::new();\n\n    for &n in &numbers {\n        if seen.contains(&n)\
    \ {\n            continue;\n        }\n        seen.insert(n);\n        result.push(n);\n\
    \    }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpe6kyyivy.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for\
    \ number in numbers {\n        if !unique_numbers.contains(&number) {\n      \
    \      unique_numbers.push(number);\n        }\n    }\n    unique_numbers\n}\n\
    \nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpsw2sakyv.rs:17:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822422
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    // let mut result = Vec::new();\n    // for\
    \ n in numbers {\n    //     if result.contains(&n) {\n    //         continue;\n\
    \    //     }\n    //     result.push(n);\n    // }\n    // result\n\n    numbers.into_iter().unique().collect()\n\
    }\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `unique` found for struct `std::vec::IntoIter`\
    \ in the current scope\n  --> /tmp/tmpil50wb0t.rs:13:25\n   |\n13 |     numbers.into_iter().unique().collect()\n\
    \   |                         ^^^^^^ method not found in `std::vec::IntoIter<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 101
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut new_vec = Vec::new();\n    for num\
    \ in numbers {\n        if new_vec.contains(&num) {\n            continue;\n \
    \       }\n        new_vec.push(num);\n    }\n    new_vec\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpe53n7k55.rs:18:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822424
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut distincts\
    \ = HashSet::new();\n    for number in numbers {\n        if !distincts.contains(&number)\
    \ {\n            result.push(number);\n            distincts.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj_ff24aa.rs:5:25\n  |\n5 |     let mut distincts = HashSet::new();\n\
    \  |                         ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut new_vec = Vec::new();\n    let mut\
    \ elems_found = HashSet::new();\n    for e in numbers {\n        if !elems_found.contains(&e)\
    \ {\n            new_vec.push(e);\n            elems_found.insert(e);\n      \
    \  }\n    }\n    new_vec\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmput7lbuxz.rs:5:27\n  |\n5 |     let mut elems_found = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659822423
- exit_code: 1
  program: "/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfn remove_duplicates(numbers:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut memo:\
    \ HashMap<isize, bool> = HashMap::new();\n\n    for i in numbers {\n        if\
    \ memo.contains_key(&i) {\n            memo.insert(i, false);\n        } else\
    \ {\n            memo.insert(i, true);\n        }\n    }\n\n    for (key, value)\
    \ in memo {\n        if value {\n            result.push(key);\n        }\n  \
    \  }\n\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpvmdtzch6.rs:5:19\n\
    \  |\n5 |     let mut memo: HashMap<isize, bool> = HashMap::new();\n  |      \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvmdtzch6.rs:5:42\n\
    \  |\n5 |     let mut memo: HashMap<isize, bool> = HashMap::new();\n  |      \
    \                                    ^^^^^^^ not found in this scope\n  |\nhelp:\
    \ consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659822423

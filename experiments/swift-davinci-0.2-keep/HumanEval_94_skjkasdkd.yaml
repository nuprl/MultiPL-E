name: HumanEval_94_skjkasdkd
language: swift
prompt: "\n/// You are given a list of integers.\n/// You need to find the largest\
  \ prime value and return the sum of its digits.\n/// Examples:\n/// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
  \ the output should be 10\n/// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
  \ the output should be 25\n/// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
  \ the output should be 13\n/// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the\
  \ output should be 11\n/// For lst = [0,81,12,3,1,21] the output should be 3\n///\
  \ For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst: [Int]) ->\
  \ Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4,\
  \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
  \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
  \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
  assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
  assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8,\
  \ 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
  \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
completions: ["    var largestPrime = 0\n    for num in lst {\n        if isPrime(num:\
    \ num) {\n            if num > largestPrime {\n                largestPrime =\
    \ num\n            }\n        }\n    }\n    return sumDigits(num: largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) {\n  \
    \          if i > largestPrime {\n                largestPrime = i\n         \
    \   }\n        }\n    }\n    var sum = 0\n    for i in String(largestPrime) {\n\
    \        sum += Int(String(i))!\n    }\n    return sum", "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n\
    \        }\n    }\n    var largest = 0\n    for i in primes {\n        if i >\
    \ largest {\n            largest = i\n        }\n    }\n    var sum = 0\n    var\
    \ largestString = String(largest)\n    for i in largestString {\n        sum +=\
    \ Int(String(i))!\n    }\n    return sum", "    var largestPrime = 0\n    for\
    \ i in lst {\n        if isPrime(n: i) && i > largestPrime {\n            largestPrime\
    \ = i\n        }\n    }\n    return sumOfDigits(n: largestPrime)", "    var lst\
    \ = lst\n    var primes = [Int]()\n    var largestPrime = 0\n    var sum = 0\n\
    \    \n    for i in 0..<lst.count {\n        if isPrime(n: lst[i]) {\n       \
    \     primes.append(lst[i])\n        }\n    }\n    \n    for i in 0..<primes.count\
    \ {\n        if primes[i] > largestPrime {\n            largestPrime = primes[i]\n\
    \        }\n    }\n    \n    for i in 0..<String(largestPrime).count {\n     \
    \   sum += Int(String(String(largestPrime)[i]))!\n    }\n    \n    return sum",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(n: i) {\n        \
    \    if i > maxPrime {\n                maxPrime = i\n            }\n        }\n\
    \    }\n    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime % 10\n\
    \        maxPrime /= 10\n    }\n    return sum", "    var max = 0\n    for i in\
    \ lst {\n        if isPrime(i) {\n            max = i\n        }\n    }\n    return\
    \ sumOfDigits(max)", "    var largestPrime = 0\n    for i in lst {\n        if\
    \ isPrime(num: i) {\n            if i > largestPrime {\n                largestPrime\
    \ = i\n            }\n        }\n    }\n    return sumDigits(num: largestPrime)",
  "    var largestPrime = 0\n    var sum = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) {\n            if i > largestPrime {\n                largestPrime = i\n\
    \            }\n        }\n    }\n    while largestPrime > 0 {\n        sum +=\
    \ largestPrime % 10\n        largestPrime /= 10\n    }\n    return sum", "   \
    \ var sum = 0\n    var max = 0\n    for i in lst {\n        if isPrime(num: i)\
    \ {\n            if i > max {\n                max = i\n            }\n      \
    \  }\n    }\n    for i in String(max) {\n        sum += Int(String(i))!\n    }\n\
    \    return sum", "    var max = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) && i > max {\n            max = i\n        }\n    }\n    return sumDigits(num:\
    \ max)", "    let primes = lst.filter { $0.isPrime }\n    let maxPrime = primes.max()\
    \ ?? 0\n    return maxPrime.digits.reduce(0, +)", "    var result = 0\n    var\
    \ maxPrime = 0\n    for i in lst {\n        if isPrime(n: i) {\n            if\
    \ i > maxPrime {\n                maxPrime = i\n            }\n        }\n   \
    \ }\n    while maxPrime > 0 {\n        result += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return result", "    var primes = [Int]()\n    for i in lst\
    \ {\n        if isPrime(n: i) {\n            primes.append(i)\n        }\n   \
    \ }\n    let largestPrime = primes.max()!\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(n: i) && i > maxPrime {\n      \
    \      maxPrime = i\n        }\n    }\n    var sum = 0\n    var maxPrimeString\
    \ = String(maxPrime)\n    for i in maxPrimeString {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var primes: [Int] = []\n    for i in lst {\n   \
    \     if isPrime(num: i) {\n            primes.append(i)\n        }\n    }\n \
    \   let max = primes.max()!\n    var sum = 0\n    var maxStr = String(max)\n \
    \   for i in maxStr {\n        sum += Int(String(i))!\n    }\n    return sum",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) {\n       \
    \     if i > largestPrime {\n                largestPrime = i\n            }\n\
    \        }\n    }\n    return sumOfDigits(largestPrime)", "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let maxPrime = primes.max()\n    var sum = 0\n    for i\
    \ in String(maxPrime!) {\n        sum += Int(String(i))!\n    }\n    return sum",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(n: i) && i > largestPrime\
    \ {\n            largestPrime = i\n        }\n    }\n    return sumOfDigits(n:\
    \ largestPrime)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) && i > maxPrime {\n            maxPrime = i\n        }\n    }\n    var sum\
    \ = 0\n    var num = maxPrime\n    while num > 0 {\n        sum += num % 10\n\
    \        num /= 10\n    }\n    return sum"]
stop_tokens:
- "\n}"
